{
    "username": "loHv7GNNxj",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        \n        HashMap<Integer,Integer> count = new HashMap<>();\n        int j = nums.length -1;\n        for(int i = 0; i < ((nums.length)/2+1);i++){\n            int temp = Math.max(nums[i] - nums[j],nums[j] - nums[i]);\n\n            if(count.containsKey(temp)){\n                int temp1 = count.get(temp);\n                count.put(temp,temp1+1);\n            }else{\n                \n            count.put(temp,1);\n            }\n            \n\n\n            j--;\n\n        }\n        int noofchanges = nums.length;\n        int pairs = nums.length/2;\n        for (int c : count.keySet()){\n\n            int tt = count.get(c);\n            int tp = pairs -tt;\n\n            if(noofchanges <= tp){\n                continue;\n\n            }\n\n\n\n            j = nums.length -1;\n             int count1 = 0;\n\n            for(int i = 0; j > i;i++){\n                if(Math.max(nums[i] - nums[j],nums[j]-nums[i]) != c){\n                    int temp1 = nums[i] - c;\n                    if(temp1 < 0){\n                        temp1 = nums[i] + c;\n                    }\n                    int temp2 = nums[j] - c;\n                    if(temp2 < 0){\n                        temp2 = nums[j] + c;\n                    }\n\n                    if(temp1 <= k || temp2 <= k){\n                        count1++;\n                    }else{\n                        count1++;\n                        count1++;\n                    }\n\n                }\n                j--;\n\n            }\n\n            noofchanges = Math.min(noofchanges,count1);\n           \n\n\n        } \n       return noofchanges;\n\n\n        \n\n\n\n\n    }\n}",
    "submit_ts": "1721488864",
    "subm_id": "1327435575"
}