{
    "username": "sukhi_7137",
    "submission": "class Solution {\npublic:\nlong long solve(int m, int n, vector < int > & horizontalCut,\n    vector < int > & verticalCut) {\n    int x= 0,y= 0;\n    long long res1 = 1;\n    long long res2 = 1;\n    long long result = 0;\n\n    for (;x< m && y< n;) {\n        if (horizontalCut[x] > verticalCut[y]) {\n            result += horizontalCut[x] * res2;\n            res1++;\n            x++;\n        } else {\n            result += verticalCut[y] * res1;\n            res2++;\n            y++;\n        }\n    }\n\n    for (; x< horizontalCut.size(); x++) {\n      result += horizontalCut[x] * res2;\n    }\n\n    for (;y< verticalCut.size(); y++) {\n      result += verticalCut[y] * res1;\n    }\n\n    return result;\n  }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    return solve(m - 1, n - 1, horizontalCut, verticalCut);\n    }\n};",
    "submit_ts": "1720926461",
    "subm_id": "1320286983"
}