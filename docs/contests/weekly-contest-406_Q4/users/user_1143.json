{
    "username": "saransh2002sharma",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        reverse(horizontalCut.begin(), horizontalCut.end());\n        reverse(verticalCut.begin(), verticalCut.end());\n        long long ans = 0;\n        long long hi = 0, vi = 0;\n        long long hseg = 1, vseg = 1;\n        \n        while (hi < horizontalCut.size() && vi < verticalCut.size()) {\n            if (horizontalCut[hi] >= verticalCut[vi]) {\n                ans += horizontalCut[hi] * vseg;\n                hseg++;\n                hi++;\n            } else {\n                ans += verticalCut[vi] * hseg;\n                vseg++;\n                vi++;\n            }\n        }\n        \n        while (hi < horizontalCut.size()) {\n            ans += horizontalCut[hi] * vseg;\n            hi++;\n        }\n        \n        while (vi < verticalCut.size()) {\n            ans += verticalCut[vi] * hseg;\n            vi++;\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1720925485",
    "subm_id": "1320256281"
}