{
    "username": "UrbanTurban",
    "submission": "class Solution {\n    static int[] height;\n    static int diameter;\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        \n        List<List<Integer>> tree1 = new ArrayList<>();\n        int n=edges1.length+1;\n        for(int i=0;i<n;++i)\n        {\n            tree1.add(new ArrayList<>());\n        }\n        for(int[] e : edges1)\n        {\n            int u = e[0], v = e[1];\n            tree1.get(u).add(v);\n            tree1.get(v).add(u);\n        }\n        \n        List<List<Integer>> tree2 = new ArrayList<>();\n        n=edges2.length+1;\n        for(int i=0;i<n;++i)\n        {\n            tree2.add(new ArrayList<>());\n        }\n        for(int[] e : edges2)\n        {\n            int u = e[0], v = e[1];\n            tree2.get(u).add(v);\n            tree2.get(v).add(u);\n        }\n        \n        height = new int[edges1.length+1];\n        diameter = 0;\n        dfs(tree1, 0, -1);\n        int d1 = diameter;\n        System.out.println(diameter);\n        \n        height = new int[edges2.length+1];\n        diameter = 0;\n        dfs(tree2, 0, -1);\n        int d2 = diameter;\n        System.out.println(diameter);\n        \n        return Math.max(Math.max(d1, d2), (int)Math.ceil((double)d1/2) + (int)Math.ceil((double)d2/2) + 1);\n        \n        \n        \n    }\n    static void dfs(List<List<Integer>> tree, int u, int par)\n      {\n\n        int max1 = 0;\n        int max2 = 0;\n        \n        for (int child : tree.get(u)) {\n\n          if (child == par)\n            continue;\n          dfs(tree, child, u);\n\n          height[u] = Math.max(height[u], height[child] + 1);\n\n          if (height[child] + 1 >= max1) {\n            max2 = max1;\n            max1 = height[child] + 1;\n          }\n          else if (height[child] + 1 > max2) {\n            max2 = height[child] + 1;\n          }\n        }\n        \n        diameter = Math.max(diameter, height[u]);\n        diameter = Math.max(diameter, max1 + max2);\n      }\n\n}",
    "submit_ts": 1719719664.0
}