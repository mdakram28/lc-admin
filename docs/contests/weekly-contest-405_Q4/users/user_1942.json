{
    "username": "rain0102",
    "submission": "class Solution {\n    private int ans = Integer.MAX_VALUE;\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode root = buildTrie(words, costs);\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE)\n                continue;\n            TrieNode node = root;\n            for (int j = i; j < n; j++) {\n                char c = target.charAt(j);\n                if (node.children[c - 'a'] == null)\n                    break;\n                node = node.children[c - 'a'];\n                if (node.minCost != Integer.MAX_VALUE) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + node.minCost);\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n\n    class TrieNode {\n        TrieNode[] children = new TrieNode[26];\n        int minCost = Integer.MAX_VALUE;\n    }\n\n    private TrieNode buildTrie(String[] words, int[] costs) {\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            TrieNode node = root;\n            for (char c : words[i].toCharArray()) {\n                if (node.children[c - 'a'] == null) {\n                    node.children[c - 'a'] = new TrieNode();\n                }\n                node = node.children[c - 'a'];\n            }\n            node.minCost = Math.min(node.minCost, costs[i]);\n        }\n        return root;\n    }\n\n}",
    "submit_ts": "1720324426",
    "subm_id": "1312399171"
}