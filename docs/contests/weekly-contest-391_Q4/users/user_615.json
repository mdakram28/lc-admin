{
    "username": "hongochoangm",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def MaxDist(A, N):\n            minsum = maxsum = A[0][0] + A[0][1]\n            mindiff = maxdiff = A[0][0] - A[0][1]\n            minsum_p = A[0]\n            maxsum_p = A[0]\n            mindiff_p = A[0]\n            maxdiff_p = A[0]\n            for i in range(1,N):\n                sum = A[i][0] + A[i][1]\n                diff = A[i][0] - A[i][1]\n                if (sum < minsum):\n                    minsum = sum\n                    minsum_p = A[i]\n                elif (sum > maxsum):\n                    maxsum = sum\n                    maxsum_p = A[i]\n                if (diff < mindiff):\n                    mindiff = diff\n                    mindiff_p = A[i]\n                elif (diff > maxdiff):\n                    maxdiff = diff\n                    maxdiff_p = A[i]\n            if maxsum - minsum > maxdiff - mindiff:\n                return maxsum - minsum, minsum_p, maxsum_p\n            return maxdiff - mindiff, mindiff_p, maxdiff_p\n        \n        max_distance, min_point, max_point = MaxDist(points, len(points))\n        print(max_distance, min_point, max_point)\n        if min_point==max_point==None:\n            return max_distance\n        \n        temp = points[:]\n        temp.remove(min_point)\n        first_distance, _, _ = MaxDist(temp, len(temp))\n        \n        temp = points[:]\n        temp.remove(max_point)\n        second_distance, _, _ = MaxDist(temp, len(temp))\n        \n        return min(first_distance, second_distance)\n "
}