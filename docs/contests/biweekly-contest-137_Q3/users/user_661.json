{
    "username": "Harsh Jain",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\nclass Solution {\npublic:\n    vector<vector<pair<int, int>>> func2(vector<vector<int>>& board, int n, int m) {\n        vector<vector<pair<int, int>>> vec(n);\n        for (int i = 0; i < n; i++) {\n            vector<pair<int, int>> vec2;\n            for (int j = 0; j < m; j++) {\n                vec2.push_back({board[i][j], j});\n            }\n            sort(vec2.rbegin(), vec2.rend());\n            for (int k = 0; k < min(3, m); k++) {\n                vec[i].push_back(vec2[k]);\n            }\n        }\n        return vec;\n    }\n\n    ll func(vector<vector<pair<int, int>>>& ans, int n) {\n        ll temp = LLONG_MIN;\n        for (int r1 = 0; r1 < n; r1++) {\n            for (int r2 = r1 + 1; r2 < n; r2++) {\n                for (int r3 = r2 + 1; r3 < n; r3++) {\n                    for (auto p1 : ans[r1]) {\n                        for (auto p2 : ans[r2]) {\n                            if (p2.second == p1.second) continue;\n                            for (auto p3 : ans[r3]) {\n                                if (p3.second == p1.second || p3.second == p2.second) continue;\n                                ll value = (ll)(p1.first) + p2.first + p3.first;\n                                temp = max(temp, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return temp;\n    }\n\n    ll maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(),m = board[0].size();\n        vector<vector<pair<int, int>>> ans = func2(board, n, m);\n        return func(ans, n);\n    }\n};",
    "submit_ts": "1723909589",
    "subm_id": "1359198305"
}