{
    "username": "hiralal_05",
    "submission": "class Solution {\npublic:\n int f(vector<vector<int>> &g, int s, int t, int t2, int node) {\n    queue<int> q;\n    vector<int> vis(node + 4, 0);\n    q.push(s);\n    vis[s] = 1;\n    \n    while (!q.empty()) {\n        int ux = q.front();\n        q.pop();\n        for (int vx : g[ux]) {\n            if (!vis[vx]) {\n                q.push(vx);\n                vis[vx] = 1;\n            }\n        }\n    }\n    return vis[t] || vis[t2];\n}\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles2) {\n         vector<pair<pair<int, int>, int>> ans(circles2.size());\n         vector<vector<int>> g(circles2.size() + 4);\n        int num=circles2.size();\n        \n        for (int i = 0; i < num; ++i) {\n            ans[i].first.first=circles2[i][0];\n            ans[i].first.second=circles2[i][1];\n            ans[i].second=circles2[i][2];\n        }\n        \n        \n        \n         for (int i = 0; i < num; ++i) {\n             \n            if (ans[i].first.first <= ans[i].second) {\n                g[num].push_back(i);\n                g[i].push_back(num);\n            }\n            if (X - ans[i].first.first <= ans[i].second) {\n                g[num + 2].push_back(i);\n                g[i].push_back(num + 2);\n            }\n            if (ans[i].first.second <= ans[i].second) {\n                g[num + 1].push_back(i);\n                g[i].push_back(num + 1);\n            }\n            if (Y - ans[i].first.second <= ans[i].second) {\n                g[num + 3].push_back(i);\n                g[i].push_back(num + 3);\n            }\n            for (int j = i + 1; j < num; ++j) {\n                double dis = sqrt(pow(ans[i].first.first - ans[j].first.first, 2) +\n                                       pow(ans[i].first.second - ans[j].first.second, 2));\n                int res = ans[i].second + ans[j].second;\n                if (res>= dis) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }  \n        int sum = 0;\nsum= max(sum,f(g, num, num + 1, num + 2, num + 4)); \n    sum = max(sum, f(g, num + 3, num+ 2, num + 1, num + 4));\n        if (sum){\n            return false;\n            }\n        return true;\n       \n        \n        \n    }\n};",
    "submit_ts": "1722137518",
    "subm_id": "1335766091"
}