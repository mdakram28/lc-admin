{
    "username": "navneet241",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(std::vector<int>& nums, std::vector<int>& target) {\n        int pr = 0;\n        int df = 0;\n        int st = 0;\n        long long ans = 0;\n        int n = nums.size();\n\n        for (int i = 0; i < n; ++i) {\n            int ni = nums[i];\n            int ti = target[i];\n\n            handleOperation(ni, ti, pr, df, st, ans);\n        }\n\n        return ans + df;\n    }\n\nprivate:\n    void handleOperation(int ni, int ti, int &pr, int &df, int &st, long long &ans) {\n        std::vector<std::function<void()>> operations = {\n            [&]() { pr = 1; df = ti - ni; st += 1; },\n            [&]() { pr = -1; df = ni - ti; st += 1; },\n            [&]() { st += 1; },\n            [&]() { adjustDifference(ni, ti, df, st, ans); },\n            [&]() { ans += df; resetState(pr, df, st); },\n            [&]() { ans += df; updateState(ni, ti, pr, df, st); }\n        };\n\n        std::vector<std::function<bool()>> conditions = {\n            [&]() { return pr == 0 && ni < ti; },\n            [&]() { return pr == 0 && ni > ti; },\n            [&]() { return isContinuingMismatch(ni, ti, pr, df); },\n            [&]() { return (ni < ti && pr == 1) || (ni > ti && pr == -1); },\n            [&]() { return ni == ti; },\n            [&]() { return !isContinuingMismatch(ni, ti, pr, df) && ni != ti; }\n        };\n\n        for (size_t i = 0; i < conditions.size(); ++i) {\n            if (conditions[i]()) {\n                operations[i]();\n                break;\n            }\n        }\n    }\n\n    bool isContinuingMismatch(int ni, int ti, int pr, int df) {\n        return (ni < ti && pr == 1 && df == ti - ni) || (ni > ti && pr == -1 && df == ni - ti);\n    }\n\n    void adjustDifference(int ni, int ti, int &df, int &st, long long &ans) {\n        int newDiff = (ni < ti) ? (ti - ni) : (ni - ti);\n        if (newDiff > df) {\n            st = 1;\n            df = newDiff;\n        } else {\n            ans += (df - newDiff);\n            df = newDiff;\n        }\n    }\n\n    void resetState(int &pr, int &df, int &st) {\n        pr = 0;\n        df = 0;\n        st = 0;\n    }\n\n    void updateState(int ni, int ti, int &pr, int &df, int &st) {\n        pr = (ni < ti) ? 1 : -1;\n        df = std::abs(ti - ni);\n        st += 1;\n    }\n};\n",
    "submit_ts": "1721534065",
    "subm_id": "1328022726"
}