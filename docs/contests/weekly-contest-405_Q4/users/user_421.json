{
    "username": "eshaansodhi",
    "submission": "typedef long long ll;\ntypedef priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<long long> vll;\ntypedef pair<int,int> pii;\ntypedef pair<long long,long long > pll;\ntypedef vector<pair<ll,ll>> vpll;\n#define F first\n#define S second\n#define eb emplace_back\n#define pb push_back\n#define nl \"\\n\"\n\nclass Solution {\n    public:\n    struct TrieNode {\n    TrieNode* childNode[26];\n        bool wordEnd;\n        int cost;\n\n        TrieNode() {\n            wordEnd = false;\n            cost = INT_MAX;\n            for (int i = 0; i < 26; i++) {\n                childNode[i] = NULL;\n            }\n        }\n    };\n\n    void insert_key(TrieNode* root, string& key, int cost) {\n        TrieNode* currentNode = root;\n        for (auto c : key) {\n            if (currentNode->childNode[c - 'a'] == NULL) {\n                TrieNode* newNode = new TrieNode();\n                currentNode->childNode[c - 'a'] = newNode;\n            }\n            currentNode = currentNode->childNode[c - 'a'];\n        }\n        currentNode->wordEnd = true;\n        currentNode->cost = min(currentNode->cost, cost);  // Store the minimum cost\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> dp(n + 1, 1e9);  \n        dp[0] = 0;  \n\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            insert_key(root, words[i], costs[i]);\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == 1e9) continue;  \n\n            TrieNode* currentNode = root;\n            for (int j = i; j < n; ++j) {\n                if (currentNode->childNode[target[j] - 'a'] == NULL) break;\n                currentNode = currentNode->childNode[target[j] - 'a'];\n\n                if (currentNode->wordEnd) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + currentNode->cost);\n                }\n            }\n        }\n\n        return dp[n] == 1e9 ? -1 : dp[n]; \n    }\n};",
    "submit_ts": "1720321806",
    "subm_id": "1312332786"
}