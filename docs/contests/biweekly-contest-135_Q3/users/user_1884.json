{
    "username": "zhuang1992",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> nums1(n/2, 0);\n        vector<int> nums2(n/2, 0);\n\n        unordered_map<int, int> diff_cnt;\n        for(int i = 0; i < n/2; ++i) {\n            auto d = abs(nums[i] - nums[n-i-1]);\n            diff_cnt[d] ++;\n            nums1[i] = min(nums[i], nums[n-i-1]);\n            nums2[i] = max(nums[i], nums[n-i-1]);\n        }\n        if (diff_cnt.size() <= 1) return 0;\n        vector<pair<int, int>> diffs;\n        for(auto [d, v]: diff_cnt) {\n            diffs.push_back({v, d});\n        }\n        sort(diffs.begin(), diffs.end(), [](auto& p1, auto& p2) {\n            return p1.first > p2.first;\n        });\n        int fans = n*2;\n        int cnt = 0;\n        for(auto&p : diffs) {\n            int X = p.second;\n            int ans = 0;\n            for(int i = 0; i < n/2; ++i) {\n                if (nums2[i]-nums1[i] == X) continue;\n                if (nums2[i]-X >= 0 || nums1[i] + X <= k) ans+=1;\n                else ans+=2;\n            }\n            fans = min(fans, ans);\n            cnt++;\n            if (cnt >3) break;\n        }\n        \n        return fans;\n    }\n};",
    "submit_ts": "1721489009",
    "subm_id": "1327440020"
}