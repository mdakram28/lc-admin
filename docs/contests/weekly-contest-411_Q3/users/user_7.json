{
    "username": "lilPeep",
    "submission": "class Solution {\n    int solve(int index,int currSum,int n,int k,vector<vector<int>>&dp,vector<int>&mul)\n    {\n        if(index>n-1-index)\n            return (currSum==0);\n        if(dp[index][currSum]!=-1)\n            return dp[index][currSum];\n        dp[index][currSum]=0;\n        for(int j=(index?0:1);j<=9;j++)\n        {\n            int ncurrSum=currSum;\n            ncurrSum=(ncurrSum+ j*mul[n-1-index] )%k;\n            if(n-1-index != index)\n                ncurrSum=(ncurrSum+ j*mul[index] )%k;\n            dp[index][currSum]=std::max(dp[index][currSum],solve(index+1,ncurrSum,n,k,dp,mul));\n        }\n        return dp[index][currSum];\n    }\n    void solve2(int index,int currSum,int n,int k,vector<vector<int>>&dp,string& ans,vector<int>&mul)\n    {\n        if(index>n-1-index)\n            return;\n        \n        for(int j=9;;j--)\n        {\n            int ncurrSum=currSum;\n            ncurrSum=(ncurrSum+ j*mul[n-1-index] )%k;\n            if(n-1-index != index)\n                ncurrSum=(ncurrSum+ j*mul[index] )%k;\n            if(solve(index+1,ncurrSum,n,k,dp,mul))\n            {\n                ans+=(char)('0'+j);\n                solve2(index+1,ncurrSum,n,k,dp,ans,mul);\n                return;\n            }\n        }\n        \n    }\npublic:\n    string largestPalindrome(int n, int k) {\n        vector<int> mul;\n        int factor=1;\n        for(int i=0;i<=n;i++)\n        {\n            mul.push_back(factor);\n            factor=(factor*10)%k;\n        }\n        \n        vector<vector<int>> dp(n,vector<int>(k,-1));\n        solve(0,0,n,k,dp,mul);\n        string ans=\"\";\n        solve2(0,0,n,k,dp,ans,mul);\n        \n        for(int j=n/2-1;j>=0;j--)\n            ans+=ans[j];\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723949648",
    "subm_id": "1359725166"
}