{
    "username": "topmoklaer",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int K) {\n        unordered_map<int, vector<int>> dp;\n        for (int i = 0; i < nums.size(); i++) {\n            if (dp.find(nums[i]) == dp.end()) {\n                dp[nums[i]] = vector<int>(K + 1);\n            }\n        }\n\n        int ans = 0;\n        vector<int> mmax(K + 1);\n\n        for (int i = 0; i < nums.size(); i++) {\n            auto tmp = mmax;\n            for (int k = 0; k <= K; k++) {\n                dp[nums[i]][k] = max(dp[nums[i]][k] + 1, k > 0 ? (tmp[k - 1] + 1) : 0);\n                ans = max(ans, dp[nums[i]][k]);\n                mmax[k] = max(mmax[k], dp[nums[i]][k]);\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717860151.0
}