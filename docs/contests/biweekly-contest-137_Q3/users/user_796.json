{
    "username": "\u6b22\u8fce\u4e1a\u4e3b\u56de\u5bb6",
    "submission": "\nclass Solution {\n  public:\n    using pp = pair<long long, int>;\n    using vp = array<pair<long long, int>, 3>;\n\n    long long maximumValueSum(vector<vector<int>> &board) {\n        int m = (int)board.size(), n = (int)board[0].size();\n        long long r = std::numeric_limits<long long>::min();\n        vector<vp> rowMax(m);\n\n        for (int i = 0; i < m; i++) {\n            vector<pp> pps(n);\n            for (int j = 0; j < n; j++) {\n                pps[j] = {(long long)board[i][j], j};\n            }\n\n            sort(pps.begin(), pps.end(), std::greater<>());\n            rowMax[i] = vp{pps[0], pps[1], pps[2]};\n        }\n\n        for (int i = 0; i < m; i++) {\n            for (int j = i + 1; j < m; j++) {\n                for (int k = j + 1; k < m; k++) {\n                    for (int a = 0; a < 3; a++) {\n                        for (int b = 0; b < 3; b++) {\n                            for (int c = 0; c < 3; c++) {\n                                auto [val1, col1] = rowMax[i][a];\n                                auto [val2, col2] = rowMax[j][b];\n                                auto [val3, col3] = rowMax[k][c];\n                                if (col1 != col2 && col1 != col3 &&\n                                    col2 != col3) {\n                                    r = max(r, val1 + val2 + val3);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return r;\n    }\n};",
    "submit_ts": "1723908541",
    "subm_id": "556331459"
}