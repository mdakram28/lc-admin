{
    "username": "nicolaSaporetti",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int sz = nums.size();\n        p.assign(sz+1,vector<int>(31,0));\n        for(int i=0;i<sz;i++)\n        {\n            for(int j=0;j<31;j++)\n            {\n                p[i+1][j]=p[i][j];\n            }\n            for(int j=0;j<31;j++)\n                if((1<<j)&nums[i]) p[i+1][j]++;\n        }\n        int r = INT_MAX;\n        for(int i=0;i<sz;i++)\n        {\n            //cout<<i<<endl;\n            int left = i;\n            int right= sz-1;\n            while(left<=right)\n            {\n                int avg = (right+left)/2;\n                int v  = compu(avg,nums,i);\n                //cout<<\"avg: \"<<v<<\" p: \"<<avg<<endl;\n                r = min(r,abs(k-v));\n                if(v>=k) left=avg+1;\n                else right = avg-1;\n            }\n        }\n        return r;\n    }\nprivate:\n    int compu(int right, vector<int>& nums, int left)\n    {\n        int r = 0;\n        for(int i=0;i<31;i++) if(p[right+1][i]-p[left][i]==right-left+1) r|=(1<<i);\n        return r;\n    }\n    vector<vector<int>> p;\n};",
    "submit_ts": 1717298389.0
}