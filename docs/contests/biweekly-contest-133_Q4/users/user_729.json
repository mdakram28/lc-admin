{
    "username": "22je0054",
    "submission": "class Solution {\npublic:\n    #define ll long long \n    int numberOfPermutations(int n, vector<vector<int>>& vec) {\n        int m=1e9+7;\n    int mxinv=500;\n        ll ans=0;\n        // int n=vec.size();\n        map<int,int> mp;\n      for(auto ele:vec)\n      {\n          int end=ele[0]+1;\n          int cnt=ele[1];\n          mp[end]=cnt;\n      }\n//         for(int i=0;i<n;i++)\n//         {\n//             mp[vec[i][0]+1]=vec[i][1];\n// }\n        \n        vector<vector<ll>> dp(n+1,vector<ll>(mxinv+1,0));\n        dp[0][0]=1;\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=0;j<=mxinv;j++)\n            {\n               for(int k=0;k<i;k++)\n               {\n                   int l=(k-j)*-1;\n                   if(l>0 ||l==0)\n                   {\n                       dp[i][j]+=(dp[i-1][l]);\n                       dp[i][j]%=m;\n                   }\n               }\n            }\n            if(mp.find(i)!=mp.end())\n            {\n                int k1=mp[i];\n                for(int j=0;j<=mxinv;j++)\n                {\n                    if(k1!=j)\n                    {\n                        dp[i][j]=0;\n                    }\n                }\n            }\n        }\n        for(auto ele:dp[n])\n        {\n            ans+=ele;\n            ans%=m;\n        }\n        return ans;\n      \n    }\n};",
    "submit_ts": 1719071098.0
}