{
    "username": "Anmol-agrawal",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n     vector<unordered_map<int, int>> dp(k + 1);  \n    vector<unordered_set<int>> used(k + 1);   \n    vector<int> maxLength(k + 1, 0);\n\n    for (int i : nums) {\n        int prev = 0;\n        for (int j = 0; j <= k; ++j) {\n            int cur = max(prev + 1, (maxLength[j] + 1) * (used[j].count(i) > 0 ? 1 : 0));\n            cur = max(cur, dp[j][i] + 1);\n\n            prev = maxLength[j];\n            dp[j][i] = cur;\n\n            if (maxLength[j] < cur) {\n                maxLength[j] = cur;\n                used[j] = {i};\n            } else if (cur == maxLength[j]) {\n                used[j].insert(i);\n            }\n        }\n    }\n\n    return maxLength[k];\n    }\n};",
    "submit_ts": 1717861446.0
}