{
    "username": "wincss",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n = len(board)\n        m = len(board[0])\n        rowbig = [[-1, -1, -1] for i in range(n)]\n        colbig = [[-1, -1, -1] for _ in range(m)]\n        for i in range(n):\n            for j in range(m):\n                if rowbig[i][0] == -1 or board[i][j] >= board[i][rowbig[i][0]]:\n                    rowbig[i][0], rowbig[i][1], rowbig[i][2] = j, rowbig[i][0], rowbig[i][1]\n                elif rowbig[i][1] == -1 or board[i][j] >= board[i][rowbig[i][1]]:\n                    rowbig[i][1], rowbig[i][2] = j, rowbig[i][1]\n                elif rowbig[i][2] == -1 or board[i][j] >= board[i][rowbig[i][2]]:\n                    rowbig[i][2] = j\n                # if colbig[j][0] == -1 or board[i][j] >= board[colbig[j][0]][j]:\n                #     colbig[j] = [i, colbig[j][0], colbig[j][1]]\n                # elif colbig[j][1] == -1 or board[i][j] >= board[colbig[j][1]][j]:\n                #     colbig[j] = [colbig[j][0], i, colbig[j][1]]\n                # elif colbig[j][2] == -1 or board[i][j] >= board[colbig[j][2]][j]:\n                #     colbig[j][2] = i\n        lst = []\n        for i in range(n):\n            for j in rowbig[i]:\n                lst.append((board[i][j], i, j))\n        #lst = [(board[i][j], i, j) for j in rowbig[i] for i in range(n)]\n        lst.sort(reverse=True)\n        p = len(lst)\n        mx = -float('inf')\n        saved = {}\n        #print(lst)\n        #print([board[0][x] for x in rowbig[0]])\n        for i in range(p):\n            for j in range(i + 1, p):\n                if lst[j][1] == lst[i][1] or lst[j][2] == lst[i][2]:\n                    continue\n                key = (lst[i][1], lst[j][1], lst[i][2], lst[j][2])\n                found = False\n                if saved.get(key, 0) < j + 1:\n                    for k in range(j + 1, p):\n                        if lst[i][0] + lst[j][0] + lst[k][0] <= mx:\n                            break\n                        if lst[k][1] == lst[i][1] or lst[k][1] == lst[j][1] or lst[k][2] == lst[i][2] or lst[k][2] == lst[j][2]:\n                            continue\n                        found = True\n                        saved[key] = k\n                        break\n                if not found:\n                    continue\n\n                k = saved[key]\n                if lst[i][0] + lst[j][0] + lst[k][0] > mx:\n                    #print(i, j, k, lst[i], lst[j], lst[k], saved)\n                    mx = lst[i][0] + lst[j][0] + lst[k][0]\n\n        return mx\n",
    "submit_ts": "1723909512",
    "subm_id": "556336620"
}