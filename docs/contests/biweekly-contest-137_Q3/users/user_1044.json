{
    "username": "Harendra Kumar",
    "submission": "class Solution {\n  public:\n      vector<vector<pair<long long, long long>>> getTop(vector<vector<int>>& board, bool isRow) {\n          long long m = board.size(), n = board[0].size();\n          vector<vector<pair<long long, long long>>> top(isRow ? m : n);\n  \n          for (long long i = 0; i < (isRow ? m : n); i++) {\n              for (long long j = 0; j < (isRow ? n : m); j++) {\n                  long long v = isRow ? board[i][j] : board[j][i];\n                  top[i].emplace_back(v, isRow ? j : i);\n              }\n              sort(top[i].rbegin(), top[i].rend());\n              if (top[i].size() > 3) {\n                  top[i].resize(3);\n              }\n          }\n  \n          return top;\n      }\n  \n      long long calcMax(vector<vector<pair<long long, long long>>>& r, vector<vector<pair<long long, long long>>>& c, long long m) {\n          long long maxSum = LLONG_MIN;\n  \n          for (long long i1 = 0; i1 < m; i1++) {\n              for (auto [v1, j1] : r[i1]) {\n                  for (long long i2 = 0; i2 < m; i2++) {\n                      if (i2 == i1) continue;\n  \n                      for (auto [v2, j2] : r[i2]) {\n                          if (j2 == j1) continue;\n  \n                          for (long long i3 = 0; i3 < m; i3++) {\n                              if (i3 == i1 || i3 == i2) continue;\n  \n                              for (auto [v3, j3] : r[i3]) {\n                                  if (j3 == j1 || j3 == j2) continue;\n  \n                                  long long sum = v1 + v2 + v3;\n                                  maxSum = max(maxSum, sum);\n                              }\n                          }\n                      }\n                  }\n              }\n          }\n  \n          return maxSum;\n      }\n  \n      long long maximumValueSum(vector<vector<int>>& board) {\n          long long m = board.size(), n = board[0].size();\n          long long maxSum = LLONG_MIN;\n  \n          auto topRows = getTop(board, true);\n          auto topCols = getTop(board, false);\n  \n          maxSum = calcMax(topRows, topCols, m);\n  \n          return maxSum;\n      }\n  };\n  ",
    "submit_ts": "1723909491",
    "subm_id": "1359194532"
}