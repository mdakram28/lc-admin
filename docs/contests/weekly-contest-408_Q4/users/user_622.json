{
    "username": "SaHiL7264",
    "submission": "\nclass Solution {\npublic:\n    int bfs(vector<vector<int>>& adj, int start, int target1, int target2, int nodes) {\n        queue<int> q;\n        vector<bool> visited(nodes + 4, false);\n        \n        q.push(start);\n        visited[start] = true;\n        \n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int v : adj[u]) {\n                if (!visited[v]) {\n                    q.push(v);\n                    visited[v] = true;\n                }\n            }\n        }\n        \n        return visited[target1] || visited[target2] ? 1 : 0;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& cc) {\n        vector<vector<int>> adj(cc.size() + 4);\n\n        int nC = cc.size();\n        for (int i = 0; i < nC; ++i) {\n            int xi = cc[i][0];\n            int yi = cc[i][1];\n            int ri = cc[i][2];\n            if (xi <= ri) {\n                adj[nC].push_back(i);\n                adj[i].push_back(nC);\n            }\n            if (X - xi <= ri) {\n                adj[nC + 2].push_back(i);\n                adj[i].push_back(nC + 2);\n            }\n            if (yi <= ri) {\n                adj[nC + 1].push_back(i);\n                adj[i].push_back(nC + 1);\n            }\n            if (Y - yi <= ri) {\n                adj[nC + 3].push_back(i);\n                adj[i].push_back(nC + 3);\n            }\n            for (int j = i + 1; j < nC; ++j) {\n                int xj = cc[j][0];\n                int yj = cc[j][1];\n                int rj = cc[j][2];\n\n                double distance = sqrt(pow(xi - xj, 2) + pow(yi - yj, 2));\n                int radiusSum = ri + rj;\n\n                if (radiusSum >= distance) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        int isOk = 0;\n        isOk = max(isOk, bfs(adj, nC, nC + 1, nC + 2, nC + 4));\n        isOk = max(isOk, bfs(adj, nC + 3, nC + 2, nC + 1, nC + 4));\n        \n        return isOk == 0;\n    }\n};\n",
    "submit_ts": "1722138361",
    "subm_id": "1335788830"
}