{
    "username": "theeeeeeekhai",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<int> d;\n        for(int i = 0; i < n; i++) {\n            d.push_back(target[i] - nums[i]);\n        }\n        int i = 0;\n        while(i < n) {\n            if(d[i] == 0) {\n                i++;\n                continue;\n            }\n            int ss = d[i] > 0;\n            vector<int> t;\n            while(i < n && d[i] != 0 && ((d[i] > 0) == ss)) {\n                t.push_back(abs(d[i]));\n                i++;\n            }\n            map<int, int> mp;\n            for(int i = 0; i < t.size(); i++) {\n                auto it = mp.upper_bound(t[i]);\n                int c = 0;\n                vector<int> temp;\n                while(it != mp.end()) {\n                    c += it -> second;\n                    temp.push_back(it -> first);\n                    it++;\n                }\n                if(!temp.empty()) ans += temp.back() - t[i];\n                for(int x: temp) mp.erase(x);\n                mp[t[i]] += c + 1;\n            }\n            ans += prev(mp.end()) -> first;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721531818",
    "subm_id": "1327970612"
}