{
    "username": "knarf",
    "submission": "class Solution {\n    public List<Boolean> getResults(int[][] queries) {\n        List<Boolean> arr = new ArrayList<>();\n        int n = queries.length;\n        TreeSet<Integer> ts = new TreeSet<>();\n        for(int[] q:queries) {\n            if(q[0] == 1) ts.add(q[1]);\n        }\n        TreeMap<Integer,Integer> tm = new TreeMap<>();\n        int last = 0;\n        ts.add(0);\n        for(Integer v:ts) {\n            int d = v - last;\n            last = v;\n            if(tm.size() == 0 || d>tm.lastKey()) tm.put(d,v);\n        }\n        for(int i=n-1;i>=0;i--) {\n            int[] q = queries[i];\n            // System.out.println(Arrays.toString(q));\n            // System.out.println(ts);\n            // System.out.println(tm);\n            if(q[0] == 1) {\n                Integer l = ts.lower(q[1]);\n                Integer r = ts.higher(q[1]);\n                if(r!= null && l != null) {\n                    int d = r-l;\n                    Integer key = tm.floorKey(d);\n                    while(key != null && tm.get(key)>=r) {\n                        tm.remove(key);\n                        key = tm.floorKey(d);\n                    }\n                    // System.out.println(d);\n                    Integer lkey = tm.floorKey(d);\n                    Integer rkey = tm.ceilingKey(d);\n                    if(rkey == null || tm.get(rkey)>=r) tm.put(d,r);\n                } else if(r==null) {\n                    Integer key = tm.lastKey();\n                    while(key != null && tm.get(key)>l) {\n                        tm.remove(key);\n                        key = tm.lastKey();\n                    }\n                }\n                ts.remove(q[1]);\n            } else {\n                int v = ts.floor(q[1]);\n                if(q[1]-v>=q[2]) {\n                    arr.add(true);\n                } else {\n                    Integer key = tm.ceilingKey(q[2]);\n                    if(key == null) {\n                        arr.add(false);\n                    } else {\n                        v = tm.get(key);\n                        if(v>q[1]) {\n                            arr.add(false);\n                        } else {\n                            arr.add(true);\n                        }\n                    }\n                }\n            }\n        }\n        int m = arr.size();\n        List<Boolean> res = new ArrayList<>();\n        for(int i=0;i<m;i++) {\n            res.add(arr.get(m-i-1));\n        }\n        return res;\n    }\n}",
    "submit_ts": 1716650887.0
}