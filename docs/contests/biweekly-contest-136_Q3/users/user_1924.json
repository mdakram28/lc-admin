{
    "username": "user2032m",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int flips = 0, total = 0, temp1 = 0, temp2 = 0;\n\n        for(int i=0;i<m/2;i++)\n        {\n            for(int j=0;j<n/2;j++)\n            {\n                int o = 0, z = 0;\n\n                grid[i][j]?o++: z++;\n                grid[m-i-1][j]?o++: z++;\n                grid[i][n-j-1]?o++: z++;\n                grid[m-i-1][n-j-1]?o++: z++;\n\n                flips += min(o, z);\n            }\n        }\n\n        if(n % 2)\n        {\n            if(m % 2 && grid[m/2][n/2])\n                flips++;\n\n            for(int i=0;i<m/2;i++)\n            {\n                if(grid[i][n/2] != grid[m-i-1][n/2])\n                    temp1++;\n                else if(grid[i][n/2])\n                    total += 2;\n            }\n\n            flips += temp1;\n        }\n\n        if(m % 2)\n        {\n            for(int j=0;j<n/2;j++)\n            {\n                if(grid[m/2][j] != grid[m/2][n-j-1])\n                    temp2++;\n                else if(grid[m/2][j])\n                    total += 2;\n            }\n            \n            flips += temp2;\n        }\n\n        if((total % 4) && !temp1 && !temp2)\n            flips += 2;\n\n        return flips;\n    }\n};",
    "submit_ts": "1722699162",
    "subm_id": "1343203297"
}