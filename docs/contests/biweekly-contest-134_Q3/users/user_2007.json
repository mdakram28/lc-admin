{
    "username": "codescannner",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int n = colors.length;\n        int joined [] = new int[2*n];\n        for(int i= 0; i<n; i++){\n            joined[i] = colors[i];\n            joined[i + n] = colors[i];\n        }\n\n        int fast = 1, slow = 0, groups = 0;\n        while(slow < n && fast < n - 1 + k){\n            if(joined[fast] == joined[fast - 1]){\n                int length = fast - slow;\n                groups += Math.max(0, length - k + 1);\n                slow = fast;\n                fast = slow + 1;\n            }\n            else{\n                fast++;\n            }\n        }\n        groups += Math.max(0, fast - slow - k + 1);\n\n        return groups;\n    }\n}",
    "submit_ts": "1720278327",
    "subm_id": "1311704279"
}