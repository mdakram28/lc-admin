{
    "username": "inmihir",
    "submission": "class Solution {\n    bool canRemove(vector<int> bits, int num, int k) {\n        long val = 0;\n        for(int j = 0; j < 30; ++j) {\n            bool isSet = ((1ll << j) & num);\n            if(!isSet) {\n                bits[j]--;\n            }\n            \n            if(!bits[j]) {\n                val |= (1ll << j);\n            }\n        }\n        \n        return k == val;\n    }\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<int> bits(31, 0);\n        long long count = 0;\n        int n = nums.size();\n        \n        for(int right = 0, left = 0, windowLeft = 0; right < n; ++right) {\n            bool ok = 1;\n            for(int j = 0; j < 30; ++j) {\n                bool isSet = ((1ll << j) & nums[right]);\n                if(!isSet && (k & (1ll << j))) {\n                    ok = 0;\n                    break;\n                }\n                if(!isSet) {\n                    bits[j]++;                    \n                }\n            }\n            \n            if(!ok) {\n                bits = vector<int>(31, 0);\n                left = right + 1;\n                windowLeft = right + 1;\n                continue;\n            }\n            \n            while(canRemove(bits, nums[left], k)) {\n                for(int j = 0; j < 30; ++j) {\n                    bool isSet = ((1ll << j) & nums[left]);\n                    if(!isSet) {\n                        bits[j]--;\n                    }   \n                }\n                \n                left++;\n            }\n            \n            long val = 0;\n            for(int j = 0; j < 30; ++j) {\n                if(!bits[j]) {\n                    val |= (1ll << j);\n                }\n            }\n        \n            if(val == k)\n                count += left - windowLeft + 1;\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720279209",
    "subm_id": "1311742024"
}