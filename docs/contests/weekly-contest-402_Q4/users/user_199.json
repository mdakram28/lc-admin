{
    "username": "kan-ni-9",
    "submission": "struct bit {\n    int n;\n    vector<int> tr;\n    bit(int n) : n(n), tr(n + 1){}\n    int lowbit(int x) {\n        return x & -x;\n    }\n    template <class Num>\n    void update(int i, Num x) {\n        for(; i <= n; i += lowbit(i)) {\n            tr[i] += x;\n        }\n    }\n    int query(int i) {\n        int sum = 0;\n        for(; i > 0; i -= lowbit(i)) {\n            sum += tr[i];\n        }\n        return sum;\n    }\n    int queryRange(int l, int r) {\n        return query(r) - query(l - 1);\n    }\n};\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        int n = a.size();\n        bit tr(n);\n        for (int i = 1; i < n - 1; ++i) {\n            if (a[i] > a[i - 1] && a[i] > a[i + 1]) {\n                tr.update(i, 1);\n            }\n        }\n        vector<int> ans;\n        for (auto& v : q) {\n            int op = v[0], x = v[1], y = v[2];\n            if (op == 1) {\n                int cnt = tr.queryRange(x, y);\n                if (tr.queryRange(x, x) == 1) {\n                    cnt--;\n                }\n                if (x != y && tr.queryRange(y, y) == 1) {\n                    cnt--;\n                }\n                ans.push_back(cnt);\n            } else {\n                for (int i = x - 1; i <= x + 1; ++i) {\n                    if (i - 1 >= 0 && i + 1 < n) {\n                        if (a[i] > a[i - 1] && a[i] > a[i + 1]) {\n                            tr.update(i, -1);\n                        }\n                    }\n                }\n                a[x] = y;\n                for (int i = x - 1; i <= x + 1; ++i) {\n                    if (i - 1 >= 0 && i + 1 < n) {\n                        if (a[i] > a[i - 1] && a[i] > a[i + 1]) {\n                            tr.update(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506447.0
}