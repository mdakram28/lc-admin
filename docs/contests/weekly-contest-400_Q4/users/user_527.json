{
    "username": "prateekg603",
    "submission": "#define MAX 100005\n\nint RMQ[MAX][20];\n\nclass Solution {\npublic:\n    void build(int n, vector <int>& v) {\n        for ( int i = 0; i < n; i++ ) RMQ[i][0] = v[i];\n        \n        for ( int i = 1; (1 << i) <= n; i++ ) {\n            for ( int j = 0; j + (1 << i) - 1 < n; j++ ) {\n                RMQ[j][i] = (RMQ[j][i - 1] & RMQ[j + (1 << ( i - 1))][i - 1]);\n            }\n        }\n    }\n    \n    int query(int i, int j) {\n        int len = (int)log2(j - i + 1);\n        return (RMQ[i][len] & RMQ[j - (1 << len) + 1][len]);\n    }\n    \n    int minimumDifference(vector<int>& v, int k) {\n        int n = (int)v.size();\n        build(n, v);\n        \n        int ans = INT_MAX;\n        for ( int i = 0; i < n; i++ ) {\n            int l = i, r = n - 1, idx1 = -1, idx2 = -1;\n            while ( l <= r ) {\n                int mid = (l + r)/2;\n                int andVal = query(i, mid);\n                if ( andVal < k ) {\n                    r = mid - 1;\n                }\n                else {\n                    idx1 = mid;\n                    l = mid + 1;\n                }\n            }\n            \n            l = i, r = n - 1;\n            while ( l <= r ) {\n                int mid = (l + r)/2;\n                int andVal = query(i, mid);\n                if ( andVal > k ) {\n                    l = mid + 1;\n                }\n                else {\n                    idx2 = mid;\n                    r = mid - 1;\n                }\n            }\n            if ( idx1 != -1 ) {\n                ans = min(ans, query(i, idx1) - k);\n            }\n            if ( idx2 != -1 ) {\n                ans = min(ans, k - query(i, idx2));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298744.0
}