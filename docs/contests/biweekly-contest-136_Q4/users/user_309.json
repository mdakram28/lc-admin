{
    "username": "dgzhn",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        g = defaultdict(list)\n        n = len(edges) + 1\n        for u,v in edges:\n            g[u].append(v)\n            g[v].append(u)\n        values = [0] * n\n        ans = [0] * n\n        def dfs(o,fa):\n            now = 0\n            for nxt in g[o]:\n                if nxt == fa:continue\n                dfs(nxt,o)\n                res = values[nxt]\n                now = max(now,res + 1 if nxt & 1 else res + 2)\n            values[o] = now\n\n        dfs(0,-1)\n        ans[0] = values[0]\n        def dfs2(o,fa,now):\n            ans[o] = max(now,values[o])\n            d1,d2 = 0,0\n            for nxt in g[o]:\n                if nxt == fa:continue\n                v = values[nxt] + (1 if nxt & 1 else 2)\n                if v >= d1:\n                    d2 = d1\n                    d1 = v\n                elif v >= d2:\n                    d2 = v\n            for nxt in g[o]:\n                if nxt == fa:continue\n                v = values[nxt] + (1 if nxt & 1 else 2)\n                if v == d1:\n                    dfs2(nxt,o,max(now, d2) + (1 if o & 1 else 2))\n                else:\n                    dfs2(nxt,o,max(now, d1) + (1 if o & 1 else 2))\n        dfs2(0,-1,0)\n        return ans",
    "submit_ts": "1722700069",
    "subm_id": "552278260"
}