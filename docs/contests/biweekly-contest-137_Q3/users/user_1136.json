{
    "username": "Sarit Santra",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int numRows = board.size();\n        int numCols = board[0].size();\n        long long maxSum = LLONG_MIN;\n        vector<vector<long long>> rowTopValues(numRows, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> rowTopColumns(numRows, vector<int>(3, -1));\n\n        // Find the top 3 values and their column indices for each row\n        for (int row = 0; row < numRows; ++row) {\n            vector<pair<long long, int>> columnValues;\n            for (int col = 0; col < numCols; ++col) {\n                columnValues.emplace_back(board[row][col], col);\n            }\n            sort(columnValues.rbegin(), columnValues.rend()); \n\n            for (int rank = 0; rank < 3 && rank < numCols; ++rank) {\n                rowTopValues[row][rank] = columnValues[rank].first;\n                rowTopColumns[row][rank] = columnValues[rank].second;\n            }\n        }\n\n        // Try all combinations of 3 different rows\n        for (int row1 = 0; row1 < numRows; ++row1) {\n            for (int row2 = row1 + 1; row2 < numRows; ++row2) {\n                for (int row3 = row2 + 1; row3 < numRows; ++row3) {\n                    for (int rank1 = 0; rank1 < 3; ++rank1) {\n                        for (int rank2 = 0; rank2 < 3; ++rank2) {\n                            if (rowTopColumns[row2][rank2] == rowTopColumns[row1][rank1]) continue;\n                            for (int rank3 = 0; rank3 < 3; ++rank3) {\n                                if (rowTopColumns[row3][rank3] == rowTopColumns[row1][rank1] || rowTopColumns[row3][rank3] == rowTopColumns[row2][rank2]) continue;\n\n                                long long currentSum = rowTopValues[row1][rank1] + rowTopValues[row2][rank2] + rowTopValues[row3][rank3];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910140",
    "subm_id": "1359218896"
}