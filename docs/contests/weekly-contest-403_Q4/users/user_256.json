{
    "username": "AkameOuO",
    "submission": "class Solution:\n    def c(self, grid: List[List[int]]) -> int:\n        a,b,c,d = 9999,0,9999,0\n        for i, row in enumerate(grid):\n            for j, n in enumerate(row):\n                if n:\n                    a = min(a,i)\n                    b = max(b,i)\n                    c = min(c,j)\n                    d = max(d,j)\n        return (b-a+1) * (d-c+1)\n    \n    def minimumSum(self, grid: List[List[int]]) -> int:\n        res = 90000\n        for i in range(1, len(grid)):\n            m = grid[:i]\n            n = grid[i:]\n            for j in range(len(grid[0])):\n                o = [r[:j] for r in n]\n                p = [r[j:] for r in n]\n                res = min(res, self.c(m) + self.c(o) + self.c(p))\n                \n            for j in range(len(grid[0])):\n                o = [r[:j] for r in m]\n                p = [r[j:] for r in m]\n                res = min(res, self.c(n) + self.c(o) + self.c(p))\n            \n            for j in range(1, len(n)):\n                o = n[:j]\n                p = n[j:]\n                res = min(res, self.c(m) + self.c(o) + self.c(p))\n        grid = list(map(list,zip(*grid)))\n        for i in range(1, len(grid)):\n            m = grid[:i]\n            n = grid[i:]\n            for j in range(len(grid[0])):\n                o = [r[:j] for r in n]\n                p = [r[j:] for r in n]\n                res = min(res, self.c(m) + self.c(o) + self.c(p))\n                \n            for j in range(len(grid[0])):\n                o = [r[:j] for r in m]\n                p = [r[j:] for r in m]\n                res = min(res, self.c(n) + self.c(o) + self.c(p))\n            \n            for j in range(1, len(n)):\n                o = n[:j]\n                p = n[j:]\n                res = min(res, self.c(m) + self.c(o) + self.c(p))\n            \n        return res",
    "submit_ts": "1719113627",
    "subm_id": "1297329580"
}