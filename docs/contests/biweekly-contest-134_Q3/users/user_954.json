{
    "username": "strange-mclarenpfr",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int n = colors.length;\n        int[] c = new int[n + 2 * (k - 1)];\n        int m = c.length;\n        int[] idx = new int[m];\n        for (int i = 0, j = n - (k - 1); i < k - 1; i++, j++) {\n            c[i] = colors[j];\n            idx[i] = j;\n        }\n        for (int i = k - 1; i < m - (k - 1); i++) {\n            c[i] = colors[i - (k - 1)];\n            idx[i] = i - (k - 1);\n        }\n        for (int i = m - (k - 1), j = 0; i < m; i++, j++) {\n            c[i] = colors[j];\n            idx[i] = j;\n        }\n        int ans = 0;\n        boolean[] vis = new boolean[n];\n        for (int i = 1, j = 0; i < m; i++) {\n            if (c[i] == c[i - 1]) {\n                j = i;\n            }\n            if (i - j + 1 == k) {\n                if (!vis[idx[j]]) {\n                    ans++;\n                    vis[idx[j]] = true;\n                }\n                j++;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720279004",
    "subm_id": "544565469"
}