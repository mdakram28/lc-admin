{
    "username": "we3X1yxW0Q",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        for(int i=0; i<n; i++){\n            nums[i] = target[i]-nums[i];\n        }\n        int left=firstNot0(nums, 0);\n        long ans = 0;\n        while(left!=-1){\n            ans += Math.abs(LeftIdex(nums, left));\n            left = firstNot0(nums, left);\n        }\n        return ans;\n    }\n    public int LeftIdex(int[] nums, int start){ //\u627e\u5230\u4e0e\u5f53\u524d\u540c\u7b26\u53f7\u7684\u53f3\u8fb9\u754c\n        boolean isP = nums[start] > 0;\n        int end = start;\n        int minNum;\n        if(isP) minNum = Integer.MAX_VALUE;\n        else minNum = Integer.MIN_VALUE;\n        while(isP && end < nums.length){\n            if(nums[end]>0){\n                minNum = Math.min(minNum, nums[end]);\n                end++;\n            }\n            else break;\n        }\n        while(!isP && end < nums.length){\n            if(nums[end]<0){\n                minNum = Math.max(minNum, nums[end]);\n                end++;\n            }\n            else break;\n        }\n        for(int i=start; i<end; i++){\n            nums[i] -= minNum;\n        }\n        return minNum;\n    }\n    public int firstNot0(int[] nums, int start){\n        int curr = start;\n        while(curr<nums.length){\n            if(nums[curr]!=0) break;\n            curr++;\n        }\n        if(curr==nums.length) curr=-1;\n        return curr;\n    }\n}",
    "submit_ts": "1721532738",
    "subm_id": "548394042"
}