{
    "username": "Krypton99",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        auto find_area = [&](int i, int j, int x, int y) -> int{\n            int res = 0;\n            int r1 = -1, r2 = -1, c1 = 31, c2 = -1;\n                for(int k = i; k <= x; ++k) {\n                    for(int l = j; l <= y; l++) {\n                        if(grid[k][l] == 1) {\n                            if(r1 == -1) {\n                                r1 = k;\n                            }\n                            r2 = k;\n                            c1 = min(c1, l);\n                            c2 = max(c2, l);\n                        }\n                    }\n                }\n            if(r1 == -1 || r2 == -1 || c1 == 31 || c2 == -1) return 0;\n            return (r2 - r1 + 1) * (c2 - c1 + 1);\n            \n        };\n        int res = 1000000000;\n        for(int i = 0; i < grid.size(); i++) {\n            int a = 0, b = 0;\n            a = find_area(0, 0, i, m - 1);\n            if(a == 0) continue;\n            for(int j = 0; j < grid[0].size(); j++) {\n                int tmp1 = find_area(i + 1, 0, n - 1, j);\n                int tmp2 = find_area(i + 1, j + 1, n - 1, m - 1);\n                if(tmp1 == 0 || tmp2 == 0) continue;\n                res = min(res, a + tmp1 + tmp2);\n            }\n            for(int j = i + 1; j < n; j++) {\n                int tmp1 = find_area(i + 1, 0, j, m - 1);\n                int tmp2 = find_area(j + 1, 0, n - 1, m - 1);\n                if(tmp1 == 0 || tmp2 == 0) continue;\n                res = min(res, a + tmp1 + tmp2);\n            }\n            \n            b = find_area(i + 1, 0, n - 1, m - 1);\n            if(b == 0) continue;\n            for(int j = 0; j < m; j++) {\n                int tmp1 = find_area(0, 0, i, j);\n                int tmp2 = find_area(0, j + 1, i, m - 1);\n                if(tmp1 == 0 || tmp2 == 0) continue;\n                res = min(res, b + tmp1 + tmp2);\n            }\n        }\n        \n        for(int j = 0; j < m; j++) {\n            int a = 0, b = 0;\n            a = find_area(0, 0, n - 1, j);\n            if(a == 0) continue;\n            for(int i = 0; i < n; i++) {\n                int tmp1 = find_area(0, j + 1, i, m - 1);\n                int tmp2 = find_area(i + 1, j + 1, n - 1, m - 1);\n                if(tmp1 == 0 || tmp2 == 0) continue;\n                res = min(res, a + tmp1 + tmp2);\n            }\n            for(int i = j + 1; i < m; i++) {\n                int tmp1 = find_area(0, j + 1, n - 1, i);\n                int tmp2 = find_area(0, i + 1, n - 1, m - 1);\n                if(tmp1 == 0 || tmp2 == 0) continue;\n                res = min(res, a + tmp1 + tmp2);\n            }\n            \n            b = find_area(0, j + 1, n - 1, m - 1);\n            if(b == 0) continue;\n            for(int i = 0; i < n; i++) {\n                int tmp1 = find_area(0, 0, i, j);\n                int tmp2 = find_area(i + 1, 0, n - 1, j);\n                if(tmp1 == 0 || tmp2 == 0) continue;\n                res = min(res, b + tmp1 + tmp2);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719113417.0
}