{
    "username": "naut39",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int count = 0;\n        for (int r1 = 0, r2 = grid.size() - 1; r1 < r2; r1++, r2--) {\n            for (int c1 = 0, c2 = grid[0].size() - 1; c1 < c2; c1++, c2--) {\n                int s = grid[r1][c1] + grid[r1][c2] + grid[r2][c1] + grid[r2][c2];\n                count += min(s, 4 - s);\n            }\n        }\n        int center = grid[grid.size() / 2][grid[0].size() / 2];\n        int count2 = 0, count3 = 0;\n        if (grid.size() % 2 == 1) {\n            const auto& row = grid[grid.size() / 2];\n            for (int i = 0, j = grid[0].size() - 1; i < j; i++, j--) {\n                if (row[i] != row[j])\n                    count2++;\n                else\n                    count3 += row[i]*2;\n            }\n        } else\n            center = 0;\n        if (grid[0].size() % 2 == 1) {\n            int m = grid[0].size() / 2;\n            for (int i = 0, j = grid.size() - 1; i < j; i++, j--) {\n                if (grid[i][m] != grid[j][m])\n                    count2++;\n                else\n                    count3 += grid[i][m]*2;\n            }\n        } else\n            center = 0;\n        return count + center + count2 + (count3 % 4) * (count2 == 0);\n    }\n};",
    "submit_ts": "1722699690",
    "subm_id": "1343219376"
}