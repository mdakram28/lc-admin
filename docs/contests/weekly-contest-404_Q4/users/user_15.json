{
    "username": "SamyakSinghania",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        vector<vector<int>> adj1(n),adj2(m);\n        for(auto ele:edges1){\n            adj1[ele[0]].push_back(ele[1]);\n            adj1[ele[1]].push_back(ele[0]);\n        }\n        for(auto ele:edges2){\n            adj2[ele[0]].push_back(ele[1]);\n            adj2[ele[1]].push_back(ele[0]);\n        }\n        const int inf=1e9;\n        auto bfs1=[&](int start){\n            vector<int> dist(n,inf);\n            dist[start]=0;\n            queue<int> q;\n            q.push(start);\n            while(!q.empty()){\n                auto u=q.front();\n                q.pop();\n                for(auto x:adj1[u]){\n                    if(dist[x]>dist[u]+1){\n                        dist[x]=dist[u]+1;\n                        q.push(x);\n                    }\n                }\n            }\n            return dist;\n        };\n        auto bfs2=[&](int start){\n            vector<int> dist(m,inf);\n            dist[start]=0;\n            queue<int> q;\n            q.push(start);\n            while(!q.empty()){\n                auto u=q.front();\n                q.pop();\n                for(auto x:adj2[u]){\n                    if(dist[x]>dist[u]+1){\n                        dist[x]=dist[u]+1;\n                        q.push(x);\n                    }\n                }\n            }\n            return dist;\n        };\n        auto d1=bfs1(0);\n        int node1=max_element(d1.begin(),d1.end())-d1.begin();\n        auto dd1=bfs1(node1);\n        int maxi1=*max_element(dd1.begin(),dd1.end());\n        \n        auto d2=bfs2(0);\n        int node2=max_element(d2.begin(),d2.end())-d2.begin();\n        auto dd2=bfs2(node2);\n        int maxi2=*max_element(dd2.begin(),dd2.end());\n        int res=(maxi1+1)/2 + (maxi2+1)/2 + 1;\n        res=max(res,max(maxi1,maxi2));\n        return res;\n    }\n};",
    "submit_ts": "1719715967",
    "subm_id": "1304351320"
}