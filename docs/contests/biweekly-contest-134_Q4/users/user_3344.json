{
    "username": "yomaesakura",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        \n        counts_0 = [0] * 30\n        counts_1 = [0] * 30\n        def plus(x):\n            i = 0\n            for _ in range(30):\n                if x & 1 == 1:\n                    counts_1[i] += 1\n                else:\n                    counts_0[i] += 1\n                i += 1\n                x >>= 1\n        \n        def minus(x):\n            i = 0\n            for _ in range(30):\n                if x & 1 == 1:\n                    counts_1[i] -= 1\n                else:\n                    counts_0[i] -= 1\n                i += 1\n                x >>= 1\n\n        def toNum():\n            ret = 0\n            for i in range(30):\n                ret += 2 ** i if counts_1[i] > 0 and counts_0[i] == 0 else 0\n            return ret\n\n        ans = 0\n        pos = 0\n        cur = -1\n        for i,num in enumerate(nums):\n            counts_0 = [0] * 30\n            counts_1 = [0] * 30\n            if num & k < k:\n                end = i - 1\n                if end >= pos:\n                    left = right = pos\n                    cur = nums[left]\n                    plus(nums[left])\n                    while left <= end and right <= end:\n                        print('num',toNum())\n                        if toNum() == k:\n                            ans += end - right + 1\n                            minus(nums[left])\n                            left += 1\n                            if left > right:\n                                right = left\n                                plus(nums[left])\n                        elif toNum() > k:\n                            right += 1\n                            plus(nums[right])\n                        else:\n                            minus(nums[left])\n                            left += 1\n                pos = i + 1\n   \n        if pos <= n - 1:\n            counts_0 = [0] * 30\n            counts_1 = [0] * 30\n            left = right = pos\n            cur = nums[left]\n            plus(nums[left])\n            while left <= n-1 and right <= n-1:\n\n                if toNum() == k:\n                    ans += n-1 - right + 1\n                    minus(nums[left])\n                    left += 1\n                    if left > right:\n                        right = left\n                        if left < n:\n                            plus(nums[left])\n                elif toNum() > k:\n                    right += 1\n                    if right < n:\n                        plus(nums[right])\n                else:\n                    minus(nums[left])\n                    left += 1\n        return ans\n",
    "submit_ts": "1720280989",
    "subm_id": "544574116"
}