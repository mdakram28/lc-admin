{
    "username": "Puneet7373",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        multiset<int> a,b;\n        for(int i=0;i<n;i++){\n            a.insert(p[i][0] + p[i][1]);\n            b.insert(p[i][0] - p[i][1]);\n        }\n        int ans = INT_MAX;\n        for(int i=0;i<n;i++){\n            int sum = p[i][0] + p[i][1];\n            int dif = p[i][0] - p[i][1];\n            a.erase(a.find(sum));\n            b.erase(b.find(dif));\n            int d1 = a.empty() ? 0 : *(--a.end()) - *a.begin();\n            int d2 = b.empty() ? 0 : *(--b.end()) - *b.begin();\n            a.insert(sum);\n            b.insert(dif);\n            int maxx = max(d1,d2);\n            ans = min(ans,maxx);\n        }\n        return ans;\n    }\n};"
}