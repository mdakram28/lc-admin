{
    "username": "bightguy",
    "submission": "#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long see_delta(int delta, const vector<int> &zero_idx, int s_size) {\n        int lidx = -1, ridx = delta;\n        long long ans = 0;\n        while (ridx <= zero_idx.size()) {\n            int lp = (lidx == -1) ? 0 : zero_idx[lidx] + 1;\n            int rp = (ridx == zero_idx.size()) ? s_size - 1 : zero_idx[ridx] - 1;\n            int zero_cnt = delta, one_cnt = rp - lp + 1 - delta;\n\n            if (zero_cnt * zero_cnt > one_cnt) {\n                lidx++; ridx++;\n                continue;\n            }\n            if (zero_cnt == 0) {\n                ans += (one_cnt + 1) * one_cnt / 2; // n+1_C_2\n            } else {\n                int left_spare = zero_idx[lidx + 1] - lp;\n                int right_spare = rp - zero_idx[ridx - 1];\n                int tot_spare = left_spare + right_spare;\n                int real_spare = min(tot_spare, one_cnt - zero_cnt * zero_cnt);\n\n                for (int i = 0; i <= min(real_spare, left_spare); i++) {\n                    int right_possible = min(right_spare, real_spare - i);\n                    ans += right_possible + 1;\n                }\n            }\n            lidx++; ridx++;\n        }\n        return ans;\n    }\n\n    int numberOfSubstrings(string s) {\n        vector<int> zero_idx;\n        for (int i = 0; i < s.size(); i++) {\n            if (s[i] == '0') zero_idx.push_back(i);\n        }\n\n        long long ans = 0;\n        for (int i = 0; i < 200; i++)\n            ans += see_delta(i, zero_idx, s.size());\n        return ans;\n    }\n};",
    "submit_ts": "1722138037",
    "subm_id": "1335780456"
}