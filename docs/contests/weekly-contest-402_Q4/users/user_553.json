{
    "username": "_semaphore",
    "submission": "class FenwickTree:\n    def __init__(self, data):\n        self.n = len(data)\n        self.tree = [0] * (self.n + 1)\n        for idx, value in enumerate(data):\n            self.add(idx, value)\n\n    def add(self, index, value):\n        index += 1  # Fenwick Tree is 1-indexed\n        while index <= self.n:\n            self.tree[index] += value\n            index += index & -index\n\n    def prefix_sum(self, index):\n        index += 1  # Fenwick Tree is 1-indexed\n        result = 0\n        while index > 0:\n            result += self.tree[index]\n            index -= index & -index\n        return result\n\n    def range_sum(self, left, right):\n        # Sum from index left to right inclusive\n        return self.prefix_sum(right) - self.prefix_sum(left - 1)\n\n    def update(self, index, value):\n        # Update a single element in the array to a new value\n        current_value = self.range_sum(index, index)\n        delta = value - current_value\n        self.add(index, delta)\n        \nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        peaks = [0 for i in range(n)]\n        for i in range(1, n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                peaks[i] = 1\n                \n        ft = FenwickTree(peaks)\n        \n        def check(ind):\n            if ind < 1 or ind > n-2:\n                return\n            p = 0\n            if nums[ind] > nums[ind-1] and nums[ind] > nums[ind+1]:\n                p = 1\n            #print(ind, p, peaks[ind])\n            if p != peaks[ind]:\n                peaks[ind] = p\n                ft.update(ind, peaks[ind])\n            \n        \n        ans = []\n        for q in queries:\n            if q[0] == 1:\n                l, r = q[1] + 1, q[2] - 1\n                if l <= r:\n                    ans.append(ft.range_sum(l, r))\n                else:\n                    ans.append(0)\n            else:\n                nums[q[1]] = q[2]\n                check(q[1])\n                check(q[1]-1)\n                check(q[1]+1)\n                \n        return ans      ",
    "submit_ts": 1718507880.0
}