{
    "username": "sahoosambit2003",
    "submission": "class SegmentTree\n{\npublic:\n    vector<int> t;\n    vector<int> vis;\n\tSegmentTree(int n)\n\t{\n\t\tt.resize(4*n,0);\n        vis.resize(4*n,0);\n\t}\n\t\n\tvoid build(int v,int tl,int tr)\n\t{\n\t\tif(tl==tr)\n\t\t{\n\t\t\tt[v]=1;\n\t\t\treturn;\n\t\t}\n\t\tint tm=(tl + tr)/2;\n\t\tbuild(2*v, tl, tm);\n\t\tbuild(2*v+1, tm+1, tr);\n\t\tt[v]=t[2*v] + t[2*v+1];\n\t}\n\t\n\tint query(int v,int tl,int tr, int l, int r)\n\t{\n\t\tif(l>r) return 0;\n\t\tif(tl==l && tr==r)\n\t\t{\n\t\t\treturn t[v];\n\t\t}\n\t\tint tm=(tl + tr)/2;\n\t\tint left=query(2*v, tl, tm, l, min(r,tm));\n\t\tint right=query(2*v+1, tm+1, tr, max(l,tm+1), r);\n        return left + right;\n\t}\n\t\n\tvoid update(int v,int tl,int tr,int l,int r)\n\t{\n\t\tif(l>r) return;\n\t\tif(tl==l && tr==r)\n\t\t{\n\t\t\tt[v]=0;\n            vis[v]=1;\n\t\t\treturn;\n\t\t}\n\t\tint tm=(tl + tr)/2;\n\t\tupdate(2*v, tl, tm, l, min(r,tm));\n\t\tupdate(2*v+1, tm+1, tr, max(l,tm+1), r);\n        if(vis[v] == 0) t[v]=t[2*v] + t[2*v+1];\n\t}\n};\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        SegmentTree sgt(n);\n        sgt.build(1, 0, n-1);\n        \n        vector<int> ans;\n        for(auto q: queries)\n        {\n            int l=q[0];\n            int r=q[1];\n            sgt.update(1, 0, n-1, l+1, r-1);\n            int res=sgt.query(1, 0, n-1, 0, n-1) - 1;\n            ans.push_back(res);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722743697",
    "subm_id": "1343797630"
}