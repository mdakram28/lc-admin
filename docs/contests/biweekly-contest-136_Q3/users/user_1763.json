{
    "username": "zhou_2001",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        res = 0\n\n        half_m = m // 2\n        half_n = n // 2\n        for i in range(half_m):\n            for j in range(half_n):\n                a = [grid[i][j], grid[m - 1 - i][j], grid[i][n - 1 - j], grid[m - 1 - i][n - 1 - j]]\n                ones = sum(a)\n                res += min(ones, 4 - ones)\n        col_1 = 0\n        all_1 = 0\n        if n % 2 != 0:\n            col = half_n\n            for i in range(half_m):\n                if grid[i][col] != grid[m - 1 - i][col]:\n                    col_1 += 1\n                elif grid[i][col] == 1:\n                    all_1 += 1\n\n        \n        if m % 2 != 0:\n            row = half_m\n            for i in range(half_n):\n                if grid[row][i] != grid[row][n - 1 - i]:\n                    col_1 += 1\n                elif grid[row][i] == 1:\n                    all_1 += 1\n        if all_1 % 2 != 0 and col_1 == 0:\n            res += 2\n        res += col_1\n        if m % 2 != 0 and n % 2 != 0:\n            res += grid[m // 2][n // 2]\n        return res\n        \n        ",
    "submit_ts": "1722698428",
    "subm_id": "552270800"
}