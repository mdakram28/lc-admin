{
    "username": "purvanshh",
    "submission": "import java.util.Arrays;\nimport java.util.Collections;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Integer[] hCuts = Arrays.stream(horizontalCut).boxed().toArray(Integer[]::new);\n        Integer[] vCuts = Arrays.stream(verticalCut).boxed().toArray(Integer[]::new);\n        \n        Arrays.sort(hCuts, Collections.reverseOrder());\n        Arrays.sort(vCuts, Collections.reverseOrder());\n\n        int h = 0, v = 0;\n        long horizontalParts = 1, verticalParts = 1;\n        long totalCost = 0;\n\n        while (h < hCuts.length && v < vCuts.length) {\n            if (hCuts[h] >= vCuts[v]) {\n                totalCost += hCuts[h] * verticalParts;\n                horizontalParts++;\n                h++;\n            } else {\n                totalCost += vCuts[v] * horizontalParts;\n                verticalParts++;\n                v++;\n            }\n        }\n\n        while (h < hCuts.length) {\n            totalCost += hCuts[h] * verticalParts;\n            h++;\n        }\n\n        while (v < vCuts.length) {\n            totalCost += vCuts[v] * horizontalParts;\n            v++;\n        }\n\n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720926747",
    "subm_id": "1320295263"
}