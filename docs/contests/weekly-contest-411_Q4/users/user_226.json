{
    "username": "Ayanerru",
    "submission": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int, queries: List[List[int]]) -> List[int]:\n        prefix = [0]\n        acc = 0\n        for i, c in enumerate(s):\n            if c == '1':\n                acc += 1\n            prefix.append(acc)\n        # print(prefix)\n        \n        n = len(s)\n        dp = [0] * n\n        for i in range(n):\n            lo, hi = i, n\n            while lo < hi:\n                mid = lo + (hi - lo) // 2\n                cnt1 = prefix[mid+1] - prefix[i]\n                cnt0 = (mid-i+1) - cnt1\n                if cnt0 <= k or cnt1 <= k:\n                    lo = mid+1\n                else:\n                    hi = mid\n            dp[i] = lo-1\n        \n        dp2 = [0]\n        acc = 0\n        # dp3 = []\n        for i, val in enumerate(dp):\n            \n            acc += (val-i+1)\n            # dp3.append(val-i+1)\n            dp2.append(acc)\n        # print(dp)\n        # print(dp3)\n        # print(dp2)\n        \n        ans = []\n        for l, r in queries:\n            # print('l = ', l, ', dp[l]', dp[l])\n            if dp[l] >= r:\n                L = r-l+1\n                ans.append((1+L)*L // 2)\n            else:\n                lo, hi = l, n-1\n                while lo < hi:\n                    mid = lo + (hi - lo) // 2\n                    if dp[mid] < r:\n                        lo = mid+1\n                    else:\n                        hi = mid\n                gt = lo\n                # print('great:', gt)\n                tmp = dp2[(gt-1)+1] - dp2[l]\n                \n                L = max(0, r-gt+1)\n                # print('left:', tmp, ', right', L)\n                ans.append(tmp + (1+L)*L // 2)\n                \n        return ans\n        \n",
    "submit_ts": "1723951647",
    "subm_id": "1359776670"
}