{
    "username": "shaileshsingh23423",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int ans = INT_MAX, j = 0;\n        int currAnd = INT_MAX;\n        for(int i=0; i<nums.size(); i++) {\n            currAnd = currAnd & nums[i];\n            ans = min(ans,abs(k-currAnd));\n            if(ans == 0) return 0;\n            if(currAnd < k) {\n                int r = i;\n                int temp = nums[i];\n                int toMove = i;\n                int nextAnd = nums[i];\n                while(r >= j) {\n                    ans = min(ans,abs(k-temp));\n                    temp = temp & nums[r--];\n                    if(temp > k) {\n                        toMove = r;\n                        nextAnd = temp;\n                    }\n                }\n                ans = min(ans,abs(k-temp));\n                j = toMove;\n                currAnd = temp;\n            }\n        }\n        ans = min(ans,abs(k-currAnd));\n        return ans;\n    }\n};",
    "submit_ts": 1717300206.0
}