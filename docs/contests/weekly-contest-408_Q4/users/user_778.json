{
    "username": "bits_069",
    "submission": "class Solution {\npublic:\n    bool bfs(vector<vector<int>> &g, int st, int t1, int t2, int n){\n        queue<int> q;\n        vector<int> vis(n+5,0);\n        q.push(st);\n        while(!q.empty()){\n            auto it = q.front();\n            q.pop();\n            if(vis[it]) continue;\n            vis[it]=1;\n            if(it==t1||it==t2) return true;\n            for(auto x: g[it]){\n                if(!vis[x]){\n                    q.push(x);\n                }\n            }\n        }\n        return false;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& arr) {\n        int n = arr.size();\n        vector<vector<int>> a(n+1),g(n+10);\n        for(int i = 0; i<n; i++){\n            if(arr[i][0]<=arr[i][2]){\n                g[n].push_back(i);\n                g[i].push_back(n);\n            }\n            if(X-arr[i][0]<=arr[i][2]){\n                g[n+2].push_back(i);\n                g[i].push_back(n+2);\n            }\n            if(arr[i][1]<=arr[i][2]){\n                g[n+1].push_back(i);\n                g[i].push_back(n+1);\n            }\n            if(Y-arr[i][1]<=arr[i][2]){\n                g[n+3].push_back(i);\n                g[i].push_back(n+3);\n            }\n            \n        }\n        for(int i = 0; i<n; i++){\n            for(int j = i+1; j<n; j++){\n                long long int d = (pow(arr[i][0] - arr[j][0],2) + pow(arr[i][1]-arr[j][1],2));\n                long long radSum = arr[i][2] + arr[j][2];\n                if(radSum*radSum>=d){\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n        bool f = false;\n        f = max(bfs(g,n,n+1,n+2,n+4),bfs(g,n+3,n+2,n+1,n+4));\n        if(f==false) f = true;\n        else f = false;\n        return f;\n    }\n};",
    "submit_ts": "1722138893",
    "subm_id": "1335802393"
}