{
    "username": "VeXe1199",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n        int ans = 1;\n        vector<int> maxK(k + 1, -1);\n        vector<unordered_map<int, int>> maxNum(k + 1);\n\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < k+1; ++j) {\n                for (int l = 0; l < j; ++l) {\n                    dp[i][j] = max(dp[i][j],maxK[l]+1);\n                }\n                if (maxNum[j].find(nums[i]) != maxNum[j].end()) {\n                    dp[i][j] = max(dp[i][j],maxNum[j][nums[i]]+1);\n                }\n                ans = max(ans, dp[i][j]);\n            }\n            for (int j = 0; j <= k; ++j) {\n                maxK[j] = max(maxK[j], dp[i][j]);\n                maxNum[j][nums[i]] = max(maxNum[j][nums[i]], dp[i][j]);\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1717861995",
    "subm_id": "1281808620"
}