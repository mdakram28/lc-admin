{
    "username": "sveng101",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        n = len(colors)\n        #curr = deque(colors[-k + 1:])\n        alt_tail_len = 1\n        for i in range(1, k - 1):\n            #print(i)\n            if colors[~i] == colors[~i + 1]:\n                alt_tail_len = i\n                break\n        else: alt_tail_len = k - 1\n        #print(curr)\n        #print(alt_tail_len)\n        res = 0\n        #if colors[0] == colors[-1]:\n        #    alt_tail_len += 1\n        #    if alt_tail_len >= k:\n        #        res += 1\n        #        alt_tail_len = k\n        for i in range(n):\n            if colors[i] == colors[i - 1]:\n                alt_tail_len = 1\n                #print(i, alt_tail_len)\n                continue\n            alt_tail_len += 1\n            if alt_tail_len >= k:\n                res += 1\n                alt_tail_len = k\n            #print(i, alt_tail_len)\n\n        return res\n        \"\"\"\n        res = 0\n        for c in colors:\n            if c == curr[0] and c != curr[-1]:\n                res += 1\n            curr.append(c)\n            curr.popleft()\n        return res\n        \"\"\"",
    "submit_ts": "1720277805",
    "subm_id": "1311680804"
}