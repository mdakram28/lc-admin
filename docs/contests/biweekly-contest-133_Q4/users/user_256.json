{
    "username": "user1186k",
    "submission": "class Solution {\npublic:\n    int mod = 1e9+7;\n    map<int, int> mp;\n    int dp[302][402];\n    long long rec(int n, int k){\n        \n        if(mp.find(n)!=mp.end()){\n            if(mp[n]!=k){\n                return 0;\n            }\n        }\n        if(k == 0 and n == 1){\n            return 1;\n        }\n        if(n == 0){\n            return 0;\n        }\n        \n        if(dp[n][k]!=-1) return dp[n][k];\n        long long ans = 0;\n        for(int i = 0; i <= k; ++i){\n            if(i <= n-1){\n                ans += rec(n-1, k-i);\n                ans %= mod;\n            }\n        }\n        return dp[n][k] = ans;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        memset(dp, -1, sizeof dp);\n        for(auto req: requirements){\n            int end = req[0];\n            int cnt = req[1];\n            mp[end+1] = cnt;\n        }\n        int ans = rec(n, mp[n]);\n        return ans;\n    }\n};",
    "submit_ts": 1719069621.0
}