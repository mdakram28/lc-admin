{
    "username": "Romax21",
    "submission": "class Solution {\npublic:\n    int solve(vector<int> &nums,int n,int k,int diff) {\n        int count = 0;\n        for(int i=0;i<n/2;i++) {\n            int s = abs(nums[i]-nums[n-i-1]);\n            if(s == diff) continue;\n            if(s > diff) {\n                count++;\n                continue;\n            }\n            int a = min(nums[i],nums[n-i-1]);\n            int b = max(nums[i],nums[n-i-1]);\n            if(a+diff <=k || b-diff >=0) {\n                count++;\n            }\n            else count += 2;\n        }\n        return count;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int,int> count;\n        for(int i=0;i<n/2;i++) {\n            int s = abs(nums[i]-nums[n-i-1]);\n            count[s]++;\n        }\n        priority_queue<pair<int,int>> pq;\n        for(auto &[key,value] : count) {\n            pq.push({value,key});\n        }\n\n        int ans = INT_MAX;\n        // for(auto &[key,value] : count) {\n        //     int countOccur = solve(nums,n,k,key);\n        //     ans = min(ans,countOccur);\n        // }\n        while(!pq.empty()) {\n            auto t = pq.top();\n            int countOccur = solve(nums,n,k,t.second);\n            pq.pop();\n            if(countOccur <= ans) ans = countOccur;\n            else break;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721490444",
    "subm_id": "1327482820"
}