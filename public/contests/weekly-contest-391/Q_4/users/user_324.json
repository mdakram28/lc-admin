{
    "username": "han-zhi-ken-qi",
    "submission": "class Solution {\npublic:\n    int ansl=0,ansr=0;\n    int cal(vector<vector<int>>& a)\n    {\n         int n=a.size();\n        int ans=0;\n    for(int i = 0 ; i < 1 << 2 ; i ++ )\n    {\n        int maxv = -1e9, minv = 1e9;\n        int l=0,r=0;\n        for(int j = 0 ; j < n ; j ++ )\n        {\n            int sum = 0;\n            for(int k = 0 ; k < 2 ; k ++ )\n            {\n                if(i >> k & 1) sum += a[j][k];\n                else sum -= a[j][k];\n            }\n            if (sum>=maxv){\n                l=j;\n            }\n            if (sum<=minv){\n            r=j;\n            }\n            maxv = max(maxv, sum), minv = min(minv, sum);\n        }\n        if (maxv-minv>=ans){\n            ansl=l;\n            ansr=r;\n        }\n        ans = max(ans, maxv - minv);\n        // cout<<maxv<<\" \"<<minv<<endl;\n    }\n        return ans;\n    }\n    int minimumDistance(vector<vector<int>>& a) {\n       \n       int ans=cal(a);\n    \n    vector<int> n=a[ansl],m=a[ansr];\n        \n        a.erase(find(a.begin(),a.end(),n));\n       \n        int ans1=cal(a);\n        a.push_back(n);\n        a.erase(find(a.begin(),a.end(),m));\n        int ans2=cal(a);\n        return min(ans1,ans2);\n    }\n};"
}