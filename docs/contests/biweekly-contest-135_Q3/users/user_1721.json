{
    "username": "yashwant_yadav14",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        vector<int> vec;\n        int n = nums.size();\n                map<int, vector<int>> mp;\n\n        \n        \n        for (int i = 0; i <= n / 2-1; ++i) {\n       \n            int diff = abs(nums[n - i - 1] - nums[i]);\n            int X = max({nums[n - i - 1],  nums[i], k - nums[n - i - 1], k -  nums[i]});\n            vec.push_back(X);\n            mp[diff].push_back(X);\n        }\n\n        sort(vec.begin(), vec.end());\n        \n              int ans = n;\n\n        for (auto it : mp) {\n            int diff = it.first;\n            int d = lower_bound(vec.begin(), vec.end(), diff) - vec.begin();\n            d = (n / 2 - d)+d * 2 ;\n            int m=it.second.size();\n                \n        \n            for(int i=0;i<m;i++){\n                if (it.second[i] < diff) {\n                    d -= 2;\n                } else {\n                    d -= 1;\n                }\n            }\n            ans = min(ans, d);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721489773",
    "subm_id": "1327463361"
}