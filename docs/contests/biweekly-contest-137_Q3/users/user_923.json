{
    "username": "\u79cb\u96e8\u7530\u98ce",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        List<List<Integer>> b = new ArrayList<>();\n        List<Integer> id = new ArrayList<>();\n        for(int i = 0; i < board[0].length;i++){\n            id.add(i);\n        }\n        for(int i =0;i < board.length;i++){\n            int j = i;\n            List<Integer> tb = id.stream()\n                    .sorted(Comparator.comparing(ele->board[j][ele],Comparator.reverseOrder()))\n                    .limit(3)\n                    .collect(Collectors.toList());\n            b.add(tb);\n        }\n\n        long maxValue = Long.MIN_VALUE;\n        for(int i = 0 ; i < board.length-2;i++){\n            for(int j = i+1;j<board.length-1;j++){\n                for(int k = j+1;k<board.length;k++){\n                    long tm = getMax(b.get(i),b.get(j),b.get(k),i,j,k,board);\n                    if(tm>maxValue){\n                        maxValue = tm;\n                    }\n                }\n            }\n        }\n        return maxValue;\n    }\n\n    private long   getMax(List<Integer> a,List<Integer> b,List<Integer> c,int i,int j,int k, int[][]board){\n        long max = Long.MIN_VALUE;\n        for(int l:a){\n            for(int m:b){\n                for(int n:c){\n                    if(l!=m && l != n && m!=n){\n                        long mm = (long)board[i][l] + (long)board[j][m]+(long)board[k][n];\n                        if(mm>max){\n                            max = mm;\n                        }\n                    }\n                }\n            }\n        }\n        return max;\n    }\n}",
    "submit_ts": "1723908750",
    "subm_id": "556332650"
}