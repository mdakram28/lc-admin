{
    "username": "REED_W",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        return sln1(target, words, costs);\n    }\n\n    private int sln1(String t, String[] ws, int[] cs){\n        int n = t.length();\n        TrieNode root = buildTrie(ws, cs);\n\n        int[] dp = new int[n+1];\n        for(int i = 0;i<n;i++){\n            dp[i+1] = Integer.MAX_VALUE/2;\n            TrieNode curr = root;\n            for(int j = i;j>=0; j--){\n                char c = t.charAt(j);\n                if(curr.nexts[c-'a'] == null) break;\n                curr= curr.nexts[c-'a'];\n                if(curr.isWord!=null){\n                    dp[i+1] = Math.min(dp[i+1], dp[j]+curr.cost);\n                }\n            }\n        }\n        return dp[n] == Integer.MAX_VALUE/2 ? -1: dp[n];\n    }\n\n    class TrieNode{\n        TrieNode[] nexts;\n        String isWord;\n        int cost;\n        public TrieNode(){\n            nexts = new TrieNode[26];\n            isWord = null;\n            cost = Integer.MAX_VALUE;\n        }\n    }\n    \n    private TrieNode buildTrie(String[] ws, int[] cs){\n        int n = cs.length;\n        TrieNode root = new TrieNode();\n        TrieNode curr = root;\n        for(int j = 0;j<n ;j++){\n            String w = ws[j];\n            curr = root;\n            for(int i = w.length()-1;i >=0;i--){\n                char c = w.charAt(i);\n                if(curr.nexts[c-'a'] == null) curr.nexts[c-'a']= new TrieNode();\n                curr = curr.nexts[c-'a'];\n            }\n            curr.isWord = w;\n            curr.cost = Math.min(curr.cost, cs[j]);\n        }\n        return root;\n    }\n}",
    "submit_ts": "1720321896",
    "subm_id": "1312335198"
}