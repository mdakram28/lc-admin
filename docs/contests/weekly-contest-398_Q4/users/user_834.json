{
    "username": "Morampudi_Gopi_Prashanth_Raju",
    "submission": "class Solution:\n    def __init__(self):\n        self.memoization = {}\n\n    def find_ways(self, target_stair, current_stair, current_jump, can_descend):\n        if current_stair > target_stair + 5:\n            return 0\n        if current_jump > 31:\n            return 0\n\n        memo_key = (current_stair, current_jump, can_descend)\n        if memo_key in self.memoization:\n            return self.memoization[memo_key]\n\n        total_ways = (current_stair == target_stair)\n        if can_descend:\n            total_ways += self.find_ways(target_stair, current_stair - 1, current_jump, False)\n        if current_stair + (1 << current_jump) <= target_stair + 1:\n            total_ways += self.find_ways(target_stair, current_stair + (1 << current_jump), current_jump + 1, True)\n\n        self.memoization[memo_key] = total_ways\n        return total_ways\n\n    def waysToReachStair(self, k: int) -> int:\n        return self.find_ways(k, 1, 0, True)",
    "submit_ts": "1716089400",
    "subm_id": "1261841231"
}