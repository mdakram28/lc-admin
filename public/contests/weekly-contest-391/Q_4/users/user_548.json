{
    "username": "JiaLiLue",
    "submission": "constexpr int NN = 1e5+10;\nint N, PX[NN], PY[NN], idx[NN];\nusing PII = pair<int,int>;\ninline int dis(const PII &pii){\n    auto [i1, i2] = pii;\n    return abs(PX[i1]-PX[i2]) + abs(PY[i1]-PY[i2]);\n}\nPII maxDis(int del_idx=-1){\n    int max_v1=-1e9, max_v2=-1e9, i1=-1, i2=-1;\n    int best_i1=-1, best_i2=-1, max_dis=-1e9;\n    for(int i=0; i<N; ++i){\n        int x = PX[idx[i]], y = PY[idx[i]];\n        // printf(\"i=%d, idx=%d, x=%d, y=%d\\n\", i, idx[i], x, y);\n        if(idx[i]==del_idx){\n            continue;\n        }\n        int v1 = -x-y, v2 = -x+y;\n        int d1 = x+y+max_v1;\n        if(d1>max_dis){\n            max_dis = d1;\n            best_i1 = i1;\n            best_i2 = idx[i];\n        }\n        int d2 = x-y+max_v2;\n        if(d2>max_dis){\n            max_dis = d2;\n            best_i1 = i2;\n            best_i2 = idx[i];\n        }\n        if(max_v1 < v1){\n            max_v1 = v1;\n            i1 = idx[i];\n        }\n        if(max_v2 < v2){\n            max_v2 = v2;\n            i2 = idx[i];\n        }\n    }\n    // printf(\"del=%d, best(i1=%d, i2=%d, d=%d)\\n\", del_idx, best_i1, best_i2, dis({best_i1, best_i2}));\n    return {best_i1, best_i2};\n}\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        N = points.size();\n        for(int i=0; i<N; ++i){\n            idx[i] = i;\n            PX[i] = points[i][0];\n            PY[i] = points[i][1];\n        }\n        sort(idx, idx+N, [&](int i, int j){return PX[i]<PX[j];});\n        auto [i1, i2] = maxDis();\n        // printf(\"i1=%d, i2=%d, maxd = %d\\n\", i1, i2, dis({i1,i2}));\n        return min(dis(maxDis(i1)), dis(maxDis(i2)));\n    }\n};"
}