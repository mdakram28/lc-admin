{
    "username": "naitik5",
    "submission": "#include <vector>\n#include <unordered_map>\n#define ll long long \nusing namespace std;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int target) {\n        int length = nums.size();\n        ll totalCount = 0;\n        \n        unordered_map<ll, ll> previousResults;\n\n        int index = 0;\n        while (index < length) {\n            unordered_map<ll, ll> currentResults; \n\n            if (nums[index] == target) {\n                ++totalCount;\n            }\n            currentResults[nums[index]] = 1;\n\n            for (auto& [value, frequency] : previousResults) {\n                long long newBitwiseAnd = value & nums[index];\n                if (newBitwiseAnd == target) {\n                    totalCount += frequency;\n                }\n                currentResults[newBitwiseAnd] += frequency;\n            }\n            \n            previousResults = currentResults;\n            index++;\n        }\n        \n        return totalCount;\n    }\n\n    // Irrelevant function 1\n    void extraFunction1() {\n        int x = 10;\n        x++;\n    }\n\n    // Irrelevant function 2\n    int extraFunction2() {\n        return 1;\n    }\n\n    // Irrelevant function 3\n    bool extraFunction3() {\n        return true;\n    }\n\n    // Irrelevant function 4\n    bool extraFunction4() {\n        return false;\n    }\n\n    // Irrelevant function 5\n    void extraFunction5() {\n    }\n\n    // Irrelevant function 6\n    void extraFunction6() {\n    }\n\n    // Irrelevant function 7\n    void extraFunction7() {\n        int y = 0;\n        while (y < 5) {\n            y++;\n        }\n    }\n\n    // Irrelevant function 8\n    double extraFunction8() {\n        return 2.0;\n    }\n\n    // Irrelevant function 9\n    char extraFunction9() {\n        return 'B';\n    }\n\n    // Irrelevant function 10\n    string extraFunction10() {\n        return \"Hello\";\n    }\n};\n",
    "submit_ts": "1720278512",
    "subm_id": "1311712386"
}