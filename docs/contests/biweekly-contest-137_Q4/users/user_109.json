{
    "username": "mickey",
    "submission": "// {{{\n#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nusing vi = vector<int>;\nusing pii = pair<int, int>;\n#define sz(x) (int)((x).size())\n#define all(x) (x).begin(), (x).end()\n#define clr(a, b) memset(a, b, sizeof(a))\n#define debug(x...)\n#define debug_arr(x...)\n#ifdef LOCAL\n#include \"prettyprint.hpp\"\n#endif\n// }}}\n\nusing I = pair<int, vector<pii>>;\nbool cmp1(const I& a, const I& b) { return a.second[0] > b.second[0]; }\nbool cmp2(const I& a, const I& b) { return a.second[1] > b.second[1]; }\nbool cmp3(const I& a, const I& b) { return a.second[2] > b.second[2]; }\n\nclass Solution\n{\npublic:\n    long long maximumValueSum(vector<vector<int>>& board)\n    {\n        int n = board.size();\n        int m = board[0].size();\n\n        vector<pair<int, vector<pii>>> vec;\n        // vec.resize(n);\n\n        for (int i = 0; i < n; i++)\n        {\n            multiset<pii> st;\n            for (int j = 0; j < m; j++)\n            {\n                int v = board[i][j];\n                if (st.size() < 3) st.insert({v, j});\n                else\n                {\n                    if (v > st.begin()->first)\n                    {\n                        st.erase(st.begin());\n                        st.insert({v, j});\n                    }\n                }\n            }\n\n            vector<pii> tmp;\n            for (auto pr : st)\n            {\n                tmp.push_back(pr);\n            }\n            vec.push_back({i, tmp});\n        }\n\n        vector<vector<pii>> vec2;\n        set<int> candidate;\n        sort(all(vec), cmp1);\n        for (int i = 0; i < min(n, 40); i++) candidate.insert(vec[i].first);\n        sort(all(vec), cmp2);\n        for (int i = 0; i < min(n, 40); i++) candidate.insert(vec[i].first);\n        sort(all(vec), cmp3);\n        for (int i = 0; i < min(n, 40); i++) candidate.insert(vec[i].first);\n\n        int nn = sz(candidate);\n        for (int i = 0; i < n; i++)\n        {\n            int idx = vec[i].first;\n            if (candidate.find(idx) != candidate.end())\n            {\n                vec2.push_back(vec[i].second);\n            }\n        }\n\n        LL ret = LLONG_MIN;\n        for (int i = 0; i < nn; i++)\n        {\n            for (int j = 0; j < nn; ++j)\n            {\n                if (i == j) continue;\n                for (int k = 0; k < nn; ++k)\n                {\n                    if (k == i) continue;\n                    if (k == j) continue;\n\n                    for (int a = 0; a < 3; a++)\n                        for (int b = 0; b < 3; b++)\n                            for (int c = 0; c < 3; c++)\n                            {\n                                if (vec2[i][a].second == vec2[j][b].second) continue;\n                                if (vec2[i][a].second == vec2[k][c].second) continue;\n                                if (vec2[j][b].second == vec2[k][c].second) continue;\n                                LL cur = vec2[i][a].first;\n                                cur += vec2[j][b].first;\n                                cur += vec2[k][c].first;\n                                ret = max(cur, ret);\n                            }\n                }\n            }\n        }\n        return ret;\n    }\n};\n\n",
    "submit_ts": "1723907782",
    "subm_id": "556327455"
}