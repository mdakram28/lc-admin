{
    "username": "wyacac",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = target[i] - nums[i];\n        }\n        long[] dp = new long[n];\n        dp[0] = Math.abs(arr[0]);\n        for (int i = 1; i < n; i++) {\n            dp[i] = dp[i - 1];\n            if (arr[i] <= arr[i - 1] && arr[i - 1] <= 0) {\n                dp[i] += arr[i - 1] - arr[i];\n            } else if (arr[i] >= arr[i - 1] && arr[i - 1] >= 0) {\n                dp[i] += arr[i] - arr[i - 1];\n            } else if ((arr[i - 1] <= 0 && arr[i] >= 0) || (arr[i - 1] >= 0 && arr[i] <= 0)) {\n                dp[i] += Math.abs(arr[i]);\n            }\n        }\n        return dp[n - 1];\n        // 3 + 1 + 8 + \n    }\n}",
    "submit_ts": "1721531683",
    "subm_id": "548387905"
}