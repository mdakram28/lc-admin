{
    "username": "sherlocked-c",
    "submission": "    class Solution {\n        public int minFlips(int[][] grid) {\n            int n = grid.length;\n            int m = grid[0].length;\n            int ans = 0;\n            // \u56db\u89d2\u5bf9\u79f0\n            for (int i = 0; i < n / 2; i++) {\n                for (int j = 0; j < m / 2; j++) {\n                    int leftUp = grid[i][j];\n                    int rightUp = grid[i][m - 1 - j];\n                    int leftDown = grid[n - 1 - i][j];\n                    int rightDown = grid[n - 1 - i][m - 1 - j];\n                    int oneNum = leftUp + rightUp + leftDown + rightDown;\n                    if (oneNum == 0 || oneNum == 4) {\n                        ans += 0;\n                    } else if (oneNum == 1 || oneNum == 3) {\n                        ans += 1;\n                    } else {\n                        ans += 2;\n                    }\n                }\n            }\n            if (n % 2 == 1 || m % 2 == 1) {\n                // \u4e2d\u95f4\u4e00\u683c\u53d8\u4e3a0\n                if (n % 2 == 1 && m % 2 == 1) {\n                    if (grid[n / 2][m / 2] == 1) {\n                        ans++;\n                    }\n                }\n                int onePairNum = 0;\n                int zeroPairNum = 0;\n                int oneZeroPairNum = 0;\n                // \u884c\u662f\u5947\u6570\n                if (n % 2 == 1) {\n                    int midRow = n / 2;\n                    for (int j = 0; j < m / 2; j++) {\n                        if (grid[midRow][j] != grid[midRow][m - 1 - j]) {\n                            oneZeroPairNum++;\n                        } else if (grid[midRow][j] == 1) {\n                            onePairNum++;\n                        } else {\n                            zeroPairNum++;\n                        }\n                    }\n                }\n                // \u5217\u662f\u5947\u6570\n                if (m % 2 == 1) {\n                    int midCol = m / 2;\n                    for (int i = 0; i < n / 2; i++) {\n                        if (grid[i][midCol] != grid[n - 1 - i][midCol]) {\n                            oneZeroPairNum++;\n                        } else if (grid[i][midCol] == 1) {\n                            onePairNum++;\n                        } else {\n                            zeroPairNum++;\n                        }\n                    }\n                }\n                if (onePairNum % 2 == 0) {\n                    // \u5df2\u7ecf\u662f\u56db\u7684\u500d\u6570\uff0c\u6240\u6709\u4e0d\u5bf9\u79f0\u7684\u53d8\u62100\n                    ans += oneZeroPairNum;\n                } else {\n                    // \u4e0d\u662f\u56db\u7684\u500d\u6570\n                    if (oneZeroPairNum >= 1) {\n                        // \u4e00\u5bf9\u53d8\u62101\uff0c\u5176\u4ed6\u53d8\u62100\n                        ans += oneZeroPairNum;\n                    } else {\n                        // \u4e00\u5bf91\u53d8\u62100\n                        ans += 2;\n                    }\n                }\n            }\n            return ans;\n        }\n    }",
    "submit_ts": "1722698318",
    "subm_id": "552270323"
}