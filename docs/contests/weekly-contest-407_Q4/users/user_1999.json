{
    "username": "areyu",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> data(n, 0);\n        long long ret = 0;\n\n        for (int i = 0; i < n; i++)\n        {\n            data[i] = target[i] - nums[i];\n        }\n\n        int i = 0;\n        while (i < n)\n        {\n            if (data[i] > 0)\n            {\n                int j = i + 1;\n                while (j < n && data[j]>0)\n                {\n                    j++;\n                }\n                j--;\n                //j\u548ci\uff08\u5305\u62ecij\uff09\u76ee\u524d\u6307\u5411\u7684\u533a\u95f4\u5168\u90e8\u90fd\u662f\u6b63\u6570\n                deque<int> dq;\n                for (int k = i; k <= j; k++)\n                {\n                    if (dq.empty())\n                    {\n                        ret+= data[k];\n                        dq.push_back(data[k]);\n                    }\n                    else\n                    {\n                        bool pop = false;\n                        while (!dq.empty() && data[k] < dq.back())\n                        {\n                            pop = true;\n                            dq.pop_back();\n                        }\n                        if (dq.empty())// || data[i] != dq.back())\n                        {\n                            dq.push_back(data[k]);\n                        }\n                        else\n                        {\n                            if (data[k] != dq.back())\n                            {\n                                if (!pop)\n                                {\n                                    ret += data[k] - dq.back();\n                                }\n                                dq.push_back(data[k]);\n                            }\n                        }\n                    }\n                }\n                i = j + 1;\n            }\n            else\n            {\n                if (data[i] < 0)\n                {\n                    int j = i + 1;\n                    while (j < n && data[j]<0)\n                    {\n                        j++;\n                    }\n                    j--;\n                    //j\u548ci\uff08\u5305\u62ecij\uff09\u76ee\u524d\u6307\u5411\u7684\u533a\u95f4\u5168\u90e8\u90fd\u662f\u8d1f\u6570\n                    deque<int> dq;\n                    for (int k = i; k <= j; k++)\n                    {\n                        if (dq.empty())\n                        {\n                            ret+=(-data[k]);\n                            dq.push_back(data[k]);\n                        }\n                        else\n                        {\n                            bool pop = false;\n                            while (!dq.empty() && data[k] > dq.back())\n                            {\n                                pop = true;\n                                dq.pop_back();\n                            }\n                            if (dq.empty())// || data[i] != dq.back())\n                            {\n                                dq.push_back(data[k]);\n                            }\n                            else\n                            {\n                                if (data[k] != dq.back())\n                                {\n                                    if (!pop)\n                                    {\n                                        ret += abs(data[k] - dq.back());\n                                    }\n                                    dq.push_back(data[k]);\n                                }\n                            }\n                        }\n                    }\n                    i = j + 1;\n                }\n                else\n                {\n                    i++;\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1721533555",
    "subm_id": "548399830"
}