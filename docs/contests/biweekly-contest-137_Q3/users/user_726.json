{
    "username": "Md Arham Ahmmad Adil",
    "submission": "using ll = long long;\n// vector<vector<map<vector<int>, ll>>> dp(101, vector<map<vector<int>, ll>>(4));\nll dp[101][4][102][102];\nclass Solution {\npublic:\n    int n, m;\n    long long maximumValueSum(vector<vector<int>>& bd) {\n        // long long ans = 0;\n        n = (int)bd.size(), m = (int)bd[0].size();\n        // for (int i = 0; i < n; i++) {\n        //     for (int j = 0; j <= 3; j++) dp[i][j].clear();\n        // }\n        for (int cnt = 0; cnt <= 2; cnt++) {\n            vector<int> col;\n            if (cnt == 0) {\n                dp[n][cnt][0][0] = -1e15;\n            } else if (cnt == 1) {\n                col.resize(1);\n                for (int i = 0; i < m; i++) {\n                    col[0] = i;\n                    dp[n][cnt][i+1][0] = -1e15;\n                }\n            } else if (cnt == 2) {\n                col.resize(2);\n                for (int j = 0; j < m; j++) {\n                    col[0] = j;\n                    for (int k = 0; k < m; k++) {\n                        if (k == j) continue;\n                        col[1] = k;\n                        dp[n][cnt][j+1][k+1] = -1e15;\n                    }\n                }\n            }\n        }\n        \n        for (int at = n-1; at >= 0; at--) {\n            for (int cnt = 0; cnt <= 2; cnt++) {\n                vector<int> col;\n                if (cnt == 0) {\n                    ll op1 = dp[at+1][0][0][0], op2 = -1e15;\n                    col.push_back(-1);\n                    for (int i = 0; i < m; i++) {\n                        col[0] = i;\n                        op2 = std::max(op2, dp[at+1][1][i+1][0] + bd[at][i]);\n                    }\n                    col.pop_back();\n                    dp[at][0][0][0] = std::max(op1, op2);\n                } else if (cnt == 1) {\n                    col.resize(1);\n                    for (int i = 0; i < m; i++) {\n                        col[0] = i;\n                        ll op1 = dp[at+1][1][i+1][0], op2 = -1e15;\n                        col.push_back(-1);\n                        for (int ii = 0; ii < m; ii++) {\n                            if (ii == col[0]) continue;\n                            col[1] = ii;\n                            op2 = std::max(op2, dp[at+1][2][i+1][ii+1] + bd[at][ii]);\n                        }\n                        col.pop_back();\n                        dp[at][1][i+1][0] = std::max(op1, op2);\n                    }\n                } else if (cnt == 2) {\n                    col.resize(2);\n                    for (int j = 0; j < m; j++) {\n                        col[0] = j;\n                        for (int k = 0; k < m; k++) {\n                            if (k == j) continue;\n                            col[1] = k;\n                            ll op1 = dp[at+1][2][j+1][k+1], op2 = -1e15;\n                            for (int i = 0; i < m; i++) {\n                                if (i == col[0]) continue;\n                                if (i == col[1]) continue;\n                                op2 = std::max(op2, (ll)bd[at][i]);\n                            }\n                            dp[at][2][j+1][k+1] = std::max(op1, op2);\n                        }\n                    }\n                }\n            }\n        }\n        vector<int> dum;\n        return dp[0][0][0][0];\n    }\n};",
    "submit_ts": "1723909155",
    "subm_id": "1359181698"
}