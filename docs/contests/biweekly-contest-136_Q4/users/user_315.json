{
    "username": "Anuj_Ag",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> g;\n    vector<int> dad;\n    int dfs(int cur, int par, vector<pair<int, int>>& ans, vector<pair<int, int>>& sb)\n    {\n        int p1 = 0, p2 = 0, i1 = -1, i2 = -1;\n        dad[cur] = par;\n        for(int i = 0; i < g[cur].size(); i++)\n        {\n            if(g[cur][i] != par)\n            {\n                int x = dfs(g[cur][i], cur, ans, sb);\n                if(x >= p1)\n                {\n                    i2 = i1;\n                    p2 = p1;\n                    i1 = g[cur][i];\n                    p1 = x;\n                }\n                else if(x > p2)\n                {\n                    i2 = g[cur][i];\n                    p2 = x;\n                }\n            }\n        }\n        ans[cur] = {p1, i1};\n        sb[cur] = {p2, i2};\n        if(cur%2 == 0)\n        {\n            return p1+2;\n        }    \n        else\n        {\n            return p1+1;\n        }\n    }\n    \n    int sol(int cur, int par, vector<int>& pos, vector<pair<int, int>>& ans, vector<pair<int, int>>& sb)\n    {\n        if(dad[cur] == -1)\n        {\n            pos[cur] = 0;\n        }\n        else if(pos[cur] == -1)\n        {\n            pos[cur] = sol(dad[cur], cur, pos, ans, sb);\n        }\n        int x = -1;\n        if(ans[cur].second != par)\n        {\n            x = max(ans[cur].first, pos[cur]);\n        }\n        else\n        {\n            x = max(sb[cur].first, pos[cur]);\n        }\n        if(cur%2 == 0)\n        {\n            return x+2;\n        }\n        else\n        {\n            return x+1;\n        }\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        g.resize(n);\n        dad.resize(n);\n        for(int i = 0; i < n-1; i++)\n        {\n            g[edges[i][0]].push_back(edges[i][1]);\n            g[edges[i][1]].push_back(edges[i][0]);\n        }\n        vector<pair<int, int>> ans(n, {-1, -1});\n        vector<pair<int, int>> sb(n, {-1, -1});\n        vector<int> pos(n, -1);\n        dfs(0, -1, ans, sb);\n        for(int i = 0; i < n; i++)\n        {\n            sol(i, -1, pos, ans, sb);\n        }\n        vector<int> out(n, 0);\n        for(int i = 0; i < n; i++)\n        {\n            out[i] = max(ans[i].first, pos[i]);\n        }\n        return out;\n    }\n};",
    "submit_ts": "1722700442",
    "subm_id": "1343242015"
}