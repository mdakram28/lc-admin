{
    "username": "user9512b",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        int nn = n / 2;\n        int mm = m / 2;\n\n        int count{0};\n\n        for (int i = 0; i < nn; i++){\n            for (int j = 0; j < mm; j++){\n                int ii = n - 1 - i;\n                int jj = m - 1 - j;\n                int c = grid[i][j] + grid[i][jj] + grid[ii][j] + grid[ii][jj];\n\n                count += min(c, 4 - c);\n            }\n        }\n\n\n        int change = 0;\n        int ones = 0;\n        if (n % 2 == 1){\n            for (int j = 0; j < mm; j++){\n                ones += 2 * grid[nn][j];\n                if (grid[nn][j] != grid[nn][m - 1 - j]){\n                    count++;\n                    change++;\n                }\n            }\n        }\n\n        if (m % 2 == 1){\n            for (int i = 0; i < nn; i++){\n                ones += 2 * grid[i][mm];\n                if (grid[i][mm] != grid[n - 1 - i][mm]){\n                    count++;\n                    change++;\n                }\n            }\n        }\n\n        if (n % 2 == 1 && m % 2 == 1){\n            if (grid[nn][mm] == 1){\n                count++;\n            }\n        }\n\n        if (ones % 4 != 0 && change == 0){\n            count += 2;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1722697546",
    "subm_id": "1343150450"
}