{
    "username": "qthon",
    "submission": "class Solution {\npublic:\n    int cal(vector<vector<int>>& grid, int x, int y, int x1, int y1) {\n        int left = y1, right = y, top = x1, bottom = x;\n        for(int i = x; i <= x1; i++) {\n            for(int j = y; j <= y1; j++) {\n                if(grid[i][j] == 1) {\n                    left = min(left, j);\n                    right = max(right, j);\n                    top = min(top, i);\n                    bottom = max(bottom, i);\n                }\n            }\n        }\n        return max(0, (right-left+1)*(bottom-top+1));\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = m*n;\n        for(int i = 0; i < m-1; i++) {\n            for(int j = 0; j < n-1; j++) {\n                int c1 = cal(grid, 0, 0, i, j);\n                int c2 = cal(grid, i+1, 0, m-1, j);\n                int c3 = cal(grid, 0, j+1, m-1, n-1);\n                ans = min(ans, c1+c2+c3);\n                int c4 = cal(grid, 0, j+1, i, n-1);\n                int c5 = cal(grid, i+1, 0, m-1, n-1);\n                ans = min(ans, c1+c4+c5);\n            }\n        }\n\n        for(int i = 0; i < m-1; i++) {\n            int c1 = cal(grid, 0, 0, i, n-1);\n            for(int k = i+1; k < m-1; k++) {\n                int c2 = cal(grid, i+1, 0, k, n-1);\n                int c3 = cal(grid, k+1, 0, m-1, n-1);\n                ans = min(ans, c1+c2+c3);\n            }\n            for(int k = 0; k < n-1; k++) {\n                int c2 = cal(grid, i+1, 0, m-1, k);\n                int c3 = cal(grid, i+1, k+1, m-1, n-1);\n                ans = min(ans, c1+c2+c3);\n            }\n        }\n\n        for(int j = 0; j < n-1; j++) {\n            int c1 = cal(grid, 0, 0, m-1, j);\n            for(int k = j+1; k < n-1; k++) {\n                int c2 = cal(grid, 0, j+1, m-1, k);\n                int c3 = cal(grid, 0, k+1, m-1, n-1);\n                ans = min(ans, c1+c2+c3);\n            }\n            for(int k = 0; k < m-1; k++) {\n                int c2 = cal(grid, 0, j+1, k, n-1);\n                int c3 = cal(grid, k+1, j+1, m-1, n-1);\n                ans = min(ans, c1+c2+c3);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719112684.0
}