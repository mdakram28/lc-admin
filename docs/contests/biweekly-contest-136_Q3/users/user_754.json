{
    "username": "yu-meng-tong-xing-d",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        \n        int diff_pair = 0;\n        int one_pair = 0;\n        \n        for(int i = 0; i < (m+1) / 2; i++)\n        {\n            for(int j = 0; j < (n+1) / 2; j++)\n            {\n                int x = grid[i][j], y = grid[m-1-i][j], a = grid[i][n-1-j], b = grid[m-1-i][n-1-j];\n                int cnt1 = (x == 1) + (y == 1) + (a == 1) + (b == 1);\n                int cnt0 = 4 - cnt1;\n                if(m-1-i != i && n-1-j != j)\n                    ans += (4 - max(cnt1, cnt0));\n            }\n        }\n        \n        if(m % 2)\n        {\n            int l = 0, r = n-1;\n            while(l < r)\n            {\n                diff_pair += (grid[m / 2][l] != grid[m/2][r]);\n                one_pair += (grid[m/2][l] == 1 && grid[m/2][r] == 1);\n                l++;\n                r--;\n            }\n        }\n        if(n % 2)\n        {\n            int l = 0, r = m-1;\n            while(l < r)\n            {\n                diff_pair += (grid[l][n/2] != grid[r][n/2]);\n                one_pair += (grid[l][n/2] == 1 && grid[r][n/2] == 1);\n                l++;\n                r--;\n            }   \n        }\n        ans += diff_pair;\n        if(diff_pair < one_pair % 2)\n            ans += 2;\n        if(m % 2 && n % 2)\n            ans += (grid[m/2][n/2] == 1);\n        return ans;\n    }\n};",
    "submit_ts": "1722698032",
    "subm_id": "552268984"
}