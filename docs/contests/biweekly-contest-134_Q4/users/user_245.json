{
    "username": "dong-fang-hr",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        ans = 0  \n        dict_list = self.log_trick(nums)  \n          \n        for d in dict_list:  \n            if k in d:  \n                start, end = d[k]  \n                ans += end - start + 1  \n          \n        return ans  \n      \n    # res[i] \u8868\u793a\u4ee5 i \u4e3a\u53f3\u7aef\u70b9\uff0c\u5de6\u4fa7\u4e0d\u540c AND \u503c\u7684\u533a\u95f4\u5217\u8868  \n    def log_trick(self, nums: List[int]) -> List[Dict[int, Tuple[int, int]]]:  \n        n = len(nums)  \n        res = [{} for _ in range(n)]  \n        res[0][nums[0]] = (0, 0)  \n          \n        for i in range(1, n):  \n            for prev_key, (start, end) in res[i-1].items():  \n                v_and = prev_key & nums[i]  \n                if v_and not in res[i]:  \n                    res[i][v_and] = (start, end)  \n                else:  \n                    res[i][v_and] = (min(res[i][v_and][0], start), max(res[i][v_and][1], end))  \n              \n            if nums[i] not in res[i]:  \n                res[i][nums[i]] = (i, i)  \n            else:  \n                res[i][nums[i]] = (res[i][nums[i]][0], i)  \n          \n        return res  ",
    "submit_ts": "1720278258",
    "subm_id": "544561599"
}