{
    "username": "Seannnn",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        N = len(nums)\n        ans = abs(nums[0]-k)\n        l, r, cur = 0, 0, nums[0]\n        bits = [0] * 32\n        for i in range(32):\n            if (1<<i)&nums[0]: bits[i]+=1\n        \n        while r < N or l < N:\n            if r == N:\n                for i in range(32):\n                    if (1<<i)&nums[l]:\n                        bits[i]-=1\n                        if bits[i] == r-l: cur += (1<<i)\n                l+=1\n#             elif l == r:\n#                 r+=1\n#                 if r != N:\n#                     for i in range(32):\n#                         if bits[i] == 1 and ((1<<i)&nums[r]) == 0: cur -= (1<<i)\n                        \n#                         if ((1<<i)&nums[r]) > 0: bits[i]+=1\n            else:\n                if cur > k or l == r: #add\n                    r+=1\n                    if r != N:\n                        for i in range(32):\n                            if bits[i] == r-l and ((1<<i)&nums[r]) == 0: cur -= (1<<i)\n                            \n                            # if bits[i] == 1 and ((1<<i)&nums[r]) == 0: cur -= (1<<i)\n\n                            if ((1<<i)&nums[r]) > 0: bits[i]+=1\n                else: #remove\n                    for i in range(32):\n                        if (1<<i)&nums[l]:\n                            bits[i]-=1\n                        else:\n                            if bits[i] == r-l: cur += (1<<i)\n                            \n                    l+=1\n            # print(l, r, cur, ans)\n            \n            ans = min(ans, abs(k-cur))\n        \n        return ans #?\n            ",
    "submit_ts": 1717299208.0
}