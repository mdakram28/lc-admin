{
    "username": "vinitsingh27",
    "submission": "// author Vinit kumar Singh\n\n#include <algorithm>\n#include <bits/stdc++.h>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n// #define int long long int\n#define math ma\n\nusing namespace std;\n\nstruct MinNode {\n    unordered_map<char, MinNode*> vinch;\n    vector<pair<int, int>> shrend; \n};\n\nclass ModTrie{\npublic:\n    MinNode* root;\n    ModTrie() { \n        root = new MinNode(); \n        }\n\n    void insert(string& word, int index, int cost) {\n        MinNode* node = root;\n        for (char ch : word) {\n            if (!node->vinch.count(ch))\n                node->vinch[ch] = new MinNode();\n            node = node->vinch[ch];\n        }\n        node->shrend.push_back({index, cost});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> vinq(n + 1, INT_MAX);\n        vinq[0] = 0;\n\n        ModTrie  saqw;\n        for (int i = 0; i < words.size(); ++i) {\n             saqw.insert(words[i], i, costs[i]);\n        }\n\n        buildvinq(vinq,  saqw, target, words, n);\n\n        return vinq[n] == INT_MAX ? -1 : vinq[n];\n    }\n\nprivate:\n    void buildvinq(vector<int>& vinq, ModTrie& saqw, string& target, vector<string>& words, int n) {\n        for (int i = 0; i < n; ++i)\n         {\n            if (vinq[i] == INT_MAX) continue;\n\n            MinNode* node =  saqw.root;\n            for (int j = i; j < n; ++j) \n            {\n                if (!node->vinch.count(target[j])) break;\n                node = node->vinch[target[j]];\n                for (auto& p : node->shrend) \n                {\n                    int a = p.first;\n                    int q = p.second;\n                    int we = words[a].size();\n                    if (i + we <= n) {\n                        vinq[i + we] = min(vinq[i + we], vinq[i] + q);\n                    }\n                }\n            }\n        }\n    }\n};\n\n\n",
    "submit_ts": "1720322890",
    "subm_id": "1312361813"
}