{
    "username": "himanshu140401",
    "submission": "class Solution {\npublic:\n    long long remove(vector<vector<int>>& points,int idx)\n    {\n         int n = points.size();\n        vector<pair<long long,int> >sum(n);\n        vector<pair<long long,int> >diff(n);\n        for(int i = 0;i<n;i++)\n        {\n            sum[i].first = points[i][0]+points[i][1];\n            diff[i].first = points[i][0]-points[i][1];\n            sum[i].second = diff[i].second = i;\n            \n        }\n        \n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        \n        return max(diff[n-1].first-diff[0].first,sum[n-1].first-sum[0].first);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<long long,int> >sum(n);\n        vector<pair<long long,int> >diff(n);\n        for(int i = 0;i<n;i++)\n        {\n            sum[i].first = points[i][0]+points[i][1];\n            diff[i].first = points[i][0]-points[i][1];\n            sum[i].second = diff[i].second = i;\n            \n        }\n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        if(diff[n-1].first-diff[0].first>sum[n-1].first-sum[0].first)\n        {\n            \n            vector<vector<int> > p,q;\n            for(int i = 0;i<n;i++)\n            {\n                if(i != diff[0].second)\n                {\n                    p.push_back(points[i]);\n                }\n                if(i != diff[n-1].second )\n                {\n                    q.push_back(points[i]);\n                }\n            }\n            long long s = min(diff[n-1].first-diff[0].first,\n                                min(remove(q,diff[n-1].second),remove(p,diff[0].second)));\n            return s;\n            \n        }else{\n            if(diff[n-1].first-diff[0].first == sum[n-1].first-sum[0].first)\n            {\n                    vector<vector<int> > p,q;\n            for(int i = 0;i<n;i++)\n            {\n                if(i != sum[0].second)\n                {\n                    p.push_back(points[i]);\n                }\n                if(i != sum[n-1].second )\n                {\n                    q.push_back(points[i]);\n                }\n            }\n            long long s = min(sum[n-1].first-sum[0].first,\n                                min(remove(q,sum[n-1].second),remove(p,sum[0].second)));\n                 vector<vector<int> > a,b;\n            for(int i = 0;i<n;i++)\n            {\n                if(i != diff[0].second)\n                {\n                    a.push_back(points[i]);\n                }\n                if(i != diff[n-1].second )\n                {\n                    b.push_back(points[i]);\n                }\n            }\n            long long temp = min(diff[n-1].first-diff[0].first,\n                                min(remove(b,diff[n-1].second),remove(a,diff[0].second)));\n                return min(temp,s);\n            }else{\n                 vector<vector<int> > p,q;\n            for(int i = 0;i<n;i++)\n            {\n                if(i != sum[0].second)\n                {\n                    p.push_back(points[i]);\n                }\n                if(i != sum[n-1].second )\n                {\n                    q.push_back(points[i]);\n                }\n            }\n            long long s = min(sum[n-1].first-sum[0].first,\n                                min(remove(q,sum[n-1].second),remove(p,sum[0].second)));\n            return s;\n            }\n        }\n        return 0;\n        \n    }\n};"
}