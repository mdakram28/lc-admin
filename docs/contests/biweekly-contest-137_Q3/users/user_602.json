{
    "username": "Alankrit Singh",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        vector<pair<long long,long long>>vec[n];\n        for(int i = 0; i< n;i++)\n        {\n            for(int j = 0;j < m;j++)\n            {\n                vec[i].push_back({board[i][j],j});\n            }\n            sort(vec[i].begin(), vec[i].end());\n        }\n        long long result = -3000000001;\n        for(int i = 0;i < n;i++)\n        {\n            for(int j = 0; j < n;j++)\n            {\n                for(int k = 0;k < n;k++)\n                {\n                    if(i != j && i!= k && j != k)\n                    {\n                        for(int c1 = m-3;c1 < m;c1++)\n                        {\n                            for(int c2 = m-3;c2 < m;c2++)\n                            {\n                                for(int c3 = m-3;c3 < m;c3++)\n                                {\n                                     if(vec[i][c1].second != vec[j][c2].second && vec[j][c2].second != vec[k][c3].second && vec[k][c3].second != vec[i][c1].second)\n                                     {\n                                        result = max(result, vec[i][c1].first + vec[j][c2].first + vec[k][c3].first);\n                                     }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n\n        \n    }\n};",
    "submit_ts": "1723909137",
    "subm_id": "1359181007"
}