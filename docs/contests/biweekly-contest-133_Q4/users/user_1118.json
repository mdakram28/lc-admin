{
    "username": "f20212215",
    "submission": "class Solution {\npublic:\n    \nconst int MOD = 1'000'000'007;\nconst int MAX_INVERSIONS = 400;\n// const int MOD = 1e9 + 7;    \n    int numberOfPermutations(int n, vector<vector<int>>& nums) {\n        vector<vector<long>> ppc(n + 1, vector<long>(MAX_INVERSIONS + 1, 0));\n        unordered_map<int, int> rmm;\n        for (auto& req : nums) {\n            rmm[req[0] + 1] = req[1];\n        }\n\n        \n        ppc[0][0] = 1;\n\n        int length = 1;\n        while (length <= n) {\n            int inv = 0;\n            while (inv <= MAX_INVERSIONS) {\n                int npp = 0;\n                while (npp < length) {\n                    int ppi = inv - npp;\n                    if (ppi < 0) {\n                    }\n                    else{\n                        ppc[length][inv] = (ppc[length][inv] + ppc[length - 1][ppi]) % MOD;\n                    }\n                    npp++;\n                }\n                inv++;\n            }\n\n            if (rmm.find(length) == rmm.end()) {\n                \n            }\n            else{\n                int tt = rmm[length];\n                inv = 0;\n                while (inv <= MAX_INVERSIONS) {\n                    if (inv == tt) {\n                        // ppc[length][inv] = 0;\n                    }\n                    else{\n                        ppc[length][inv] = 0;\n                    }\n                    inv++;\n                }\n            }\n            length++;\n        }\n\n        long ans = 0;\n        for (long cc : ppc[n]) {\n            ans = (ans + cc) % MOD;\n        }\n\n        return (int) ans;\n    }\n};",
    "submit_ts": 1719071787.0
}