{
    "username": "Simon Huang",
    "submission": "class Solution {\n    struct Cell {\n        long long value;\n        int row;\n        int col;\n    };\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        auto compare = [](const Cell &a, const Cell &b) {\n            return a.value > b.value;\n        };\n\n        vector<Cell> cells;\n        int n = board.size();\n        int m = board.front().size();\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                cells.push_back({ board[i][j], i, j});\n            }\n        }\n\n        sort(cells.begin(), cells.end(), compare);\n\n        long long ret = LLONG_MIN;\n        unordered_set<int> conflictRow;\n        unordered_set<int> conflictCol;\n\n        for (int i = 0; i < cells.size() - 2; i++) {\n            conflictRow.insert(cells[i].row);\n            conflictCol.insert(cells[i].col);\n\n            for (int j = i + 1; j < cells.size() - 1; j++) {\n                if (cells[i].value + cells[j].value * 2 <= ret) {\n                    break;\n                }\n\n                if (conflictRow.count(cells[j].row) || conflictCol.count(cells[j].col)) {\n                    continue;\n                }\n\n                conflictRow.insert(cells[j].row);\n                conflictCol.insert(cells[j].col);\n\n                for (int k = j + 1; k < cells.size(); k++) {\n                    if (cells[i].value + cells[j].value + cells[k].value <= ret) {\n                        break;\n                    }\n\n                    if (conflictRow.count(cells[k].row) || conflictCol.count(cells[k].col)) {\n                        continue;\n                    }\n\n                    ret = max(ret, cells[i].value + cells[j].value + cells[k].value);\n                }\n\n                conflictRow.erase(cells[j].row);\n                conflictCol.erase(cells[j].col);\n            }\n\n            conflictRow.erase(cells[i].row);\n            conflictCol.erase(cells[i].col);\n        }\n        \n        return ret;\n    }\n};",
    "submit_ts": "1723907958",
    "subm_id": "1359132032"
}