{
    "username": "xyzabcdef",
    "submission": "const int N = 100008;\nstruct segment_tree{\n    int t[N<<2];\n    void update(int v, int tl, int tr, int pos, int val){\n        if(tl == tr){\n            t[v] = val;\n            return;\n        }\n        int tm = (tl+tr)/2;\n        if(pos <= tm){\n            update(2*v, tl, tm, pos, val);\n        } else{\n            update(2*v+1, tm+1, tr, pos, val);\n        }\n        t[v] = t[2*v] + t[2*v+1];\n    }\n    int ask(int v, int tl, int tr, int l, int r){\n        if(l > r)return 0;\n        if(tl == l && tr == r){\n            return t[v];\n        }\n        int tm = (tl + tr)/2;\n        int ans = ask(2*v, tl, tm, l, min(r, tm));\n        ans += ask(2*v+1, tm+1, tr, max(l, tm+1), r);\n        return ans;\n    };\n}sgt;\nclass Solution {\npublic:\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        sgt.update(1, 0, n-1, 0, 0);\n        sgt.update(1, 0, n-1, n-1, 0);\n        vector<int>peak;\n        for(int i = 1; i+1 < n; i++){\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]){\n                sgt.update(1, 0, n-1, i, 1);\n            } else{\n                sgt.update(1, 0, n-1, i, 0);\n            }\n        }\n        // for(int i = 0 ;i < n; i++){\n        //     cout<<sgt.ask(1, 0, n-1, i, i)<<\" \";\n        // } cout<<'\\n';\n        vector<int>res;\n        for(auto q: queries){\n            if(q[0] == 2){\n                nums[q[1]] = q[2];\n                if(q[1] < (n-2)){\n                    if((nums[q[1]] < nums[q[1]+1]) && (nums[q[1]+1] > nums[q[1]+2])){\n                        sgt.update(1, 0, n-1, q[1]+1, 1);\n                    } else{\n                        sgt.update(1, 0, n-1, q[1]+1, 0);\n                    }\n                } \n                if(q[1] > 1){\n                    if((nums[q[1]] < nums[q[1]-1]) && (nums[q[1]-1] > nums[q[1]-2])){\n                        sgt.update(1, 0, n-1, q[1]-1, 1);\n                    } else{\n                        sgt.update(1, 0, n-1, q[1]-1, 0);\n                    }\n                } \n                if((q[1] > 0) && (q[1] < (n-1))){\n                    if(nums[q[1]] > nums[q[1]+1] && nums[q[1]] > nums[q[1]-1]){\n                        sgt.update(1, 0, n-1, q[1], 1);   \n                    } else{\n                        sgt.update(1, 0, n-1, q[1], 0);\n                    }\n                }\n            } else{\n                res.push_back(sgt.ask(1, 0, n-1, q[1]+1, q[2]-1));\n            }\n        }\n        // for(int i = 0 ;i < n; i++){\n        //     cout<<sgt.ask(1, 0, n-1, i, i)<<\" \";\n        // } cout<<'\\n';\n        return res;\n    }\n};",
    "submit_ts": "1718507679",
    "subm_id": "1289659176"
}