{
    "username": "kellensun",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        out = []\n        count = n-1\n        intervals = SortedList()\n        for query in queries:\n            intervals.add(query)\n            count -= query[1] - query[0] - 1\n            i = intervals.bisect_left([query[0], -1])\n            if i != len(intervals) -1:\n                if intervals[i+1][0] <= query[0] and intervals[i+1][1] >= query[1] and intervals[i+1] != query:\n                    count += query[1] - query[0] - 1\n                    intervals.remove(query)\n            if i!=0:\n                if intervals[i-1][0] <= query[0] and intervals[i-1][1] >= query[1] and intervals[i-1] != query:\n                    count += query[1] - query[0] - 1\n                    intervals.remove(query)\n            \n            while i<len(intervals):\n                if intervals[i] != query:\n                    if intervals[i][0] >= query[0] and intervals[i][1] <= query[1]:\n                        count += intervals[i][1] - intervals[i][0] -1\n                        intervals.remove(intervals[i])\n                        i-=1\n                    if intervals[i][1] > query[1]: break                        \n                i+=1\n           # print(intervals)\n            out.append(count)\n        return out",
    "submit_ts": "1722742009",
    "subm_id": "1343758778"
}