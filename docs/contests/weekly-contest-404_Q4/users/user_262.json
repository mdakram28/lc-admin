{
    "username": "U7KARSH",
    "submission": "class Solution {\npublic:\n    void dfs(int s, int x, vector<int> &vis, vector<vector<int>> &g, vector<int> &dis)\n{\n    vis[s] = 1;\n    dis[s] = x;\n    for (size_t i = 0; i < g[s].size(); i++)\n    {\n        if(!vis[g[s][i]])\n        {\n            dfs(g[s][i], x+1, vis, g, dis);\n        }\n    }\n    \n}\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size() + 1, m = edges2.size() + 1;\n        vector<vector<int>> g1(n), g2(m);\n\n        for (size_t i = 0; i < edges1.size(); i++) {\n            g1[edges1[i][0]].push_back(edges1[i][1]);\n            g1[edges1[i][1]].push_back(edges1[i][0]);\n        }\n\n        for (size_t i = 0; i < edges2.size(); i++) {\n            g2[edges2[i][0]].push_back(edges2[i][1]);\n            g2[edges2[i][1]].push_back(edges2[i][0]);\n        }\n\n        vector<int> dis1(n, 0), vis1(n, 0), dis2(m, 0), vis2(m, 0);\n\n        dfs(0, 0, vis1, g1, dis1);\n        int a,b,c,d;\n        b = 0;\n        for (int i = 0; i < n; i++) \n        {\n            if (dis1[i] > dis1[b]) \n            {\n                b = i;\n            }\n        }\n\n        fill(vis1.begin(), vis1.end(), 0);\n        dfs(b, 0, vis1, g1, dis1);\n        a = 0;\n        for (int i = 0; i < n; i++) \n        {\n            a = max(dis1[i], a);\n        }\n\n        dfs(0, 0, vis2, g2, dis2);\n        d = 0;\n        for (int i = 0; i < m; i++) \n        {\n            if (dis2[i] > dis2[d]) \n            {\n                d = i;\n            }\n        }\n        fill(vis2.begin(), vis2.end(), 0);\n        dfs(d, 0, vis2, g2, dis2);\n        c = 0;\n        for (int i = 0; i < m; i++) {\n            c = max(dis2[i], c);\n        }\n        int ans = max(a,c);\n        a++;\n        c++;\n        a = a/2 + 1;\n        c = c/2 + 1;\n        a += c;\n        a--;\n        ans = max(ans, a);\n        return ans;\n    }\n};\n",
    "submit_ts": 1719718164.0
}