{
    "username": "3FrenchOmelettes",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points)\n    {\n        vector<long long> sums;\n        vector<long long> diffs;\n        int n = points.size();\n        for (int i = 0; i < n; i++)\n        {\n            sums.push_back(points[i][0]+points[i][1]);\n            diffs.push_back(points[i][0]-points[i][1]);\n        }\n        \n        std::sort(sums.begin(), sums.end());\n        std::sort(diffs.begin(), diffs.end());\n        \n        int ans = INT_MAX;\n        \n        for (int i = 0; i < n; i++)\n        {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            int hi = sums[n-1] == sum ? n-2 : n-1;\n            int lo = sums[0] == sum ? 1 : 0;\n            \n            long long sub = sums[hi] - sums[lo];\n            \n            hi = diffs[n-1] == diff ? n-2 : n-1;\n            lo = diffs[0] == diff ? 1 : 0;\n            \n            sub = max(sub, diffs[hi] - diffs[lo]);\n            \n            ans = min(ans, (int) sub);\n        }\n        \n        return ans;\n    }\n};"
}