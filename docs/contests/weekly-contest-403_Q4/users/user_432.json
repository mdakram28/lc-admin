{
    "username": "woaixuexi-6",
    "submission": "class Solution {\npublic:\n    int rlf[35][35][35][35], rrg[35][35][35][35], rtp[35][35][35][35], rdn[35][35][35][35];\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        vector<vector<int> > v1(m, vector<int>(n, 0));\n        vector<vector<int> > v2(m, vector<int>(n, 1000));\n        vector<vector<int> > v3(m, vector<int>(n, 1000));\n\n        for(int i = 0; i < m; i++)\n            for(int j = 0; j < n; j++)\n            {\n                for(int k = i; k < m; k++)\n                    for(int t = j; t < n; t++)\n                    {\n                        rlf[i][j][k][t] = rtp[i][j][k][t] = 10000;\n                        rrg[i][j][k][t] = rdn[i][j][k][t] = -1;\n                        if(grid[k][t] == 1)\n                        {\n                            rlf[i][j][k][t] = rrg[i][j][k][t] = t;\n                            rtp[i][j][k][t] = rdn[i][j][k][t] = k;\n                        }\n                        if(k > i)\n                        {\n                            rlf[i][j][k][t] = min(rlf[i][j][k][t], rlf[i][j][k - 1][t]);\n                            rrg[i][j][k][t] = max(rrg[i][j][k][t], rrg[i][j][k - 1][t]);\n                            rtp[i][j][k][t] = min(rtp[i][j][k][t], rtp[i][j][k - 1][t]);\n                            rdn[i][j][k][t] = max(rdn[i][j][k][t], rdn[i][j][k - 1][t]);\n                        }\n                        if(t > j)\n                        {\n                            rlf[i][j][k][t] = min(rlf[i][j][k][t], rlf[i][j][k][t - 1]);\n                            rrg[i][j][k][t] = max(rrg[i][j][k][t], rrg[i][j][k][t - 1]);\n                            rtp[i][j][k][t] = min(rtp[i][j][k][t], rtp[i][j][k][t - 1]);\n                            rdn[i][j][k][t] = max(rdn[i][j][k][t], rdn[i][j][k][t - 1]);\n                        }\n                    }\n            }\n\n        int lf = -1, rg = -1, tp = -1, dn = -1;\n        for(int i = 0; i < m; i++)\n        {\n            for(int j = 0; j < n; j++)\n            {\n                lf = rg = tp = dn = -1;\n                for(int k = 0; k <= i; k++)\n                    for(int t = 0; t <= j; t++)\n                        if(grid[k][t] == 1)\n                        {\n                            lf = (lf == -1) ? t : min(lf, t);\n                            rg = (rg == -1) ? t : max(rg, t);\n                            tp = (tp == -1) ? k : min(tp, k);\n                            dn = (dn == -1) ? k : max(dn, k);\n                        }\n                if(lf != -1)\n                    v1[i][j] = (rg - lf + 1) * (dn - tp + 1);\n            }\n        }\n        // for(int i = 0; i < m; i++)\n        // {\n        //     for(int j = 0; j < n; j++)\n        //         cout << v1[i][j] << \" \";\n        //     cout << endl;\n        // }\n\n        for(int i = 0; i < m; i++)\n        {\n            for(int j = 0; j < n; j++)\n            {\n                lf = rg = tp = dn = -1;\n                for(int k = i; k >= 0; k--)\n                {\n                    for(int t = 0; t <= j; t++)\n                    {\n                        if(grid[k][t] == 1)\n                        {\n                            lf = (lf == -1) ? t : min(lf, t);\n                            rg = (rg == -1) ? t : max(rg, t);\n                            tp = (tp == -1) ? k : min(tp, k);\n                            dn = (dn == -1) ? k : max(dn, k);\n                        }\n                    }\n                    int val = (k - 1 >= 0) ? v1[k - 1][j] : 0;\n                    val += (lf == -1) ? 0 : (rg - lf + 1) * (dn - tp + 1);\n                    v2[i][j] = min(v2[i][j], val);\n                }\n\n                lf = rg = tp = dn = -1;\n                for(int k = j; k >= 0; k--)\n                {\n                    for(int t = 0; t <= i; t++)\n                    {\n                        if(grid[t][k] == 1)\n                        {\n                            lf = (lf == -1) ? k : min(lf, k);\n                            rg = (rg == -1) ? k : max(rg, k);\n                            tp = (tp == -1) ? t : min(tp, t);\n                            dn = (dn == -1) ? t : max(dn, t);\n                        }\n                    }\n                    int val = (k - 1 >= 0) ? v1[i][k - 1] : 0;\n                    val += (lf == -1) ? 0 : (rg - lf + 1) * (dn - tp + 1);\n                    v2[i][j] = min(v2[i][j], val);\n                }\n            }\n        }\n        // for(int i = 0; i < m; i++)\n        // {\n        //     for(int j = 0; j < n; j++)\n        //         cout << v2[i][j] << \" \";\n        //     cout << endl;\n        // }\n\n        for(int i = 0; i < m; i++)\n        {\n            for(int j = 0; j < n; j++)\n            {\n                lf = rg = tp = dn = -1;\n                for(int k = i; k >= 0; k--)\n                {\n                    for(int t = 0; t <= j; t++)\n                    {\n                        if(grid[k][t] == 1)\n                        {\n                            lf = (lf == -1) ? t : min(lf, t);\n                            rg = (rg == -1) ? t : max(rg, t);\n                            tp = (tp == -1) ? k : min(tp, k);\n                            dn = (dn == -1) ? k : max(dn, k);\n                        }\n                    }\n                    int val = (k - 1 >= 0) ? v2[k - 1][j] : 0;\n                    val += (lf == -1) ? 0 : (rg - lf + 1) * (dn - tp + 1);\n                    v3[i][j] = min(v3[i][j], val);\n                }\n\n                lf = rg = tp = dn = -1;\n                for(int k = j; k >= 0; k--)\n                {\n                    for(int t = 0; t <= i; t++)\n                    {\n                        if(grid[t][k] == 1)\n                        {\n                            lf = (lf == -1) ? k : min(lf, k);\n                            rg = (rg == -1) ? k : max(rg, k);\n                            tp = (tp == -1) ? t : min(tp, t);\n                            dn = (dn == -1) ? t : max(dn, t);\n                        }\n                    }\n                    int val = (k - 1 >= 0) ? v2[i][k - 1] : 0;\n                    val += (lf == -1) ? 0 : (rg - lf + 1) * (dn - tp + 1);\n                    v3[i][j] = min(v3[i][j], val);\n                }\n\n                for(int k = i; k >= 0; k--)\n                {\n                    for(int t = j; t >= 0; t--)\n                    {\n                        int val = (rrg[k][t][i][j] == -1) ? 0 : (rrg[k][t][i][j] - rlf[k][t][i][j] + 1) * (rdn[k][t][i][j] - rtp[k][t][i][j] + 1);\n                        int tt1 = (k == 0 || rrg[0][t][k - 1][j] == -1) ? 0 : (rrg[0][t][k - 1][j] - rlf[0][t][k - 1][j] + 1) * (rdn[0][t][k - 1][j] - rtp[0][t][k - 1][j] + 1);\n                        int tt2 = (t - 1 >= 0) ? v1[i][t - 1] : 0;\n                        v3[i][j] = min(v3[i][j], val + tt1 + tt2);\n\n                        int th1 = (t == 0 || rrg[k][0][i][t - 1] == -1) ? 0 : (rrg[k][0][i][t - 1] - rlf[k][0][i][t - 1] + 1) * (rdn[k][0][i][t - 1] - rtp[k][0][i][t - 1] + 1);\n                        int th2 = (k - 1 >= 0) ? v1[k - 1][j] : 0;\n                        v3[i][j] = min(v3[i][j], val + th1 + th2);\n                    }\n                }\n            }\n        }\n        // for(int i = 0; i < m; i++)\n        // {\n        //     for(int j = 0; j < n; j++)\n        //         cout << v3[i][j] << \" \";\n        //     cout << endl;\n        // }\n\n        return v3[m - 1][n - 1];\n    }\n};",
    "submit_ts": 1719114138.0
}