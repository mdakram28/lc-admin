{
    "username": "Gyan__0149",
    "submission": "\nclass Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        std::map<int, std::vector<int>> differenceMap; // Map to store differences and their associated values\n        std::vector<int> maxValues;\n\n        int n = nums.size();\n        for (int i = 0; i < n / 2; ++i) {\n            int leftValue = nums[i];\n            int rightValue = nums[n - i - 1];\n            int diff = std::abs(leftValue - rightValue);\n\n            int maxValue = std::max({leftValue, rightValue, k - leftValue, k - rightValue});\n\n            differenceMap[diff].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n\n        int minChangesRequired = n;\n        std::sort(maxValues.begin(), maxValues.end());\n\n        for (const auto& [diff, values] : differenceMap) {\n            int changesCount = std::lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            changesCount = changesCount * 2 + (n / 2 - changesCount);\n\n            for (const auto& value : values) {\n                if (value < diff) {\n                    changesCount -= 2;\n                } else {\n                    changesCount -= 1;\n                }\n            }\n\n            minChangesRequired = std::min(minChangesRequired, changesCount);\n        }\n\n        return minChangesRequired;\n    }\n};\n",
    "submit_ts": "1721489272",
    "subm_id": "1327448255"
}