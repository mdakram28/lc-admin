{
    "username": "inotwant",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        long[][] arr = new long[4][4];\n        for (int i = 0; i < 4; i++) {\n            arr[i][0] = Long.MIN_VALUE;\n            arr[i][2] = Long.MAX_VALUE;\n        }\n        int len = points.length;\n        for (int i = 0; i < len; i++) {\n            long x = points[i][0];\n            long y = points[i][1];\n            long s = x + y;\n            help(arr, s, i, 0);\n            s = x - y;\n            help(arr, s, i, 1);\n            s = -x + y;\n            help(arr, s, i, 2);\n            s = -x - y;\n            help(arr, s, i, 3);\n        }\n        long max = -1;\n        int pos1 = -1;\n        int pos2 = -1;\n        for (int i = 0; i < 4; i++) {\n            long v = arr[i][0] - arr[i][2];\n            if (v > max) {\n                max = v;\n                pos1 = (int) arr[i][1];\n                pos2 = (int) arr[i][3];\n            }\n        }\n\n        int[][] p1 = new int[len - 1][2];\n        int index = 0;\n        for (int i = 0; i < len; i++) {\n            if (i != pos1) p1[index++] = points[i];\n        }\n        index = 0;\n        int[][] p2 = new int[len - 1][2];\n        for (int i = 0; i < len; i++) {\n            if (i != pos2) p2[index++] = points[i];\n        }\n\n        return (int) Long.min(max(p1), max(p2));\n    }\n\n\n    public int max(int[][] points) {\n        long[][] arr = new long[4][4];\n        for (int i = 0; i < 4; i++) {\n            arr[i][0] = Long.MIN_VALUE;\n            arr[i][2] = Long.MAX_VALUE;\n        }\n        int len = points.length;\n        for (int i = 0; i < len; i++) {\n            long x = points[i][0];\n            long y = points[i][1];\n            long s = x + y;\n            help(arr, s, i, 0);\n            s = x - y;\n            help(arr, s, i, 1);\n            s = -x + y;\n            help(arr, s, i, 2);\n            s = -x - y;\n            help(arr, s, i, 3);\n        }\n        long max = -1;\n        for (int i = 0; i < 4; i++) {\n            max = Long.max(max, arr[i][0] - arr[i][2]);\n        }\n        return (int) max;\n    }\n\n    private void help(long[][] arr, long s, int i, int index) {\n        if (s > arr[index][0]) {\n            arr[index][0] = s;\n            arr[index][1] = i;\n        }\n        if (s < arr[index][2]) {\n            arr[index][2] = s;\n            arr[index][3] = i;\n        }\n    }\n}"
}