{
    "username": "fsyun",
    "submission": "import sys\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        sys.set_int_max_str_digits(100001)\n        if n == 1:\n            return str((0, 9, 8, 9, 8, 5, 6, 7, 8, 9)[k])\n        if n % 2 == 0:\n            x = 1\n            for i in range(n // 2):\n                x *= 10\n            x -= 1\n            if k == 4 and n >= 10:\n                x = int('88' + str(x)[2:])\n            elif k == 8 and n >= 10:\n                x = int('888' + str(x)[3:])\n            elif k % 2 == 0:\n                x = int('8' + str(x)[1:])\n            elif k == 5:\n                x = int('5' + str(x)[1:])\n            while True:\n                x2 = int(str(x) + str(x)[::-1])\n                if x2 % k == 0:\n                    return str(x2)\n                x -= 1\n        else:\n            x = 1\n            for i in range(n // 2 + 1):\n                x *= 10\n            x -= 1\n            if k == 4 and n >= 10:\n                x = int('88' + str(x)[2:])\n            elif k == 8 and n >= 10:\n                x = int('888' + str(x)[3:])\n            elif k % 2 == 0:\n                x = int('8' + str(x)[1:])\n            elif k == 5:\n                x = int('5' + str(x)[1:])\n            while True:\n                x2 = int(str(x) + str(x)[::-1][1:])\n                if x2 % k == 0:\n                    return str(x2)\n                x -= 1\n        ",
    "submit_ts": "1723950878",
    "subm_id": "1359757417"
}