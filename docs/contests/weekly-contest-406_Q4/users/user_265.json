{
    "username": "jiang-hu-xiao-miao",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        // Sort the cuts in descending order\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        int hIndex = 0, vIndex = 0;\n        long long totalCost = 0;\n        int horizontalPieces = 1, verticalPieces = 1;\n        \n        // Alternate between horizontal and vertical cuts\n        while (hIndex < horizontalCut.size() || vIndex < verticalCut.size()) {\n            if (hIndex < horizontalCut.size() && (vIndex >= verticalCut.size() || horizontalCut[hIndex] > verticalCut[vIndex])) {\n                totalCost += static_cast<long long>(horizontalCut[hIndex]) * verticalPieces;\n                horizontalPieces++;\n                hIndex++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[vIndex]) * horizontalPieces;\n                verticalPieces++;\n                vIndex++;\n            }\n        }\n        \n        return totalCost;\n        \n    }\n};",
    "submit_ts": "1720925043",
    "subm_id": "546436438"
}