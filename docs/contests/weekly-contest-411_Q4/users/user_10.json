{
    "username": "hhhyyyfff",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string str, int k, vector<vector<int>>& queries) {\n        int n = str.length(), c0 = 0, c1 = 0;\n        vector<int> vc(n);\n        vector<long long> s(n);\n        for (int i = 0, j = 0; i < n; ++i) {\n            while (j < n && min(c0 + (str[j] == '0'),\n                    c1 + (str[j] == '1')) <= k) {\n                if (str[j] == '0') ++c0; else ++c1;\n                ++j;\n            }\n            vc[i] = j;\n            s[i] = (j - i) + (i ? s[i - 1] : 0);\n            if (str[i] == '0') --c0; else --c1;\n        }\n        vector<long long> ans;\n        for (auto& i : queries) {\n            int j = i[0];\n            if (vc[j] > i[1]) {\n                ans.push_back((i[1] - i[0] + 2ll) * (i[1] - i[0] + 1) / 2);\n                continue;\n            }\n            for (int k = 16; k >= 0; --k)\n                if (j + (1 << k) - 1 <= i[1] &&\n                        vc[j + (1 << k) - 1] <= i[1])\n                    j += 1 << k;\n            ans.push_back(s[j - 1] - (i[0] ? s[i[0] - 1] : 0) +\n                    (i[1] - j + 2ll) * (i[1] - j + 1) / 2);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950094",
    "subm_id": "556396891"
}