{
    "username": "Saket",
    "submission": "class Solution {\nprivate:\n    long long solve(int ind, int lp1, int lp2, vector<vector<pair<int,int>>>& board, int rem, vector<vector<vector<vector<long long>>>>& dp,int m){\n        if(rem==0) return 0;\n        if(ind==board.size()) return -1e18;\n        if(dp[ind][lp1][lp2][rem]!=-1) return dp[ind][lp1][lp2][rem];\n        // int m=board[0].size();\n        long long ans=solve(ind+1,lp1, lp2, board,rem,dp,m);\n        for(int j=0; j<3; j++){\n            if(board[ind][j].second==lp1 || board[ind][j].second==lp2) continue;\n            int lp1_=lp1, lp2_=lp2;\n            if(lp1==m) lp1_=board[ind][j].second;\n            else if(lp2==m) lp2_=board[ind][j].second;\n            ans=max(ans,(long long)board[ind][j].first+solve(ind+1,lp1_,lp2_,board,rem-1,dp,m));\n        }\n\n        return dp[ind][lp1][lp2][rem]=ans;\n    }\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<pair<int,int>>> b;\n        int n=board.size();\n        int m=board[0].size();\n        for(int i=0; i<n; i++){\n            vector<pair<int,int>> c(3,{INT_MIN,-1});\n            for(int j=0; j<m; j++){\n                if(board[i][j]>=c[0].first){\n                    c[2]=c[1];\n                    c[1]=c[0];\n                    c[0]={board[i][j],j};\n                }else if(board[i][j]>=c[1].first){\n                    c[2]=c[1];\n                    c[1]={board[i][j],j};\n                }else if(board[i][j]>=c[2].first){\n                    c[2]={board[i][j],j};\n                }\n            }\n            b.push_back(c);\n            // for(auto x:c) cout<<x.first<<\" \"<<x.second<<\" \";\n            // cout<<endl;\n        }\n        vector<vector<vector<vector<long long>>>> dp(n+1,vector<vector<vector<long long>>>(m+1,vector<vector<long long>>(m+1,vector<long long>(4,-1))));\n        return solve(0,m,m,b,3,dp,m);\n    }\n};",
    "submit_ts": "1723908944",
    "subm_id": "1359173433"
}