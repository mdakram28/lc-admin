{
    "username": "dmitrii_bokovikov",
    "submission": "class Solution {\npublic:\nint minChanges(vector<int>& nums, int k) {\n    const int n = size(nums);\n    unordered_map<int, int> diff;\n    vector<int> v(k + 3);\n    for (int i = 0; i < n / 2; ++i) {\n        const int maxValue = max(\n            k - min(nums[n - i - 1], nums[i]),\n            max(nums[n - i - 1], nums[i]));\n        ++v[maxValue + 1];\n        ++diff[abs(nums[n - i - 1] - nums[i])];\n    }\n    for (int i = k + 1; i >= 0; --i) {\n        v[i] += v[i + 1];\n    }\n    int ans = INT_MAX;\n    for (int i = 0; i <= k; ++i) {\n        const auto oneChange = v[i + 1];\n        const auto twoChanges = n / 2 - v[i + 1];\n        ans = min(ans, oneChange + twoChanges * 2 - diff[i]);\n    }\n    return ans;\n}\n};",
    "submit_ts": "1721489760",
    "subm_id": "1327462891"
}