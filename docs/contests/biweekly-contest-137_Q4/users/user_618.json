{
    "username": "Khloe Ramdhan",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n, m = len(board), len(board[0])\n        heap = []\n\n        def findSpots(leftover, rows, cols, limit):\n            best = float('-inf')\n            for i in range(limit + 1, len(heap)):\n                score, x, y = heap[i]\n                if x not in rows and y not in cols:\n                    if leftover > 1:\n                        rows.add(x)\n                        cols.add(y)\n                        tmp = score + findSpots(leftover - 1, rows, cols, i)\n                        rows.remove(x)\n                        cols.remove(y)\n                        if tmp < best:\n                            return best\n                        else:\n                            best = tmp\n                    else:\n                        return score\n\n            return best\n\n\n        best = float('-inf')\n        for i in range(n):\n            for j in range(m):\n                heap.append((board[i][j], i, j))\n\n        heap.sort(key=lambda x: (-x[0]))\n                \n        for i in range(min(n * m, 5)):\n            tmp = heap[i][0] + findSpots(2, {heap[i][1]}, {heap[i][2]}, i)\n            if tmp == float('-inf') or (tmp < 0 and best > 0):\n                return best\n            else:\n                best = max(tmp, best)\n\n        return best ",
    "submit_ts": "1723909826",
    "subm_id": "1359207225"
}