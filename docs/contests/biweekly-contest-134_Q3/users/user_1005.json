{
    "username": "Siddharth_Joshi",
    "submission": "#define f first\n#define s second\n#define pb push_back\n#define all(x) x.begin(),x.end()\n#define sz(x) (long long)(x).size()\n#define pii pair<long long,long long>\n\ntemplate <class T> class SegmentTree {\n  private:\n    const T DEFAULT =0;\n    vector<T> segtree;\n    int len;\n\n  public:\n        T f(T a, T b) { return a+b; }\n    SegmentTree(int len) : len(len), segtree(len * 2, DEFAULT) {}\n    void set(int ind, T val) {\n        ind += len;\n        segtree[ind] = val;\n        for (; ind > 1; ind /= 2) {\n            segtree[ind / 2] = f(segtree[ind], segtree[ind ^ 1]);\n        }\n    }\n    T range(int start, int end) {\n        T sum = DEFAULT;\n        for (start += len, end += len; start < end; start /= 2, end /= 2) {\n            if (start % 2 == 1) { sum = f(sum, segtree[start++]); }\n            if (end % 2 == 1) { sum = f(sum, segtree[--end]); }\n        }\n        return sum;\n    }\n};\n\nclass Solution {\npublic:\n    long long numberOfAlternatingGroups(vector<int> colors, int k) {\n        long long n = sz(colors);\n        for (long long i = 0; i < n; i++) {\n            colors.pb(colors[i]);\n        }\n        int n2=sz(colors);\n        SegmentTree<int> seg(n2);\n        for(int i=0;i<n2-1;i++){\n            if(colors[i]!=colors[i+1]){\n                seg.set(i,1);\n            }\n        }\n        int ans=0;\n        for(int i=0;i<n;i++){\n            if(seg.range(i,i+k-1)==k-1){\n                ans++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278476",
    "subm_id": "1311710838"
}