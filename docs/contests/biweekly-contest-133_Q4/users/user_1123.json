{
    "username": "Corporate_ka_Majdoor",
    "submission": "\nclass Solution {\npublic:\n    #define ll long long int\n\n    const ll MOD = 1e9 + 7;\n    const ll MAX_INVERSIONS = 400;\n     ll perm_counts[301][401];\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<ll, ll> req_map;\n        \n        \n        for (vector<int> req : requirements) {\n            req_map[req[0] + 1] = req[1];\n        }\n\n       \n        memset(perm_counts, 0, sizeof(perm_counts));\n        perm_counts[0][0] = 1;\n\n       for (ll length = 1; length <= n; ++length) {\n            for (ll inv_count = 0; inv_count <= MAX_INVERSIONS; ++inv_count) {\n                perm_counts[length][inv_count] = 0; \n                for (ll new_pos = 0; new_pos < length && inv_count - new_pos >= 0; ++new_pos) {\n                    perm_counts[length][inv_count] = (perm_counts[length][inv_count] + perm_counts[length - 1][inv_count - new_pos]) % MOD;\n                }\n            }\n\n            if (req_map.find(length) != req_map.end()) {\n                ll target_inv = req_map[length];\n                for (ll inv_count = 0; inv_count <= MAX_INVERSIONS; ++inv_count) {\n                    if (inv_count != target_inv) {\n                        perm_counts[length][inv_count] = 0;\n                    }\n                }\n            }\n        }\n\n        ll result = 0;\n        for (ll count = 0; count <= MAX_INVERSIONS; ++count) {\n            result = (result + perm_counts[n][count]) % MOD;\n        }\n\n        return (result);\n    }\n};",
    "submit_ts": "1719071818",
    "subm_id": "1296854839"
}