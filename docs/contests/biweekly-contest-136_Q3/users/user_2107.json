{
    "username": "master_procastinator",
    "submission": "class Solution {\npublic:\n    int p = 0, cnt = 0;\n    void rowScore(vector<vector<int>> &grid, int &res){\n        //int p = 0, cnt = 0;\n        int n = grid.size(), m = grid[0].size();\n        for(int j=0; j<m/2; j++){\n            if(grid[n/2][j] != grid[n/2][m-j-1]){\n                res++;\n                p++;\n            }\n            else{\n                if(grid[n/2][j] != 0){\n                    cnt++;\n                }\n                else{\n                    continue;\n                }\n            }\n        }\n    }\n\n    void colScore(vector<vector<int>> &grid, int &res){\n        //int p = 0, cnt = 0;\n        int n = grid.size(), m = grid[0].size();\n        for(int i=0; i<n/2; i++){\n            if(grid[i][m/2] != grid[n-i-1][m/2]){\n                res++;\n                p++;\n            }\n            else{\n                if(grid[i][m/2] != 0){\n                    cnt++;\n                }\n                else{\n                    continue;\n                }\n            }\n        }\n    }\n\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), res = 0;\n        for(int i=0; i<n/2; i++){\n            for(int j=0; j<m/2; j++){\n                int currOnes = 0;\n                currOnes += grid[i][j];\n                currOnes += grid[n-i-1][j];\n                currOnes += grid[i][m-j-1];\n                currOnes += grid[n-i-1][m-j-1];\n\n                res += min(max(0,4-currOnes), currOnes);\n            }\n        }\n\n        if(n%2 == 1){\n            rowScore(grid, res);\n        }\n        if(m%2 == 1){\n            colScore(grid, res);\n        }\n\n        res += 2*(p==0 && cnt%2);\n\n        if(n%2 && m%2 && grid[n/2][m/2]){\n            res += 1;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722700234",
    "subm_id": "1343235682"
}