{
    "username": "HalleysComet",
    "submission": "class Solution {\npublic:\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int q = queries.size();\n        int distance = n - 1;\n        vector<int> erased(n, 0);\n        vector<int> ans;\n\n        set<pair<int, int>> st;\n        for(int i = 0; i < n - 1; i++)\n            st.insert({i, i + 1});\n\n        for(int i = 0; i < q; i++)\n        {\n            int u = queries[i][0], v = queries[i][1];\n\n            auto it = st.lower_bound({u, v});\n            if(it->first == u)\n            {\n                ans.push_back((int)st.size());\n                continue;\n            }\n\n            if(it == st.begin())\n            {\n\n            }\n            else\n            {\n                it--;\n                if(it->second >= v)\n                {\n                    ans.push_back((int)st.size());\n                    continue;\n                }\n                it++;\n            }\n\n            int current = 0;\n            it = st.lower_bound({u, 0});\n            for(auto itr = it; itr != st.cend();) {\n                if(itr->first >= v)\n                    break;\n                itr = st.erase(itr);\n                // if (current % 2 == 0) {\n                //     // cout << st.size() << endl;\n                //     // cout << st.size() << endl;\n                //     cout << \"Worked\" << endl;\n                //     current++;\n                // } else\n                // {\n                //     ++itr;\n                //     current++;\n                // }\n            }\n            st.insert({u, v});\n            ans.push_back((int)st.size());\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743682",
    "subm_id": "1343797297"
}