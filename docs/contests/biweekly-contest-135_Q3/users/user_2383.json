{
    "username": "pavan-416",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        difference_count = defaultdict(int)\n        left, right = 0, len(nums) - 1\n        while left < right:\n            difference_count[abs(nums[left] - nums[right])] += 1\n            left += 1\n            right -= 1\n        \n        max_frequency = max(difference_count.values())\n        common_differences = [diff for diff, freq in difference_count.items() if freq == max_frequency]\n        \n        for diff in common_differences:\n            del difference_count[diff]\n        if difference_count:\n            max_frequency = max(difference_count.values())\n            common_differences.extend([diff for diff, freq in difference_count.items() if freq == max_frequency])\n        \n        min_changes = float('inf')\n        for common_diff in common_differences:\n            left, right = 0, len(nums) - 1\n            changes = 0\n            while left < right:\n                diff = abs(nums[left] - nums[right])\n                if diff != common_diff:\n                    if abs(nums[left] - k) >= common_diff:\n                        changes += 1\n                    elif abs(nums[right] - k) >= common_diff:\n                        changes += 1\n                    elif nums[left] >= common_diff:\n                        changes += 1\n                    elif nums[right] >= common_diff:\n                        changes += 1\n                    else:\n                        changes += 2\n                left += 1\n                right -= 1\n            \n            min_changes = min(min_changes, changes)\n        return min_changes",
    "submit_ts": "1721490695",
    "subm_id": "1327490106"
}