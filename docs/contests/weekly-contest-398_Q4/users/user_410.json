{
    "username": "Binary_Sirius",
    "submission": "class Solution {\npublic:\n    int f(int jump, int d,int c, long long k, vector<vector<vector<int>>> &dp){\n        long long x=1;\n        for(int i=0;i<jump;i++){\n            long long y= pow(2,i);\n            x+=y;\n        }\n        x-=d;\n        if(k!=0 && x>=3*k)return 0;\n        if(k==0 && x>=3)return 0;\n        if(dp[jump][d][c]!=-1)return dp[jump][d][c];\n        int tot=0;\n        if(x==k)tot=1;\n        // cout<<x<<\" \"<<tot<<endl;\n        int p=0,np=0;\n        p= f(jump+1,d,0,k,dp);\n        if(c==0 && x!=0)np= f(jump,d+1,1,k,dp);\n        p+=np;\n        // cout<<tot<<\" \"<<p<<endl;\n        return dp[jump][d][c]=tot+p;\n        \n    }\n    int waysToReachStair(int k) {\n        vector<vector<vector<int>>> dp(35,vector<vector<int>>(50,vector<int>(2,-1)));\n        int ans=f(0,0,0,k,dp);\n        return ans;\n    }\n};",
    "submit_ts": "1716088432",
    "subm_id": "1261813795"
}