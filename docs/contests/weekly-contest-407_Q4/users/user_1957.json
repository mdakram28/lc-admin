{
    "username": "roylee0912",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        # Calculate the difference array\n        diffs = [target[i] - nums[i] for i in range(len(nums))]\n        all_subarrays=[]\n        curr_subarray=[]\n        for i in range(len(diffs)):\n            if diffs[i] == 0:\n                # If we encounter a zero, we close the current subarray and start a new one\n                if curr_subarray:\n                    all_subarrays.append(curr_subarray)\n                    curr_subarray = []\n            else:\n                if curr_subarray and (diffs[i] * curr_subarray[-1] < 0):\n                    # If we encounter a sign flip, we close the current subarray and start a new one\n                    all_subarrays.append(curr_subarray)\n                    curr_subarray = []\n                curr_subarray.append(diffs[i])\n        all_subarrays.append(curr_subarray)\n        \n\n        def min_operations(heights: list[int]) -> int:\n            if not heights:\n                return 0\n\n            operations = 0\n            prev_height = 0\n\n            for height in heights:\n                if height > prev_height:\n                    operations += height - prev_height\n                prev_height = height\n\n            return operations\n        res=0\n\n        for subarray in all_subarrays:\n            res+=(min_operations([abs(x) for x in subarray]))\n            \n        return res",
    "submit_ts": "1721532603",
    "subm_id": "1327989778"
}