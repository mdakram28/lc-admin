{
    "username": "inmihir",
    "submission": "class Solution {\n    vector<pair<int,int>> top2;\n    vector<int> ans;\n    int dfs(int ind, vector<vector<int>>& adjList, int parent = -1) {\n        for(int next: adjList[ind]) {\n            if(next != parent) {\n                int val = dfs(next, adjList, ind);\n                if(top2[ind].first <= val) {\n                    swap(top2[ind].first, top2[ind].second);\n                    top2[ind].first = val;\n                } else if(top2[ind].second <= val) {\n                    top2[ind].second = val;\n                }\n            }\n        }\n        if(top2[ind].first == INT_MIN) {\n            top2[ind].first = 0;\n        }\n\n        // cout << ind << \" \" << top2[ind].first << \" \" << top2[ind].second << \"\\n\";\n        return top2[ind].first + 2 - (ind % 2);\n    }\n\n    void reRoot(int ind, vector<vector<int>> &adjList, int parent = -1) {\n        // cout << ind << \" \" << top2[ind].first << \" \" << top2[ind].second << \"\\n\";\n        ans[ind] = top2[ind].first;\n        for(int next: adjList[ind]) {\n            if(next != parent) {\n                pair<int,int> undoInd = top2[ind];\n                pair<int,int> undoNext = top2[next];\n\n                int maxm = top2[next].first + 2 - (next % 2);\n\n                if(top2[ind].first == maxm) {\n                    top2[ind].first = max(0, top2[ind].second);\n                    top2[ind].second = INT_MIN;\n                }\n                \n                maxm = top2[ind].first + 2 - (ind % 2);\n                // cout << next << \": \" << maxm << \"\\n\";\n\n                if(top2[next].first <= maxm) {\n                    swap(top2[next].first, top2[next].second);\n                    top2[next].first = maxm;\n                } else if(top2[next].second <= maxm) {\n                    top2[next].second = maxm;\n                }\n\n                reRoot(next, adjList, ind);\n\n                top2[ind] = undoInd;\n                top2[next] = undoNext;\n            }\n        }\n    }\n\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        top2 = vector<pair<int,int>>(n + 1, {INT_MIN, INT_MIN});\n        vector<vector<int>> adjList(n + 1);\n        for(auto edge: edges) {\n            adjList[edge[0]].push_back(edge[1]);\n            adjList[edge[1]].push_back(edge[0]);\n        }\n\n        dfs(0, adjList);\n        ans = vector<int>(n, 0);\n        reRoot(0, adjList);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699310",
    "subm_id": "1343207787"
}