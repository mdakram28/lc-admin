{
    "username": "manojkumar2412",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size();\n        int res= abs(nums[0] - k), and_value = nums[0], i=0;\n        \n        vector<vector<int>> freq(n, vector<int>(32));\n        \n        for(int i=0;i<n;i++){\n            \n            for(int j=0;j<32;j++){\n                int val = 1<<j;\n                \n                if(val & nums[i]){\n                    freq[i][j] = 1; \n                    if(i!=0)\n                        freq[i][j]+= freq[i-1][j];\n                }\n            }\n            \n        }\n        \n        for(int j=1;j<n;j++){\n            int temp= and_value & nums[j];\n            \n            if( temp >= k){\n                res= min(res, abs(temp-k));\n                and_value = temp;\n            }\n            else{\n                res= min(res, abs(temp-k));\n                \n                while(temp< k and i<=j){\n                    int val= nums[i];\n                    \n                    temp=0;\n                    for(int b=0;b<32;b++){\n                        int eles= j-i;\n                        int fre= freq[j][b] - freq[i][b];\n                        if(fre==eles){\n                            temp= temp | (1<<b);\n                        }\n                    }\n                    res= min(res, abs(temp-k));\n                    i++;\n                }\n                and_value= temp;\n            }\n            \n            \n        }\n        return res;\n    }\n};",
    "submit_ts": 1717298811.0
}