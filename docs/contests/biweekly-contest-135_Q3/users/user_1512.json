{
    "username": "bu-yao-xiang-bei",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        dm = [0] * (k + 3)\n        for l, r in zip(nums[:len(nums) // 2], reversed(nums[len(nums) // 2:])):\n            x, y = min(l, r), max(l, r)\n            dm[y - x] -= 1\n            dm[y - x + 1] += 1\n            dm[max(k - x, y) + 1] += 1\n        ans = len(nums) // 2\n        sum = len(nums) // 2\n        for i in range(k + 2):\n            sum += dm[i]\n            if (ans > sum):\n                ans = sum\n        return ans\n",
    "submit_ts": "1721489861",
    "subm_id": "548320570"
}