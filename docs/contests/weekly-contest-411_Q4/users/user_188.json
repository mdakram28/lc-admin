{
    "username": "zhou2003",
    "submission": "//\u3053\u306e\u6e07\u304d\u3001\u596a\u3063\u3066\u304f\u308c\u308b\u304b\n#include<stdio.h>\n#include<iostream>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<map>\n#include<set>\n#include<bitset>\n#include<assert.h>\n#include<time.h>\n#include<vector>\n#include<unordered_map>\nusing namespace std;\ntypedef long long ll;\ntypedef long double db;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\nconst int N = 200000 + 100;\nconst db pi = acos(-1.0);\n#define lowbit(x) ((x) & (-x))\n#define sqr(x) (x) * (x)\n#define rep(i,a,b) for (int i = a; i <= b;i++)\n#define per(i,a,b) for (int i = a; i >= b;i--)\n#define go(x,a) for (auto &x: a)\n#define trav(u,i,sq) for (register int i = head[u], v = sq[i].to; i; i = sq[i].nxt, v=sq[i].to)\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pb push_back\n#define maxd 1000000007\n#define eps 1e-8\n\nnamespace My_Math{\n\t#define N 100000\n\n\tint fac[N+100],invfac[N+100];\n\n\tint add(int x,int y) {return x+y>=maxd?x+y-maxd:x+y;}\n\tint dec(int x,int y) {return x<y?x-y+maxd:x-y;}\n\tint mul(int x,int y) {return 1ll*x*y%maxd;}\n\tll qpow(ll x,int y)\n\t{\n\t\tll ans=1;\n\t\twhile (y)\n\t\t{\n\t\t\tif (y&1) ans=mul(ans,x);\n\t\t\tx=mul(x,x);y>>=1;\n\t\t}\n\t\treturn ans;\n\t}\n\tint getinv(int x) {return qpow(x,maxd-2);}\n\n\tint C(int n,int m)\n\t{\n\t\tif ((n<m) || (n<0) || (m<0)) return 0;\n\t\treturn mul(mul(fac[n],invfac[m]),invfac[n-m]);\n\t}\n\n\tvoid math_init()\n\t{\n\t\tfac[0]=invfac[0]=1;\n\t\trep(i,1,N) fac[i]=mul(fac[i-1],i);\n\t\tinvfac[N]=getinv(fac[N]);\n\t\tper(i,N-1,1) invfac[i]=mul(invfac[i+1],i+1);\n\t}\n\t#undef N\n}\nusing namespace My_Math;\n\nclass Solution {\n\n\tll seg[N<<2];\n\tint tag[N<<2],sum[N][2],p[N];\n\n\tvoid build(int id,int l,int r) {\n\t\tif (l==r) {\n\t\t\tseg[id]=0; tag[id]=0;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(id<<1,l,mid);\n\t\tbuild(id<<1|1,mid+1,r);\n\t\tseg[id]=seg[id<<1]+seg[id<<1|1];\n\t}\n\n\tvoid pushdown(int id,int l,int r) {\n\t\tif (tag[id]) {\n\t\t\tint mid=(l+r)>>1;\n            seg[id<<1]+=1ll*(mid-l+1)*tag[id]; tag[id<<1]+=tag[id];\n            seg[id<<1|1]+=1ll*(r-mid)*tag[id]; tag[id<<1|1]+=tag[id];\n\t\t\ttag[id]=0;\n\t\t}\n\t}\n\n\tvoid modify(int id,int l,int r,int L,int R) {\n\t\tif ((l>=L)&&(r<=R)) {\n\t\t\tseg[id]+=r-l+1; tag[id]+=1;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(id,l,r);\n\t\tint mid=(l+r)>>1;\n\t\tif (mid>=L) modify(id<<1,l,mid,L,R);\n\t\tif (mid<R) modify(id<<1|1,mid+1,r,L,R);\n\t\tseg[id]=seg[id<<1]+seg[id<<1|1];\n\t}\n\n\tll query(int id,int l,int r,int L,int R) {\n\t\tif ((l>=L)&&(r<=R)) return seg[id];\n\t\tpushdown(id,l,r);\n\t\tint mid=(l+r)>>1;\n\t\tll ans=0;\n\t\tif (mid>=L) ans+=query(id<<1,l,mid,L,R);\n\t\tif (mid<R) ans+=query(id<<1|1,mid+1,r,L,R);\n\t\treturn ans;\n\t}\n\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.size();\n\t\trep(i,1,n) {\n\t\t\tint x=s[i-1]-'0';\n\t\t\tsum[i][0]=sum[i-1][0];\n\t\t\tsum[i][1]=sum[i-1][1];\n\t\t\tsum[i][x]++;\n\t\t}\n\t\tint l=1;\n\t\trep(i,1,n) {\n\t\t\twhile ((l<=i)&&((sum[i][0]-sum[l-1][0]>k)&&(sum[i][1]-sum[l-1][1]>k))) l++;\n\t\t\tp[i]=l;\n            //cout<<l<<\" \"<<i<<endl;\n\t\t}\n        vi id; int m=queries.size();\n        rep(i,0,m-1) id.pb(i);\n        sort(id.begin(), id.end(), [&](int x,int y){\n            return queries[x][1]<queries[y][1];\n        });\n        \n\t\tvector<ll> ans; ans.resize(m);\n        int r=1;\n\t\trep(i,0,m-1) {\n            while (r<=queries[id[i]][1]+1) {\n                modify(1,1,n,p[r],r);\n                //cout<<\"modify \"<<r<<endl;\n                r++;\n            }\n\t\t\tint l=queries[id[i]][0]+1,r=queries[id[i]][1]+1;\n\t\t\tans[id[i]]=query(1,1,n,l,r);\n\t\t}\n\t\treturn ans;\n    }\n};",
    "submit_ts": "1723949648",
    "subm_id": "556394100"
}