{
    "username": "srafael",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        \n        vector<int> alt(n);\n        vector<int> palt(n);\n        \n        for (int i = 0; i < n; ++i) {\n            int ni = (i + 1) % n;\n            alt[i] = colors[i] != colors[ni];\n        }\n        \n        palt[0] = alt[0];\n        for (int i = 1; i < n; ++i) {\n            palt[i] = alt[i] + palt[i - 1];\n        }\n        \n        const auto is_ok = [&](int index) {\n            if (index + k - 1 <= n) {\n                int sum = palt[index + k - 2];\n                if (index) {\n                    sum -= palt[index - 1];\n                }\n                // cout << index << ' ' << sum << endl;\n                return sum + 1 == k;\n            }\n            int sum = palt[n - 1];\n            if (index) {\n                sum -= palt[index - 1];\n            }\n            \n            int took = n - index;\n            int left = k - took;\n            \n            sum += palt[left - 2];\n            \n            // cout << \"r \" << index << ' ' << sum << endl;\n            \n            return sum + 1 == k;\n        };\n        \n        int res = 0;\n        for (int i = 0; i < n; ++i) {\n            if (is_ok(i)) {\n                res++;\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720279993",
    "subm_id": "1311772995"
}