{
    "username": "akrajput1311",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        \n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ans += 1;\n            }\n        }\n\n        vector<int> minFlipRequired(3, 0);\n        if (n % 2 == 1) {\n            int a = 0, b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                minFlipRequired[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int x = 0, y = n - 1;\n            while (x < y) {\n                int sum = grid[x][m / 2] + grid[y][m / 2];\n                minFlipRequired[sum] += 1;\n                x += 1;\n                y -= 1;\n            }\n        }\n\n        if (minFlipRequired[2] % 2 == 1) {\n            if (minFlipRequired[1] > 0) {\n                ans += minFlipRequired[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += minFlipRequired[1];\n        }\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n\n                int sum = a + b + c + d;\n\n                if (sum != 0 && sum != 4) {\n                    ans += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700478",
    "subm_id": "1343243153"
}