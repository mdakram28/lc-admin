{
    "username": "aqwertsaqswdefrgthyjukilop",
    "submission": "\nclass Solution {\npublic:\n    int solve(map<string,int>mp,int ind,string target,vector<int>&dp){\n        int n=target.size();\n        string a=\"\";\n        if(ind>n-1)return 0;\n        if(dp[ind]!=-1)return dp[ind];\n        int ans=1e9;\n        for(int i=ind;i<n;i++){\n            a+=target[i];\n            if(mp.find(a)!=mp.end()){\n                ans=min(ans,mp[a]+solve(mp,i+1,target,dp));\n            }\n        }\n        return dp[ind]=ans;\n    }\n    class Node {\n    public:\n        unordered_map<char, Node*> children;\n        int cost;\n        Node() : cost(-1) {}\n    };\n\n    class Trie {\n    public:\n        Node* root;\n        Trie() {\n            root = new Node();\n        }\n\n        void insert(const string& word, int cost) {\n            Node* node = root;\n            for (char c : word) {\n                if (node->children.find(c) == node->children.end()) {\n                    node->children[c] = new Node();\n                }\n                node = node->children[c];\n            }\n            node->cost = (node->cost == -1) ? cost : min(node->cost, cost);\n        }\n\n        Node* getRoot() {\n            return root;\n        }\n    };\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        Trie trie;\n\n        for (int i = 0; i < words.size(); ++i) {\n            trie.insert(words[i], costs[i]);\n        }\n        map<string,int>mp;\n        for(auto it:words)mp[it]++;\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            Node* node = trie.getRoot();\n            for (int j = i; j < n; ++j) {\n                if (node->children.find(target[j]) == node->children.end()) break;\n                node = node->children[target[j]];\n                if (node->cost != -1) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + node->cost);\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};\n\n\n\n\n",
    "submit_ts": "1720323029",
    "subm_id": "1312365503"
}