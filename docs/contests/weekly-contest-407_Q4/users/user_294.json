{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        \n        for (int i = 0; i < n; i++) {\n            nums[i] -= target[i];\n        }\n        \n        auto sign = [](int x) {\n            if (x == 0) return 0;\n            if (x > 0) return 1;\n            return 2;\n        };\n        \n        vector<int> vec;\n        vector<int> vs;\n        \n        auto f = [&] {\n            long long res = 0;\n            \n            vec.erase(unique(vec.begin(), vec.end()), vec.end());\n            \n            int m = vec.size();\n            vs.clear();\n            \n            \n            \n            \n            for (int i = 1; i + 1 < m; i++) {\n                if (vec[i] > vec[i - 1] && vec[i] > vec[i + 1]) {\n                    vs.push_back(vec[i]);\n                } else if (vec[i] < vec[i - 1] && vec[i] < vec[i + 1]) {\n                    vs.push_back(vec[i]);\n                }\n            }\n            \n            vs.erase(unique(vs.begin(), vs.end()), vs.end());\n            \n            for (int i = 0; i < (int)vs.size(); i++) {\n                if (i % 2 == 0) res += vs[i];\n                else res -= vs[i];\n            }\n            \n            return res;\n        };\n        \n        long long res = 0;\n        \n        for (int i = 0; i < n; i++) {\n            if (nums[i] == 0) continue;\n            \n            int j = i;\n            \n            while (j < n && sign(nums[i]) == sign(nums[j])) j++;\n\n            vec.clear();\n            vec.push_back(0);\n            for (int k = i; k < j; k++) vec.push_back(abs(nums[k]));\n            vec.push_back(0);\n            \n            res += f();\n            \n            i = j - 1;\n        }\n        \n        return res;\n    }\n};\n",
    "submit_ts": "1721530751",
    "subm_id": "1327942797"
}