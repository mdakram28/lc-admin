{
    "username": "Daniel",
    "submission": "public class Solution {\n    public long MaximumValueSum(int[][] board) {\n        int[,] dp = new int[board.Length, 3];\n        \n        for (int i = 0; i < board.Length; i++){\n            int maxInd1 = -1;\n            int maxInd2 = -1;\n            int maxInd3 = -1;\n            \n            for (int j = 0; j < board[i].Length; j++){\n                if (maxInd1 == -1 || board[i][j] > board[i][maxInd1]){\n                    maxInd3 = maxInd2;\n                    maxInd2 = maxInd1;\n                    maxInd1 = j;\n                }\n                else if (maxInd2 == -1 || board[i][j] > board[i][maxInd2]){\n                    maxInd3 = maxInd2;\n                    maxInd2 = j;\n                }\n                else if (maxInd3 == -1 || board[i][j] > board[i][maxInd3]){\n                    maxInd3 = j;\n                }\n            }\n            \n            dp[i, 0] = maxInd1;\n            dp[i, 1] = maxInd2;\n            dp[i, 2] = maxInd3;\n        }\n        \n        long result = Int64.MinValue;\n        \n        for (int i = 0; i < board.Length; i++){\n            for (int j = i + 1; j < board.Length; j++){\n                for (int k = j + 1; k < board.Length; k++){\n                    for (int ii = 0; ii < 3; ii++){\n                        for (int jj = 0; jj < 3; jj++){\n                            for (int kk = 0; kk < 3; kk++){\n                                int f = dp[i, ii];\n                                int s = dp[j, jj];\n                                int t = dp[k, kk];\n                                if (f != s && s != t && t != f){\n                                    result = Math.Max(result, (long)board[i][f] + board[j][s] + board[k][t]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return result;\n    }\n}",
    "submit_ts": "1723906121",
    "subm_id": "1359036441"
}