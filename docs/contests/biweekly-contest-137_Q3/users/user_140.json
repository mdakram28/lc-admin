{
    "username": "Frank Rodriguez",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int n = board.length;\n        int m = board[0].length;\n        var max = new Candidate[m][3];\n        for (int i=0; i<m; i++) {\n            max[i] = get3Maxes(board, i);\n        }\n\n        long ans = Long.MIN_VALUE;\n        for (int i=0; i<m; i++) {\n            for (int j=i+1; j<m; j++) {\n                for (int k=j+1; k<m; k++) {\n                    for (int ii=0; ii<3; ii++) {\n                        for (int jj=0; jj<3; jj++) {\n                            if (max[i][ii].inx == max[j][jj].inx) {\n                                continue;\n                            }\n                            for (int kk=0; kk<3; kk++) {\n                                if (max[i][ii].inx == max[k][kk].inx\n                                    || max[j][jj].inx == max[k][kk].inx) {\n                                    continue;\n                                }\n                                ans = Math.max(ans, max[i][ii].val + max[j][jj].val + max[k][kk].val);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n\n    record Candidate(long val, int inx) {};\n\n    Candidate[] get3Maxes(int[][] board, int col) {\n        var pq = new PriorityQueue<Candidate>((a,b)->Long.compare(a.val, b.val));\n        for (int i=0; i<board.length; i++) {\n            pq.offer(new Candidate(board[i][col], i));\n            if (pq.size() > 3) {\n                pq.poll();\n            }\n        }\n        var ret = new Candidate[3];\n        ret[2] = pq.poll();\n        ret[1] = pq.poll();\n        ret[0] = pq.poll();\n        return ret;\n    }\n}",
    "submit_ts": "1723906838",
    "subm_id": "1359075331"
}