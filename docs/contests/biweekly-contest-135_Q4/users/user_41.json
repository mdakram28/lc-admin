{
    "username": "Rox_",
    "submission": "class Solution {\npublic:\n  using ll = long long;\n\n  static const int kMaxN = 101;\n  ll dp[kMaxN][kMaxN][kMaxN];\n\n  long long maximumScore(vector<vector<int>>& a) {\n    int n = a.size();\n    if (n == 1) {\n      return 0;\n    }\n    for (int i = 0; i <= n; i++) {\n      dp[0][0][i] = 0;\n    }\n    for (int i = 0; i + 1 < n; i++) {\n      for (int k2 = 0; k2 <= n; k2++) {\n        for (int d = 0; d + k2 <= n; d++) {\n          if (dp[i][d][k2] == -1) {\n            continue;\n          }\n          int k1 = k2 + d;\n          ll s = 0;\n          for (int k = 0; k < k2; k++) {\n            s += a[k][i + 1];\n          }\n          for (int k = 0; k <= k2; k++) {\n            if (k > 0) {\n              s -= a[k - 1][i + 1];\n            }\n            dp[i + 1][k2 - k][k] = max(dp[i + 1][k2 - k][k], dp[i][d][k2] + s);\n          }\n          for (int k = k2 + 1; k <= k1; k++) {\n            dp[i + 1][0][k] = max(dp[i + 1][0][k], dp[i][d][k2]);\n          }\n          s = 0;\n          for (int k = max(k1, k2) + 1; k <= n; k++) {\n            s += a[k - 1][i];\n            dp[i + 1][0][k] = max(dp[i + 1][0][k], dp[i][d][k2] + s);\n          }\n        }\n      }\n    }\n\n    ll ans = 0;\n    for (int k1 = 0; k1 <= n; k1++) {\n      for (int k2 = 0; k2 <= n; k2++) {\n        ans = max(ans, dp[n - 1][k1][k2]);\n      }\n    }\n    return ans;\n  }\n};",
    "submit_ts": "1721489986",
    "subm_id": "1327469700"
}