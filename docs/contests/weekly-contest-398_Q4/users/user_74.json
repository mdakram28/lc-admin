{
    "username": "NatapongS",
    "submission": "class Solution {\npublic:\n    int cnr[31][31];\n    int C(int n, int r) {\n        return cnr[n][r];\n    }\n    int waysToReachStair(int k) {\n        int ans = 0;\n        memset(cnr, 0, sizeof cnr);\n        for (int i = 0; i <= 30; ++i) {\n            cnr[i][0] = 1;\n            for (int j = 1; j < i; ++j) {\n                cnr[i][j] = cnr[i -1][j] + cnr[i -1][j -1];\n            }\n            cnr[i][i] = 1;\n        }\n        // for (int i = 0; i <= 30; ++i) {\n        //     for (int j = 0; j <= i; ++j) {\n        //         cout << cnr[i][j] << \" \";\n        //     }\n        //     cout << endl;\n        // }\n        for (int i = 0; i < 31; ++i) {\n            int choice = i + 1;\n            int val = 1 << i;\n            if (val >= k && val - choice <= k) {\n                int choose = val - k;\n                ans += C(choice, choose);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716087242",
    "subm_id": "1261777420"
}