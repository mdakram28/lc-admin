{
    "username": "Homie_Lander7",
    "submission": "struct union_find\n{\n    vector<int> parent;\n    vector<int> size;\n    int components = 0;\n\n    union_find(int n = -1)\n    {\n        if (n >= 0)\n            init(n);\n    }\n\n    void init(int n)\n    {\n        parent.resize(n + 1);\n        iota(parent.begin(), parent.end(), 0);\n        size.assign(n + 1, 1);\n        components = n;\n    }\n\n    int find(int x)\n    {\n        return x == parent[x] ? x : parent[x] = find(parent[x]);\n    }\n\n    bool unite(int x, int y)\n    {\n        x = find(x);\n        y = find(y);\n\n        if (x == y)\n            return false;\n\n        if (size[x] < size[y])\n            swap(x, y);\n\n        parent[y] = x;\n        size[x] += size[y];\n        components--;\n        return true;\n    }\n};\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        #define int long long\n        auto intersect=[&](int x1,int y1,int r1,int x2,int y2,int r2){\n            return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)<=(r1+r2)*(r1+r2);\n        };\n        int n=circles.size();\n        union_find uf(n);\n        for(int i=0;i<n;i++){\n            for(int j=i+1;j<n;j++){\n                if(intersect(circles[i][0],circles[i][1],circles[i][2],circles[j][0],circles[j][1],circles[j][2])){\n                    uf.unite(i,j);\n                }\n            }\n        }\n        vector<int>lowx(n,1e18),lowy(n,1e18),highx(n,-1),highy(n,-1);\n        for(int i=0;i<n;i++){\n            lowx[uf.find(i)]=min(lowx[uf.find(i)],circles[i][0]*1LL-circles[i][2]);\n            lowy[uf.find(i)]=min(lowy[uf.find(i)],circles[i][1]*1LL-circles[i][2]);\n            highx[uf.find(i)]=max(highx[uf.find(i)],circles[i][0]*1LL+circles[i][2]);\n            highy[uf.find(i)]=max(highy[uf.find(i)],circles[i][1]*1LL+circles[i][2]);\n        }\n        for(int i=0;i<n;i++){\n           if(lowx[i]<=0 and highx[i]>=X)return false;\n            if(lowy[i]<=0 and highy[i]>=Y)return false;\n            if(lowx[i]<=0 and lowy[i]<=0)return false;\n            if(highx[i]>=X and highy[i]>=Y)return false;\n        }\n        #undef int\n        return true;\n    }\n};",
    "submit_ts": "1722135615",
    "subm_id": "1335707759"
}