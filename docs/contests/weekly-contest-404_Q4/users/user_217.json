{
    "username": "Maillew",
    "submission": "const int maxn = 2e5+10;\nint pre[maxn];\nvector<int> adj[maxn];\nint dis[maxn];\n\nint n,m;\nint diam, node,rad;\nbool vis[maxn];\nvoid dfs(int cur, int prev, int d){\n    dis[cur] = d;\n    if(dis[cur]>diam){\n        diam = dis[cur], node = cur;\n    }\n    vis[cur] = true; pre[cur] = prev;\n    for(int nxt:adj[cur]){\n        if(nxt!=prev){\n            dfs(nxt,cur, d+1);\n        }\n    }\n}\n#define pb push_back\nvector<int> radii;\nclass Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        n = edges1.size()+1;\n        m = edges2.size()+1;\n        rad =0, diam =0, node = 0;\n        for(vector<int> e: edges1){\n            int a = e[0]+1, b= e[1]+1;\n            adj[a].pb(b); adj[b].pb(a);\n        }\n        for(vector<int> e: edges2){\n            int a = e[0]+1, b= e[1]+1;\n            a+=n, b+=n;\n            adj[a].pb(b); adj[b].pb(a);\n        }\n        int ans =0;\n        for(int i =1; i<=n+m; i++){\n            if(!vis[i]){\n                diam = -1; dfs(i,0,0);\n                diam = -1; dfs(node,0,0); ans = max(ans,diam);\n                rad = 1e9;\n                for(int j = node; j!=0; j = pre[j]){\n                    rad = min(rad,max(dis[j],diam-dis[j]));\n                }\n                radii.pb(rad);\n            }\n        }\n        sort(radii.begin(),radii.end(),greater<int>());\n        if(radii.size()>1) ans = max(ans, radii[0]+radii[1]+1);\n        if(radii.size()>2) ans = max(ans,radii[1]+radii[2]+2);\n        for(int i =1; i<=n+m; i++){\n            adj[i].clear();\n        }\n        radii.clear();\n        for(int i= 1; i<=n+m; i++){\n            pre[i] = dis[i] = 0;\n            vis[i] = 0;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719716956",
    "subm_id": "1304378599"
}