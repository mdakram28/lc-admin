{
    "username": "sishenzhimu",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        \n        slst = SortedList()\n        \n        for i in range(1, n - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                slst.add(i)\n        \n        ans = []\n        for t, a, b in queries:\n            if t == 1:\n                l, r = a, b\n                res = slst.bisect_right(r) - slst.bisect_left(l)\n                if l == r:\n                    res -= (l in slst)\n                else:\n                    res -= (l in slst) + (r in slst)\n                ans.append(res)\n            if t == 2:\n                i, v = a, b\n                \n                if i - 1 in slst:\n                    slst.remove(i - 1)\n                if i in slst:\n                    slst.remove(i)\n                if i + 1 in slst:\n                    slst.remove(i + 1)\n                \n                nums[i] = v\n                if 1 <= i - 1 < n - 1:\n                    if nums[i - 1] > nums[i - 2] and nums[i - 1] > nums[i]:\n                        slst.add(i - 1)\n                if 1 <= i < n - 1:\n                    if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                        slst.add(i)\n                if 1 <= i + 1 < n - 1:\n                    if nums[i + 1] > nums[i] and nums[i + 1] > nums[i + 2]:\n                        slst.add(i + 1)\n                    \n        return ans",
    "submit_ts": "1718507036",
    "subm_id": "539778837"
}