{
    "username": "idontknowwhodoi",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # hor = [(c, i) for i, c in enumerate(horizontalCut)]\n        # ver = [(c, i) for i, c in enumerate(verticalCut)]\n        hor = horizontalCut\n        ver = verticalCut\n        hor.sort(reverse=True)\n        ver.sort(reverse=True)\n        \n        nh = 1\n        nv = 1\n        ph = 0\n        pv = 0\n        \n        ans = 0\n        while ph < m - 1 and pv < n - 1:\n            # print(ph, pv)\n            if hor[ph] > ver[pv]:\n                ans += hor[ph]*nh\n                nv += 1\n                ph += 1\n            else:\n                ans += ver[pv]*nv\n                nh += 1\n                pv += 1\n        while ph < m - 1:\n            ans += hor[ph]*nh\n            ph += 1\n        while pv < n - 1:\n            ans += ver[pv]*nv\n            pv += 1\n        \n        return ans",
    "submit_ts": "1720926259",
    "subm_id": "1320280788"
}