{
    "username": "LeetCoach",
    "submission": "MOD = 10 ** 9 + 7\n\nclass Solution:\n    def numberOfPermutations(self, n: int, reqs: List[List[int]]) -> int:\n        reqs = dict(reqs)\n#         max_cnt = max(reqs.values())\n#         res = [0] * (max_cnt + 1)\n#         for i in range(n):\n#             nres = [0] * (max_cnt + 1)\n#             if i in reqs:\n#                 cnt = reqs[i]\n#                 for d in range(min(i + 1):\n#                     nres[cnt] = (nres[cnt] + res[cnt - d]) % MOD\n#             else:\n                \n#             for cnt in range(max_cnt + 1):\n#                 if i in reqs and reqs[i]\n        @cache\n        def count(i, cnt):\n            if i == -1:\n                return 1 if cnt == 0 else 0\n            if i in reqs and cnt != reqs[i]:\n                return 0\n            res = 0\n            for d in range(min(i, cnt) + 1):\n                res = (res + count(i - 1, cnt - d)) % MOD\n            return res\n        \n        res = count(n - 1, reqs[n - 1])\n        count.cache_clear()\n        return res\n            ",
    "submit_ts": "1719068821",
    "subm_id": "1296777867"
}