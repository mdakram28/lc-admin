{
    "username": "technique_god",
    "submission": "class Solution(object):\n    def minimumOperations(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: List[int]\n        :rtype: int\n        \"\"\"\n        init_diff = [target[i] - nums[i] for i in range(len(nums))]\n        print(init_diff)\n\n        ANS = 0\n\n        pos_stack = [0]\n        for v in init_diff+[0]:\n            v = max(0,v)\n            \n            while pos_stack[-1] > v:\n                t1 = pos_stack[-1]\n                t2 = pos_stack[-2]\n                ANS += t1-max(t2,v)\n                pos_stack.pop()\n            if pos_stack[-1] < v:\n                pos_stack.append(v)\n        \n        neg_stack = [0]\n        for v in init_diff+[0]:\n            v = max(0,-v)\n            \n            while neg_stack[-1] > v:\n                t1 = neg_stack[-1]\n                t2 = neg_stack[-2]\n                ANS += t1-max(t2,v)\n                neg_stack.pop()\n            if neg_stack[-1] < v:\n                neg_stack.append(v)\n    \n        return ANS\n\n\n\n\n        #want to query the rightmost value #>k\n        return 0\n        ",
    "submit_ts": "1721532859",
    "subm_id": "1327995749"
}