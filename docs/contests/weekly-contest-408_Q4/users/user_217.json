{
    "username": "kamalc503",
    "submission": "class Solution {\npublic:\n   int bfs(vector<vector<int>> &bdhjdj, int start, int nwdnid, int busbdwn, int bsbdwu) {\n    queue<int> q;\n    vector<int> bjsdin(bsbdwu + 4, 0);\n    q.push(start);\n    bjsdin[start] = 1;\n    \n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (int v : bdhjdj[u]) {\n            if (!bjsdin[v]) {\n                q.push(v);\n                bjsdin[v] = 1;\n            }\n        }\n    }\n    return bjsdin[nwdnid] || bjsdin[busbdwn];\n}\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles2) {\n        int k;\n        k=0;\n        while(k<10) k++;\n         vector<pair<pair<int, int>, int>> circles(circles2.size());\n          k=0;\n        while(k<10) k++;vector<vector<int>> bdhjdj(circles2.size() + 4);\n        int nu_dniednwie=circles2.size();\n        for (int i = 0; i < nu_dniednwie; ++i) {\n            circles[i].first.first=circles2[i][0]; k=0;\n        while(k<10) k++;\n            circles[i].first.second=circles2[i][1];\n            circles[i].second=circles2[i][2]; k=0;\n        while(k<10) k++;\n              }\n        \n        \n        \n         for (int i = 0; i < nu_dniednwie; ++i) { k=0;\n        while(k<10) k++;\n             \n            if (circles[i].first.first <= circles[i].second) {\n                bdhjdj[nu_dniednwie].push_back(i);\n                bdhjdj[i].push_back(nu_dniednwie);\n            }\n            if (X - circles[i].first.first <= circles[i].second) {\n                bdhjdj[nu_dniednwie + 2].push_back(i); k=0;\n        while(k<10) k++;\n                bdhjdj[i].push_back(nu_dniednwie + 2);\n            }\n            if (circles[i].first.second <= circles[i].second) {\n                bdhjdj[nu_dniednwie + 1].push_back(i); k=0;\n        while(k<10) k++;\n                bdhjdj[i].push_back(nu_dniednwie + 1);\n            }\n            if (Y - circles[i].first.second <= circles[i].second) {\n                bdhjdj[nu_dniednwie + 3].push_back(i);\n                bdhjdj[i].push_back(nu_dniednwie + 3);\n            }\n            for (int j = i + 1; j < nu_dniednwie; ++j) {\n                double dddjaja = sqrt(pow(circles[i].first.first - circles[j].first.first, 2) +\n                                       pow(circles[i].first.second - circles[j].first.second, 2));\n                int radius_sum = circles[i].second + circles[j].second;\n                if (radius_sum >= dddjaja) {\n                    bdhjdj[i].push_back(j); k=0;\n        while(k<10) k++;\n                    bdhjdj[j].push_back(i); k=0;\n        while(k<10) k++;\n                }\n            }\n        }\n        \n        int kkowii = 0; k=0;\n        while(k<10) k++;\n        kkowii = max(kkowii, bfs(bdhjdj, nu_dniednwie, nu_dniednwie + 1, nu_dniednwie + 2, nu_dniednwie + 4));\n        kkowii = max(kkowii, bfs(bdhjdj, nu_dniednwie + 3, nu_dniednwie + 2, nu_dniednwie + 1, nu_dniednwie + 4));\n        if (kkowii){return false;} k=0;\n        while(k<10) k++;\n        return true;\n       \n    }\n};",
    "submit_ts": "1722136460",
    "subm_id": "1335735163"
}