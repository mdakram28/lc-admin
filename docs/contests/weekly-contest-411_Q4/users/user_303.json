{
    "username": "Shicheng Chen",
    "submission": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int, queries: List[List[int]]) -> List[int]:\n            n = len(s)\n            s = ['~']+list(s)\n\n            cum0 = [0] * (n + 1)\n            cum1 = [0] * (n + 1)\n            cums= [0] * (n + 1)\n            leftmost={}\n            rightmost={}\n            l=1\n            for r in range(1,n+1):\n                cum0[r] = cum0[r-1] + (1 if s[r] == '0' else 0)\n                cum1[r] = cum1[r-1] + (1 if s[r] == '1' else 0)\n                while cum0[r] - cum0[l-1] > k and cum1[r]-cum1[l-1] > k:\n                    leftmost[l] = r-1\n                    l+=1\n                cur = r - l + 1\n                cums[r] = cums[r-1] + cur\n                rightmost[r] = l\n                leftmost[l] = r\n            for i in range(l+1,n+1):\n                leftmost[i] = n\n            # print('s', s)\n            # print('leftmost', leftmost)\n            # print('rightmost', rightmost)\n            # print('cums', cums)\n\n            ans = []\n\n            def cal(i):\n                return (i*(i+1))//2\n\n            for li, ri in queries:\n                li+=1; ri+=1\n                ra=leftmost[li]\n                if ra>=ri:\n                    ans.append(cal(ri-li+1))\n                    continue\n\n                lcnt=(cal(ra - li+1))\n\n                mcnt = cums[ri] - cums[ra]\n\n                lb = rightmost[ri]\n                rcnt= 0#cal(ri-lb)\n                # print('s',s)\n                # print(f'li={li}, ri={ri}, (li={li},ra={ra}), (lb={lb}, ri={ri})')\n                # print(f'lcnt={lcnt}, mcnt={mcnt}, rcnt={rcnt}')\n\n                ans.append(lcnt+mcnt+rcnt)\n\n            return ans",
    "submit_ts": "1723953449",
    "subm_id": "1359821572"
}