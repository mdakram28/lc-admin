{
    "username": "akb248014",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long h_index = 0, v_index = 0;\n        long long h_segments = 1, v_segments = 1;\n        long long totalCost = 0;\n\n        while (h_index < horizontalCut.size() && v_index < verticalCut.size()) {\n            if (horizontalCut[h_index] > verticalCut[v_index]) {\n                totalCost += horizontalCut[h_index] * v_segments;\n                h_segments++;\n                h_index++;\n            } else {\n                totalCost += verticalCut[v_index] * h_segments;\n                v_segments++;\n                v_index++;\n            }\n        }\n\n        while (h_index < horizontalCut.size()) {\n            totalCost += horizontalCut[h_index] * v_segments;\n            h_index++;\n        }\n\n        while (v_index < verticalCut.size()) {\n            totalCost += verticalCut[v_index] * h_segments;\n            v_index++;\n        }\n\n        return totalCost;\n        \n    }\n};",
    "submit_ts": "1720925847",
    "subm_id": "1320268112"
}