{
    "username": "anupam_ghosh",
    "submission": "const int INF=2e5+100;\nconst int N=1e6;\nint seg_tree[N];\nvoid build_max(int l,int r,int x){\n        if(r-l==1){\n                 seg_tree[x]=0;\n                return ;\n        }\n        int  m=l+(r-l)/2;\n        build_max(l,m,2*x+1);\n        build_max(m,r,2*x+2);\n        seg_tree[x]=max(seg_tree[2*x+1],seg_tree[2*x+2]);\n}\nvoid update(int idx,int l,int r,int x,int k){\n        if(r-l==1){\n                seg_tree[x]=k;\n                return ;\n        }\n        int m=l+(r-l)/2;\n        if(idx<m){\n                update(idx,l,m,2*x+1,k);\n        }\n        else{\n                update(idx,m,r,2*x+2,k);\n        }\n        seg_tree[x]=max(seg_tree[2*x+1],seg_tree[2*x+2]);\n}\nint maxi(int l,int r,int x,int a,int b){\n        if(l>=b || a>=r){\n                return 0;\n        }\n        if(a<=l && r<=b){\n                return seg_tree[x];\n        }\n        int m=l+(r-l)/2;\n        return max(maxi(l,m,2*x+1,a,b),maxi(m,r,2*x+2,a,b));\n}\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        set<pair<int,int>> s;\n        s.insert({0,INF});\n        build_max(0,INF,0);\n        update(0,0,INF,0,INF);\n        vector<bool> res;\n        pair<int,int> p=make_pair(0,INT_MAX);\n        for(auto &i:queries){\n            if(i[0]==1){\n                p.first=i[1];\n                auto it=*(prev(s.lower_bound(p)));\n                int rng=it.second-it.first;\n                \n                int l=it.first,r=it.second;\n                s.erase(it);\n                s.insert({l,i[1]});\n                s.insert({i[1],r});\n                update(it.first,0,INF,0,(i[1]-it.first));\n                update(i[1],0,INF,0,r-i[1]);\n                // cout<<l<<'\\t'<<r<<'\\n';\n                // for(int j=0;j<30;j++){\n                //     cout<<j<<\" \"<<maxi(0,INF,0,j,j+1)<<'\\n';\n                // }\n                // cout<<\"\\n\\n\";\n            }\n            else{\n                if(maxi(0,INF,0,0,i[1]-i[2]+1)>=i[2]){\n                    res.push_back(true);\n                }\n                else{\n                    res.push_back(false);\n                }\n                \n            }\n            \n        }\n        return res;\n            \n    }\n};",
    "submit_ts": 1716650576.0
}