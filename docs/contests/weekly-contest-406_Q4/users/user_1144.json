{
    "username": "srvmandal24",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int r = 1, c = 1;\n        vector<int> costs;\n        unordered_map<int, int> hr;\n        unordered_map<int, int> vr;\n        for(int i : horizontalCut)\n        {\n            costs.push_back(i);\n            hr[i]++;\n        }\n        for(int i : verticalCut)\n        {\n            costs.push_back(i);\n            vr[i]++;\n        }\n        sort(costs.begin(), costs.end());\n\n        long long res = 0;\n        while(costs.size()>0)\n        {\n            long long ct = costs.back();\n            int hc = hr[ct];\n            int vc = vr[ct];\n            if(hc>vc)\n            {\n                hr[ct]--;\n                r++;\n                res += (c*ct);\n            }\n            else\n            {\n                vr[ct]--;\n                c++;\n                res += (r*ct);\n            }\n            costs.pop_back();\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720926087",
    "subm_id": "1320275571"
}