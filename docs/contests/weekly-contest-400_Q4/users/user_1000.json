{
    "username": "puranampUCLA",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        if k in nums:\n            return 0\n\n        n, res, cur, l, r = len(nums), abs(nums[0] - k), nums[0], 0, 0\n        bitmap = defaultdict(int)\n        \n        def calc(l, r):\n            cur = 0\n            for i, c in bitmap.items():\n                if c == r - l + 1:\n                    cur |= (1 << i)\n            return cur\n\n        for i in range(32):\n            if nums[0] & (1 << i):\n                bitmap[i] += 1\n\n        while r < n:\n            if cur > k or l > r:\n                r += 1\n                if r < n:\n                    for i in range(32):\n                        if nums[r] & (1 << i):\n                            bitmap[i] += 1\n                else: return res\n            else:\n                for i in range(32):\n                    if nums[l] & (1 << i):\n                        bitmap[i] -= 1\n                l += 1\n            cur = 0\n            for i, c in bitmap.items():\n                if c == r - l + 1:\n                    cur |= (1 << i)\n            if l <= r: res = min(res, abs(cur - k))\n        return res",
    "submit_ts": 1717299962.0
}