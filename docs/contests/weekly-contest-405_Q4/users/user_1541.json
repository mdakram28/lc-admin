{
    "username": "Kiran__18",
    "submission": "class Solution {\npublic:\n    \n    struct TrieNode {\n        TrieNode* childNode[26];\n        int cost;\n\n        TrieNode()\n        {\n            cost = -1;\n            for (int i = 0; i < 26; i++) {\n                childNode[i] = NULL;\n            }\n        }\n    };\n    \n    TrieNode *root;\n    void insert_key(string& key,int k){\n        TrieNode* currentNode = root;\n        for (auto c : key) {\n            if (currentNode->childNode[c - 'a'] == NULL) {\n                TrieNode* newNode = new TrieNode();\n                currentNode->childNode[c - 'a'] = newNode;\n            }\n            currentNode = currentNode->childNode[c - 'a'];\n        }\n        if(currentNode->cost != -1)currentNode->cost = min(currentNode->cost,k);\n        else currentNode->cost = k;\n    }\n    int dp[50001];\n    int minCost(string& s,int i){\n        if(i == s.size())return 0;\n        if(dp[i] != -1)return dp[i];\n        int cst = INT_MAX;\n        TrieNode *N = root;\n        for(int j = i;j < s.size();j++){\n            if(N->childNode[s[j] - 'a'] != NULL){\n                if(N->childNode[s[j] - 'a']->cost != -1){\n                    int k = minCost(s,j + 1);\n                    if(k != INT_MAX)cst = min(cst,k + N->childNode[s[j] - 'a']->cost);\n                } \n                N = N->childNode[s[j] - 'a'];\n            }else break;\n        }\n        return  dp[i] = cst;\n    }\n    \n\n    \n    int minimumCost(string s, vector<string>& w, vector<int>& c) {\n        root = new TrieNode();\n        memset(dp,-1,sizeof(dp));\n        for(int i = 0;i < w.size();i++){\n            insert_key(w[i],c[i]);\n        }\n        int k =  minCost(s,0);\n        if(k == INT_MAX)return -1;\n        return k;\n    }\n};",
    "submit_ts": "1720323847",
    "subm_id": "1312385479"
}