{
    "username": "bogo",
    "submission": "#define debug(x) cout << #x << '=' << x << endl\nclass Solution {\npublic:\n    int dx[4] = {-1, -1, 1, 1}, dy[4] = {1, -1, 1, -1}, n, m;\n    int minFlips(vector<vector<int>>& g) {\n        n = g.size();\n        m = g.begin()->size();\n        int qr = n / 2, qc = m / 2;\n        pair<int, int> sp[] = {{n - 1, 0}, {n - 1, m - 1}, {0, 0}, {0, m - 1}};\n        int sum = 0, cnt[2];\n        if (qr * qc >= 1)\n            for (int i = 0; i < qr; i++) {\n                for (int j = 0; j < qc; j++) {\n                    cnt[1] = cnt[0] = 0;\n                    for (int k = 0; k < 4; k++) {\n                        cnt[g[sp[k].first + i * dx[k]][sp[k].second + j * dy[k]]]++;\n                    }\n                    sum += min(cnt[0], cnt[1]);\n                }\n            }\n        cnt[1] = cnt[0] = 0;\n        if (n % 2) {\n            for (int j = 0; j < m / 2; j++) {\n                if (g[n >> 1][j] != g[n >> 1][m - j - 1]) {\n                    cnt[0]++;\n                } else {\n                    cnt[1] += g[n >> 1][j];\n                }\n            }\n        }\n        if (m % 2) {\n            for (int i = 0; i < n / 2; i++) {\n                if (g[i][m >> 1] != g[n - i - 1][m >> 1]) {\n                    cnt[0]++;\n                } else {\n                    cnt[1] += g[i][m >> 1];\n                }\n            }\n        }\n        //debug(sum);\n        //debug(cnt[1]);\n        //debug(cnt[0]);\n        if (n % 2 && m % 2 && g[n / 2][m / 2]) {\n            ++sum;\n        }\n        cnt[1] *= 2;\n        int mn = cnt[1];\n        for (int x = 0; x <= cnt[0]; x++) {\n            int res = (cnt[1] + x * 2) % 4;\n            mn = min(mn, min(res, 4 - res));\n            if (mn == 0) {\n                break;\n            }\n        }\n        sum += mn + cnt[0];\n        return sum;\n    }\n};",
    "submit_ts": "1722698531",
    "subm_id": "552271310"
}