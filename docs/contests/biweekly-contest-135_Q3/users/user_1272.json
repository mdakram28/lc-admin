{
    "username": "ArpitKrishna99",
    "submission": "import bisect\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        m = {}\n        v = []\n        for i in range(n // 2):\n            a = nums[i]\n            b = nums[n - i - 1]\n            diff = abs(a - b)\n            x = max(a, b, k - a, k - b)\n            if diff not in m:\n                m[diff] = []\n            m[diff].append(x)\n            v.append(x)\n        ans = n\n        v.sort()\n        for diff, values in m.items():\n            temp = bisect.bisect_left(v, diff)\n            temp = temp * 2 + (n // 2 - temp)\n            for x in values:\n                if x < diff:\n                    temp -= 2\n                else:\n                    temp -= 1\n            ans = min(ans, temp)\n\n        return ans\n",
    "submit_ts": "1721489023",
    "subm_id": "1327440435"
}