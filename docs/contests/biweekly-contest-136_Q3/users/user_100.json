{
    "username": "lifam",
    "submission": "class Solution {\n  public int minFlips(int[][] grid) {\n    int m = grid.length, n = grid[0].length;\n    int count = 0;\n    for (int i1 = 0, i2 = m - 1; i1 < i2; i1++, i2--) {\n      for (int k1 = 0, k2 = n - 1; k1 < k2; k1++, k2--) {\n        int v = grid[i1][k1] + grid[i1][k2] + grid[i2][k1] + grid[i2][k2];\n        int x = 4 - v;\n        count += Math.min(x, v);\n      }\n    }\n    if (m % 2 == 1 || n % 2 == 1) {\n      int countMid = 0, one = 0;\n      if (m % 2 == 1) {\n        int mid = m / 2;\n        for (int k1 = 0, k2 = n - 1; k1 < k2; k1++, k2--) {\n          if (grid[mid][k1] != grid[mid][k2]) {\n            countMid++;\n          }\n        }\n        for (int v : grid[mid]) {\n          if (v == 1) {\n            one++;\n          }\n        }\n      }\n      if (n % 2 == 1) {\n        int mid = n / 2;\n        for (int i1 = 0, i2 = m - 1; i1 < i2; i1++, i2--) {\n          if (grid[i1][mid] != grid[i2][mid]) {\n            countMid++;\n          }\n        }\n        for (int[] row : grid) {\n          if (row[mid] == 1) {\n            one++;\n          }\n        }\n      }\n      if (m % 2 == 1 && n % 2 == 1 && grid[m / 2][n / 2] == 1) {\n        one -= 2;\n        count++;\n      }\n      count += countMid;\n      one %= 4;\n      int x = 4 - one;\n      int flip = Math.min(one, x);\n      if (flip > countMid) {\n        count += flip - countMid;\n      }\n    }\n    return count;\n  }\n}",
    "submit_ts": "1722698718",
    "subm_id": "552272192"
}