{
    "username": "ran-shao-de-huo",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        @cache\n        def f(i1, j1, i2, j2):\n            x1, x2, y1, y2 = inf, 0, inf, 0\n            for i, row in enumerate(grid[i1:i2]):\n                for j, x in enumerate(row[j1:j2]):\n                    if x:\n                        if i < x1:\n                            x1 = i\n                        if i > x2:\n                            x2 = i\n                        if j < y1:\n                            y1 = j\n                        if j > y2:\n                            y2 = j\n            ret = (y2 - y1 + 1) * (x2 - x1 + 1)\n            return ret if 0 < ret < inf else 0\n        m, n = len(grid), len(grid[0])\n        ans = m * n\n        for i in range(m):\n            for j in range(n):\n                v1 = f(0, 0, i, n) + f(i, 0, m, j) + f(i, j, m, n)\n                v2 = f(i, 0, m, n) + f(0, 0, i, j) + f(0, j, i, n)\n                v3 = f(0, 0, m, j) + f(0, j, i, n) + f(i, j, m, n)\n                v4 = f(0, 0, i, j) + f(i, 0, m, j) + f(0, j, m, n)\n                v = min(v1, v2, v3, v4)\n                if v < ans:\n                    ans = v\n        for i in range(m - 1):\n            for j in range(i + 1, m):\n                v = f(0, 0, i, n) + f(i, 0, j, n) + f(j, 0, m, n)\n                if v < ans:\n                    ans = v\n        for i in range(n - 1):\n            for j in range(i + 1, n):\n                v = f(0, 0, m, i) + f(0, i, m, j) + f(0, j, m, n)\n                if v < ans:\n                    ans = v\n        return ans",
    "submit_ts": "1719114479",
    "subm_id": "541402051"
}