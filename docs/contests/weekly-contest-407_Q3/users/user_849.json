{
    "username": "fsyun",
    "submission": "class Solution {\n    public int maxOperations(String s) {\n        char[] str = s.toCharArray();\n        int n = str.length, end = n - 1, ans = 0;\n        while (end >= 0 && str[end] == '1')\n            end--;\n        if (end == -1)\n            return 0;\n        int p = 0;\n        LinkedList<Integer> l = new LinkedList<>();\n        while (true) {\n            while (p < end && str[p] == '0')\n                p++;\n            if (p == end)\n                break;\n            int q = p + 1;\n            while (q < end && str[q] == '1')\n                q++;\n            l.addLast(q - p);\n            p = q;\n        }\n        while (!l.isEmpty()) {\n            ans += l.getFirst() * l.size();\n            l.removeFirst();\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721530381",
    "subm_id": "1327931702"
}