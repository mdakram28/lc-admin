{
    "username": "avienn_x",
    "submission": "class Solution {\npublic:\n    long long mod = 1e9 + 7;\n    long long dp[2005][51][51] = {};\n    int n;\n    long long search(int index, int prev1, int prev2, vector<int>& nums){\n        if(index == n){\n            return 1;\n        }\n        if(dp[index][prev1][prev2] != -1)\n            return dp[index][prev1][prev2];\n        long long curr = 0;\n        for(int curr1 = prev1 ; curr1 <= nums[index]; curr1++){\n            for(int curr2 = prev2 ; curr2 >= 0 ; curr2--){\n                if(curr1 + curr2 != nums[index])\n                    continue;\n                curr += search(index + 1, curr1 , curr2 ,nums) % mod;\n            }\n        }\n        return dp[index][prev1][prev2] = curr % mod;\n    }\n    int countOfPairs(vector<int>& nums) {\n        memset(dp, -1 ,sizeof(dp));\n        n = nums.size();\n        for(int i = 0; i < 2002; i++)\n            dp[i][0][0] = -1;\n        int ans = search(0,0,nums[0],nums);\n        return ans;\n    }\n};",
    "submit_ts": "1723345645",
    "subm_id": "1351560250"
}