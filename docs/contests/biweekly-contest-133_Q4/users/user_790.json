{
    "username": "user5142ue",
    "submission": "package main\n\nimport \"fmt\"\n\nfunc numberOfPermutations(monkeyCount int, bananaRequests [][]int) int {\n\tconst MONKEY_MOD = 1_000_000_007\n\tconst MAX_MONKEY_INVERSIONS = 400\n\n\t// Prepare banana requests map\n\trequestMap := make(map[int]int)\n\tfor _, banana := range bananaRequests {\n\t\trequestMap[banana[0] + 1] = banana[1]\n\t}\n\n\t// DP table to count permutations with a given number of inversions up to position `monkeyLength`\n\tbananaCounts := make([][]int, monkeyCount + 1)\n\tfor i := range bananaCounts {\n\t\tbananaCounts[i] = make([]int, MAX_MONKEY_INVERSIONS + 1)\n\t}\n\tbananaCounts[0][0] = 1\n\n\t// Iterating through the monkey lengths and banana inversions\n\tfor monkeyLength := 1; monkeyLength <= monkeyCount; monkeyLength++ {\n\t\tfor inv := 0; inv <= MAX_MONKEY_INVERSIONS; inv++ {\n\t\t\tfor newPos := 0; newPos < monkeyLength; newPos++ {\n\t\t\t\tprevInv := inv - newPos\n\t\t\t\tif prevInv >= 0 {\n\t\t\t\t\tbananaCounts[monkeyLength][inv] = (bananaCounts[monkeyLength][inv] + bananaCounts[monkeyLength - 1][prevInv]) % MONKEY_MOD\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Apply the banana logic\n\t\tif targetInv, ok := requestMap[monkeyLength]; ok {\n\t\t\tfor inv := 0; inv <= MAX_MONKEY_INVERSIONS; inv++ {\n\t\t\t\tif inv != targetInv {\n\t\t\t\t\tbananaCounts[monkeyLength][inv] = 0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Sum up all valid permutations\n\tresult := 0\n\tfor inv := 0; inv <= MAX_MONKEY_INVERSIONS; inv++ {\n\t\tresult = (result + bananaCounts[monkeyCount][inv]) % MONKEY_MOD\n\t}\n\n\treturn result\n}",
    "submit_ts": "1719070332",
    "subm_id": "1296820427"
}