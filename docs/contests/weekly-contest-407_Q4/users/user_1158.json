{
    "username": "MadhavCoding",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<long long> diff(n);\n        \n        for (int i = 0; i < n; ++i) \n        {\n            diff[i] = target[i] - nums[i];\n        }\n        \n        long long res = 0;\n        vector<long long> op(n);\n        int lastn = -1, lastp = -1;\n        for(int i = 0; i < n; i++)\n        {\n            if(diff[i] < 0)\n            {\n                if(lastn == -1) \n                {\n                    long long prev = 0;\n                    if(i-1 >= 0) prev = op[i-1];\n                    op[i] = abs(diff[i]) + prev;\n                }\n                else\n                {\n                    int pos = i - lastn - 1;\n                    long long num = min(abs(diff[lastn]), abs(diff[i]));\n                    long long temp1 = op[i-1] + abs(diff[i]);\n                    long long temp2 = op[i-1] + num*pos + (abs(diff[i]) - num);\n                    op[i] = min(temp1, temp2);\n                }\n                lastn = i;\n            }\n            else\n            {\n                if(lastp == -1) \n                {\n                    long long prev = 0;\n                    if(i-1 >= 0) prev = op[i-1];\n                    op[i] = abs(diff[i]) + prev;\n                }\n                else\n                {\n                    int neg = i - lastp - 1;\n                    long long num = min(abs(diff[lastp]), abs(diff[i]));\n                    long long temp1 = op[i-1] + abs(diff[i]);\n                    long long temp2 = op[i-1] + num*neg + (abs(diff[i]) - num);\n                    op[i] = min(temp1, temp2);\n                }\n                lastp = i;\n            }\n        }\n        \n        return op[n-1];\n    }\n};",
    "submit_ts": "1721532772",
    "subm_id": "1327993719"
}