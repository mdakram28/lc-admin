{
    "username": "miteshkhemani8",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> freq;\n        int n = nums.size();\n        vector<int> v;\n        for(int i=0;i<int(nums.size())/2;i++) {\n            freq[abs(nums[i]-nums[n-1-i])] ++;\n            int mx = max(nums[i], nums[n-1-i]);\n            int mn = min(nums[i], nums[n-1-i]);\n            v.push_back(mx-mn + max(k-mx, mn-0));\n            // cout << \"* \" << abs(nums[i]-nums[n-1-i]) << \"\\n\";\n        }\n        sort(v.begin(),v.end());\n        // for(int i : v)\n        //     cout << i << \" \";\n        int ans = INT_MAX;\n        for(auto &[key, value] : freq) {\n            int idx = lower_bound(v.begin(), v.end(), key) - v.begin();\n            int later = int(v.size()) - idx;\n            int prev = idx;\n            ans = min(ans, later - value + (2 * prev));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488339",
    "subm_id": "1327419179"
}