{
    "username": "WindJ0Y",
    "submission": "template <class T>\nstruct fenwick {\n  int n;\n  vector<T> t;\n  fenwick(int n) : n(n), t(n) {}\n  void add(int p, T x) {\n    // assert(0 <= p && p < n);\n    for (; p < n; p |= p + 1) t[p] += x;\n  }\n  T sum(int p) {\n    T ans = 0;\n    for (; p >= 0; p = (p & (p + 1)) - 1) ans += t[p];\n    return ans;\n  }\n  void set(int p, T x) { add(p, x - range_sum(p, p)); }\n  T range_sum(int l, int r) { return sum(r) - sum(l - 1); }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        \n        fenwick<long long> bit(nums.size() + 10);\n\n        for (int i = 1; i < nums.size() - 1; i++){\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                bit.add(i + 1, 1);\n            }\n        }\n\n        vector<int> ans;\n\n        for (auto line : queries) {\n            int type = line[0];\n            int v1 = line[1];\n            int v2 = line[2];\n            if (type == 1) {\n                v1 ++; v2 ++;\n                v1 ++; v2 --;\n                if (v1 > v2) {\n                    ans.push_back(0);\n                } else {\n                    ans.push_back(bit.range_sum(v1, v2));\n                }\n            } else {\n                nums[v1] = v2;\n                for (int pos = v1 - 1; pos <= v1 + 1; pos++) {\n                    bool bad = false;\n                    for (int dpos = pos - 1; dpos <= pos + 1; dpos++) {\n                        if (dpos < 0 || dpos >= nums.size()) {\n                            bad = true;\n                            break;\n                        }\n                    }\n                    if (!bad) {\n                        int result = (nums[pos] > nums[pos - 1] && nums[pos] > nums[pos + 1]);\n                        bit.set(pos + 1, result);\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1718507072",
    "subm_id": "539779069"
}