{
    "username": "Invincible_demon",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(const vector<int>& colors, int k) {\n     ios_base::sync_with_stdio(false);\n     cin.tie(NULL);  \n     int n = colors.size();\n     if(n < 0) return 0;\n     if(n == 0) return 0;\n     vector<int>Col(n + k - 1);\n\n        for (int i = 0; i < n; ++i) {\n            Col[i] = colors[i];\n        }\n        \n        for (int i = 0; i < k - 1; ++i) {\n            Col[n + i] = colors[i];\n        }\n        \n        int m=Col.size();\n        if(m < 0) return 0;\n        int ans = 0;\n        int cnt = 1;\n        for (int i = 1; i <m; ++i) {\n            if (Col[i] != Col[i - 1]) cnt++;\n             else {\n                cnt = 1;\n            }\n            if (cnt >= k)  ans++;\n        }\n        \n        if(ans < 0) return 0;\n        return ans;\n    }\n};",
    "submit_ts": "1720281555",
    "subm_id": "1311829586"
}