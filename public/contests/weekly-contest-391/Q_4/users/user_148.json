{
    "username": "123GJWEQ2",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        for i in range(len(points)):\n            points[i] = tuple(points[i])\n        res = float(\"inf\")\n        \n        def MaxDist(A, N):\n            V = [0 for i in range(N)]\n            V1 = [0 for i in range(N)]\n            map1 = {}\n            map2 = {}\n\n            for i in range(N):\n                V[i] = A[i][0] + A[i][1]\n                map1[V[i]] = A[i]\n                V1[i] = A[i][0] - A[i][1]\n                map2[V1[i]] = A[i]\n            V.sort()\n            V1.sort()\n\n            maximum = max(V[-1] - V[0],\n                          V1[-1] - V1[0])\n            \n            if V[-1] - V[0] > V1[-1] - V1[0]:\n                return maximum, map1[V[0]], map1[V[-1]]\n            return maximum, map2[V1[0]], map2[V1[-1]]\n\n            \n        maximum, p1, p2 = MaxDist(points, len(points))\n        points.remove(p1)\n        res = min(res, MaxDist(points, len(points))[0])\n        points.append(p1)\n        points.remove(p2)\n        res = min(res, MaxDist(points, len(points))[0])\n        \n        return res"
}