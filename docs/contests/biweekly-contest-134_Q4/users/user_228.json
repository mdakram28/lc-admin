{
    "username": "dd2307",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        st = [[0] * 20 for _ in range(n)]\n        for i in range(n):\n            st[i][0] = nums[i]\n        j = 1\n        while (1 << j) <= n:\n            i = 0\n            while (i + (1 << j) - 1) < n:\n                st[i][j] = st[i][j - 1] & st[i + (1 << (j - 1))][j - 1]\n                i += 1\n            j += 1\n\n        def range_and(l, r):\n            log = (r - l + 1).bit_length() - 1\n            return st[l][log] & st[r - (1 << log) + 1][log]\n\n        ans = 0\n        for s in range(n):\n            left = -1\n            l, r = s, n - 1\n            while l <= r:\n                mid = (l + r) // 2\n                if range_and(s, mid) >= k:\n                    if range_and(s, mid) == k:\n                        left = mid\n                    l = mid + 1\n                else:\n                    r = mid - 1\n\n            right = -1\n            l, r = s, n - 1\n            while l <= r:\n                mid = (l + r + 1) // 2\n                if range_and(s, mid) <= k:\n                    if range_and(s, mid) == k:\n                        right = mid\n                    r = mid - 1\n                else:\n                    l = mid + 1\n\n            if left != -1 and right != -1 and range_and(s, left) == k and range_and(s, right) == k:\n                ans += (left - right + 1)\n\n        return ans",
    "submit_ts": "1720278140",
    "subm_id": "1311696132"
}