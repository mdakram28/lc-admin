{
    "username": "Harman_4",
    "submission": "class Solution {\npublic:\n    int find(vector<int>& par,int u){\n        if(par[u]!=u){\n            par[u]=find(par,par[u]);\n        }\n        return par[u];\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        vector<vector<long long>> adj(circles.size(),vector<long long>());\n        vector<int> par(circles.size());\n        vector<long long> left(circles.size());\n        vector<long long> right(circles.size());\n        vector<long long> top(circles.size());\n        vector<long long> bottom(circles.size());\n        for(int i=0;i<circles.size();i++){\n            long long x=circles[i][0];\n            long long y=circles[i][1];\n            long long r=circles[i][2];\n            par[i]=i;\n            left[i]=x-r;\n            right[i]=x+r;\n            bottom[i]=y-r;\n            top[i]=y+r;\n            if(x*x+y*y<=r*r)return false;\n            for(int j=0;j<i;j++){\n                long long x2=circles[j][0]-x;\n                long long y2=circles[j][1]-y;\n                long long r2=circles[j][2];\n                if(x2*x2+y2*y2>r*r+r2*r2+2*r*r2)continue;\n                int u = find(par,j);\n                if(u==i)continue;\n                par[u]=i;\n                left[i]=min(left[u],left[i]);\n                bottom[i]=min(bottom[u],bottom[i]);\n                right[i]=max(right[u],right[i]);\n                top[i]=max(top[u],top[i]);\n            }\n        }\n        for(int i=0;i<circles.size();i++){\n            if(par[i]!=i)continue;\n            int l=0,r=0,b=0,t=0;\n            if(left[i]<=0)l=1;\n            if(bottom[i]<=0)b=1;\n            if(top[i]>=Y)t=1;\n            if(right[i]>=X)r=1;\n            if(l*b||l*r||t*b||t*r)return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722136911",
    "subm_id": "1335748619"
}