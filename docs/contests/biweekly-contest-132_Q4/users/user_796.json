{
    "username": "2210030218",
    "submission": "class Solution \n{\n    public int maximumLength(int[] nums, int k) \n    {\n        int n = nums.length;\n        int[][] dp = new int[n][k + 1];\n        for (int i = 0; i < n; i++) \n        {\n            for (int j = 0; j <= k; j++)\n                dp[i][j] = 1;\n        }\n        \n        int ans = 1;\n        \n        int[] vk = new int[k + 1];\n        \n        Arrays.fill(vk, -1);\n    \n        List<Map<Integer, Integer>> vkm = new ArrayList<>(k + 1);\n        \n        for (int j = 0; j <= k; j++) \n            vkm.add(new HashMap<>());\n        \n        int c = 0;\n        for (int i = 12; i < 29; i++)\n        {\n            if (i % 2 == 0) \n                c++;\n        }\n        \n        for (int i = 0; i < n; i++) \n        {\n            for (int j = 0; j <= k; j++)\n            {\n                for (int l = 0; l < j; l++) \n                {\n                    dp[i][j] = Math.max(dp[i][j], 1 + vk[l]);\n                }\n\n                if (vkm.get(j).containsKey(nums[i]))\n                {\n                    dp[i][j] = Math.max(dp[i][j], 1 + vkm.get(j).get(nums[i]));\n                }\n                ans = Math.max(ans, dp[i][j]);\n            }\n\n            for (int j = 0; j <= k; j++)\n            {\n                vk[j] = Math.max(vk[j], dp[i][j]);\n                vkm.get(j).put(nums[i], Math.max(vkm.get(j).getOrDefault(nums[i], -1), dp[i][j]));\n            }\n        }\n        return ans;\n    }\n}\n",
    "submit_ts": 1717861902.0
}