{
    "username": "ericanderson",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        max_j = 1\n        while 2**max_j <= k + 1:\n            max_j += 1\n        \n        dp = {}\n        def dfs(i, jump, consecutive):\n            if i > k + 1:\n                return 0\n            key = (i, jump, consecutive)\n            if not key in dp:\n                res = i == k\n                if not consecutive and i - 1 >= 0:\n                    res += dfs(i - 1, jump, True)\n                res += dfs(i + 2**jump, jump + 1, False)\n                dp[(i, jump, consecutive)] = res\n            return dp[key]\n        return dfs(1, 0, False)",
    "submit_ts": 1716088305.0
}