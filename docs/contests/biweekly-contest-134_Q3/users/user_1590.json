{
    "username": "itsguptapriyank",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors, k):\n        seen = 0\n        i = 0\n        j = 1\n        n = len(colors)\n        \n        while j < n + k and i < n:\n            ValTemp = j\n            endOfVal = ValTemp % n\n            \n            # Find the end of the current alternating group\n            while colors[endOfVal] != colors[(endOfVal - 1 + n) % n] and ValTemp < n + k - 1:\n                ValTemp += 1\n                endOfVal = ValTemp % n\n            \n            # Calculate the number of groups found\n            g=ValTemp - i - k + 1\n            if g>0:\n                seen+=g\n            i = ValTemp\n            j = i + 1\n        \n        return seen",
    "submit_ts": "1720281064",
    "subm_id": "1311811886"
}