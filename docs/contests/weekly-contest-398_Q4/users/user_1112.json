{
    "username": "vijaypurohit",
    "submission": "class Solution {\npublic:\n    int k;\n    unordered_map<string, int> dp;\n    // vector<vector<vector<int>>> dp;\n    int waysToReachStair(int k) {\n        this->k = k;\n        // dp.resize()\n        return solve(1, 0, true);\n    }\n\n    int solve(int i, int jump, bool canDecrement){\n        if((i > k+1) or (!canDecrement and i >= k+1)) return 0;\n        string key = to_string(i) + \"-\" + to_string(jump) + \"-\" + to_string(canDecrement);\n        if(dp.count(key)) return dp[key];\n        int ans = (i == k);\n        if(canDecrement){\n            ans += solve(i-1, jump, false);\n        }\n        if(i + (1<<jump) <= k+1){\n            ans += solve(i + (1<<jump), jump + 1, true);\n        }\n        return  dp[key] = ans;\n    }\n};\n",
    "submit_ts": "1716090579",
    "subm_id": "1261870582"
}