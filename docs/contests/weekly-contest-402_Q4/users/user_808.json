{
    "username": "knarf",
    "submission": "class Solution {\n    int lowbit(int x) {\n        return x & (-x);\n    }\n\n    void update(int p,int v,int[] a) {\n        int n = a.length;\n        while(p<n) {\n            a[p] += v;\n            p += lowbit(p);\n        }\n    }\n\n    int getSum(int x,int[] a) {\n        int res = 0;\n        while(x>0) {\n            res += a[x];\n            x -= lowbit(x);\n        }\n        return res;\n    }\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        int m = queries.length;\n        List<Integer> res = new ArrayList<>();\n        HashSet<Integer> hs = new HashSet<>();\n        int[] arr = new int[n+1];\n        for(int i=1;i<n-1;i++) {\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]) {\n                hs.add(i);\n                update(i+1,1,arr);\n            }\n        }\n        // System.out.println(hs);\n        // System.out.println(Arrays.toString(arr));\n        for(int[] q:queries) {\n            if(q[0] == 1) {\n                // System.out.println(Arrays.toString(nums));\n                // System.out.println(Arrays.toString(arr));\n                // System.out.println(String.format(\"%d %d %d %d\",q[2],q[1],getSum(q[2]+1,arr),getSum(q[1],arr)));\n                int t = getSum(q[2]+1,arr)-getSum(q[1],arr);\n                if(hs.contains(q[2])) t--;\n                if(q[1] != q[2] && hs.contains(q[1])) t--;\n                res.add(t);\n            } else {\n                nums[q[1]] = q[2];\n                check(q[1],nums,arr,hs);\n                if(q[1]<n-1) check(q[1]+1,nums,arr,hs);;\n                if(q[1]>0) check(q[1]-1,nums,arr,hs);;\n            }\n        }\n        return res;\n    }\n\n    void check(int index,int[] nums,int[] arr,HashSet<Integer> hs) {\n        if(index == 0 || index == nums.length-1) return ;\n        boolean flag = (nums[index]>nums[index-1]) && (nums[index]>nums[index+1]);\n        // System.out.println(flag);\n        // System.out.println(hs.contains(index));\n        // System.out.println(index);\n        if(hs.contains(index) == flag) return;\n        if(flag) {\n            update(index+1,1,arr);\n            hs.add(index);\n        } else {\n            update(index+1,-1,arr);\n            hs.remove(index);\n        }\n    }\n}",
    "submit_ts": 1718507924.0
}