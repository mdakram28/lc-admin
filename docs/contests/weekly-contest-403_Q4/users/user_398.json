{
    "username": "weiyuanwang2020-2",
    "submission": "class Solution {\n    int cnt = 1;\n    int ans = -1;\n    \n    public int minimumSum(int[][] grid) {\n        int m = grid.length, n = grid[0].length;\n        dfs(grid, 0, m, 0 , n, 0);\n        return ans;\n    }\n    \n    public void dfs(int[][] grid, int ml, int mr, int nl, int nr, int other) {\n        if(cnt == 3){\n            int cur = help(grid, ml, mr, nl, nr);\n            if(ans == -1){\n                ans = cur + other;\n            }else{\n                ans = Math.min(ans, cur + other);\n            }\n            return;\n        }\n        for(int i = ml + 1; i < mr; i++){\n            int a = help(grid, ml, i, nl, nr);\n            int b = help(grid, i, mr, nl, nr);\n            cnt++;\n            dfs(grid, ml, i, nl, nr, other + b);\n            dfs(grid, i, mr, nl, nr, other + a);\n            cnt --;\n        }\n        for(int j = nl + 1; j < nr; j++){\n            int a = help(grid, ml, mr, nl, j);\n            int b = help(grid, ml, mr, j, nr);\n            cnt++;\n            dfs(grid, ml, mr, nl, j, other + b);\n            dfs(grid, ml, mr, j, nr, other + a);\n            cnt--;\n        }\n    }\n    \n    public int help(int[][] grid, int ml, int mr, int nl, int nr) {\n        int lx = -1, ly = -1, rx = -1, ry = -1;\n        for(int i = ml; i < mr; i++){\n            for(int j = nl; j < nr; j++){\n                if(grid[i][j] == 1){\n                    lx = lx == -1 ? i : Math.min(lx, i);\n                    ly = ly == -1 ? j : Math.min(ly, j);\n                    rx = rx == -1 ? i : Math.max(rx, i);\n                    ry = ry == -1 ? j : Math.max(ry, j);\n                }\n            }\n        }\n        \n        return (ry + 1 - ly) * (rx + 1 - lx);\n    }\n}",
    "submit_ts": 1719114864.0
}