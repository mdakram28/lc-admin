{
    "username": "sgdfbahjbhbaisdufg",
    "submission": "class Solution {\n    int maxdist(const vector<vector<int>>& points, vector<int> idxs) {\n        int k = idxs.size();\n        int ans = 0;\n        for (int j = 0; j < k; ++j) {\n            for (int t = 0; t < j; ++t) {\n                int localans = abs(points[idxs[j]][0] - points[idxs[t]][0]) + abs(points[idxs[j]][1] - points[idxs[t]][1]);\n                ans = max(ans, localans);\n            }\n        }\n        return ans;\n    }\n    \npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<vector<pair<int, int>>> l(5);\n        for (int i = 0; i < n; ++i) {\n            l[1].emplace_back(points[i][0] + points[i][1], i);\n            l[2].emplace_back(-points[i][0] + points[i][1], i);\n            l[3].emplace_back(points[i][0] - points[i][1], i);\n            l[4].emplace_back(-points[i][0] - points[i][1], i);\n        }\n        sort(l[1].begin(), l[1].end());\n        sort(l[2].begin(), l[2].end());\n        sort(l[3].begin(), l[3].end());\n        sort(l[4].begin(), l[4].end());\n        \n        int ans = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            vector<int> idxs;\n            for (int a = 1; a <= 4; ++a) {\n                int m = l[a].size();\n                if (l[a][m-1].second == i) {\n                    idxs.push_back(l[a][m-2].second);\n                } else {\n                    idxs.push_back(l[a][m-1].second);\n                }\n            }\n            int localans = maxdist(points, idxs);\n            ans = min(ans, localans);\n        }\n        \n        return ans;\n\n    }\n};"
}