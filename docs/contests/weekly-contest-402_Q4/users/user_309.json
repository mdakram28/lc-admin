{
    "username": "jiangjinjinyxt",
    "submission": "class Tree:\n    def __init__(self, arr):\n        n = len(arr)\n        self.arr = arr\n        nums = [0] * (2 * n)\n        for i in range(n):\n            if i != 0 and i != n - 1 and arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n                nums[i + n] = 1\n        for i in range(n - 1, 0, -1):\n            nums[i] = nums[i << 1] + nums[i << 1 | 1]\n        self.nums = nums\n    \n    def up(self, i):\n        arr, nums = self.arr, self.nums\n        n = len(arr)\n        prev = nums[i + n]\n        if i != 0 and i != n - 1 and arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            nums[i + n] = 1\n        else:\n            nums[i + n] = 0\n        if prev == nums[i + n]:\n            return\n        i += n\n        i >>= 1\n        while i > 0:\n            nums[i] = nums[i << 1] + nums[i << 1 | 1]\n            i >>= 1\n    def update(self, i, val):\n        arr = self.arr\n        arr[i] = val\n        if i - 1 >= 0:\n            self.up(i - 1)\n        self.up(i)\n        if i + 1 < len(arr):\n            self.up(i + 1)\n    \n    def query(self, lo, hi):\n        ans = 0\n        nums, n = self.nums, len(self.arr)\n        lo, hi = lo + n + 1, hi + n - 1\n        while lo <= hi:\n            if lo & 1:\n                ans += nums[lo]\n                lo += 1\n            if not (hi & 1):\n                ans += nums[hi]\n                hi -= 1\n            lo >>= 1\n            hi >>= 1\n        return ans\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        tree = Tree(nums)\n        ans = []\n        for i, l, r in queries:\n            if i == 2:\n                tree.update(l, r)\n            else:\n                ans.append(tree.query(l, r))\n        return ans",
    "submit_ts": "1718507120",
    "subm_id": "539779365"
}