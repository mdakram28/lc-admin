{
    "username": "realstar",
    "submission": "class Solution {\n    public int maximumSumSubsequence(int[] nums, int[][] queries) {\n        int n = nums.length;\n        int[] change = new int[n + 1];\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n        \tchange[i + 1] = Math.max(nums[i] - change[i], 0);\n        \tcount += change[i + 1];\n        }\n        long result = 0;\n        for (int[] q : queries) {\n        \tint index = q[0];\n        \tnums[index] = q[1];\n        \twhile (index < n) {\n        \t\tint now = Math.max(nums[index] - change[index], 0);\n        \t\tif (now == change[index + 1])\n        \t\t\tbreak;\n        \t\tcount += now - change[index + 1];\n        \t\tchange[index + 1] = now;\n        \t\tindex++;\n        \t}\n        \tresult = (result + count) % 1000000007;\n        }\n        return (int)result;\n    }\n}",
    "submit_ts": "1716695173",
    "subm_id": "1268135170"
}