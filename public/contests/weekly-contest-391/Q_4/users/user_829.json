{
    "username": "ynnekuw",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        sum_val = []\n        diff_val = []\n        for i, (x, y) in enumerate(points):\n            sum_val.append((x + y, i))\n            diff_val.append((x - y, i))\n        \n        sum_val.sort()\n        diff_val.sort()\n        \n        ans = float('inf')\n        for i in range(n):\n            # Sum\n            if sum_val[0][1] == i:\n                max_sum = sum_val[-1][0] - sum_val[1][0]\n            elif sum_val[-1][1] == i:\n                max_sum = sum_val[-2][0] - sum_val[0][0]\n            else:\n                max_sum = sum_val[-1][0] - sum_val[0][0]\n            \n            # Diff\n            if diff_val[0][1] == i:\n                max_diff = diff_val[-1][0] - diff_val[1][0]\n            elif diff_val[-1][1] == i:\n                max_diff = diff_val[-2][0] - diff_val[0][0]\n            else:\n                max_diff = diff_val[-1][0] - diff_val[0][0]\n            \n            ans = min(ans, max(max_sum, max_diff))\n        \n        return ans"
}