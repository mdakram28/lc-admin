{
    "username": "jamshedmd1111",
    "submission": "#define ll long long int\n\n\nclass DSU{\n    vector<ll> p;//parent\n    vector<ll> s;//size\n    \npublic:\n\n    DSU(ll n){\n        p.assign(n+1, 0);\n        s.assign(n+1, 1);\n\n        for(ll i = 0; i<=n; i++){\n            p[i] = i;\n        }\n    }\n\n    void mergeAtoB(ll a, ll b){\n        a = getParent(a);\n        b = getParent(b);\n        if(a!=b){\n            p[a] = b;\n            s[b] += s[a];\n        }\n    }\n\n    void merge(ll a, ll b){\n        a = getParent(a);\n        b = getParent(b);\n        if(a!=b){\n\n            if(s[a] < s[b]){\n                p[a] = b;\n                s[b] += s[a];\n            }\n            else{\n                p[b] = a;\n                s[a] += s[b];\n            }\n        }\n    }\n\n    ll getSize(ll a){\n        a = getParent(a);\n        return s[a];\n    }\n\n    ll getParent(ll a){\n        if(p[a] == a){\n            return a;\n        }\n        return p[a] = getParent(p[a]);\n    }\n};\n\n\nclass Solution {\npublic:\n    bool canReachCorner(int x, int y, vector<vector<int>>& a) {\n        ll n = a.size();\n        \n        DSU dsu(n + 5);\n        \n        for(ll i = 0; i<n; i++){\n            if(a[i][1] <= a[i][2]){\n                dsu.merge(i, n + 1);\n            }\n            if(a[i][0] <= a[i][2]){\n                dsu.merge(i, n + 2);\n            }\n            if(x - a[i][0] <= a[i][2]){\n                dsu.merge(i, n + 1);\n            }\n            if(y - a[i][1] <= a[i][2]){\n                dsu.merge(i, n + 2);\n            }\n            for(ll j = i + 1; j<n; j++){\n                double d = sqrtl(powl(a[j][0] - a[i][0], 2) + powl(a[j][1] - a[i][1], 2));\n    \n                if (d <= a[i][2] + a[j][2] && d >= fabs(a[i][2] - a[j][2])) {\n                    dsu.merge(i, j);\n                }\n            }\n        }\n        \n        return dsu.getParent(n + 1) != dsu.getParent(n + 2);\n    }\n};",
    "submit_ts": "1722137228",
    "subm_id": "1335757831"
}