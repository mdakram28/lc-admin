{
    "username": "zhen-61",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int len=nums.size();\n        long long ans=0;\n        int bit[31]={0},j=0;\n        while(k){\n            bit[j]=k&1;\n            k/=2;\n            j++;\n        }\n        vector<vector<int> > dp(len,vector<int>(31,0));\n        for(int i=0;i<len;i++){\n            for(int j=0;j<=30;j++){\n                if(nums[i]&(1<<j)){\n                    dp[i][j]=i-1>=0?dp[i-1][j]+1:1;\n                }\n            }\n        }\n        for(int i=0;i<len;i++){\n            int maxl=-1,minl=0;\n            bool f=true;\n            for(int j=0;j<=30;j++){\n                if(bit[j]){\n                    if(dp[i][j]==0||dp[i][j]<minl){\n                        maxl=-1;\n                        break;\n                    }\n                    maxl=maxl<0?dp[i][j]:min(maxl,dp[i][j]);\n                    minl=minl==0?1:minl;\n                }\n                else{\n                    if(dp[i][j]==i+1){\n                        maxl=-1;\n                        break;\n                    }\n                    minl=minl==0?dp[i][j]+1:max(minl,dp[i][j]+1);\n                    maxl=maxl<0?i+1:maxl;\n                }\n            }\n            if(maxl>=minl)\n                ans+=(maxl-minl+1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281014",
    "subm_id": "544574210"
}