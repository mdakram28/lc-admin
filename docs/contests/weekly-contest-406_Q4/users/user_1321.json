{
    "username": "Srivani_Ganji",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int h = 0, v = 0; \n        long long hCount = 1, vCount = 1; \n        long long cost = 0;\n\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                cost += horizontalCut[h] * vCount;\n                hCount++;\n                h++;\n            } else {\n                cost += verticalCut[v] * hCount;\n                vCount++;\n                v++;\n            }\n        }\n\n        while (h < horizontalCut.size()) {\n            cost += horizontalCut[h] * vCount;\n            h++;\n        }\n\n        while (v < verticalCut.size()) {\n            cost += verticalCut[v] * hCount;\n            v++;\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720926185",
    "subm_id": "1320278478"
}