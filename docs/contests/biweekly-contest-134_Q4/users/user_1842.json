{
    "username": "r80steam",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        int dp[n][32] ;\n        vector<int> v(32,n);\n        // for(int i=0;i<32;i++) v[i]=32;\n        for(int i=n-1;i>=0;i--){\n            for(int j=0;j<32;j++){\n                   \n                   if(nums[i] & (1<<j)){\n                    dp[i][j] = v[j];\n                   }\n                   else {\n                    dp[i][j] = i;\n                    v[j] = i;\n                   }\n            }\n        }\n\n        long long val =0;\n         \n         for(int i=0;i<n;i++){\n            int ans1=-1;\n            int ans2 = n-1;\n            for(int j=0;j<32;j++){\n\n            if(!(k & (1<<j)))    ans1 = max(ans1,dp[i][j]);\n            else  ans2 = min(ans2,dp[i][j]-1);\n            // if(j==0) cout<<i<<\" \"<<ans1<<\" \"<<ans2<<endl;\n            }\n            \n           if(ans2-ans1+1>=0) val += (ans2-ans1+1);\n         }\n         return val;\n    }\n};",
    "submit_ts": "1720281562",
    "subm_id": "1311829912"
}