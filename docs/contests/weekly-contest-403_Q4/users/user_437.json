{
    "username": "hccyril",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        def calc2(grid):\n            n = len(grid)\n            m = len(grid[0])\n            ps, ss = [0] * n, [0] * n\n            mi_i, ma_i, mi_j, ma_j = 999, 0, 999, 0\n            for i in range(n):\n                for j, x in enumerate(grid[i]):\n                    if x == 1:\n                        mi_i = min(mi_i, i)\n                        ma_i = max(ma_i, i)\n                        mi_j = min(mi_j, j)\n                        ma_j = max(ma_j, j)\n                if ma_i >= mi_i:\n                    ps[i] = (ma_i - mi_i + 1) * (ma_j - mi_j + 1)\n            mi_i, ma_i, mi_j, ma_j = m + n, -1, m + n, -1\n            for i in range(n - 1, -1, -1):\n                for j, x in enumerate(grid[i]):\n                    if x == 1:\n                        mi_i = min(mi_i, i)\n                        ma_i = max(ma_i, i)\n                        mi_j = min(mi_j, j)\n                        ma_j = max(ma_j, j)\n                if ma_i >= mi_i:\n                    ss[i] = (ma_i - mi_i + 1) * (ma_j - mi_j + 1)\n            ans = 999\n            for r in range(1, n):\n                ans = min(ans, ps[r - 1] + ss[r])\n\n            return ans\n\n        def calc3(grid):\n            n = len(grid)\n            m = len(grid[0])\n            ps, ss = [0] * n, [0] * n\n            mi_i, ma_i, mi_j, ma_j = m + n, 0, m + n, 0\n            for i in range(n):\n                for j, x in enumerate(grid[i]):\n                    if x == 1:\n                        mi_i = min(mi_i, i)\n                        ma_i = max(ma_i, i)\n                        mi_j = min(mi_j, j)\n                        ma_j = max(ma_j, j)\n                if ma_i >= mi_i:\n                    ps[i] = (ma_i - mi_i + 1) * (ma_j - mi_j + 1)\n            mi_i, ma_i, mi_j, ma_j = m + n, -1, m + n, -1\n            for i in range(n - 1, -1, -1):\n                for j, x in enumerate(grid[i]):\n                    if x == 1:\n                        mi_i = min(mi_i, i)\n                        ma_i = max(ma_i, i)\n                        mi_j = min(mi_j, j)\n                        ma_j = max(ma_j, j)\n                if ma_i >= mi_i:\n                    ss[i] = (ma_i - mi_i + 1) * (ma_j - mi_j + 1)\n                \n            ans = m * n + 1 \n            for r1 in range(1, n):\n                # \u4e0a\u4e0b\n                if r1 > 1:\n                    a3 = ss[r1]\n                    for r0 in range(1, r1 - 1):\n                        mi_i, ma_i, mi_j, ma_j = m + n, -1, m + n, -1\n                        for i in range(r1 - 1, 0, -1):\n                            a1 = ps[i - 1]\n                            for j, x in enumerate(grid[i]):\n                                if x == 1:\n                                    mi_i = min(mi_i, i)\n                                    ma_i = max(ma_i, i)\n                                    mi_j = min(mi_j, j)\n                                    ma_j = max(ma_j, j)\n                            if ma_i >= mi_i:\n                                a2 = (ma_i - mi_i + 1) * (ma_j - mi_j + 1)\n                                ans = min(ans, a1 + a2 + a3)              \n                # \u5de6\u53f3\n                a3 = ss[r1]\n                ans = min(ans, calc2([list(r) for r in zip(*grid[:r1])]) + a3)\n                a1 = ps[r1 - 1]\n                ans = min(ans, a1 + calc2([list(r) for r in zip(*grid[r1:])]))\n\n            return ans\n        \n        return min(calc3(grid), calc3([list(r) for r in zip(*grid)]))",
    "submit_ts": 1719115079.0
}