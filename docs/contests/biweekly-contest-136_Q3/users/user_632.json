{
    "username": "Rene21",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        \n        int flip = 0;\n        for (int i = 0; i < m/2; i++) {\n            for (int j = 0; j < n/2; j++) {\n                int cnt1 = 0;\n                cnt1 += grid[i][j];\n                cnt1 += grid[m-1-i][j];\n                cnt1 += grid[i][n-1-j];\n                cnt1 += grid[m-1-i][n-1-j];\n                if (cnt1 < 2)\n                    flip += cnt1;\n                else\n                    flip += 4-cnt1;\n            }\n        }\n        //cout << \"first:\" << flip << endl;\n        \n        int pair_1_cnt = 0;\n        int diff_pair_cnt = 0;\n        if (m&1) {\n            int idx = m/2;\n            for (int i = 0; i < n/2; i++) {\n                if (grid[idx][i] != grid[idx][n-1-i]) {\n                    diff_pair_cnt++;\n                } else if (grid[idx][i] == 1) {\n                    pair_1_cnt++;\n                }\n            }\n        }\n        \n        if (n&1) {\n            int idx = n/2;\n            for (int i = 0; i < m/2; i++) {\n                if (grid[i][idx] != grid[m-1-i][idx]) {\n                    diff_pair_cnt++;\n                } else if (grid[i][idx] == 1) {\n                    pair_1_cnt++;\n                }\n            }\n        }\n        \n        if (pair_1_cnt & 1) {\n            if (diff_pair_cnt > 0) {\n                diff_pair_cnt--;\n                flip++;\n            } else {\n                flip += 2;\n            }\n        } \n        flip += diff_pair_cnt; // flip to 0\n        \n        if ((m&1) && (n&1) && grid[m/2][n/2])\n            flip++;\n        \n        return flip;\n    }\n};\n/*\n[0,0,1]\n[0,0,1]\n[1,0,1]\n[1,0,0]\n[0,1,1]\n*/",
    "submit_ts": "1722697718",
    "subm_id": "1343156390"
}