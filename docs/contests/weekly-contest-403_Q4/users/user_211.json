{
    "username": "yuruiyin",
    "submission": "class Solution {\nprivate int calcMinArea(int[][] grid, int leftRow, int leftCol, int rightRow, int rightCol) {\n        int minRow = rightRow;\n        int maxRow = leftRow;\n        int minCol = rightCol;\n        int maxCol = leftCol;\n        boolean isHasOne = false;\n        for (int i = leftRow; i <= rightRow; i++) {\n            for (int j = leftCol; j <= rightCol; j++) {\n                if (grid[i][j] == 1) {\n                    isHasOne = true;\n                    minRow = Math.min(minRow, i);\n                    maxRow = Math.max(maxRow, i);\n                    minCol = Math.min(minCol, j);\n                    maxCol = Math.max(maxCol, j);\n                }\n            }\n        }\n\n        if (!isHasOne) {\n            return -1;\n        }\n\n        return (maxRow - minRow + 1) * (maxCol - minCol + 1);\n    }\n\n    public int minimumSum(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int oneCount = 0;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == 1) {\n                    oneCount++;\n                }\n            }\n        }\n\n        // \u5206\u7c7b\u8ba8\u8bba\uff0c6\u79cd\u5206\u5272\u65b9\u6cd5\n\n        // case 1\n        int ansMin = m * n;\n        for (int col1 = 0; col1 < n - 2; col1++) {\n            for (int col2 = col1 + 1; col2 < n - 1; col2++) {\n                int area1 = calcMinArea(grid, 0, 0, m - 1, col1);\n                int area2 = calcMinArea(grid, 0, col1 + 1, m - 1, col2);\n                int area3 = calcMinArea(grid, 0, col2 + 1, m - 1, n - 1);\n                if (area1 != -1 && area2 != -1 && area3 != -1) {\n                    ansMin = Math.min(ansMin, area1 + area2 + area3);\n                }\n            }\n        }\n\n        // case 2\n        for (int row1 = 0; row1 < m - 2; row1++) {\n            for (int row2 = row1 + 1; row2 < m - 1; row2++) {\n                int area1 = calcMinArea(grid, 0, 0, row1, n - 1);\n                int area2 = calcMinArea(grid, row1 + 1, 0, row2, n - 1);\n                int area3 = calcMinArea(grid, row2 + 1, 0, m - 1, n - 1);\n                if (area1 != -1 && area2 != -1 && area3 != -1) {\n                    ansMin = Math.min(ansMin, area1 + area2 + area3);\n                }\n            }\n        }\n\n        // case 3\n        for (int row = 0; row < m - 1; row++) {\n            for (int col = 0; col < n - 1; col++) {\n                int area1 = calcMinArea(grid, 0, 0, row, col);\n                int area2 = calcMinArea(grid, 0, col + 1, row, n - 1);\n                int area3 = calcMinArea(grid, row + 1, 0, m - 1, n - 1);\n                if (area1 != -1 && area2 != -1 && area3 != -1) {\n                    ansMin = Math.min(ansMin, area1 + area2 + area3);\n                }\n            }\n        }\n\n        // case 4\n        for (int row = 0; row < m - 1; row++) {\n            for (int col = 0; col < n - 1; col++) {\n                int area1 = calcMinArea(grid, 0, 0, row, n - 1);\n                int area2 = calcMinArea(grid, row + 1, 0, m - 1, col);\n                int area3 = calcMinArea(grid, row + 1, col + 1, m - 1, n - 1);\n                if (area1 != -1 && area2 != -1 && area3 != -1) {\n                    ansMin = Math.min(ansMin, area1 + area2 + area3);\n                }\n            }\n        }\n\n        // case 5\n        for (int row = 0; row < m - 1; row++) {\n            for (int col = 0; col < n - 1; col++) {\n                int area1 = calcMinArea(grid, 0, 0, m - 1, col);\n                int area2 = calcMinArea(grid, 0, col + 1, row, n - 1);\n                int area3 = calcMinArea(grid, row + 1, col + 1, m - 1, n - 1);\n                if (area1 != -1 && area2 != -1 && area3 != -1) {\n                    ansMin = Math.min(ansMin, area1 + area2 + area3);\n                }\n            }\n        }\n\n        // case 6\n        for (int row = 0; row < m - 1; row++) {\n            for (int col = 0; col < n - 1; col++) {\n                int area1 = calcMinArea(grid, 0, 0, row, col);\n                int area2 = calcMinArea(grid, row + 1, 0, m - 1, col);\n                int area3 = calcMinArea(grid, 0, col + 1, m - 1, n - 1);\n                if (area1 != -1 && area2 != -1 && area3 != -1) {\n                    ansMin = Math.min(ansMin, area1 + area2 + area3);\n                }\n            }\n        }\n\n        return ansMin;\n    }\n}",
    "submit_ts": "1719113593",
    "subm_id": "541398153"
}