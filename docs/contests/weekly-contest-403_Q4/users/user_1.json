{
    "username": "tsreaper",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n\n        auto gao = [&](int U, int D, int L, int R) {\n            int u = 1e9, d = -1e9, l = 1e9, r = -1e9;\n            for (int i = U; i <= D; i++) for (int j = L; j <= R; j++) if (grid[i][j]) {\n                u = min(u, i); d = max(d, i);\n                l = min(l, j); r = max(r, j);\n            }\n            if (u > d || l > r) return (long long) 1e18;\n            return 1LL * (d - u + 1) * (r - l + 1);\n        };\n\n        long long ans = n * m;\n        \n        for (int i = 0; i + 1 < n; i++) for (int ii = i + 1; ii + 1 < n; ii++)\n            ans = min(ans, gao(0, i, 0, m - 1) + gao(i + 1, ii, 0, m - 1) + gao(ii + 1, n - 1, 0, m - 1));\n\n        for (int j = 0; j + 1 < m; j++) for (int jj = j + 1; jj + 1 < m; jj++)\n            ans = min(ans, gao(0, n - 1, 0, j) + gao(0, n - 1, j + 1, jj) + gao(0, n - 1, jj + 1, m - 1));\n\n        for (int i = 0; i + 1 < n; i++) for (int j = 0; j + 1 < m; j++) {\n            ans = min(ans, gao(0, i, 0, j) + gao(0, i, j + 1, m - 1) + gao(i + 1, n - 1, 0, m - 1));\n            ans = min(ans, gao(0, i, 0, m - 1) + gao(i + 1, n - 1, 0, j) + gao(i + 1, n - 1, j + 1, m - 1));\n            ans = min(ans, gao(0, i, 0, j) + gao(i + 1, n - 1, 0, j) + gao(0, n - 1, j + 1, m - 1));\n            ans = min(ans, gao(0, n - 1, 0, j) + gao(0, i, j + 1, m - 1) + gao(i + 1, n - 1, j + 1, m - 1));\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1719110704.0
}