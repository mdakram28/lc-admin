{
    "username": "nor_",
    "submission": "// https://codeforces.com/blog/entry/18051\nstruct segtree {\n    int n;\n    vector<int> t;\n    segtree(const vector<int>& a) : n(a.size()), t(2 * a.size()) {\n        for (int i = n; i < 2 * n; ++i) t[i] = a[i - n];\n        for (int i = n - 1; i > 0; --i) t[i] = t[i<<1] + t[i<<1|1];\n    }\n    void modify(int p, int value) {  // set value at position p\n        for (t[p += n] = value; p > 1; p >>= 1) t[p>>1] = t[p] + t[p^1];\n    }\n    int query(int l, int r) {  // sum on interval [l, r)\n        int res = 0;\n        for (l += n, r += n; l < r; l >>= 1, r >>= 1) {\n            if (l&1) res += t[l++];\n            if (r&1) res += t[--r];\n        }\n        return res;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        auto& a = nums;\n        vector<int> is_peak(n);\n        for (int i = 1; i + 1 < n; ++i) {\n            is_peak[i] = (a[i] > a[i - 1]) && (a[i] > a[i + 1]);\n        }\n        vector<int> ans;\n        segtree s(is_peak);\n        for (auto& query : queries) {\n            int typ = query[0];\n            if (typ == 1) {\n                int l = query[1];\n                int r = query[2];\n                r += 1;\n                ans.push_back(s.query(l+1, r-1));\n            } else {\n                int i = query[1];\n                int v = query[2];\n                a[i] = v;\n                for (int j = i - 1; j <= i + 1; ++j) {\n                    if (j > 0 && j + 1 < n) {\n                        s.modify(j, (a[j] > a[j - 1]) && (a[j] > a[j + 1]));\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506551.0
}