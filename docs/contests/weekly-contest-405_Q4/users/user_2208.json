{
    "username": "harveylawsonY4d",
    "submission": "public class Solution {\n    public class TrieNode {\n        public TrieNode[] Children { get; set; } = new TrieNode[26];\n        public int? Cost { get; set; }\n    }\n\n    private TrieNode _root = new();\n\n    public int MinimumCost(string s, string[] words, int[] costs) {\n        int?[] memo = new int?[s.Length];\n        BuildTrie();\n\n        int res = Backtrack(0);\n\n        return res >= 1_000_000_000 ? -1 : res;\n\n        int Backtrack(int tIdx)\n        {\n            if (tIdx == s.Length)\n            {\n                return 0;\n            }\n\n            if (memo[tIdx].HasValue)\n            {\n                return memo[tIdx].Value;\n            }\n\n            TrieNode curr = _root;\n            int minCost = 1_000_000_000;\n\n            for (int i = tIdx; i < s.Length; i++)\n            {\n                curr = curr.Children[s[i] - 'a'];\n\n                if (curr == null)\n                {\n                    break;\n                }    \n\n                if (curr.Cost.HasValue)\n                {\n                    minCost = Math.Min(minCost, curr.Cost.Value + Backtrack(i + 1));\n                }\n            }\n\n            memo[tIdx] = minCost;\n            return minCost;\n        }\n        \n        void BuildTrie()\n        {\n            for (int i = 0; i < words.Length; i++)\n            {\n                TrieNode curr = _root;\n\n                foreach (char c in words[i])\n                {\n                    curr = curr.Children[c - 'a'] ??= new();\n                }\n\n                curr.Cost = Math.Min(curr.Cost ?? costs[i], costs[i]);\n            }\n        }\n    }\n}",
    "submit_ts": "1720324542",
    "subm_id": "1312402059"
}