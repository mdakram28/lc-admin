{
    "username": "narne_srinadh",
    "submission": "class Solution {\nprivate:\n    static const int MOD = 1e9+7;\n    static const int MAX_INVERSIONS = 400;\n\npublic:\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> alpha;\n        for (const auto& req : requirements) {\n            alpha[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> permCnt(n + 1, vector<long long>(MAX_INVERSIONS + 1, 0));\n        permCnt[0][0] = 1;\n\n        for (int yolen = 1; yolen <= n; ++yolen) {\n            for (int ghumana = 0; ghumana <= MAX_INVERSIONS; ++ghumana) {\n                for (int nayajagah = 0; nayajagah < yolen; ++nayajagah) {\n                    int puranaInv = ghumana - nayajagah;\n                    if (puranaInv >= 0) {\n                        permCnt[yolen][ghumana] = (permCnt[yolen][ghumana] + permCnt[yolen - 1][puranaInv]) % MOD;\n                    }\n                }\n            }\n\n            if (alpha.find(yolen) != alpha.end()) {\n                int chahiyeInv = alpha[yolen];\n                for (int ghumana = 0; ghumana <= MAX_INVERSIONS; ++ghumana) {\n                    if (ghumana != chahiyeInv) {\n                        permCnt[yolen][ghumana] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (const auto& ginthi : permCnt[n]) {\n            ans = (ans + ginthi) % MOD;\n        }\n\n        return static_cast<int>(ans);\n    }\n};",
    "submit_ts": "1719070794",
    "subm_id": "1296831912"
}