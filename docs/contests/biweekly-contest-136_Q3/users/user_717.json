{
    "username": "deepak_0081",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ct=0;\n        for(int i=0;i<n/2;i++){\n            for(int j=0;j<m/2;j++){\n                int one=0;\n                if(grid[i][j]==1){\n                    one++;\n                }\n                if(grid[i][m-j-1]==1) one++;\n                if(grid[n-1-i][j]==1) one++;\n                if(grid[n-1-i][m-1-j]==1) one++;\n                int inv=min(one,4-one);\n                ct+=inv;\n            }\n            \n        }\n        // cout<<ct<<\"what\"<<endl;\n        int extra=0;\n        int one=0;\n        if(m%2==1){\n            for(int i=0;i<n/2;i++){\n                if(grid[i][m/2]!=grid[n-i-1][m/2]){\n                    extra++;\n                    one+=2;\n                }\n                else if(grid[i][m/2]==1) one+=2;\n            }\n        }\n        if(n%2==1){\n            for(int j=0;j<m/2;j++){\n                if(grid[n/2][j]!=grid[n/2][m-1-j]){\n                    extra++;\n                    one+=2;\n                }\n                else if(grid[n/2][j]==1) one+=2;\n            }\n        }\n        if(n%2==1 and m%2==1){\n            if(grid[n/2][m/2]==1)  ct++;\n        }\n        if(one%4==0){\n            return ct+extra;\n        }\n        else{\n            if(extra>0) return ct+extra;\n            else return ct+2;\n        }\n        \n        \n    }\n};",
    "submit_ts": "1722697645",
    "subm_id": "1343153817"
}