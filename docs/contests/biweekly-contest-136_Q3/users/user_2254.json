{
    "username": "shaydulin",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        ans = 0\n        for i in range(n // 2):\n            for j in range(m // 2):\n                sm = sum([grid[i][j], grid[i][~j], grid[~i][j], grid[~i][~j]])\n                ans += min(sm, 4 - sm)\n        ones = 0\n        if n % 2 == 1 and m % 2 == 1:\n            if grid[n // 2][m // 2] == 1:\n                ans += 1\n        middle = 0\n        if n % 2 == 1:\n            i = n // 2\n            middle += sum(grid[i][j] != grid[i][~j] for j in range(m // 2))\n            ones += sum(grid[i][j] & grid[i][~j] for j in range(m // 2))\n        if m % 2 == 1:\n            j = m // 2\n            middle += sum(grid[i][j] != grid[~i][j] for i in range(n // 2))\n            ones += sum(grid[i][j] & grid[~i][j] for i in range(n // 2))\n        if ones % 2 and middle == 0:\n            ans += 2\n        return ans + middle\n",
    "submit_ts": "1722699464",
    "subm_id": "1343212451"
}