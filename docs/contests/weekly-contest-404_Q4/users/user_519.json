{
    "username": "BaoziiO_o",
    "submission": "func bfsFarthestNode(n int, graph [][]int, startNode int) (int, []int) {\n\tdist := make([]int, n)\n\tfor i := range dist {\n\t\tdist[i] = -1\n\t}\n\tdist[startNode] = 0\n\n\tq := list.New()\n\tq.PushBack(startNode)\n\tfarthestNode := startNode\n\n\tfor q.Len() > 0 {\n\t\tnode := q.Remove(q.Front()).(int)\n\t\tfor _, neighbor := range graph[node] {\n\t\t\tif dist[neighbor] == -1 {\n\t\t\t\tdist[neighbor] = dist[node] + 1\n\t\t\t\tq.PushBack(neighbor)\n\t\t\t\tif dist[neighbor] > dist[farthestNode] {\n\t\t\t\t\tfarthestNode = neighbor\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn farthestNode, dist\n}\n\nfunc findTreeDiameterAndRadius(n int, edges [][]int) (int, int, []int) {\n\tgraph := make([][]int, n)\n\tfor i := range graph {\n\t\tgraph[i] = []int{}\n\t}\n\tfor _, edge := range edges {\n\t\ta, b := edge[0], edge[1]\n\t\tgraph[a] = append(graph[a], b)\n\t\tgraph[b] = append(graph[b], a)\n\t}\n\n\tfarthestNode, _ := bfsFarthestNode(n, graph, 0)\n\toppositeNode, dist := bfsFarthestNode(n, graph, farthestNode)\n\n\tdiameter := dist[oppositeNode]\n\tradius := (diameter + 1) / 2\n\n\treturn diameter, radius, dist\n}\n\nfunc findCenterNodes(dist []int, radius int) []int {\n\tcenters := []int{}\n\tfor i, d := range dist {\n\t\tif d == radius {\n\t\t\tcenters = append(centers, i)\n\t\t}\n\t}\n\treturn centers\n}\n\nfunc minimumDiameterAfterMerge(edges1 [][]int, edges2 [][]int) int {\n    n := len(edges1) + 1\n\tm := len(edges2) + 1\n\n\tdiameter1, radius1, _ := findTreeDiameterAndRadius(n, edges1)\n\tdiameter2, radius2, _ := findTreeDiameterAndRadius(m, edges2)\n\n\n\tnewDiameter := max(diameter1, diameter2, radius1+radius2+1)\n    return newDiameter\n}",
    "submit_ts": 1719719562.0
}