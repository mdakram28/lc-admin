{
    "username": "aroratanmay1403",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n    long long h_index = 0, v_index = 0;\n    long long h_parts = 1, v_parts = 1;\n    long long total_cost = 0;\n\n    while (h_index < horizontalCut.size() && v_index < verticalCut.size()) {\n        if (horizontalCut[h_index] > verticalCut[v_index]) {\n            total_cost += horizontalCut[h_index] * v_parts;\n            h_index++;\n            h_parts++;\n        } else {\n            total_cost += verticalCut[v_index] * h_parts;\n            v_index++;\n            v_parts++;\n        }\n    }\n\n    while (h_index < horizontalCut.size()) {\n        total_cost += horizontalCut[h_index] * v_parts;\n        h_index++;\n    }\n\n    while (v_index < verticalCut.size()) {\n        total_cost += verticalCut[v_index] * h_parts;\n        v_index++;\n    }\n\n    return total_cost;\n    }\n};",
    "submit_ts": "1720926730",
    "subm_id": "1320294763"
}