{
    "username": "Superultra",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define FOR(i, x, y) for (int i = x; i < y; i++)\n#define ll long long\n#define pii pair<int, int>\n#define pll pair<ll, ll>\n\nstruct sparseTable{\n    vector<vector<int>> rmq;\n \n    void build(vector<int> A){\n        int n = A.size();\n        rmq = vector<vector<int>>(n, vector<int>(17, 0));\n\n        for (int j = 0; j < 17; j++){\n            for (int i = 0; i + (1 << j) - 1 < A.size(); i++)\n                rmq[i][j] = !j ? A[i] : (rmq[i][j - 1] & rmq[min(i + (1 << (j - 1)), n - 1)][j - 1]);\n        }\n    }\n    int qry(int l, int r){\n        int lg = 31 - __builtin_clz(r - l + 1);\n        return (rmq[l][lg] & rmq[r - (1 << lg) + 1][lg]);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& A, int k) {\n        sparseTable st;\n        st.build(A);\n\n        int n = A.size();\n        int ans = 2e9;\n\n        for (int l = 0; l < n; l++){\n            int L = l, H = n - 1;\n\n            while (L < H){\n                int M = (L + H + 1) / 2;\n                st.qry(l, M) >= k ? L = M : H = M - 1;\n            }\n            ans = min(ans, abs(st.qry(l, L) - k));\n\n            if (L + 1 < n){\n                ans = min(ans, abs(st.qry(l, L + 1) - k));\n            }\n        }\n        return ans;\n    }\n};\n\n",
    "submit_ts": 1717296089.0
}