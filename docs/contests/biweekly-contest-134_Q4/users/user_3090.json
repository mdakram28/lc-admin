{
    "username": "maliumesh1",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n         int n = nums.length;\n        \n        long u = 0 ; \n        Map<Long,Long>prev = new HashMap <>();\n        \n        for(int i  = 0 ; i < n ; ++i)\n        {\n            Map<Long,Long>curr = new HashMap <>();\n            int result = k ;\n            \n            if(nums[i] == result){\n                ++u;\n            }\n            curr.put((long)nums[i] ,1L);\n            \n            for(Map.Entry <Long,Long>it  : prev.entrySet())\n            {\n                long v = it.getKey();\n                long freq = it.getValue();\n                \n                long nr = v & nums[i];\n                \n                if(nr == result )\n                {\n                    u  += freq ; \n                }\n                \n                curr.put(nr , curr.getOrDefault(nr , 0L) + freq);\n                \n                \n            }\n            prev = curr;\n        }\n        \n        return u ;\n    }\n}",
    "submit_ts": "1720281102",
    "subm_id": "1311813220"
}