{
    "username": "fizhim",
    "submission": "impl Solution {\n    pub fn minimum_difference(nums: Vec<i32>, k: i32) -> i32 {\n        fn f(a: &[usize], i: usize) -> i32 {\n            let mut ans = 0;\n            for j in 0..a.len() {\n                if a[j] < i + 1 {\n                    ans += 1 << j;\n                }\n            }\n            ans\n        }\n\n        let mut a = [0; 32];\n        let mut ans = u32::MAX;\n\n        for i in 0..nums.len() {\n            let mut x = nums[i];\n            \n            for j in 0..a.len() {\n                if x & 1 == 0 {\n                    a[j] = i + 1;\n                }\n                x >>= 1;\n            }\n            \n            let mut l = 0;\n            let mut r = i + 1;\n            \n            while l < r {\n                let m = l + (r - l) / 2;\n                match f(&a, m) < k {\n                    true => l = m + 1,\n                    false => r = m,\n                }\n            }\n            \n            ans = ans.min(f(&a, l).abs_diff(k));\n            \n            if l > 0 {\n                ans = ans.min(f(&a, l - 1).abs_diff(k));\n            }\n        }\n        \n        ans as _\n    }\n}",
    "submit_ts": 1717299295.0
}