{
    "username": "swatibhatt",
    "submission": "\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hc, vector<int>& vc) {\n      \n        vector<pair<int, int>> cuts;\n        for (int i = 0; i < hc.size(); ++i) {\n            cuts.push_back({hc[i], 0});\n        }\n        for (int i = 0; i < vc.size(); ++i) {\n            cuts.push_back({vc[i], 1});\n        }\n\n        sort(cuts.begin(), cuts.end(), greater<pair<int, int>>());\n\n        long long totalCost = 0;\n        int hPieces = 1, vPieces = 1;\n\n        for (auto& cut : cuts) {\n            if (cut.second == 0) { \n                totalCost += (long long)cut.first * vPieces;\n                hPieces++;\n            } else {\n                totalCost += (long long)cut.first * hPieces;\n                vPieces++;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925773",
    "subm_id": "1320265726"
}