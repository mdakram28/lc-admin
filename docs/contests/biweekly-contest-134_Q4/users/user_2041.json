{
    "username": "PrathamAsrani",
    "submission": "class Solution {\n    typedef long long ll;\npublic:\n    ll countSubarrays(vector<int>& v, int k) {\n        int n = v.size();\n        ll ans = 0;\n        unordered_map<ll, ll> prevSet;\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll, ll> currSet; \n            if (v[i] == k) {\n                ++ans;\n            }\n            currSet[v[i]] = 1;\n            for (auto itr : prevSet) {\n                int key = itr.first, frq = itr.second;\n                long long value = key & v[i];\n                if (value == k) {\n                    ans += frq;\n                }\n                currSet[value] += frq;\n            }\n            \n            prevSet = currSet;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281087",
    "subm_id": "1311812680"
}