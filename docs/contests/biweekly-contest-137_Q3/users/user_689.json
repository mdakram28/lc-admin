{
    "username": "Xuan Zhang",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length, n = board[0].length;\n        Map<Integer, Map<Long, Long>> map = new HashMap();\n        for(int i = 0; i < m; i++){\n            PriorityQueue<long[]> pq = new PriorityQueue<long[]>(new Comparator<long[]>(){\n                @Override\n                public int compare(long[] a, long[] b){\n                    if(a[1] > b[1]) return 1;\n                    return -1;\n                }\n            });\n            for(int j = 0; j < n; j++){\n                pq.add(new long[]{(long)j, (long)board[i][j]});\n                if(pq.size() > 3) pq.poll();\n            }\n            Map<Long, Long> curr = new HashMap();\n            while(pq.size() > 0){\n                curr.put(pq.peek()[0], pq.poll()[1]);\n            }\n            map.put(i, curr);\n            // System.out.println(curr);\n        }\n        // System.out.println(map);\n        long maxSum = -3L * (long)1e9;\n\n        for(int i1 = 0; i1 < m; i1++){\n            for(long j1 : map.get(i1).keySet()){\n                long v1 = map.get(i1).get(j1);\n                for(int i2 = i1 + 1; i2 < m; i2++){\n                    for(long j2 : map.get(i2).keySet()){\n                        long v2 = map.get(i2).get(j2);\n                        if(j1 == j2) continue;\n                        for(int i3 = i2 + 1; i3 < m; i3++){\n                            for(long j3 : map.get(i3).keySet()){\n                                long v3 = map.get(i3).get(j3);\n                                if(j1 == j3 || j2 == j3) continue;\n\n                                long sum = v1 + v2 + v3;\n                                maxSum = Math.max(maxSum, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n}",
    "submit_ts": "1723908291",
    "subm_id": "1359146374"
}