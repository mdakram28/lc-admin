{
    "username": "kritikasharma2004",
    "submission": "class Solution {\npublic:\n   int minFlips(vector<vector<int>>&board) {\n        int n = board.size();\n        int m = board[0].size();\n        \n        int ans = 0;\n        \n        // Loop through the 2x2 sub-grids\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                vector<int> ele = {\n                    board[i][j],\n                    board[n - i - 1][j],\n                    board[i][m - j - 1],\n                    board[n - i - 1][m - j - 1]\n                };\n                \n                int ones = count(ele.begin(), ele.end(), 1);\n                \n                ans += min(ones, 4 - ones);\n            }\n        }\n        \n        int poss = 0;\n        int count = 0;\n        \n        // Handle the middle row if n is odd\n        if (n % 2 != 0) {\n            for (int j = 0; j < m / 2; ++j) {\n                if (board[n / 2][j] != board[n / 2][m - j - 1]) {\n                    ans += 1;\n                    poss += 1;\n                } else {\n                    if (board[n / 2][j] == 1) {\n                        count += 1;\n                    }\n                }\n            }\n        }\n        \n        // Handle the middle column if m is odd\n        if (m % 2 != 0) {\n            for (int i = 0; i < n / 2; ++i) {\n                if (board[i][m / 2] !=board[n - i - 1][m / 2]) {\n                    ans += 1;\n                    poss += 1;\n                } else {\n                    if (board[i][m / 2] == 1) {\n                        count += 1;\n                    }\n                }\n            }\n        }\n        if (n % 2 != 0 && m % 2 != 0 &&board[n / 2][m / 2] == 1) {\n            ans += 1;\n        }\n        if (poss== 0 && count % 2 != 0) {\n            ans += 2;\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1722700216",
    "subm_id": "1343235119"
}