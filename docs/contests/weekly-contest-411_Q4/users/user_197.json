{
    "username": "Sanath_Kulla",
    "submission": "\nusing ll = long long;\nll n; \n#define all(s) s.begin(),s.end()\n\n\nvector<ll> seg[400005];\nvector<ll> psum[400005];\nvector<ll> v(100005);\n\nvoid build(int ind = 0 , int l = 0 , int r = n-1){\n      if(l > r)return;\n      seg[ind].clear();\n      psum[ind].clear();\n      if(l == r){\n        seg[ind].push_back(v[l]);\n        psum[ind].push_back(v[l]);\n        return;\n      }\n      ll mid = (l + r)/2;\n      build(2*ind+1 , l , mid);\n      build(2*ind+2 , mid+1 , r);\n\n      int i = 0 , j =0;\n      while(i < seg[2*ind+1].size() and j < seg[2*ind+2].size()){\n        if(seg[2*ind+1][i] < seg[2*ind+2][j])seg[ind].push_back(seg[2*ind+1][i++]);\n        else seg[ind].push_back(seg[2*ind+2][j++]);\n      }\n      while(i < seg[2*ind+1].size())seg[ind].push_back(seg[2*ind+1][i++]);\n      while(j < seg[2*ind+2].size())seg[ind].push_back(seg[2*ind+2][j++]);\n      ll sum = 0;\n      for(int k = 0 ; k < seg[ind].size();k++)sum += seg[ind][k] , psum[ind].push_back(sum);\n}\n\npair<ll,ll> query(int ql , int qr ,int k,int l = 0 , int r = n-1 , int ind = 0){\n    if(l > r)return {0,0};\n    if(l > qr or r < ql)return {0,0};\n    if(l >= ql and r <= qr){\n          auto mxind = lower_bound(all(seg[ind]) , k) - seg[ind].begin();\n          ll ret = psum[ind][seg[ind].size()-1];\n          mxind--;\n          if(mxind >= 0){\n             ret -=  psum[ind][mxind];\n          }\n          mxind++;\n          return {ret , seg[ind].size() - mxind};\n    }\n    ll mid = (l+r)/2;\n    pair<ll,ll> x = query(ql , qr , k , l , mid  , 2*ind+1) ;\n    pair<ll,ll> y = query(ql , qr , k , mid+1 , r  , 2*ind+2);\n    x.first += y.first;\n    x.second += y.second;\n    return x;\n}\n\n\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        n = s.size();\n        vector<int> p(n , 0);\n        for(int i = 0 ; i < n ;i++){\n            p[i] = s[i] == '1';\n            if(i)p[i]+=p[i-1];\n        }\n        vector<ll> rng(n  , 0);\n        for(int i = 0 ; i < n ;i++){\n            ll lo = i , hi = n-1;\n            ll res = lo;\n            while(lo <= hi){\n                ll mid = (lo+hi)/2;\n                ll one = p[mid] - (i?p[i-1]:0);\n                ll zero = (mid-i+1) - one;\n                if(one <= k or zero <= k){\n                    res = mid; lo = mid+1;\n                }else hi = mid-1;\n\n            }\n                            rng[i]=res-i+1;\n                v[i] = res;\n            if(i)rng[i] += rng[i-1];\n               \n        }\n        build();\n        \n        vector<ll> ans;\n        for(auto it:q){\n            ll l = it[0] , r = it[1];\n            ll val = rng[r] - (l?rng[l-1]:0);\n            pair<ll,ll> rem= query(l , r , r);\n            val -= rem.first - 1ll*r*rem.second;\n            ans.push_back(val);\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1723950471",
    "subm_id": "1359746828"
}