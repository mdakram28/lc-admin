{
    "username": "shubham7065636281",
    "submission": "class Solution {\npublic:\n   \n   int f1(int i1, int n, int k, vector<vector<int>> &pre)\n   {\n       int j = n - 1;\n       int i = i1;\n       int ans = n;\n\n       while(i <= j)\n       {\n           int mid = (i + j)/ 2;\n           int f = 0;\n\n           for(int p = 0; p < 30; p++)\n           {\n                int x = pre[mid][p];\n                if(i1 - 1 >= 0) x -= pre[i1 - 1][p];\n                int y = ((1 << p) & k);\n                y = (y > 0);\n                if(y == 1 && x < (mid - i1 + 1))\n                {     \n                    f = 1;\n                      break;\n                }\n\n                if(y == 0 && x == (mid - i1 + 1))\n                {\n                     f = 2;\n                }\n           }\n\n           if(f == 1)\n           {\n              j = mid - 1;\n           }\n\n          else if(f == 2)\n           {\n             i = mid + 1;\n           }\n\n            else\n           {\n              j = mid - 1;\n              ans = mid;\n           }\n       }\n        \n        return ans;\n   }\n\n    int f2(int i1, int n, int k, vector<vector<int>> &pre)\n   {\n       int j = n - 1;\n       int i = i1;\n       int ans = n;\n\n       while(i <= j)\n       {\n           int mid = (i + j)/ 2;\n           int f = 0;\n\n           for(int p = 0; p < 30; p++)\n           {\n                int x = pre[mid][p];\n                if(i1 - 1 >= 0) x -= pre[i1 - 1][p];\n                int y = ((1 << p) & k);\n                y = (y > 0);\n                if(y == 1 && x < (mid - i1 + 1))\n                {     \n                    f = 1;\n                      break;\n                }\n\n                if(y == 0 && x == (mid - i1 + 1))\n                {\n                     f = 2;\n                }\n           }\n\n           if(f == 1)\n           {\n              j = mid - 1;\n           }\n\n          else if(f == 2)\n           {\n             i = mid + 1;\n           }\n\n            else\n           {\n              i = mid + 1;\n              ans = mid;\n           }\n       }\n        \n        return ans;\n   }\n    \n    long long countSubarrays(vector<int>& v, int k) \n    {    \n        int n = v.size();\n         vector<vector<int>> pre(n + 1, vector<int>(31, 0));\n\n         for(int i = 0; i < n; i++)\n         {\n             for(int j = 0; j < 30; j++)\n             {\n                  int x = ((1 << j) & v[i]);\n                  if(x > 0) pre[i][j] = 1;\n\n                  if(i - 1 >= 0) pre[i][j] += pre[i - 1][j];\n                 \n             }\n         }\n\n         long long ans = 0;\n         for(int i = 0; i < n; i++)\n         {\n              int x = f1(i, n, k,  pre);\n              int y = f2(i, n, k, pre);\n              \n              if(x != n)\n              ans += (y - x + 1);\n         }\n\n         return ans;    \n    }\n};",
    "submit_ts": "1720280725",
    "subm_id": "1311799864"
}