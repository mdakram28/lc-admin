{
    "username": "TsReaper",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int K) {\n        int P[n + 1];\n        P[0] = 1;\n        for (int i = 1; i <= n; i++) P[i] = P[i - 1] * 10 % K;\n\n        typedef pair<int, int> pii;\n        pii f[n][K];\n        for (int i = 0; i < n; i++) for (int j = 0; j < K; j++) f[i][j] = {-1, -1};\n\n        int idx;\n        if (n & 1) {\n            idx = n / 2;\n            for (int d = 9; d >= 0; d--) {\n                int t = P[n - 1 - idx] * d % K;\n                if (f[idx][t].first < 0) f[idx][t] = {d, -1};\n            }\n        } else {\n            idx = n / 2 - 1;\n            for (int d = 9; d >= 0; d--) {\n                int t = (P[n - 1 - idx] + P[idx]) * d % K;\n                if (f[idx][t].first < 0) f[idx][t] = {d, -1};\n            }\n        }\n\n        for (int i = idx - 1; i >= 0; i--) for (int j = 0; j < K; j++) {\n            for (int d = 9; d >= 0; d--) {\n                int t = (P[n - 1 - i] + P[i]) * d % K;\n                t = (j - t + K) % K;\n                if (f[i + 1][t].first >= 0) { f[i][j] = {d, t}; break; }\n            }\n        }\n\n        string ans1, ans2;\n        for (int i = 0, j = 0; i <= idx; i++) {\n            ans1.push_back(f[i][j].first + '0');\n            if (n % 2 == 0 || i < idx) ans2.push_back(f[i][j].first + '0');\n            j = f[i][j].second;\n        }\n        reverse(ans2.begin(), ans2.end());\n        ans1 += ans2;\n        return ans1;\n    }\n};",
    "submit_ts": "1723949713",
    "subm_id": "556394499"
}