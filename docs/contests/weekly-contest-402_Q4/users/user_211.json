{
    "username": "InTiMiDaToR",
    "submission": "#include <ext/pb_ds/assoc_container.hpp> // Common file\n#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update\n#include <ext/pb_ds/detail/standard_policies.hpp>\n \n \nusing namespace __gnu_pbds;\n\n\n\n \ntypedef tree<\nint,\nnull_type,\nless<int>,\nrb_tree_tag,\ntree_order_statistics_node_update>\nordered_set;\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        int n=a.size();\n        vector<int> ans;\n        ordered_set s;\n        for(int i=1;i<n-1;i++)\n        {\n            if(a[i]>max(a[i-1],a[i+1]))\n            {\n                s.insert(i);\n            }\n        }\n        \n        \n        for(int i=0;i<q.size();i++)\n        {\n            int d=q[i][0];\n            if(d==1)\n            {\n                int l=q[i][1];\n                int r=q[i][2];\n                if(l==r)\n                {\n                    ans.push_back(0);\n                    continue;\n                }\n                \n                ans.push_back(s.order_of_key(r)-s.order_of_key(l+1));\n                \n                \n            }\n            else\n            {\n                int id=q[i][1];\n                int val=q[i][2];\n                \n                for(int j=max(0,id-1);j<=min(n-1,id+1);j++)\n                {\n                    if(s.find(j)!=s.end())\n                        s.erase(s.find(j));\n                }\n                \n                a[id]=val;\n                \n                for(int j=max(1,id-1);j<=min(n-2,id+1);j++)\n                {\n                    if(a[j]>max(a[j-1],a[j+1]))\n                    {\n                        s.insert(j);\n                    }\n                }\n            }\n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": 1718506542.0
}