{
    "username": "huiget-6",
    "submission": "class Solution:\n    def maximumScore(self, grid: List[List[int]]) -> int:\n        def aprint(a):\n            for c in a:\n                print(c)\n            print()\n    \n        n = len(grid)\n        if n == 1:\n            return 0\n        a = [[0] * n for _ in range(n)]\n        for i in range(n):\n            for j in range(n):\n                a[i][j] = grid[j][i]\n        f = [[[-1] * (n + 1) for _ in range(n + 1)] for _ in range(n)]\n        accum = [[0] * (n + 1) for _ in range(n)]\n        for i in range(n):\n            for j in range(1, n + 1):\n                accum[i][j] = accum[i][j - 1] + a[i][j - 1]\n        for i in range(n + 1):\n            for j in range(n + 1):\n                f[1][i][j] = max(0, accum[0][j] - accum[0][i])\n        for i in range(2, n):\n            for t in range(n + 1):\n                maxi = max(f[i - 1][k][t] + max(0, accum[i - 1][k] - accum[i - 1][t]) for k in range(n + 1))\n                running = 0\n                for j in range(n + 1):\n                    running = max(running, f[i - 1][j][t])\n                    f[i][t][j] = max(maxi, running + max(0, accum[i - 1][j] - accum[i - 1][t]))\n        ans = 0\n        for i in range(n + 1):\n            for j in range(n + 1):\n                ans = max(ans, f[n - 1][i][j] + max(0, accum[-1][i] - accum[-1][j]))\n        return ans",
    "submit_ts": "1721489958",
    "subm_id": "548320958"
}