{
    "username": "prashant9569",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& a) {\n        int b = a.size();\n        int c = a[0].size();\n        int d = 0;\n\n        // Check the center cell if both dimensions are odd\n        if (b % 2 == 1 && c % 2 == 1) {\n            d += checkCenter(a, b, c);\n        }\n\n        vector<int> e(3, 0);\n\n        // Count flips needed for rows if the number of rows is odd\n        if (b % 2 == 1) {\n            countRowFlips(a, b, c, e);\n        }\n\n        // Count flips needed for columns if the number of columns is odd\n        if (c % 2 == 1) {\n            countColumnFlips(a, b, c, e);\n        }\n\n        // Update the answer based on shifts\n        d += calculateFlips(e);\n\n        // Handle the corners of each 2x2 block\n        d += handleCorners(a, b, c);\n\n        return d;\n    }\n\nprivate:\n    int checkCenter(const vector<vector<int>>& a, int b, int c) {\n        return (a[b / 2][c / 2] == 1) ? 1 : 0;\n    }\n\n    void countRowFlips(const vector<vector<int>>& a, int b, int c, vector<int>& e) {\n        int f = 0, g = c - 1;\n        while (f < g) {\n            int h = a[b / 2][f] + a[b / 2][g];\n            e[h] += 1;\n            f += 1;\n            g -= 1;\n        }\n    }\n\n    void countColumnFlips(const vector<vector<int>>& a, int b, int c, vector<int>& e) {\n        int f = 0, g = b - 1;\n        while (f < g) {\n            int h = a[f][c / 2] + a[g][c / 2];\n            e[h] += 1;\n            f += 1;\n            g -= 1;\n        }\n    }\n\n    int calculateFlips(const vector<int>& e) {\n        if (e[2] % 2 == 1) {\n            return (e[1] > 0) ? e[1] : 2;\n        } else {\n            return e[1];\n        }\n    }\n\n    int handleCorners(const vector<vector<int>>& a, int b, int c) {\n        int d = 0;\n        for (int f = 0; f < b / 2; ++f) {\n            for (int g = 0; g < c / 2; ++g) {\n                int h = a[f][g];\n                int i = a[b - 1 - f][g];\n                int j = a[f][c - 1 - g];\n                int k = a[b - 1 - f][c - 1 - g];\n\n                int l = h + i + j + k;\n\n                if (l != 0 && l != 4) {\n                    d += min(l, 4 - l);\n                }\n            }\n        }\n        return d;\n    }\n};\n",
    "submit_ts": "1722700380",
    "subm_id": "1343240130"
}