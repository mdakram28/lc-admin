{
    "username": "vamshichanda",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        int n = nums.length;\n        for(int i=0;i<n/2;i++) {\n            Integer diff = Math.abs(nums[i]-nums[n-i-1]);\n            map.putIfAbsent(diff, new ArrayList<>());\n            map.get(diff).add(i);\n        }\n\n        int minChanges = Integer.MAX_VALUE;\n\n        for(int diff: map.keySet().stream().sorted((a,b)->{return map.get(b).size() - map.get(a).size();}).collect(Collectors.toList())) {\n            int changes = 0;\n            int ele = n/2 - map.get(diff).size();\n            for(Map.Entry<Integer, List<Integer>> entry: map.entrySet()) {\n                if(entry.getKey() == diff) {\n                    continue;\n                }\n                for(int i: entry.getValue()) {\n                    int req = diff - entry.getKey();\n                    if(nums[i] < nums[n-i-1]) {\n                        if(nums[i] - req >=0) {\n                            changes++;\n                        } else if(nums[n-i-1] + req <= k) {\n                            changes++;\n                        } else {\n                            changes+=2;\n                        }\n                    } else {\n                        if(nums[n-i-1] - req >=0) {\n                            changes++;\n                        } else if(nums[i] + req <= k) {\n                            changes++;\n                        } else {\n                            changes+=2;\n                        }\n                    }\n                }\n            }\n\n            if(changes < minChanges) {\n                minChanges = changes;\n                if(changes <= ele) {\n                    break;\n                }\n            }\n\n\n        }\n\n        return minChanges;\n    }\n}",
    "submit_ts": "1721488954",
    "subm_id": "1327438250"
}