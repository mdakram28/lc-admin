{
    "username": "yzkkai",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = size(nums);\n        \n        vector<vector<int>> ps(n + 1, vector<int>(32));\n        for (int i = 1; i <= n; ++i)\n            for (int j = 0; j < 31; ++j)\n                ps[i][j] = ps[i - 1][j] + ((nums[i - 1] >> j) & 1);\n        \n        int ans = 2e9;\n        for (int i = 0; i < n; ++i) {\n            int l = i + 1, r = n + 1;\n            while (r - l > 1) {\n                int mid = (l + r) >> 1;\n                \n                int sum = 0;\n                for (int j = 0; j < 31; ++j)\n                    if (ps[mid][j] - ps[i][j] == mid - i)\n                        sum |= (1 << j);\n\n                ans = min(ans, abs(sum - k));\n                \n                if (sum < k)\n                    r = mid;\n                else\n                    l = mid;\n            }\n            \n            int sum = 0;\n            for (int j = 0; j < 31; ++j)\n                if (ps[l][j] - ps[i][j] == l - i)\n                    sum |= (1 << j);\n            ans = min(ans, abs(sum - k));\n            \n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1717297276",
    "subm_id": "1274736577"
}