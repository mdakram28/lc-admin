{
    "username": "priority_queue",
    "submission": "class Solution {\npublic:\n    long long ans = -3000000001;\n    bool p[102];\n    int n, m;\n    void dfs(int x, int k, long long sum, vector<vector<int>>& board) {\n        if (k == 3) {\n            if (sum > ans) ans = sum;\n            return;\n        }\n        for (int i = x + 1; i < n; ++i) {\n            if (2 == k && sum + board[i][m] <= ans) continue;\n            if (1 == k && sum + board[i][m + 1] <= ans) continue;\n            for (int j = 0; j < m; ++j)\n                if (!p[j])\n                    p[j] = 1, dfs(i, k + 1, sum + board[i][j], board), p[j] = 0;\n        }\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        n = board.size(), m = board[0].size();\n        for (int i = 0; i < n; ++i) {\n            int maxv = board[i][0];\n            for (int j = 1; j < m; ++j) if (board[i][j] > maxv) maxv = board[i][j];\n            board[i].push_back(maxv);\n        }\n        for (int i = 0; i < n - 1; ++i) {\n            int maxv = board[i + 1][m];\n            for (int j = i + 2; j < n; ++j) if (board[j][m] > maxv) maxv = board[j][m];\n            board[i].push_back(maxv + board[i][m]);\n        }\n        board[n - 1].push_back(0);\n        for (int i = 0; i < n - 2; ++i)\n            for (int j = 0; j < m; ++j)\n                p[j] = 1, dfs(i, 1, board[i][j], board), p[j] = 0;\n        return ans;\n    }\n};",
    "submit_ts": "1723909984",
    "subm_id": "556338954"
}