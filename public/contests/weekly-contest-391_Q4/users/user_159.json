{
    "username": "masteralphi",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        a = []\n        b = []\n        for i, (x, y) in enumerate(points):\n            a.append([x+y, i])\n            b.append([x-y, i])\n        a.sort()\n        b.sort()\n        cand = max(a[-1][0]-a[0][0], b[-1][0]-b[0][0])\n        ids = {a[-1][1], a[0][1], b[-1][1], b[0][1]}\n        for idx in ids:\n            u = a[-1][0]-a[0][0]\n            if a[-1][1] == idx:\n                u = a[-2][0]-a[0][0]\n            elif a[0][1] == idx:\n                u = a[-1][0] - a[1][0]\n            v = b[-1][0]-b[0][0]\n            if b[-1][1] == idx:\n                v = b[-2][0]-b[0][0]\n            elif b[0][1] == idx:\n                v = b[-1][0] - b[1][0]\n            cand = min(cand, max(u, v))\n        return cand"
}