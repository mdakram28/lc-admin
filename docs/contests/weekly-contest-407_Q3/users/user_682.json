{
    "username": "Ahemad_14",
    "submission": "/*\n\tName :- Tafheem Ahemad\n*/\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n#define ll long long int\n#define ld long double\n#define F first\n#define S second\nconst int MOD=1e9+7;\n#define vl vector<ll>\n#define vi vector<int>\n#define vs vector<string>\n#define vll vector<vl>\n#define vii vector<vi>\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define ump unordered_map\n#define all(v) v.begin(),v.end()\n#define take_matrix(a,n,m) for(int i=0; i<n; i++){for(int j=0; j<m; j++){cin>>a[i][j];}}\n#define print_matrix(a,n,m) for(int i=0; i<n; i++){for(int j=0; j<m; j++){cout<<a[i][j]<<' ';}cout<<endl;}\n#define input(a) for(auto &x:a) cin>>x;\n#define printv(a) for(auto &i:a) cout<<i<<' '; cout<<endl;\n#define yes(x) if(x) cout<<\"YES\"<<endl; else cout<<\"NO\"<<endl;\n#define cl(n) for(int i=0;i<=n+5;i++) g[i].clear()\n#define mem(v,z) memset(v,z,sizeof(v))\n#define bpc(x) __builtin_popcountll(x)\n#define pq_max priority_queue<ll>\n#define pq_min priority_queue<ll,vl,greater<ll>>\n#define fast() ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define pb push_back\n#define in insert\ntemplate <typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nvector<vector<ll>>delta1={{1,0},{-1,0},{0,-1},{0,1}};\nvector<vector<ll>>delta2={{1,0},{-1,0},{0,-1},{0,1},{1,1},{-1,1},{1,-1},{-1,-1}};\n\n\nclass Solution {\npublic:\n    int maxOperations(string s) {\n        reverse(all(s));\n        \n        int a=0;\n        int c=0;\n        int f=0;\n        for(int i=0;i<s.size()-1;i++){\n            if(s[i]=='0' && s[i+1]=='1'){\n                c++;\n                a+=c;\n                \n            }\n            \n            if(s[i]=='1' && s[i+1]=='1'){\n                a+=c;\n            }\n        }\n        \n        return a;\n    }\n};",
    "submit_ts": "1721529669",
    "subm_id": "1327909081"
}