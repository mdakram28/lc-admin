{
    "username": "ConstantineJin",
    "submission": "sys.set_int_max_str_digits(100001)\n\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        match k:\n            case 1:\n                return \"9\" * n\n            case 2:\n                if n == 1:\n                    return \"8\"\n                return \"8\" + \"9\" * (n - 2) + \"8\"\n            case 3:\n                return \"9\" * n\n            case 4:\n                if n < 5:\n                    return \"8\" * n\n                return \"88\" + \"9\" * (n - 4) + \"88\"\n            case 5:\n                if n == 1:\n                    return \"5\"\n                return \"5\" + \"9\" * (n - 2) + \"5\"\n            case 6:\n                if n < 3:\n                    return \"6\" * n\n                if n % 2 == 1:\n                    return \"8\" + \"9\" * ((n - 3) // 2) + \"8\" + \"9\" * ((n - 3) // 2) + \"8\"\n                else:\n                    return \"8\" + \"9\" * (n // 2 - 2) + \"77\" + \"9\" * (n // 2 - 2) + \"8\"\n            case 7:\n                if n < 3:\n                    return \"7\" * n\n                if n % 2 == 1:\n                    for x in range(9, -1, -1):\n                        v = int(\"9\" * (n // 2) + str(x) + \"9\" * (n // 2))\n                        if v % 7 == 0:\n                            return str(v)\n                else:\n                    for x in range(9, -1, -1):\n                        v = int(\"9\" * (n // 2 - 1) + str(x) + str(x) + \"9\" * (n // 2 - 1))\n                        if v % 7 == 0:\n                            return str(v)\n            case 8:\n                if n < 7:\n                    return \"8\" * n\n                return \"888\" + \"9\" * (n - 6) + \"888\"\n            case 9:\n                return \"9\" * n",
    "submit_ts": "1723952317",
    "subm_id": "1359793371"
}