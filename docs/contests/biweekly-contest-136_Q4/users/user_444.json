{
    "username": "varangrai",
    "submission": "class Solution {\npublic:\n    vector<int> graph[200001];\n    int fir[200001], sec[200001], ans[200001];\n\n    void dfs1(int node = 1, int parent = 0) {\n        for (int i : graph[node])\n            if (i != parent) {\n                dfs1(i, node);\n                int edgeCost = ((i & 1) ? 2 : 1);\n                if (fir[i] + edgeCost > fir[node]) {\n                    sec[node] = fir[node];\n                    fir[node] = fir[i] + edgeCost;\n                } else if (fir[i] + edgeCost > sec[node]) {\n                    sec[node] = fir[i] + edgeCost;\n                }\n            }\n    }\n    int cost(int i){\n        return ((i & 1) ? 2 : 1);\n    }\n    void dfs2(int node = 1, int parent = 0, int to_p = 0) {\n        ans[node] = max(to_p, fir[node]);\n\n        for (int i : graph[node])\n            if (i != parent) {\n                int edgeCost = cost(i);\n\n                if (fir[i] + edgeCost == fir[node]){\n\n                    dfs2(i, node, cost(node) + max(to_p, sec[node]));\n                }\n                else dfs2(i, node, cost(node) + ans[node]);\n            }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = 0;\n        for (vector<int> &edge: edges) {\n            int u = edge[0] + 1, v = edge[1] + 1;\n            n = max({n, u, v});\n            graph[u].push_back(v);\n            graph[v].push_back(u);\n        }\n        dfs1();\n        dfs2();\n\n        vector<int> finalAns;\n\n        for (int i = 1; i <= n; i++) \n            finalAns.push_back(ans[i]);\n        \n        return finalAns;\n    }\n};",
    "submit_ts": "1722699206",
    "subm_id": "1343204675"
}