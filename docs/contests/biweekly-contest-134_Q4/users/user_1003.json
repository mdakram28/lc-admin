{
    "username": "jason7708",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<unordered_map<int, long long>> cnt(n);\n        cnt[0][nums[0]]++;\n        ans += nums[0] == k;\n        for(int i=1; i<n; i++) {\n            for(auto& [v, c] : cnt[i-1]) {\n                cnt[i][v & nums[i]] += c;\n            }\n            cnt[i][nums[i]]++;\n            if(cnt[i].count(k)) {\n                ans += cnt[i][k];\n            }\n        }\n        return ans;\n        \n        // for(int i=0; i<n; i++) {\n        //     int x = nums[i];\n        //     if(x == k) ans++;\n        //     for(int j=i-1; j>=0; j--) {\n        //         if(nums[j] == k) ans++;\n        //         if((nums[j] & x) == nums[j]) {\n        //             break;\n        //         }\n        //         nums[j] &= x;\n        //     }\n        // }\n        // return ans;\n    }\n};",
    "submit_ts": "1720280002",
    "subm_id": "1311773352"
}