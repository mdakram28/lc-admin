{
    "username": "vanquy24",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        class TrieNode:\n            def __init__(self):\n                self.children = {}\n                self.min_cost = float('inf')\n\n        class Trie:\n            def __init__(self):\n                self.root = TrieNode()\n\n            def insert(self, word: str, cost: int) -> None:\n                current_node = self.root\n                for character in word:\n                    if character not in current_node.children:\n                        current_node.children[character] = TrieNode()\n                    current_node = current_node.children[character]\n                current_node.min_cost = min(current_node.min_cost, cost)\n\n            def find_matching_costs(self, s: str, start_index: int) -> List[tuple]:\n                current_node = self.root\n                matching_costs = []\n                for i in range(start_index, len(s)):\n                    if s[i] not in current_node.children:\n                        break\n                    current_node = current_node.children[s[i]]\n                    if current_node.min_cost < float('inf'):\n                        matching_costs.append((i + 1, current_node.min_cost))\n                return matching_costs\n\n        target_length = len(target)\n        dp = [float('inf')] * (target_length + 1)\n        dp[0] = 0  # Base case: zero cost to form an empty string\n\n        # Build the trie\n        trie = Trie()\n        for word, cost in zip(words, costs):\n            trie.insert(word, cost)\n\n        # Update DP array using the trie\n        for i in range(target_length):\n            if dp[i] == float('inf'):\n                continue  # Skip unreachable positions\n            for end_index, cost in trie.find_matching_costs(target, i):\n                dp[end_index] = min(dp[end_index], dp[i] + cost)\n\n        return -1 if dp[target_length] == float('inf') else dp[target_length]",
    "submit_ts": "1720324314",
    "subm_id": "1312396532"
}