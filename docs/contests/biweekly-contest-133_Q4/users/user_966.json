{
    "username": "Kumar_Vinay",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    const int MAXI = 400;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements){\n        int ans = 0;\n        unordered_map<int, int> mp;\n        \n        for (const auto& req : requirements) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<int>> dp(n + 1, vector<int>(MAXI + 1, 0));\n        \n        dp[0][0] = 1;\n\n\n        for (int len = 1; len <= n; ++len) {\n            for (int j = 0; j <= MAXI; ++j) {\n                for (int k = 0; k < len; ++k) {\n                    int prev = j - k;\n                    if (prev >= 0) {\n                        dp[len][j] = (dp[len][j] + dp[len - 1][prev]) % MOD;\n                    }\n                }\n            }\n            \n            if(mp.count(len)) {\n                int temp = mp[len];\n                for (int x = 0; x <= MAXI; ++x) {\n                    if (x != temp) {\n                        dp[len][x] = 0;\n                    }\n                }\n            }\n        }\n\n        for (auto temp : dp[n]) {\n            ans = (ans + temp) % MOD;\n        }\n\n\n        return ans;\n    }\n};",
    "submit_ts": "1719070782",
    "subm_id": "1296831637"
}