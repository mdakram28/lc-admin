{
    "username": "danzhi",
    "submission": "class Solution {\n  public static int maxTotalReward(int[] rewardValues) {\n    int n = rewardValues.length;\n    Arrays.sort(rewardValues);\n    int m = rewardValues[n-1] * 2;\n    BitSet curr = new BitSet(m);\n    curr.set(0);\n    for (int v : rewardValues) {\n      BitSet next = new BitSet(m);\n      curr.shiftAndOr(v, next);\n      curr = next;\n      // System.out.format(\"  %3d %s\\n\", v, curr.trace());\n    }\n    for (int i = m - 1; i >= 0; i--) {\n      if (curr.isSet(i)) {\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  static class BitSet {\n    int n;\n    int m;\n    long[] bits;\n\n    BitSet(int n) {\n      this.n = n;\n      this.m = (n + 63) / 64;\n      this.bits = new long[m];\n    }\n\n    void set(int i) {\n      int q = i >> 6;\n      int r = i & 63;\n      bits[q] |= (1L << r);\n    }\n\n    boolean overlap(BitSet o) {\n      for (int i = 0; i < m; i++) {\n        if ((bits[i] & o.bits[i]) != 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    void union(BitSet o) {\n      for (int i = 0; i < m; i++) {\n        bits[i] |= o.bits[i];\n      }\n    }\n\n    // clear bit i assuming it is set\n    void clear(int i) {\n      int q = i >> 6;\n      int r = i & 63;\n      bits[q] ^= (1L << r);\n    }\n\n    boolean isSet(int i) {\n      int q = i >> 6;\n      int r = i & 63;\n      return (bits[q] & (1L << r)) != 0;\n    }\n\n    // ** shift portion [0,v-1] by v and then or **\n    void shiftAndOr(int v, BitSet next) {\n      int q = v >> 6;\n      int r = v & 63;\n      // System.out.format(\"  v:%2d r:%d r:%d\\n\", v, q, r);\n      for (int i = 0; i < q; i++) {\n        // ** Use |= not = below to NOT accidently clear set bits **\n        next.bits[i] |= bits[i];\n        if (i + q < m) {\n          long low = bits[i] << r;\n          next.bits[i+q] |= low;\n          if (r > 0 && i + q + 1 < m) {\n            long high = bits[i] >>> (64 - r);\n            next.bits[i+q+1] |= high;\n          }\n        }\n      }\n      if (r > 0) {\n        int j = q << 6;\n        for (int i = j; i < v; i++) {\n          if (isSet(i)) {\n            next.set(i + v);\n          }\n        }\n      }\n      for (int i = 0; i < m; i++) {\n        next.bits[i] |= bits[i];\n      }\n    }\n\n    String trace() {\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < m; i++) {\n        for (int j = 0; j < 64; j++) {\n          sb.append((bits[i] & (1L << j)) != 0 ? '1':'0');\n        }\n      }\n      return sb.toString();\n    }\n  }\n}",
    "submit_ts": 1717903184.0
}