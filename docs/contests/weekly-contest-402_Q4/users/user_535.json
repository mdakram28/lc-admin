{
    "username": "Marmaduke",
    "submission": "struct poop\n{\n    int val;\n    int left;\n    int right;\n    int ct;\n    \n    poop()\n    {\n        val = left=right=ct = 0;\n    }\n};\n\nconst int big = 1e9+7;\n\nclass Solution {\npublic:\n    void update(vector<poop>& st, int node, int idx, int val, int type, int L, int R)\n    {\n        if(L == R)\n        {\n            switch(type)\n            {\n                case 0:\n                    st[node].left = val;\n                    break;\n                case 1:\n                    st[node].val = val;\n                    break;\n                case 2:\n                    st[node].right = val;\n                    break;\n            }\n            if(st[node].val > max(st[node].left, st[node].right) )\n            {\n                st[node].ct = 1;\n            }\n            else\n            {\n                st[node].ct = 0;\n            }\n            return;\n        }\n        \n        int M = (L+R)/2;\n        int a = 2*node;\n        int b = a+1;\n        if(idx <= M)\n        {\n            update(st, a, idx, val, type, L, M);\n        }\n        else\n        {\n            update(st, b, idx, val, type, M+1, R);\n        }\n        st[node].ct = st[a].ct + st[b].ct;\n    }\n    void meta_update(vector<poop>& st, int n, int idx, int val)\n    {\n        for(int k = idx-1; k <= idx+1; k++)\n        {\n            if(0 <= k && k < n)\n            {\n                int c = k-idx+1;\n                update(st, 1, k, val, c, 0, n-1);\n            }\n        }\n    }\n    int query(vector<poop>& st, int node, int l, int r, int L, int R)\n    {\n        if(l == L && r == R)\n        {\n            return st[node].ct;\n        }\n        if(l > r)\n        {\n            return 0;\n        }\n        int M = (L+R)/2;\n        int a = 2*node;\n        int b = a+1;\n        int A = query(st, a, l, min(r, M), L, M);\n        int B = query(st, b, max(l, M+1), r, M+1, R);\n        return A+B;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<poop> st(4*n);\n        for(int i = 0; i < n; i++)\n        {\n            meta_update(st, n, i, nums[i]);\n        }\n        update(st, 1, 0, big, 0, 0, n-1);\n        update(st, 1, n-1, big, 2, 0, n-1);\n        vector<int> ans;\n        for(auto &q : queries)\n        {\n            int a = q[0];\n            int b = q[1];\n            int c = q[2];\n            if(a == 1)\n            {\n                int x=0;\n                if(c-b > 1)\n                {\n                    x = query(st, 1, b, c, 0, n-1) - query(st, 1, b, b, 0, n-1) - query(st, 1, c, c, 0, n-1);\n                }\n                ans.push_back(x);\n            }\n            else\n            {\n                meta_update(st, n, b, c);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1718507504.0
}