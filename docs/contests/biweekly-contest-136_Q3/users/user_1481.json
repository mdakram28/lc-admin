{
    "username": "cassowary1",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n= grid.size(), m=grid[0].size(), cnt = 0;\n        int c1=0, c2=0, c3=0, c4=0;\n        for(int i=0;i<n/2;i++)\n        {\n            for(int j=0;j<m/2;j++)\n            {\n                int sum = grid[i][j] + grid[n-1-i][j] + grid[i][m-1-j]+grid[n-1-i][m-1-j];\n                cnt += min(sum, 4-sum);\n            }\n        }\n        if(n%2)\n        {\n            for(int j=0;j<m/2;j++)\n            {\n                if(grid[n/2][j]!=grid[n/2][m-1-j])cnt++, c1++;\n                else c2+=2*grid[n/2][j];\n            }\n        }\n        if(m%2)\n        {\n            for(int i=0;i<n/2;i++)\n            {\n                if(grid[i][m/2]!=grid[n-1-i][m/2])cnt++, c3++;\n                else c4+=2*grid[i][m/2];\n            }\n        }\n        if(n%2&&m%2&&grid[n/2][m/2])cnt++;\n        int rem=(c2+c4)%4;\n        if(rem>0)\n        {\n            if(c1+c3==0)cnt+=(rem);\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1722699059",
    "subm_id": "1343200272"
}