{
    "username": "viraj_vrj",
    "submission": "class Solution {\npublic:\n\n    struct TrieNode{\n        int cnt=0;\n        bool present=false;\n        int cost=-1;\n        TrieNode* child[26];\n        // TrieNode(){\n        //     cnt=0;\n        //     present=false;\n        //     cost=-1;\n        // }\n    };\n\n    int f(int i, string &target, TrieNode* head, map<string,int> &m, vector<int> &dp){\n        int n=target.size();\n        if(i>=n) return 0;\n        if(dp[i]!=-1) return dp[i];\n        int ans=1e9;\n        TrieNode* p=head;\n        for(int j=i;j<n;j++){\n            int c=target[j]-'a';\n            if(p->child[c]==NULL) break;\n            p=p->child[c];\n            if(p->present){\n                ans=min(ans,f(j+1,target,head,m,dp)+p->cost);\n            }\n        }\n        return dp[i]=ans;\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        map<string,int> m;\n        for(int i=0;i<words.size();i++){\n            if(m.find(words[i])!=m.end()){\n                m[words[i]]=min(m[words[i]],costs[i]);\n            }\n            else{\n                m[words[i]]=costs[i];\n            }\n        }\n        int n=target.size();\n        vector<int> dp(n,-1);\n        TrieNode* head=new TrieNode();\n        for(auto it: m){\n            TrieNode* p=head;\n            for(auto c: it.first){\n                if(p->child[c-'a']==NULL){\n                    p->child[c-'a']=new TrieNode();\n                }\n                p=p->child[c-'a'];\n            }\n            p->present=true;\n            p->cost=it.second;\n        }\n        int k= f(0,target,head,m,dp);\n        if(k>=1e9) return -1;\n        return k;\n    }\n};",
    "submit_ts": "1720321863",
    "subm_id": "1312334327"
}