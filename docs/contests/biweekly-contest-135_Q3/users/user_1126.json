{
    "username": "vinitsingh27",
    "submission": "// author Vinit kumar Singh\n\n#include <algorithm>\n#include <bits/stdc++.h>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n// #define int long long int\n#define math ma\n#include <iostream>\n#include <string>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> vinshr;\n        vector<int> soln;\n        int n = nums.size();\n        int half = n / 2;\n\n        populatevinshr(nums, k, vinshr, soln, half);\n\n        sort(soln.begin(), soln.end());\n\n        return calculate_min(vinshr, soln, half);\n    }\n\nprivate:\n    void populatevinshr(const vector<int>& nums, int k, map<int, vector<int>>& vinshr, vector<int>& soln, int half) {\n        int n = nums.size();\n        for (int i = 0; i < half; ++i) \n        {\n            int aq = nums[i];\n            int we = nums[n - i - 1];\n            int value = abs(aq - we);\n            int aqwe = max({aq, we, k - aq, k - we});\n            vinshr[value].push_back(aqwe);\n            soln.push_back(aqwe);\n        }\n    }\n\n    int calculate_min(const map<int, vector<int>>& vinshr, const vector<int>& soln, int half) {\n        int ans = half * 2; \n\n        for (const auto& val : vinshr) \n        {\n            int value = val.first;\n            int adjust = lower_bound(soln.begin(), soln.end(), value) - soln.begin();\n            adjust = adjust * 2 + (half - adjust);\n\n            for (const auto& aqwe : val.second) {\n                if (aqwe < value) {\n                    adjust -= 2;\n                } else {\n                    adjust -= 1;\n                }\n            }\n\n            ans = min(ans, adjust);\n        }\n\n        return ans;\n    }\n};\n\n\n",
    "submit_ts": "1721489186",
    "subm_id": "1327445613"
}