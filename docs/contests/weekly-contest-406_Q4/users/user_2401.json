{
    "username": "ForGive",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long h = 1, v = 1;\n        priority_queue<int> hq{horizontalCut.begin(), horizontalCut.end()}, vq{verticalCut.begin(), verticalCut.end()};\n\n        long long res = 0;\n        while(!hq.empty() || !vq.empty())\n        {\n            if(vq.empty())\n            {\n                long long cur = hq.top(); hq.pop();\n                res += cur*v;\n            }\n            else if(hq.empty())\n            {\n                long long cur = vq.top(); vq.pop();\n                res += cur*h;\n            }\n            else\n            {\n                long long vcur = vq.top(), hcur = hq.top();\n                if(vcur*(1)>=hcur*(1))\n                {\n                    vq.pop();\n                    res += vcur*h;\n                    v++;\n                }\n                else\n                {\n                    hq.pop();\n                    res += hcur*v;\n                    h++;\n                }\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720926184",
    "subm_id": "1320278474"
}