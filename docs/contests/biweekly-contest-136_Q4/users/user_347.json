{
    "username": "hao-shou-bu-juan",
    "submission": "\n# -*- coding: utf-8 -*-\nfrom typing import List, Tuple, Optional\nfrom collections import deque, Counter\nfrom queue import PriorityQueue\nimport math\nfrom functools import lru_cache\nfrom sortedcontainers import SortedDict, SortedSet\nimport random\nimport copy\nimport sys\nsys.setrecursionlimit(9999999)\n\nMOD = 10**9 + 7\n\n\n\n\n\nclass Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n\n        n = len(edges) + 1\n        lk = [[] for i in range(n)]\n        ch = [[] for i in range(n)]\n\n        for a, b in edges:\n            lk[a].append(b)\n            lk[b].append(a)\n\n\n        fa = [None] * n\n        que = deque()\n        que.append(0)\n\n        T = []\n        while len(que):\n            x = que.popleft()\n            T.append(x)\n            for y in lk[x]:\n                if y == fa[x]:\n                    continue\n\n                fa[y] = x\n                ch[x].append(y)\n                que.append(y)\n\n        major = [0] * n\n        minor = [0] * n\n\n        def update(node_idx, val):\n            arr = [major[node_idx], minor[node_idx], val]\n            arr.sort()\n            major[node_idx] = arr[-1]\n            minor[node_idx] = arr[-2]\n\n        dp0 = [0] * n\n        e = [1 if i%2 == 1 else 2 for i in range(n)]\n\n        for x in T[::-1]:\n            dp0[x] = 0\n            for y in ch[x]:\n                dp0[x] = max(dp0[x], dp0[y] + e[y])\n                update(x, dp0[y] + e[y])\n\n\n        dp1 = [0] * n\n\n        def update(node_idx, val):\n            arr = [major[node_idx], minor[node_idx], val]\n            arr.sort()\n            major[node_idx] = arr[-1]\n            minor[node_idx] = arr[-2]\n\n\n        dp1[0] = dp0[0]\n        for x in T[1:]:\n            y = fa[x]\n\n            if major[y] == dp0[x] + e[x]:\n                y_part = minor[y] + e[y]\n            else:\n                y_part = major[y] + e[y]\n\n            update(x, y_part)\n            dp1[x] = major[x]\n\n        return dp1\n",
    "submit_ts": "1722699502",
    "subm_id": "552275938"
}