{
    "username": "vibrant-6angulyta3",
    "submission": "#include<bits/stdc++.h>\t\nusing namespace std;\nclass Solution {\npublic:\n\tint minimumDistance(vector<vector<int>>& points) {\n\t\tsort(points.begin(), points.end());\n\t\tmultiset<int> ms1, ms2;\n\t\tint n = points.size();\n\t\tfor(int i = 0;i < n;i++) {\n\t\t\tint x = points[i][0], y = points[i][1];\n\t\t\tms1.emplace(x + y);\n\t\t\tms2.emplace(x - y);\n\t\t}\n\t\tint ans = 1e9;\n\t\tfor(int i = 0;i < n;i++) {\n\t\t\tint x = points[i][0], y = points[i][1];\n\t\t\tms1.erase(ms1.find(x + y));\n\t\t\tms2.erase(ms2.find(x - y));\n\t\t\tint mx = max(*prev(ms1.end()) - *ms1.begin(), *prev(ms2.end()) - *ms2.begin());\n\t\t\tans = min(ans, mx);\n\t\t\tms1.emplace(x + y);\n\t\t\tms2.emplace(x - y);\n\t\t}\n\t\treturn ans;\n\t}\n};"
}