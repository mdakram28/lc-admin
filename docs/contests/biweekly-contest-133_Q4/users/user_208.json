{
    "username": "serialcomder",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1'000'000'007;\n        \n        vector<int> invCnt(n, -1);\n        for (const auto& req : requirements) {\n            invCnt[req[0]] = req[1];\n        }\n        int K = invCnt[n - 1];\n        \n        vector<vector<int>> dp(n + 1, vector<int>(K + 1, 0));\n        dp[0][0] = 1;\n        \n        for (int len = 1; len <= n; ++len) {\n            for (int inv = 0; inv <= K; ++inv) {\n                for (int pos = 0; pos < len; ++pos) {\n                    if (inv >= pos) {\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][inv - pos]) % MOD;\n                    }\n                }\n            }\n        }\n\n        vector<vector<int>> dp_pref(n + 1, vector<int>(K + 1, 0));\n        dp_pref[0][0] = 1;\n        \n        for (int len = 1; len <= n; ++len) {\n            for (int inv = 0; inv <= K; ++inv) {\n                for (int pos = 0; pos < len; ++pos) {\n                    if (inv >= pos) {\n                        dp_pref[len][inv] = (dp_pref[len][inv] + dp_pref[len - 1][inv - pos]) % MOD;\n                    }\n                }\n            }\n            \n            if (invCnt[len - 1] != -1) {\n                for (int inv = 0; inv <= K; ++inv) {\n                    if (inv != invCnt[len - 1]) {\n                        dp_pref[len][inv] = 0;\n                    }\n                }\n            }\n        }\n        \n        int result = 0;\n        for (int inv = 0; inv <= K; ++inv) {\n            result = (result + dp_pref[n][inv]) % MOD;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": 1719069267.0
}