{
    "username": "aniska1202",
    "submission": "class Solution {\npublic:\n\nconst int MOD = 1e9 + 7;\nconst int MAX_INV = 400;\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        sort(requirements.begin(), requirements.end());\n\n        vector<vector<int>> dp(n+1, vector<int>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        /*for(int len =1; len <=n;len++){\n\n            for(int inv =0;inv<=MAX_INV;inv++){\n                if(dp[len -1][inv] == 0) continue;\n\n                for(int pos = 0;pos < len ;pos++){\n                    int new_inv = inv + (len -1-pos);\n\n                    if(new_inv <=MAX_INV){\n                        dp[len][new_inv] =(dp[len][new_inv] + dp[len -1][inv]) % MOD;\n                    }\n                }\n            }\n        }\n        vector<int> valid(n+1, -1);\n        valid[0]=0;\n        for(auto &req : requirements){\n            int endi = req[0];\n            int cnti = req[1];\n            valid [endi+1] = cnti;\n        }*/ \n\n        vector<int>req_inversions(n+1, -1);\n        for(const auto & req : requirements){\n            int endi = req[0] +1;\n            int cnti = req[1];\n            req_inversions[endi] = cnti;\n        }\n\n        for(int len =1; len <=n;len++){\n            vector<vector<int>> new_dp(n+1,vector<int>(MAX_INV + 1, 0));\n\n            for(int inv =0;inv<=MAX_INV;inv++){\n                if(dp[len -1][inv] == 0) continue;\n\n                for(int pos = 0;pos < len ;pos++){\n                    int new_inv = inv + (len -1-pos);\n\n                    if(new_inv <=MAX_INV){\n                        new_dp[len][new_inv] =(new_dp[len][new_inv] + dp[len -1][inv]) % MOD;\n                    }\n                }\n            }\n            dp.swap(new_dp);\n\n            int req_inv = req_inversions[len];\n            if(req_inv !=-1){\n                vector<int> valid(MAX_INV +1,0);\n                valid[req_inv] =1;\n                vector<vector<int>> temp_dp(n+1, vector<int>(MAX_INV +1,0));\n                for(int inv =0;inv <=MAX_INV;inv++){\n                    if(valid[inv] ==1){\n                        temp_dp[len][inv] = dp[len][inv];\n                    }\n                }\n                dp.swap(temp_dp);\n            }\n        }\n        int res =0;\n        for(int inv =0;inv <=MAX_INV;inv++){\n                res = (res +dp[n][inv]) % MOD;    \n        }\n        return res;\n    }\n};",
    "submit_ts": 1719069690.0
}