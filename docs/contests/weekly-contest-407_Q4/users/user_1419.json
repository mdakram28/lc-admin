{
    "username": "jeevantbihari",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        long long int ans = 0;\n        vector<pair<int, bool>> dp(n, {0, false});\n        if(target[0] >= nums[0]) {\n            dp[0] = {abs(target[0]-nums[0]), true};\n        } else {\n            dp[0] = {abs(target[0]-nums[0]), false};\n        }\n        ans += abs(target[0]-nums[0]);\n        for(int i = 1; i < n; ++i) {\n            int previousMove = dp[i - 1].first;\n            bool previousDirection = dp[i - 1].second;\n            int currentMoveLength = abs(target[i]-nums[i]);\n            if(target[i] >= nums[i]) {\n                if(previousDirection == true) {\n                    if(previousMove > currentMoveLength) {\n                        dp[i] = {currentMoveLength, true};\n                    } else {\n                        dp[i] = {currentMoveLength, true};\n                        ans += currentMoveLength - previousMove;\n                    }\n                } else {\n                    dp[i] = {abs(target[i]-nums[i]), true};\n                    ans += abs(target[i]-nums[i]);\n                }\n            } else {\n                if(previousDirection == true) {\n                    dp[i] = {abs(target[i]-nums[i]), false};\n                    ans += abs(target[i]-nums[i]);\n                } else {\n                    if(previousMove > currentMoveLength) {\n                        dp[i] = {currentMoveLength, false};\n                    } else {\n                        dp[i] = {currentMoveLength, false};\n                        ans += currentMoveLength - previousMove;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};\n\n",
    "submit_ts": "1721533152",
    "subm_id": "1328002468"
}