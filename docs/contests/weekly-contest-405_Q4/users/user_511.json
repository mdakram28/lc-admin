{
    "username": "codeworm96",
    "submission": "class Solution {\n    struct Node {\n        int cost;\n        Node *child[26];\n        Node() {\n            cost = -1;\n            for (int i = 0; i < 26; ++i) {\n                child[i] = nullptr;\n            }\n        }\n    };\n    Node * root;\n    void insert(Node * root, const string & s, int cost) {\n        int ix = 0;\n        while (ix != s.size() - 1) {\n            if (root->child[s[ix] - 'a'] == nullptr) {\n                root->child[s[ix] - 'a'] = new Node();\n            }\n            root = root->child[s[ix] - 'a'];\n            ++ix;\n        }\n        if (root->child[s[ix] - 'a'] == nullptr) {\n            root->child[s[ix] - 'a'] = new Node();\n        }\n        if (root->child[s[ix] - 'a']->cost < 0 || root->child[s[ix] - 'a']->cost > cost) {\n            root->child[s[ix] - 'a']->cost = cost;\n        }\n    }\n    vector<int> dp;\n    int f(const string & target, int ix, Node * root) {\n        if (ix == target.size()) {\n            return 0;\n        }\n        if (dp[ix] != -1) {\n            return dp[ix];\n        }\n        dp[ix] = INT_MAX / 2;\n        Node * p = root;\n        int i = ix;\n        while (p && i < target.size()) {\n            p = p->child[target[i] - 'a'];\n            ++i;\n            if (p && p->cost >= 0) {\n                int t = p->cost + f(target, i, root);\n                dp[ix] = min(dp[ix], t);\n            }\n        }\n        return dp[ix];\n    }\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        root = new Node();\n        for (int i = 0; i < words.size(); ++i) {\n            insert(root, words[i], costs[i]);\n        }\n        dp.clear();\n        dp.resize(target.size(), -1);\n        int res = f(target, 0, root);\n        if (res >= INT_MAX / 2) {\n            return -1;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720322610",
    "subm_id": "1312354464"
}