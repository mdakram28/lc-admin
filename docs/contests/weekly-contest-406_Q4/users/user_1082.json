{
    "username": "Snow777",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         priority_queue<pair<int, char>> pq;  // \u4f18\u5148\u961f\u5217\u5b58\u50a8\uff08\u6210\u672c\uff0c\u7c7b\u578b\uff09\n\n        for (int cost : horizontalCut) {\n            pq.push({cost, 'h'});  // \u6c34\u5e73\u5207\u5272\n        }\n        for (int cost : verticalCut) {\n            pq.push({cost, 'v'});  // \u5782\u76f4\u5207\u5272\n        }\n\n        // \u521d\u59cb\u6bcf\u4e2a\u65b9\u5411\u4e0a\u5207\u6210\u7684\u7247\u6bb5\u6570\u4e3a1\n        int horizontalCuts = 1;\n        int verticalCuts = 1;\n        long long totalCost = 0;\n\n        while (!pq.empty()) {\n            auto [cost, type] = pq.top();\n            pq.pop();\n\n            if (type == 'h') {  // \u6c34\u5e73\u5207\u5272\n                totalCost += cost * verticalCuts;\n                horizontalCuts++;\n            } else {  // \u5782\u76f4\u5207\u5272\n                totalCost += cost * horizontalCuts;\n                verticalCuts++;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926045",
    "subm_id": "546443684"
}