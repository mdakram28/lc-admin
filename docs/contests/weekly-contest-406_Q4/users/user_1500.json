{
    "username": "HerDaddy_69",
    "submission": "using ll = long long int;\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<ll,pair<ll,ll>>> pq;\n        for(int i=0;i<horizontalCut.size();i++) pq.push({horizontalCut[i],{0,i}});\n        for(int i=0;i<verticalCut.size();i++) pq.push({verticalCut[i],{1,i}});\n        int hind=1,vind=1;\n        ll res = 0;\n        while (!pq.empty()) {\n            auto xd = pq.top();\n            pq.pop();\n            ll cst = xd.first;\n            if (!xd.second.first){\n                res += cst * vind;\n                hind++;\n            } else{\n                res += cst * hind;\n                vind++;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925972",
    "subm_id": "1320272020"
}