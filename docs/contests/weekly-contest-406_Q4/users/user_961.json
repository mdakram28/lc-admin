{
    "username": "RoxyKawaii",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # Sort the cut arrays in descending order\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n\n        # Initialize costs and piece counts\n        total_cost = 0\n        h_pieces = 1  # Initially, there's one piece in the horizontal direction\n        v_pieces = 1  # Initially, there's one piece in the vertical direction\n\n        # Pointers for horizontal and vertical cuts\n        h_index, v_index = 0, 0\n        \n        # Process the cuts until all are made\n        while h_index < len(horizontalCut) or v_index < len(verticalCut):\n            if (h_index < len(horizontalCut) and \n                (v_index >= len(verticalCut) or horizontalCut[h_index] >= verticalCut[v_index])):\n                # Perform horizontal cut\n                total_cost += horizontalCut[h_index] * v_pieces\n                h_pieces += 1\n                h_index += 1\n            else:\n                # Perform vertical cut\n                total_cost += verticalCut[v_index] * h_pieces\n                v_pieces += 1\n                v_index += 1\n\n        return total_cost\n",
    "submit_ts": "1720925663",
    "subm_id": "1320262149"
}