{
    "username": "dhairya_996",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        int n = points.size();\n        \n        multiset<int> sums, diff;\n        for(int i=0; i<n; i++)\n        {\n            sums.insert(points[i][0] + points[i][1]);\n            diff.insert(points[i][0] - points[i][1]);\n        }\n        \n        int ans = INT_MAX;\n        \n        for(int i=0; i<n; i++)\n        {\n            int val1 = points[i][0] + points[i][1];\n            int val2 = points[i][0] - points[i][1];\n            \n            if(sums.find(val1) != sums.end()) sums.erase(sums.find(val1));\n            if(diff.find(val2) != diff.end()) diff.erase(diff.find(val2));\n            \n            int a = (*(--sums.end()) - *sums.begin());\n            int b = (*(--diff.end()) - *diff.begin());\n            \n            ans = min(ans, max(a, b));\n            sums.insert(val1);\n            diff.insert(val2);\n        }\n        \n        return ans;\n        \n    }\n};"
}