{
    "username": "dakshkochhar2002",
    "submission": "#define ff first\n#define ss second\nclass Solution {\npublic:\n    pair<int,pair<int,int>> mx_dist(vector<vector<int>>& points){\n        int n = points.size();\n        vector<pair<int,int>> sum, diff;\n        for(int i=0; i<points.size(); i+=1){\n            sum.push_back({points[i][0]+points[i][1], i});\n            diff.push_back({points[i][0]-points[i][1], i});\n        }\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        pair<int,int> mx_sum = sum[n-1], mn_sum = sum[0], mx_dif = diff[n-1], mn_dif = diff[0];\n        int dif1 = mx_sum.ff - mn_sum.ff, dif2 = mx_dif.ff - mn_dif.ff;\n        if(dif1 > dif2){\n            return {dif1, {mx_sum.ss, mn_sum.ss}};\n        }else{\n            return {dif2, {mx_dif.ss, mn_dif.ss}};\n        }\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        pair<int,pair<int,int>> it = mx_dist(points);\n        int dif = it.ff, i = it.ss.ff, j = it.ss.ss;\n        vector<vector<int>> p1, p2;\n        for(int k=0; k<points.size(); k+=1){\n            if(k==i) continue;\n            p1.push_back(points[k]);\n        }\n        pair<int,pair<int,int>> it1 = mx_dist(p1);\n        for(int k=0; k<points.size(); k+=1){\n            if(k==j) continue;\n            p2.push_back(points[k]);\n        }\n        pair<int,pair<int,int>> it2 = mx_dist(p2);\n        int dif1 = it1.ff, dif2 = it2.ff;\n        int ans = min(dif1, dif2);\n        return ans;\n    }\n};"
}