{
    "username": "callmepandey",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        \n        int n = edges.size() + 1;\n        \n        vector <int> dp(n, 0);\n        vector <int> nodes[n];\n        for(auto &a : edges) {\n            nodes[a[0]].push_back(a[1]);\n            nodes[a[1]].push_back(a[0]);\n        }\n        function<void(int,int)> dfs = [&](int u , int p) {\n            int add = 1;\n            if(u % 2 == 0) add++;\n            dp[u] = add;\n            for(int v : nodes[u]) {\n                if(v == p) continue;\n                dfs(v , u);\n                dp[u] = max(dp[u] , dp[v] + add);\n            }  \n        };\n        dfs(0 , 0);\n        \n        vector <int> ans(n);\n        for(int i = 0 ; i < n ; ++i) {\n            sort(nodes[i].begin() , nodes[i].end() , [&](int a,  int b){\n                return dp[a] > dp[b];\n            });\n        }\n        \n        function < void(int,int,int) > answer = [&](int u , int p , int tim) {\n                \n              int add = 1;\n              if(u % 2 == 0) add++;\n              ans[u] = max(dp[u] - add , tim);\n              if(u % 2 == 0) tim += 2;\n              else tim++;\n              for(int v : nodes[u]) {\n                  if(v == p) continue;\n                  int allOtherBranch = 0;\n                  for(int x : nodes[u]) {\n                      if(v == x or x == p) continue;\n                      allOtherBranch = dp[x];\n                      break;\n                  }\n                  //cout << u <<' '<< v  << ' ' << allOtherBranch << ' ' << tim << endl;\n                  if(u % 2 == 0) allOtherBranch += 2;\n                  else allOtherBranch++;\n                  //cout << u <<' '<< v  << ' ' << allOtherBranch << ' ' << tim << endl;\n                  answer(v , u , max(tim , allOtherBranch));\n              }\n        };\n        answer(0,0,0);\n        return ans;\n    }\n};",
    "submit_ts": "1722697350",
    "subm_id": "1343143393"
}