{
    "username": "AtrijPaul",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long totalOperations = 0;\n        long currentSegmentDiff = 0;\n\n        // Compute the difference array and process segments\n        for (int i = 0; i < n; i++) {\n            int diff = target[i] - nums[i];\n            \n            if (i == 0 || (diff * currentSegmentDiff >= 0)) {\n                // Continuing the same segment or starting a new segment with same sign\n                long additionalOperations = Math.abs(diff) - Math.abs(currentSegmentDiff);\n                if (additionalOperations > 0) {\n                    totalOperations += additionalOperations;\n                }\n                currentSegmentDiff = diff;\n            } else {\n                // New segment detected\n                totalOperations += Math.abs(diff);\n                currentSegmentDiff = diff;\n            }\n        }\n\n        return totalOperations;\n    }\n}",
    "submit_ts": "1721533189",
    "subm_id": "1328003328"
}