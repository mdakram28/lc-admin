{
    "username": "kuromilover",
    "submission": "int f[200005], b[200005], a[200005];\nint n, m;\n\nclass Solution {\npublic:\n    int check(int i) {\n        if (i == 0 || i == n - 1) return 0;\n        if (b[i] > b[i - 1] && b[i] > b[i + 1]) return 1;\n        else return 0;\n    }\n    int query(int x) {\n        int sum = 0;\n        for (; x; x -= (x & -x)) sum += f[x];\n        return sum;\n    }\n    void upd(int x, int d) {\n        for (; x <= n; x += (x & -x)) f[x] += d;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        m = queries.size(), n = nums.size();\n        for (int i = 1; i <= n; i ++) f[i] = 0;\n        for (int i = 0; i < n; i ++) b[i] = nums[i];\n        for (int i = 0; i < n; i ++) {\n            a[i + 1] = check(i); \n            upd(i + 1, a[i + 1]);\n        }\n        vector<int> vv;\n        for (int i = 0; i < m; i ++) {\n            int x = queries[i][0], y = queries[i][1], z = queries[i][2];\n            if (x == 1) {\n                ++ y; ++ z;\n                if (z - y + 1 <= 2) vv.push_back(0);\n                else vv.push_back(query(z - 1) - query(y));\n            }\n            else {\n                b[y] = z;\n                int old = a[y + 1], ne = check(y);\n                upd(y + 1, ne - old);\n                a[y + 1] = ne;\n                if (y + 1 < n) {\n                    old = a[y + 2], ne = check(y + 1);\n                    upd(y + 2, ne - old);\n                    a[y + 2] = ne;\n                }\n                if (y) {\n                    old = a[y], ne = check(y - 1);\n                    upd(y, ne - old);\n                    a[y] = ne;\n                }\n            }\n        }\n        return vv;\n    }\n};",
    "submit_ts": "1718505664",
    "subm_id": "539769706"
}