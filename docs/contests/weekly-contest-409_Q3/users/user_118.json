{
    "username": "Wibo",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> par(n), sez(n), r(n);\n        for (int i=0; i<n; i++) par[i] = r[i] = i, sez[i] = 1;\n        auto find = [&](auto &self, int u) -> int {\n            if (par[u] != u) return par[u] = self(self, par[u]);\n            return u;\n        };\n        auto unite = [&](int u, int v) -> void {\n            u = find(find, u); v = find(find, v);\n            // cout << \"unite \" << r[u] << ' ' << r[v] << '\\n'; \n            if (sez[u] > sez[v]) swap(u, v);\n            par[u] = v; sez[v] += sez[u]; r[v] = max(r[v], r[u]);\n        };\n\n        vector<int> ans(queries.size());\n        int cur_ans = n-1;\n        for (int i=0; i<(int)queries.size(); i++) {\n            // cout << i << \"\\n\";\n            int u = queries[i][0], v = queries[i][1];\n            for (int j=r[find(find, u)]; j<v-1; ) {\n                cur_ans--;\n                unite(j, j+1);\n                j = r[find(find, j)];\n            }\n            ans[i] = cur_ans;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722740109",
    "subm_id": "1343711427"
}