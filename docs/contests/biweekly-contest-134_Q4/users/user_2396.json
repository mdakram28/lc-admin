{
    "username": "Shre_Sen",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& array, int target) {\n        int size = array.size();\n        long long total = 0;\n        unordered_map<long long, long long> prevResults;\n        for (int index = 0; index < size; ++index) {\n            unordered_map<long long, long long> currentResults; \n            if (array[index] == target) {\n                total++;\n            }\n     //        vector<vector<int>> subsets(vector<int>& nums) {\n     //    vector<vector<int>> result;\n     //    int n = nums.size();\n     //    for (int i = 0; i < (1 << n); i++) {\n     //        vector<int> subset;\n     //        for (int j = 0; j < n; j++) {\n     //            if ((i & (1 << j)) > 0) {\n     //                subset.push_back(nums[j]);\n     //            }\n     //        }\n     //        result.push_back(subset);\n     //    }\n     // ret\n            currentResults[array[index]] = 1;\n            for (auto& [value, frequency] : prevResults) {\n                long long newAndResult = value & array[index];\n                if (newAndResult == target) {\n                    total += frequency;\n                }\n                currentResults[newAndResult] += frequency;\n            }\n            \n            prevResults = currentResults;\n        }\n        return total;\n\n    }\n};",
    "submit_ts": "1720278546",
    "subm_id": "1311713886"
}