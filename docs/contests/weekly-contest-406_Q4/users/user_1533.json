{
    "username": "atharva6yya",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         std::vector<std::pair<int, char>> cuts;\n        for (int cost : horizontalCut) {\n            cuts.emplace_back(cost, 'h');\n        }\n        for (int cost : verticalCut) {\n            cuts.emplace_back(cost, 'v');\n        }\n        std::sort(cuts.begin(), cuts.end(), std::greater<std::pair<int, char>>());\n        long long totalCost = 0;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        for (const auto& cut : cuts) {\n            if (cut.second == 'h') {\n                totalCost += cut.first * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += cut.first * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720925840",
    "subm_id": "1320267881"
}