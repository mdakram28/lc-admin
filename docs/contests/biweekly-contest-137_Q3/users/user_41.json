{
    "username": "Blagojche Bale Pavleski",
    "submission": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <string>\n#include <string.h>\n#include <bitset>\n#include <numeric>\n#include <utility>\n#include <random>\n#include <cassert>\n#include <iomanip>\n\n#define fr(i, n, m) for(int i = (n); i < (m); i ++)\n#define pb push_back\n#define st first\n#define nd second\n#define pq priority_queue\n#define all(x) begin(x), end(x)\n \nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\n \nconst int inf = 1e9;\nconst long long mod = 1e9 + 7;\nconst int mxn = 2e5+5;\n\nvector<pair<int,int> > v[501];\nlong long C[501][501];\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = (int)board.size();\n        int m = (int)board[0].size();\n        long long ANS = -3e9;\n        \n        for(int i = 0; i < m; i ++){\n            for(int j = 0; j < m; j ++){\n                C[i][j] = -2e9;\n                v[j].clear();\n            }\n        }\n        vector<pair<int, int> > aux;\n        for(int i = 0; i < n; i ++){\n            aux.clear();\n            for(int j = 0; j < m; j ++){\n                aux.push_back({board[i][j], j});\n                v[j].push_back({-board[i][j], i});\n                sort(v[j].begin(), v[j].end());\n                if(v[j].size() > 2) v[j].pop_back();\n            }\n            sort(aux.begin(), aux.end());\n            reverse(aux.begin(), aux.end());\n            if(i > 1){\n                for(int j1 = 0; j1 < m; j1 ++){\n                    for(int j2 = j1 + 1; j2 < m; j2 ++){\n                        int j3 = 0;\n                        while(aux[j3].nd == j1 || aux[j3].nd == j2) j3 ++;\n                        ANS = max(ANS, C[j1][j2] + aux[j3].st);\n                    }\n                }\n            }\n            if(i > 0){\n                for(int j1 = 0; j1 < m; j1 ++){\n                    for(int j2 = j1 + 1; j2 < m; j2 ++){\n                        long long ans1 = -v[j1][0].st;\n                        if(v[j2][0].nd == v[j1][0].nd){\n                            ans1 += -v[j2][1].st;\n                        }\n                        else{\n                            ans1 += -v[j2][0].st;\n                        }\n                        long long ans2 = -v[j2][0].st;\n                        if(v[j1][0].nd == v[j2][0].nd){\n                            ans2 += -v[j1][1].st;\n                        }\n                        else{\n                            ans2 += -v[j1][0].st;\n                        }\n                        C[j1][j2] = max(C[j1][j2], ans1);\n                        C[j1][j2] = max(C[j1][j2], ans2);\n                    }\n                }\n            }\n        }\n        return ANS;\n    }\n};\n",
    "submit_ts": "1723906769",
    "subm_id": "1359071484"
}