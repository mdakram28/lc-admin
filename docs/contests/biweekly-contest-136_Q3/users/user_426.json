{
    "username": "DenisGubar",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int const N = grid.size(), M = grid[0].size();\n        int result = 0;\n        for (int x = 0, y = N - 1; x < y; ++x, --y)\n            for (int a = 0, b = M - 1; a < b; ++a, --b)\n            {\n                int count = grid[x][a] + grid[x][b] + grid[y][a] + grid[y][b];\n                result += min(count, 4 - count);\n            }\n        if (N % 2 && M % 2)\n        {\n            int delta = 0, count = 0;\n            for (int x = 0, y = N - 1, j = M / 2; x < y; ++x, --y)\n                delta += grid[x][j] != grid[y][j],\n                result += grid[x][j] != grid[y][j],\n                count += (grid[x][j] + grid[y][j]) / 2;\n            for (int a = 0, b = M - 1, i = N / 2; a < b; ++a, --b)\n                delta += grid[i][a] != grid[i][b],\n                result += grid[i][a] != grid[i][b],\n                count += (grid[i][a] + grid[i][b]) / 2;\n            if (count % 2 && delta == 0)\n                result += 2;\n            result += grid[N / 2][M / 2];\n        }\n        else if (N % 2)\n        {\n            int delta = 0, count = 0;\n            for (int a = 0, b = M - 1, i = N / 2; a < b; ++a, --b)\n                delta += grid[i][a] != grid[i][b],\n                result += grid[i][a] != grid[i][b],\n                count += (grid[i][a] + grid[i][b]) / 2;\n            if (count % 2 && delta == 0)\n                result += 2;\n        }\n        else if (M % 2)\n        {\n            int delta = 0, count = 0;\n            for (int x = 0, y = N - 1, j = M / 2; x < y; ++x, --y)\n                delta += grid[x][j] != grid[y][j],\n                result += grid[x][j] != grid[y][j],\n                count += (grid[x][j] + grid[y][j]) / 2;\n            if (count % 2 && delta == 0)\n                result += 2;\n        }\n        return result;\n    }\n};\n",
    "submit_ts": "1722696691",
    "subm_id": "1343118240"
}