{
    "username": "jayantchaudharyextra",
    "submission": "func minFlips(grid [][]int) int {\n\tflips := 0\n\tn := len(grid)\n\tm := len(grid[0])\n\n\t// Loop through each quadrant\n\tfor i := 0; i < n/2; i++ {\n\t\tfor j := 0; j < m/2; j++ {\n\t\t\tcount := grid[i][j] + grid[i][m-1-j] + grid[n-1-i][j] + grid[n-1-i][m-1-j]\n\t\t\tif count == 0 || count == 4 {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif count == 2 {\n\t\t\t\tflips += 2\n\t\t\t}\n\t\t\tif count == 1 || count == 3 {\n\t\t\t\tflips += 1\n\t\t\t}\n\t\t}\n\t}\n\n\t// Track changes before processing the middle row/column\n\ttemp := flips\n\tones := 0\n\n\t// Handle the middle row if the number of rows is odd\n\tif n%2 == 1 {\n\t\tmiddleRow := n / 2\n\t\tfor j := 0; j < m/2; j++ {\n\t\t\tcount := grid[middleRow][j] + grid[middleRow][m-1-j]\n\t\t\tif count == 2 {\n\t\t\t\tones += 2\n\t\t\t}\n\t\t\tif count == 1 {\n\t\t\t\tflips++\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle the middle column if the number of columns is odd\n\tif m%2 == 1 {\n\t\tmiddleCol := m / 2\n\t\tfor i := 0; i < n/2; i++ {\n\t\t\tcount := grid[i][middleCol] + grid[n-1-i][middleCol]\n\t\t\tif count == 2 {\n\t\t\t\tones += 2\n\t\t\t}\n\t\t\tif count == 1 {\n\t\t\t\tflips++\n\t\t\t}\n\t\t}\n\t}\n\n\t// Calculate changes after processing the middle row/column\n\tft := flips - temp\n\n\t// Check for conditions that require additional flips\n\tif ones%4 == 2 && ft == 0 {\n\t\tflips += 2\n\t}\n\n\t// Check for the middle element if both dimensions are odd\n\tif n%2 == 1 && m%2 == 1 {\n\t\t// Check the central element\n\t\tif grid[n/2][m/2] == 1 {\n\t\t\tflips++\n\t\t}\n\t}\n\n\treturn flips\n}",
    "submit_ts": "1722699979",
    "subm_id": "1343228027"
}