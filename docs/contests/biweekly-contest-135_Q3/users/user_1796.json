{
    "username": "lixdrj",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        Map<Integer, Integer> map = new HashMap<>();\n        TreeMap<Integer, Integer> map1 = new TreeMap<>();\n        for (int i = 0; i < nums.length / 2; i++) {\n            int a = nums[i];\n            int b = nums[nums.length - 1 - i];\n            int t = Math.abs(a - b);\n            map.merge(t, 1, Integer::sum);\n            int t1 = k - a, t2 = k - b;\n            a = Math.max(a, b);\n            t1 = Math.max(t1, t2);\n            a = Math.max(a, t1);\n            map1.merge(a, 1, Integer::sum);\n        }\n        TreeMap<Integer, Integer> map2 = new TreeMap<>(new Comparator<Integer>() {\n            @Override\n            public int compare(Integer o1, Integer o2) {\n                return o2 - o1;\n            }\n        });\n        map2.putAll(map1);\n        int c = 0;\n        Set<Integer> set = map1.keySet();\n        for (Integer i : set) {\n            int val = map1.get(i);\n            map1.put(i, c + val);\n            c += val;\n        }\n        c = 0;\n        set = map2.keySet();\n        for (Integer i : set) {\n            int val = map2.get(i);\n            map2.put(i, c + val);\n            c += val;\n        }\n        int ans = Integer.MAX_VALUE;\n        set = map.keySet();\n        for (Integer i : set) {\n            Integer a = map1.floorKey(i - 1);\n            if (null == a) {\n                a = 0;\n            } else {\n                a = map1.get(a);\n            }\n            Integer b = map2.floorKey(i);\n            if (null == b) {\n                b = 0;\n            } else {\n                b = map2.get(b);\n            }\n            int t = a * 2 + b - map.get(i);\n            ans = Math.min(t, ans);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721490132",
    "subm_id": "548321710"
}