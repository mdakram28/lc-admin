{
    "username": "retyrn",
    "submission": "string to_string(string s) { return '\"' + s + '\"'; }\nstring to_string(const char *s) { return to_string((string) s); }\nstring to_string(bool b) { return (b ? \"true\" : \"false\"); }\ntemplate<typename A, typename B>\nstring to_string(pair<A, B> p) { return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\"; }\ntemplate<typename A>\nstring to_string(A v) { bool first = true; string res = \"{\"; for(const auto &x : v) { if(!first) { res += \", \"; } first = false; res += to_string(x);} res += \"}\"; return res; }\nvoid debug_out() { cout << endl; }\ntemplate<typename Head, typename... Tail> void debug_out(Head H, Tail... T) { cout << \" \" << to_string(H); debug_out(T...);}\n#define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n\nconstexpr long long inf = 2e18;\nclass Solution {\npublic:\n    using ll = long long;\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        // \u8ba1\u7b97\u8d21\u732e\n        int maxh = (m > 1 ? *max_element(h.begin(), h.end()) : 2);\n        int maxv = (n > 1 ? *max_element(v.begin(), v.end()) : 2);\n        \n        \n        vector<int> cnth(maxh + 2), cntv(maxv + 2);\n        vector<int> sh(maxh + 2), sv(maxv + 2);\n        for (auto x : h) {\n            cnth[x] += 1;\n        }\n        for (int i = maxh; i >= 0; i --) {\n            sh[i] = sh[i + 1] + cnth[i];\n        }\n        \n        for (auto x : v) {\n            cntv[x] += 1;\n        }\n        for (int i = maxv; i >= 0; i --) {\n            sv[i] = sv[i + 1] + cntv[i];\n        }\n        \n        vector<vector<ll>> f(maxh + 2, vector<ll>(maxv + 2, inf));\n        f[maxh + 1][maxv + 1] = 0;\n        for (int i = maxh + 1; i >= 0; i --) {\n            for (int j = maxv + 1; j >= 0; j --) {\n                if (i <= maxh) {\n                    ll cost = f[i + 1][j] + (ll)cnth[i] * i * (sv[j] + 1);\n                    f[i][j] = min(f[i][j], cost);\n                }\n                if (j <= maxv) {\n                    ll cost = f[i][j + 1] + (ll)cntv[j] * j * (sh[i] + 1);\n                    f[i][j] = min(f[i][j], cost);\n                }\n                // dbg(i, j, f[i][j]);\n            }\n        }\n        return f[0][0];\n    }\n};",
    "submit_ts": "1720926438",
    "subm_id": "546446249"
}