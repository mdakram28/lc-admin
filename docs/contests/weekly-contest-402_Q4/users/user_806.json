{
    "username": "oamuuvyi",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        BinaryIndexedTree bit = new BinaryIndexedTree(n);\n        for (int i = 1; i < nums.length - 1; i++) {\n            if (isPeak(nums, i)) {\n                bit.add(i, 1);\n            }\n        }\n        List<Integer> ans = new ArrayList<>();\n        for (int[] query : queries) {\n            if (query[0] == 1) {\n                int l = query[1], r = query[2];\n                ans.add(r - l + 1 >= 3 ? bit.query(r - 1) - bit.query(l) : 0);\n            } else {\n                int index = query[1], val = query[2];\n                boolean[] isPeaks = new boolean[]{isPeak(nums, index - 1), isPeak(nums, index), isPeak(nums, index + 1)};\n                nums[index] = val;\n                for (int i = 0; i < 3; i++) {\n                    if (!isPeaks[i] && isPeak(nums, index - 1 + i)) {\n                        bit.add(index - 1 + i, 1);\n                    }\n                    if (isPeaks[i] && !isPeak(nums, index - 1 + i)) {\n                        bit.add(index - 1 + i, -1);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n\n    private boolean isPeak(int[] nums, int i) {\n        return i > 0 && i < nums.length - 1 && nums[i - 1] < nums[i] && nums[i] > nums[i + 1];\n    }\n\n\n    public class BinaryIndexedTree {\n        private final int[] nodes;\n\n        public BinaryIndexedTree(int n) {\n            nodes = new int[n + 1];\n        }\n\n        private int lowBit(int index) {\n            return index & (-index);\n        }\n\n        public void add(int index, int value) {\n            while (index < nodes.length) {\n                nodes[index] += value;\n                index += lowBit(index);\n            }\n        }\n\n        public int query(int index) {\n            int sum = 0;\n            while (index > 0) {\n                sum += nodes[index];\n                index -= lowBit(index);\n            }\n            return sum;\n        }\n    }\n}",
    "submit_ts": 1718508521.0
}