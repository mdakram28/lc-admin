{
    "username": "irvifa",
    "submission": "import java.util.*;\n\nclass Solution {\n    class TrieNode {\n        TrieNode[] children = new TrieNode[26];\n        int cost = Integer.MAX_VALUE;\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        TrieNode root = new TrieNode();\n        buildTrie(words, costs, root);\n\n        for (int i = 1; i <= n; i++) {\n            TrieNode node = root;\n            for (int j = i - 1; j >= 0; j--) {\n                char c = target.charAt(j);\n                if (node.children[c - 'a'] == null) break;\n                node = node.children[c - 'a'];\n                if (node.cost != Integer.MAX_VALUE && dp[j] != Integer.MAX_VALUE) {\n                    dp[i] = Math.min(dp[i], dp[j] + node.cost);\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n\n    private void buildTrie(String[] words, int[] costs, TrieNode root) {\n        for (int i = 0; i < words.length; i++) {\n            TrieNode node = root;\n            for (int j = words[i].length() - 1; j >= 0; j--) {\n                char c = words[i].charAt(j);\n                if (node.children[c - 'a'] == null) {\n                    node.children[c - 'a'] = new TrieNode();\n                }\n                node = node.children[c - 'a'];\n            }\n            node.cost = Math.min(node.cost, costs[i]);\n        }\n    }\n}",
    "submit_ts": "1720320021",
    "subm_id": "1312280350"
}