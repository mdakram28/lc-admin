{
    "username": "thedark_JS",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        \n        int ans = abs(nums[0] - k);\n        int n = nums.size();\n        \n        int pref[n][32];\n        \n        for(int i = 0 ; i < nums.size() ; i++){\n            for(int j = 0 ; j < 32 ; j++){\n                if(i == 0){\n                    pref[i][j] = 0;\n                }\n                else{\n                    pref[i][j] = pref[i - 1][j];\n                }\n                if((1<<j)&nums[i]){\n                    pref[i][j]++;\n                }\n            }\n        }\n        \n        for(int i = 0 ; i < n ; i++){\n            if(nums[i] <= k){\n                ans = min(ans, k - nums[i]);\n                continue;\n            }\n            int just_large_or_eq_ind = -1;\n            int val = -1;\n            // find just larger or eq\n            int lo = 0, hi = i;\n            while(lo <= hi){\n                int mid = (lo + hi) / 2;\n                int els = i - mid + 1;\n                int tot = 0;\n                for(int j = 0 ; j < 32 ; j++){\n                    int bits_at_j = pref[i][j];\n                    if(mid != 0){\n                        bits_at_j -= pref[mid - 1][j];\n                    }\n                    if(bits_at_j == els){\n                        tot += (1 << j);\n                    }\n                }\n                \n                if(tot >= k){\n                    just_large_or_eq_ind = mid;\n                    val = tot;\n                    hi = mid - 1;\n                }\n                else{\n                    lo = mid + 1;\n                }\n                \n            }\n            if(just_large_or_eq_ind != -1){\n                ans = min(ans, val - k);\n            }\n            \n            int just_smaller_ind = -1;\n            val = -1;\n            \n            lo = 0, hi = i;\n            while(lo <= hi){\n                int mid = (lo + hi) / 2;\n                int els = i - mid + 1;\n                int tot = 0;\n                for(int j = 0 ; j < 32 ; j++){\n                    int bits_at_j = pref[i][j];\n                    if(mid != 0){\n                        bits_at_j -= pref[mid - 1][j];\n                    }\n                    if(bits_at_j == els){\n                        tot += (1 << j);\n                    }\n                }\n                \n                if(tot < k){\n                    just_smaller_ind = mid;\n                    val = tot;\n                    lo = mid + 1;\n                }\n                else{\n                    hi = mid - 1;\n                }\n                \n            }\n            \n            if(just_smaller_ind != -1){\n                ans = min(ans, k - val);\n            }\n            \n            \n            \n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1717298967",
    "subm_id": "1274797404"
}