{
    "username": "amitbansal012",
    "submission": "class Solution {\npublic:\n    void f(map<int, int> &mp, int u, int v, int &dist) {\n        map<int, int>::iterator it;\n        it = mp.upper_bound(u);\n\n        while(it != mp.end() && it->second<=v) {\n            int x = it->first, y = it->second;\n            dist = dist + (y-x) - 1;\n            it++;\n        }\n\n        while(1) {\n            it=mp.upper_bound(u);\n            if(it != mp.end() && it->second<=v)\n                mp.erase(it);\n            else\n                break;\n        }\n    }\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int q = queries.size();\n        vector<int> ans(q,0);\n        map<int, int> mp;\n        int dist = n-1;\n        for(int k=0; k<q; k++) {\n            int u = queries[k][0], v = queries[k][1];\n            if(v != u+1) {\n                if(mp.find(u) != mp.end()) {\n                    int p = mp[u];\n                    if(p<v) {\n                        f(mp, u, v, dist);\n                        dist = dist + (p-u) - 1;\n                        mp[u] = max(mp[u],v);\n                        dist = dist - (v-u) + 1;\n                    }\n                }\n                else {\n                    f(mp, u, v, dist);\n                    map<int, int>::iterator it;\n                    it = mp.lower_bound(u);\n                    // cout<<\"here2\"<<it->first<<endl;\n                    if(it!=mp.begin()) {\n                        it--;\n                        // cout<<\"here1\"<<endl;\n                        if(it->second>=v) {\n                            ans[k] = dist;\n                            continue;\n                        }\n                    }\n                    mp[u] = v;\n                    dist = dist - (v-u) + 1;\n                }\n            }\n            ans[k] = dist;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743177",
    "subm_id": "1343786136"
}