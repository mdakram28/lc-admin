{
    "username": "wang-jing-oh",
    "submission": "class Solution\n{\npublic:\n    long long minimumCost(int m, int n, vector<int> &horizontalCuts, vector<int> &verticalCuts)\n    {\n        vector<pair<int, bool>> cuts;\n\n        for (int cost : horizontalCuts)\n        {\n            cuts.push_back({cost, 0});\n        }\n        for (int cost : verticalCuts)\n        {\n            cuts.push_back({cost, 1});\n        }\n\n        sort(cuts.begin(), cuts.end(), [](const pair<int, bool> &a, const pair<int, bool> &b)\n             { return a.first < b.first; });\n        int h = m - 1;\n        int v = n - 1;\n        long long ans = 0;\n\n        for (auto &[cost, type] : cuts)\n        {\n            if (type == 0)\n            {\n                ans += 1ll * cost * (v + 1);\n                h--;\n            }\n            else\n            {\n                ans += 1ll * cost * (h + 1);\n                v--;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926736",
    "subm_id": "546448190"
}