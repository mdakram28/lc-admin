{
    "username": "Fanc1",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<pair<int, int>>> top3Values(m, vector<pair<int, int>>(3, {INT_MIN, -1}));\n        \n        for (int i = 0; i < m; ++i) {\n            vector<pair<int, int>> rowValues;\n            for (int j = 0; j < n; ++j) {\n                rowValues.push_back({board[i][j], j});\n            }\n            // \u6392\u5e8f\u9009\u51fa\u524d\u4e09\u4e2a\u6700\u5927\u7684\u503c\n            sort(rowValues.rbegin(), rowValues.rend());\n            for (int k = 0; k < 3 && k < n; ++k) {\n                top3Values[i][k] = rowValues[k];\n            }\n        }\n        \n        long long maxSum = LLONG_MIN;\n        for (int i = 0; i < m; ++i) {\n            for (int j = i + 1; j < m; ++j) {\n                for (int k = j + 1; k < m; ++k) {\n                    long long currentMax = LLONG_MIN;\n                    for (auto [val1, col1] : top3Values[i]) {\n                        for (auto [val2, col2] : top3Values[j]) {\n                            if (col2 == col1) continue;\n                            for (auto [val3, col3] : top3Values[k]) {\n                                if (col3 == col1 || col3 == col2) continue;\n                                currentMax = max(currentMax, (long long)val1 + val2 + val3);\n                            }\n                        }\n                    }\n                    maxSum = max(maxSum, currentMax);\n                }\n            }\n        }\n        \n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723907374",
    "subm_id": "556325154"
}