{
    "username": "ohnoooo",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = m != 0 ? grid[0].size() : 0;\n        if(m == 0 || n == 0) return 0;\n        int m2 = m/2, n2 = n/2;\n        int res = 0;\n        int ones = 0;\n        if(m % 2) {\n            for(int i=0;i<n2;i++) {\n                bool diff = grid[m2][i] != grid[m2][n-1-i];\n                res += diff;\n                ones += grid[m2][i] && !diff;\n            }\n        }\n        if(n % 2) {\n            for(int i=0;i<m2;i++) {\n                bool diff = grid[i][n2] != grid[m-1-i][n2];\n                res += diff;\n                ones += grid[i][n2] && !diff;\n            }\n        }\n        if(ones % 2 && !res) res += 2;\n        if(m % 2 && n % 2) res += grid[m2][n2];\n        for(int i=0;i<m2;i++) {\n            for(int j=0; j<n2; j++) {\n                int cnt = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                res += min(cnt, 4-cnt);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722697450",
    "subm_id": "1343146991"
}