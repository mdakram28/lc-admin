{
    "username": "sudharshan281",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int minSum = INT_MAX;\n\n        // Trying all possible row cuts for the first rectangle\n        for (int i = 0; i < n; ++i) {\n            int val = minimumArea(grid, 0, i, 0, m - 1);\n            if(i+1 > n-1)continue;\n            int new_val = val + find(grid, i + 1, n-1, 0, m - 1);\n            minSum = min(minSum, new_val);\n        }\n        \n        for(int i=n-1; i>=0; --i){\n            int val = minimumArea(grid,i,n-1, 0, m - 1);\n            if(i-1 < 0)continue;\n            int new_val = val + find(grid, 0, i-1, 0, m - 1);\n            minSum = min(minSum, new_val);\n        }\n        \n\n        // Trying all possible column cuts for the first rectangle\n        for (int i = 0; i < m; ++i) {\n            int val = minimumArea(grid, 0, n - 1, 0, i);\n            if(i+1>=m)continue;\n            int new_val = val + find(grid, 0, n - 1, i + 1, m-1);\n            minSum = min(minSum, new_val);\n        }\n        \n        for(int i=m-1; i>0; --i){\n            int val = minimumArea(grid, 0, n - 1, i, m-1);\n            int new_val = val + find(grid, 0, n - 1,0, i-1);\n            minSum = min(minSum, new_val);\n        }\n        return minSum;\n    }\n\n    int find(vector<vector<int>>& g, int i1, int i2, int j1, int j2) {\n        int r1 = -1, r2 = -1, c1 = -1, c2 = -1;\n\n        for (int i = i1; i <= i2; ++i) {\n            for (int j = j1; j <= j2; ++j) {\n                if (g[i][j]) {\n                    if (r1 == -1) {\n                        r1 = i;\n                        r2 = i;\n                    } else {\n                        r2 = i;\n                    }\n                }\n            }\n        }\n\n        for (int j = j1; j <= j2; ++j) {\n            for (int i = i1; i <= i2; ++i) {\n                if (g[i][j]) {\n                    if (c1 == -1) {\n                        c1 = j;\n                        c2 = j;\n                    } else {\n                        c2 = j;\n                    }\n                }\n            }\n        }\n\n        if (min(r1, r2) == -1) {\n            return 0;\n        }\n\n        int res = INT_MAX;\n        for (int i = r1; i <= r2; ++i) {\n            int val = minimumArea(g, r1, i, c1, c2);\n            if (i + 1 <= r2) val += minimumArea(g, i + 1, r2, c1, c2);\n            res = min(res, val);\n        }\n        for (int j = c1; j <= c2; ++j) {\n            int val = minimumArea(g, r1, r2, c1, j);\n            if (j + 1 <= c2) val += minimumArea(g, r1, r2, j + 1, c2);\n            res = min(res, val);\n        }\n        return res;\n    }\n\n    int minimumArea(vector<vector<int>>& g, int i1, int i2, int j1, int j2) {\n        int r1 = -1, r2 = -1, c1 = -1, c2 = -1;\n\n        for (int i = i1; i <= i2; ++i) {\n            for (int j = j1; j <= j2; ++j) {\n                if (g[i][j]) {\n                    if (r1 == -1) {\n                        r1 = i;\n                        r2 = i;\n                    } else {\n                        r2 = i;\n                    }\n                }\n            }\n        }\n\n        for (int j = j1; j <= j2; ++j) {\n            for (int i = i1; i <= i2; ++i) {\n                if (g[i][j]) {\n                    if (c1 == -1) {\n                        c1 = j;\n                        c2 = j;\n                    } else {\n                        c2 = j;\n                    }\n                }\n            }\n        }\n\n        if (min(r1, r2) == -1) {\n            return 0;\n        }\n\n        int l = r2 - r1 + 1;\n        int w = c2 - c1 + 1;\n        return l * w;\n    }\n};\n",
    "submit_ts": 1719112387.0
}