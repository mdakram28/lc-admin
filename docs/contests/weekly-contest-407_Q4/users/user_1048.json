{
    "username": "sagarmaheshwari",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        diffs = [target[i]-nums[i] for i in range(n)]\n        stack = []\n        ans = 0\n\n        for i in diffs:\n            if i > 0:\n                if not stack:\n                    stack.append(i)\n                    ans += i\n                elif i>=stack[-1]:\n                    ans += i - stack[-1]\n                    stack.append(i)\n                else:\n                    while stack and stack[-1] > i:\n                        stack.pop()\n                    stack.append(i)\n            else:\n                stack = []\n            # print(stack,ans)\n        stack = []\n        i = 0\n        while i < n:\n            if diffs[i] < 0:\n                while i<n and diffs[i] < 0:\n                    if not stack:\n                        stack.append(diffs[i])\n                        ans += -diffs[i]\n                    elif stack[-1] >= diffs[i]:\n                        ans += stack[-1] - diffs[i]\n                        stack.append(diffs[i])\n                    else:\n                        while stack and stack[-1] < diffs[i]:\n                            stack.pop()\n                        stack.append(diffs[i])\n                    i += 1\n            else:\n                stack = []\n                i += 1\n            # print(stack, ans)\n        return ans",
    "submit_ts": "1721532310",
    "subm_id": "1327982818"
}