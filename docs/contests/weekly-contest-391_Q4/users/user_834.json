{
    "username": "will961512",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def MaxDist(A):\n\n            minsum = maxsum = A[0][0] + A[0][1]\n            mindiff = maxdiff = A[0][0] - A[0][1]\n            bs, ss, bd, sd = 0, 0, 0, 0\n\n            for i in range(1, len(A)):\n                sum = A[i][0] + A[i][1]\n                diff = A[i][0] - A[i][1]\n                if (sum < minsum):\n                    minsum = sum\n                    ss = i\n                elif (sum > maxsum):\n                    maxsum = sum\n                    bs = i\n                if (diff < mindiff):\n                    mindiff = diff\n                    sd = i\n                elif (diff > maxdiff):\n                    maxdiff = diff\n                    bd = i\n\n            return [max(maxsum - minsum, maxdiff - mindiff), bs, ss, bd, sd]\n        \n        use = MaxDist(points)\n        ans = use[0]\n        for i in range(1, 5):\n            tmp = points.copy()\n            tmp.pop(use[i])\n            ans = min(ans, MaxDist(tmp)[0])\n        return ans"
}