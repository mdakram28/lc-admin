{
    "username": "admiring-shockleyzns",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges) + 1\n        nei_L = [[] for _ in range(n)]\n        for a, b in edges:\n            cost1 = 1\n            cost2 = 1\n            if b % 2 == 0:\n                cost1 += 1\n            if a % 2 == 0:\n                cost2 += 1\n            nei_L[a].append((b, cost1))\n            nei_L[b].append((a, cost2))\n        \n        # print(nei_L)\n        ans = [0] * n\n        time_L = [(0, 0) for _ in range(n)]\n        def dfs(cur, fa):\n            a, b = 0, 0\n            for nei, cost in nei_L[cur]:\n                if nei == fa:\n                    continue\n                dfs(nei, cur)\n                if time_L[nei][0] + cost >= a:\n                    a, b = time_L[nei][0] + cost, a\n                elif time_L[nei][0] + cost >= b:\n                    b = time_L[nei][0] + cost\n            # print(\"cur =\", cur, a, b)\n            time_L[cur] = (a, b)\n            # print(\"time_L\", time_L)\n        \n        dfs(0, -1)\n        # print(time_L)\n        def dfs2(cur, fa_time, fa):\n            a, b = time_L[cur]\n            for nei, cost in nei_L[cur]:\n                if nei == fa:\n                    continue\n                if time_L[nei][0] + cost == a:\n                    dfs2(nei, max(b, fa_time) + (1 if cur % 2 == 1 else 2), cur)\n                else:\n                    dfs2(nei, max(a, fa_time) + (1 if cur % 2 == 1 else 2), cur)\n            \n            if fa_time >= a:\n                a, b = fa_time, a\n            elif fa_time > b:\n                b = fa_time\n            time_L[cur] = (a, b)\n                \n        \n        dfs2(0, 0, -1)\n        for i in range(n):\n            ans[i] = time_L[i][0]\n        return ans\n        ",
    "submit_ts": "1722698958",
    "subm_id": "552273377"
}