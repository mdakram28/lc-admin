{
    "username": "buzzxi",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        \n        if (n == 1 && m == 1) {\n            return grid[0][0];\n        }\n        \n        int x = n >> 1, y = m >> 1;\n        \n        int rst = 0;\n        \n        \n        if (n == 1) {\n            int cnt = 0;\n            int z = 0;\n            for (int i = 0, j = m - 1; i < j; i ++, j --) {\n                if (grid[x][i] != grid[x][j]) {\n                    cnt ++;\n                }\n                else if (grid[x][i] == 1) {\n                    z ++;\n                }\n            }\n            rst += cnt;\n            if ((z & 1) == 1 && cnt == 0) {\n                rst += 2;\n            }\n            \n            if ((m & 1) == 1 && grid[0][y] == 1) rst ++; \n            return rst;\n        }\n        \n        if (m == 1) {\n            int cnt = 0;\n            int z = 0;\n            for (int i = 0, j = n - 1; i < j; i ++, j --) {\n                if (grid[i][y] != grid[j][y])\n                    cnt ++;\n                else if (grid[i][y] == 1) {\n                    z ++;\n                }\n            }\n            rst += cnt;\n            if ((z & 1) == 1 && cnt == 0) {\n                rst += 2;\n            }\n            if ((n & 1) == 1 && grid[x][0] == 1) rst ++;\n            return rst;\n        }\n\n        \n        \n\n        if (n > 1 && m > 1) {\n            for (int i = 0; i < x; i ++) {\n                for (int j = 0; j < y; j ++) {\n                    int tmp = grid[i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][j] + grid[n - 1 - i][m - 1 - j];\n                    if (tmp == 0 || tmp == 4)\n                        continue;\n                    if (tmp == 1 || tmp == 3)\n                        rst ++;\n                    else\n                        rst += 2;\n                }\n            }\n        }\n        \n        int cnt = 0;\n        int z = 0;\n        if ((n & 1) == 1) {\n            for (int i = 0, j = m - 1; i < j; i ++, j --) {\n                if (grid[x][i] != grid[x][j]) {\n                    cnt ++;\n                }\n                else if (grid[x][i] == 1) {\n                    z ++;\n                }\n            }\n            \n        }\n        \n        if ((m & 1) == 1) {\n            for (int i = 0, j = n - 1; i < j; i ++, j --) {\n                if (grid[i][y] != grid[j][y])\n                    cnt ++;\n                else if (grid[i][y] == 1) {\n                    z ++;\n                }\n            }\n            \n        }\n        \n        rst += cnt;\n        if ((z & 1) == 1 && cnt == 0) {\n            rst += 2;\n        }\n        \n        \n        if ((n & 1) == 1 && (m & 1) == 1 && grid[x][y] == 1) rst ++;\n        \n        \n//         if ((n & 1) == 1 && (m & 1) == 0) {\n//             int cnt = 0;\n//             int z = 0;\n//             for (int i = 0, j = m - 1; i < j; i ++, j --) {\n//                 if (grid[x][i] != grid[x][j]) {\n//                     cnt ++;\n//                 }\n//                 else if (grid[x][i] == 1) {\n//                     z ++;\n//                 }\n//             }\n//             rst += cnt;\n//             if ((z & 1) == 1 && cnt == 0) {\n//                 rst += 2;\n//             }\n//         }\n\n//         if ((m & 1) == 1 && (n & 1) == 0) {\n//             int cnt = 0;\n//             int z = 0;\n//             for (int i = 0, j = n - 1; i < j; i ++, j --) {\n//                 if (grid[i][y] != grid[j][y])\n//                     cnt ++;\n//                 else if (grid[i][y] == 1) {\n//                     z ++;\n//                 }\n//             }\n//             rst += cnt;\n//             if ((z & 1) == 1 && cnt == 0) {\n//                 rst += 2;\n//             }\n//         }\n        \n//         if ((n & 1) == 1 && (m & 1) == 1) {\n//             if (grid[x][y] == 1)\n//                 rst ++;\n//             for (int i = 0; i < Math.min(x, y); i ++) {\n//                 int tmp = grid[x][i] + grid[x][m - 1 - i] + grid[i][y] + grid[n - 1 - i][y];\n//                 if (tmp == 0 || tmp == 4)\n//                     continue;\n//                 if (tmp == 1 || tmp == 3)\n//                     rst ++;\n//                 else\n//                     rst += 2;\n//             }\n            \n//             if (x > y) {\n//                 int cnt = 0;\n//                 int z = 0;\n//                 for (int i = y, j = n - 1 - y; i < j; i ++, j --) {\n//                     if (grid[i][y] != grid[j][y]) {\n//                         cnt ++;\n//                     }\n//                     else if (grid[i][y] == 1) {\n//                         z ++;\n//                     }\n//                 }\n//                 rst += cnt;\n//                 if ((z & 1) == 1 && cnt == 0) {\n//                     rst += 2;\n//                 }\n//             } else if (y > x) {\n//                 int cnt = 0;\n//                 int z = 0;\n//                 for (int i = x, j = m - 1 - x; i < j; i ++, j --) {\n//                     if (grid[x][i] != grid[x][j])\n//                         cnt ++;\n//                     else if (grid[x][i] == 1) {\n//                         z ++;\n//                     }\n//                 }\n//                 rst += cnt;\n//                 if ((z & 1) == 1 && cnt == 0) {\n//                     rst += 2;\n//                 }\n//             }\n            \n//         }\n\n        return rst;\n    }\n}",
    "submit_ts": "1722700701",
    "subm_id": "552280940"
}