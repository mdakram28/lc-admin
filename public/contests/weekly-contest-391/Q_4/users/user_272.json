{
    "username": "aryan___barsaiyan",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        for(int i=0;i<points.size();i++)\n        {\n            int new_x=points[i][0]+points[i][1];\n            int new_y=points[i][1]-points[i][0];\n            points[i][0]=new_x;\n            points[i][1]=new_y;\n        }\n        //distance will be the max of(x1-x2,y1-y2)\n        int mx_y=INT_MIN;\n        int mn_y=INT_MAX;\n        int index_mx_y=0;\n        int index_mn_y=0;\n        for(int i=0;i<points.size();i++)\n        {\n            if(points[i][1]>mx_y)\n            {\n                mx_y=points[i][1];\n                index_mx_y=i;\n            }\n            if(points[i][1]<mn_y)\n            {\n                mn_y=points[i][1];\n                index_mn_y=i;\n            }\n        }\n        int dis=mx_y-mn_y;\n        pair<int,int> pts={index_mn_y,index_mx_y};\n        int mn_x=INT_MAX;\n        int mx_x=INT_MIN;\n        int index_mn_x=0;\n        int index_mx_x=0;\n        for(int i=0;i<points.size();i++)\n        {\n            if(points[i][0]<mn_x)\n            {\n                mn_x=points[i][0];\n                index_mn_x=i;\n            }\n            if(points[i][0]>mx_x)\n            {\n                mx_x=points[i][0];\n                index_mx_x=i;\n            }\n        }\n        if(mx_x-mn_x>dis)\n        {\n            dis=mx_x-mn_x;\n            pts={index_mn_x,index_mx_x};\n        }\n        //try to remove first pt and check the distance\n        int new_dis1=INT_MIN;\n        mn_y=INT_MAX;\n        mx_y=INT_MIN;\n        mn_x=INT_MAX;\n        mx_x=INT_MIN;\n        for(int i=0;i<points.size();i++)\n        {\n            if(i==pts.first)\n                continue;\n            if(points[i][1]>mx_y)\n            {\n                mx_y=points[i][1];\n            }\n            if(points[i][1]<mn_y)\n            {\n                mn_y=points[i][1];\n            }\n            if(points[i][0]<mn_x)\n            {\n                mn_x=points[i][0];\n            }\n            if(points[i][0]>mx_x)\n            {\n                mx_x=points[i][0];\n            }\n        }\n        new_dis1=max(mx_y-mn_y,mx_x-mn_x);\n        //try to remove second pt and check the distance\n        int new_dis2=INT_MIN;\n        mn_y=INT_MAX;\n        mx_y=INT_MIN;\n        mn_x=INT_MAX;\n        mx_x=INT_MIN;\n        for(int i=0;i<points.size();i++)\n        {\n            if(i==pts.second)\n                continue;\n            if(points[i][1]>mx_y)\n            {\n                mx_y=points[i][1];\n            }\n            if(points[i][1]<mn_y)\n            {\n                mn_y=points[i][1];\n            }\n            if(points[i][0]<mn_x)\n            {\n                mn_x=points[i][0];\n            }\n            if(points[i][0]>mx_x)\n            {\n                mx_x=points[i][0];\n            }\n        }\n        new_dis2=max(mx_y-mn_y,mx_x-mn_x);\n        return min(dis,min(new_dis1,new_dis2));\n    }\n};"
}