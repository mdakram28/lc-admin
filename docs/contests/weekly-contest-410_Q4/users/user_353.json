{
    "username": "cy171",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        mod = 10**9 + 7\n        # @lru_cache(None)\n        # def dp(idx, a):\n        #     if idx == len(nums):\n        #         return 1\n        #     res = 0\n        #     b = nums[idx-1]-a if idx > 0 else float(\"inf\")\n        #     for i in range(max(a, nums[idx] - b), nums[idx]+1):\n        #         res += dp(idx+1, i)\n        #         res %= mod\n        #     return res\n\n        # return dp(0, 0)\n\n        k = max(nums) + 2\n        # dp[idx][j] =  dp[idx+1][max(a, nums[idx] - b)] +....+ dp[idx+1][nums[idx]]\n        dp = [[0]*k for i in range(len(nums))]\n        dp[-1][0] = 1\n        for j in range(1, nums[-1]+1):\n            dp[-1][j] = 1 + dp[-1][j-1]\n\n        for i in range(len(nums)-2, -1, -1):\n            for j in range(nums[i]+1):\n                # nums[i+1] - p <= (nums[i] - j)\n                # p >=  nums[i+1] - (nums[i] - j)\n                low = max(nums[i+1] - (nums[i] - j) , j)\n                if low > nums[i+1]:\n                    continue\n                dp[i][j] = dp[i+1][nums[i+1]] - dp[i+1][low-1]\n                dp[i][j] %= mod\n            for j in range(1, nums[i]+1):\n                dp[i][j] += dp[i][j-1]\n                dp[i][j] %= mod\n        # print(dp)\n        return dp[0][nums[0]]",
    "submit_ts": "1723346935",
    "subm_id": "1351588355"
}