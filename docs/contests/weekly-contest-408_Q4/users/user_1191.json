{
    "username": "arpit1234",
    "submission": "class Solution {\n    int par[];\n    int rank[];\n\n    int find(int x){\n        if(x == par[x]) return x;\n        return par[x] = find(par[x]);\n    }\n    void union(int x, int y){\n        int a = find(x), b = find(y);\n        if(a == b) return;\n        if(rank[a] > rank[b]){\n            par[b] = a;\n        }else if(rank[b] > rank[a]){\n            par[a] = b;\n        }else{\n            par[a] = b;\n            rank[a]++;\n        }\n    }\n    boolean intersect(int a[], int b[]){\n        double dist = Math.sqrt((a[0]-b[0])*(a[0]-b[0]) + (a[1]-b[1])*(a[1]-b[1]));\n        return dist <= a[2] + b[2];\n    }\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        boolean l = false, r = false, t = false, b = false;\n        boolean touch[][] = new boolean[n][4];\n        for(int i=0; i<n; i++){\n            int c[] = circles[i];\n            int rad = c[2];\n            int x = c[0], y = c[1];\n            int left[] = new int[]{x-rad,y};\n            int right[] = new int[]{x+rad,y};\n            int top[] = new int[]{x,y+rad};\n            int bottom[] = new int[]{x,y-rad};\n            boolean L = left[0] <= 0 && 0 <= left[1] && left[1] <= Y;\n            boolean R = right[0] >= X && 0 <= left[1] && left[1] <= Y;\n            boolean T = top[1] >= Y && 0 <= bottom[0] && bottom[0] <= X;;\n            boolean B = bottom[1] <= 0 && 0 <= bottom[0] && bottom[0] <= X;\n            touch[i] = new boolean[]{L,R,T,B};\n        }\n        par = new int[n];\n        rank = new int[n];\n        for(int i=0; i<n; i++){\n            par[i] = i;\n            rank[i] = 1;\n        }\n        for(int i=0; i<n; i++){\n            for(int j=i+1; j<n; j++){\n                if(intersect(circles[i], circles[j])) union(i,j);\n            }\n        }\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(find(i) == find(j)){\n                    // System.out.println(A + \" \" + B);\n                    for(int k=0; k<4; k++){\n                        touch[i][k] |= touch[j][k];\n                    }\n                }\n            }\n        }\n        for(int i=0; i<n; i++){\n            // System.out.println(i + \" \" + touch[i][0] + \" \" + touch[i][1] + \" \" + touch[i][2] + \" \" +   touch[i][3]);\n            // System.out.println(touch[i][0] &&  touch[i][3]);\n            // if((touch[i][0] &&  touch[i][3]) || ((touch[i][1] &&  touch[i][2])))\n            //     return false;\n            if(touch[i][0]){\n                if(touch[i][1] || touch[i][3]) return false;\n            }\n            if(touch[i][2]){\n                if(touch[i][1] || touch[i][3]) return false;\n            }\n            // for(int)\n        }\n        return true;\n    }\n}",
    "submit_ts": "1722139115",
    "subm_id": "1335808271"
}