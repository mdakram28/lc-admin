{
    "username": "Phantom_Deluxe",
    "submission": "class Solution {\npublic:\n    void solve(vector<int> &height, vector<int> &vis, vector<vector<int>> &adj, int i, int &ans)\n    {\n        vis[i]=1;\n        vector<int> arr;\n        for(auto x:adj[i])\n        {\n            if(vis[x]==1)continue;\n            solve(height,vis,adj,x,ans);\n            height[i]=max(height[i],height[x]+1);\n            arr.push_back(height[x]);\n        }\n        sort(arr.begin(),arr.end());\n        int ans1=0;\n        if(arr.size()>0)\n        {\n            ans1+=int(arr.back())+1;\n            arr.pop_back();\n        }\n        if(arr.size()>0)\n        {\n            ans1+=int(arr.back())+1;\n            arr.pop_back();\n        }\n        ans=max(ans,ans1);\n    }\n    int diameter(int n, vector<vector<int>> &adj)\n    {\n        vector<int> height(n,0),vis(n,0);\n        int ans=0;\n        solve(height,vis,adj,0,ans);\n        // for(int i=0;i<n;i++)cout<<i<<\"/\"<<height[i]<<\" \";cout<<\"\\n\";\n        return ans;\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=int(edges1.size())+1,m=int(edges2.size())+1;\n        vector<vector<int>> adj1(n),adj2(m);\n        for(auto x:edges1)\n        {\n            adj1[x[0]].push_back(x[1]);\n            adj1[x[1]].push_back(x[0]);\n        }\n        for(auto x:edges2)\n        {\n            adj2[x[0]].push_back(x[1]);\n            adj2[x[1]].push_back(x[0]);\n        }\n        \n        int ans1=diameter(n,adj1);\n        int ans2=diameter(m,adj2);\n        int ans3=(ans1+1)/2 + (ans2+1)/2 + 1;\n        \n        // cout<<ans1<<\" \"<<ans2<<\" \"<<ans3<<\" \";\n        return max({ans1,ans2,ans3});\n    }\n};",
    "submit_ts": "1719717496",
    "subm_id": "1304393065"
}