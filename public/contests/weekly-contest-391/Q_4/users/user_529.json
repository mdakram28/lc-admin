{
    "username": "qian-li-ping-sha",
    "submission": "class Solution {\npublic:\n    \n    \n    multiset<int> mst[4];\n    \n    vector<vector<int>> num;\n    \n    void add(int x){\n        for(int j=0;j<4;j++){\n            int sum=0;\n            for(int k=0;k<2;k++){\n                if(j&(1<<k)) sum+=num[x][k];\n                else sum-=num[x][k];\n            }\n            mst[j].insert(sum);\n        }\n    }\n    \n    void remove(int x){\n        for(int j=0;j<4;j++){\n            int sum=0;\n            for(int k=0;k<2;k++){\n                if(j&(1<<k)) sum+=num[x][k];\n                else sum-=num[x][k]; \n            }\n            mst[j].erase(mst[j].find(sum));\n        }\n    }\n    \n    int f(){\n        int res=0;\n        for(int j=0;j<4;j++){\n            auto ite = mst[j].end();\n            ite--;\n            auto itb=mst[j].begin();\n            res=max(res,*ite-*itb);\n        }\n        return res;\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        num = points;\n        int ans = 2147483647;\n        \n        for(int i=0;i<n;++i){\n            add(i);\n        }\n        \n        for(int i=0;i<n;++i){\n            remove(i);\n            ans = min(ans,f());\n            add(i);\n        }\n        \n        return ans;\n        \n    }\n};"
}