{
    "username": "Ayaan8103",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def distance(point1, point2):\n            return abs(point1[0] - point2[0]) + abs(point1[1] - point2[1])\n        \n        n = len(points)\n        sums = [[0, i] for i in range(n)]\n        diffs = [[0, i] for i in range(n)]\n\n        for i in range(n):\n            sums[i][0] = points[i][0] + points[i][1]\n            diffs[i][0] = points[i][0] - points[i][1]\n\n        sums.sort()\n        diffs.sort()\n\n        res = float('inf')\n        for i in range(n):\n            a, b, c, d = sums[-1][0], sums[0][0], diffs[-1][0], diffs[0][0]\n            if sums[-1][1] == i:\n                a = sums[-2][0]\n            if sums[0][1] == i:\n                b = sums[1][0]\n            if diffs[-1][1] == i:\n                c = diffs[-2][0]\n            if diffs[0][1] == i:\n                d = diffs[1][0]\n\n            max_dist = max(a - b, c - d)\n            res = min(res, max_dist)\n        return res\n        "
}