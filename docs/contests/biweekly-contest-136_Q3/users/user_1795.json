{
    "username": "greynoise",
    "submission": "class Solution {\npublic:\n    int another(int n) {\n        return n;\n    }\n    \n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                vector<int> elements = {\n                    grid[i][j],\n                    grid[m - i - 1][j],\n                    grid[i][n - j - 1],\n                    grid[m - i - 1][n - j - 1]\n                };\n                int ones = 0;\n                for(auto it:elements) ones += it;\n                ans += min(ones, 4 - ones);\n            }\n        }\n        int pos = 0, cnt = 0;\n        if (m % 2 != 0) {\n            int mid = m / 2;\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[mid][j] != grid[mid][n - j - 1]) {\n                    ans++;\n                    pos++;\n                } else {\n                    if (grid[mid][j] == 1) cnt++;\n                }\n            }\n        }\n        if (n % 2 != 0) {\n            int mid = n / 2;\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[i][mid] != grid[m - i - 1][mid]) {\n                    ans++;\n                    pos++;\n                } else {\n                    if (grid[i][mid] == 1) cnt++;\n                }\n            }\n        }\n        if (m % 2 != 0 && n % 2 != 0 && grid[m / 2][n / 2] == 1) ans++;\n        if (pos == 0 && cnt % 2 != 0) ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722699952",
    "subm_id": "1343227233"
}