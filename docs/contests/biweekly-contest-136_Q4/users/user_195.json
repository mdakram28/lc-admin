{
    "username": "goldenwind",
    "submission": "class Solution {\n    vector<unordered_map<int, int>> dp;\n    vector<priority_queue<pair<int, int>>> pq;\n    vector<vector<int>> tr;\n    vector<int> res;\n\n    void dfs(int pre, int cur) {\n        for(int son: tr[cur]) {\n            if(son != pre) {\n                dfs(cur, son);\n            }\n        }\n\n        int mx = 0;\n        for(int son: tr[cur]) {\n            if(son != pre) {\n                mx = max(mx, dp[cur][son]);\n            }\n        }\n\n        if(pre != -1) {\n            dp[pre][cur] = mx + 2 - (cur & 1);\n            pq[pre].push({dp[pre][cur], cur});\n        }\n    }\n\n    void dfs2(int pre, int cur) {\n        int mx = 0;\n        for(int son: tr[cur]) {\n            if(son != pre) {\n                mx = max(mx, dp[cur][son]);\n            }\n        }\n\n        if(pre == -1) {\n            res[cur] = mx;\n        } else {\n            auto ex = pq[pre].top();\n            if(ex.second == cur) {\n                if(pq[pre].size() > 1) {\n                    auto tmp = ex;\n                    pq[pre].pop();\n                    ex = pq[pre].top();\n                    pq[pre].push(tmp);\n                } else {\n                    ex.first = 0;\n                }\n            }\n            dp[cur][pre] = ex.first + 2 - (pre & 1);\n            pq[cur].push({ex.first + 2 - (pre & 1), pre});\n            res[cur] = max(mx, ex.first + 2 - (pre & 1));\n        }\n\n        for(int son: tr[cur]) {\n            if(son != pre) {\n                dfs2(cur, son);\n            }\n        }\n    }\n\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n\n        tr.resize(n);\n        dp.resize(n);\n        pq.resize(n);\n\n        for(auto&e: edges) {\n            tr[e[0]].push_back(e[1]);\n            tr[e[1]].push_back(e[0]);\n        }\n\n        dfs(-1, 0);\n\n        res.resize(n);\n        dfs2(-1, 0);\n\n        return res;\n    }\n};",
    "submit_ts": "1722699087",
    "subm_id": "552274023"
}