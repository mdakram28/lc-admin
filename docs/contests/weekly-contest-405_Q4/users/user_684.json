{
    "username": "jqodiriy",
    "submission": "    #include <iostream>\n#include <vector>\n#include <string>\n#include <unordered_map>\n#include <algorithm>\n#include <climits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n\n\n    class TrieNode {\n    \n    public:\n        unordered_map<char, TrieNode*> children;\n        vector<int> costs;\n    };\n\n    class Trie {\n    public:\n        TrieNode* root;\n\n        Trie() {\n            root = new TrieNode();\n        }\n\n        void insert(const string& word, int cost) {\n            TrieNode* node = root;\n            for (char c : word) {\n                if (!node->children.count(c)) {\n                    node->children[c] = new TrieNode();\n                }\n                node = node->children[c];\n            }\n            node->costs.push_back(cost);\n        }\n\n        vector<int> search(const string& prefix) {\n            TrieNode* node = root;\n            for (char c : prefix) {\n                if (!node->children.count(c)) {\n                    return {};\n                }\n                node = node->children[c];\n            }\n            return node->costs;\n        }\n    };\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie trie;\n        \n        for (size_t i = 0; i < words.size(); ++i) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;  \n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) {\n                continue;\n            }\n\n            TrieNode* node = trie.root;\n            for (int j = i; j < n; ++j) {\n                if (!node->children.count(target[j])) {\n                    break;\n                }\n                node = node->children[target[j]];\n                for (int cost : node->costs) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + cost);\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];\n}\n};",
    "submit_ts": "1720322680",
    "subm_id": "1312356306"
}