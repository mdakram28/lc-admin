{
    "username": "AnantBansal",
    "submission": "#pragma GCC optimize(\"-Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define dbg(x) cout << #x << \" = \" << x << \"\\n\"\n#define pb push_back\n#define fi first\n#define se second\n#define INF 1e18\n#define all(x) (x).begin(), (x).end()\n#define set_bits(x) __builtin_popcountll(x)\n\n#define ll long long\nconst ll maxn = 1e5;\nbitset<maxn> bit;\n\nclass Solution {\npublic:\n    int maxTotalReward(vector<int>& arr) {\n        std::bitset<maxn> mask;\n        mask.set();\n        ll n = arr.size();\n        sort(all(arr));\n        ll mx = *max_element(all(arr));\n\n        for (ll i=0;i<=mx;i++){\n            bit[i] = 0;\n        }\n        bit[0] = 1;\n\n        set<ll> st(arr.begin(), arr.end());\n        for (auto x : st) {\n            auto it = mask;\n            it = it << (maxn - x);\n            it = it >> (maxn - x);\n            it = (it & bit);\n            bit = (bit | (it << x));\n        }\n\n        vector<ll> dp(n + 1);\n        vector<ll> pre(n + 1, 0);\n        for (ll i=1;i<=n;i++)\n            pre[i] += arr[i - 1] + pre[i - 1];\n\n        for (ll i=0;i<maxn;i++) \n            if (bit[i]) {\n                st.insert(i);\n            }\n\n        for (int i = 0; i < n; ++i) {\n            int lb = lower_bound(all(pre), arr[i]) - pre.begin() - 1;\n            dp[i + 1] = max({dp[i + 1], dp[lb] + arr[i], dp[i], (ll)arr[i]});\n            st.insert(dp[i + 1]);\n\n            auto it = st.lower_bound(arr[i]);\n            if (it != st.begin()) {\n                it--;\n                dp[i + 1] = max(dp[i + 1], (ll)arr[i] + *it);\n                st.insert((ll)arr[i] + *it);\n            }\n        }\n\n        return dp[n];\n    }\n};\n",
    "submit_ts": "1717905547",
    "subm_id": "1282392538"
}