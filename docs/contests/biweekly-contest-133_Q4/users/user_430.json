{
    "username": "prashant933",
    "submission": "class Solution {\npublic:\n    int dp[301][401];\n    int mod=1e9+7;\n    \n    int f(int x, int inv, int req[])\n    {\n        if (x == 0)\n            return (inv == 0);\n        if (dp[x][inv] != -1)\n            return dp[x][inv];\n        int ans = 0;\n        for (int i=0;i<=x;i++)\n        {\n            int newInv = inv - (x - i);\n            if (newInv >=0 && (req[x-1] == -1 || req[x-1] == newInv))\n            {\n                ans = (ans%mod + f(x-1, newInv, req)%mod)%mod;\n            }\n        }\n        return dp[x][inv] = ans;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        sort(req.begin(), req.end());\n        int m = req.size();\n        int a[n];memset(a, -1, sizeof a);\n        for (int i=0;i<m-1;i++)\n        {\n            a[req[i][0]] = req[i][1];\n            if (req[i][1] > req[i+1][1])\n                return 0;\n        }\n        a[req[m-1][0]] = req[m-1][1];\n        for (int i=0;i<n;i++)\n        {\n            for (int j=0;j<=a[req[m-1][0]];j++)\n                dp[i][j] = -1;\n        }\n        int ans = f(n-1, a[n-1], a);\n        return ans;\n    }\n};",
    "submit_ts": "1719070157",
    "subm_id": "1296816001"
}