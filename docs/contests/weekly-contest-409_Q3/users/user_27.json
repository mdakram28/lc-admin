{
    "username": "LittleXi",
    "submission": "//\u5750\u6807\u4ece0\u5f00\u59cb\u76f4\u63a5\u7528\u7684\u6811\u72b6\u6570\u7ec4\n#define ll long long\ntemplate <typename T>\nclass Fenwick\n{\nprivate:\n    int n;\n    vector<T> tree;\n    int lowbit(int x){\n        return (-x) & x;\n    }\npublic:\n    explicit Fenwick<T>(vector<T> v){\n        this->n = v.size();\n        this->tree = vector<T>(n+1,0);\n    };\n\n    void add(int l,int r, ll num){\n        l++;r++;\n\t    for(ll i=l;i<=n;i+=lowbit(i)) tree[i]+=num;//\u5dee\u5206\u7684\u601d\u60f3 \n\t    for(ll i=r+1;i<=n;i+=lowbit(i)) tree[i]-=num;//\u5dee\u5206\u7684\u601d\u60f3 \n    }\n    ll ask(ll s){\n        s++;\n        ll ans=0;\n        for(ll i=s;i>=1;i-=lowbit(i)) ans+=tree[i];//\u5bfb\u627e\u5dee\u5206\u7684\u6807\u8bb0 \n        return ans;\n    }\n};\n\nclass Solution {\npublic:\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int q = queries.size();\n        vector<int> ans(q,0);\n        Fenwick<int> fw(vector<int>(n,0));\n        Fenwick<int> fw2(vector<int>(n,0));\n        for(int i = 0;i<n;i++){\n            fw.add(i,i,n-1-i);\n        }\n        vector<int> rp(n,0);\n        for(int i =0;i<n;i++){\n            rp[i] = i+1;\n        }\n        for(int i =0;i<q;i++){\n            int l = queries[i][0] , r = queries[i][1];\n            \n            if(fw2.ask(l) ==0 && rp[l] < r){\n                int dis = fw.ask(l) - (1 + fw.ask(r));\n                fw.add(0,l,-dis);\n                rp[l] = r;\n            } \n            if(l+1 <= r-1) fw2.add(l+1,r-1,1);\n            ans[i] = fw.ask(0);\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1722740005",
    "subm_id": "552328621"
}