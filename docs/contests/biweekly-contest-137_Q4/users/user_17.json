{
    "username": "TsReaper",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        int S_N = 0, T_N = n + m + 1;\n\n        vector<array<int, 4>> e;\n        int p[n + m + 10];\n        memset(p, -1, sizeof(p));\n\n        auto adde = [&](int sn, int fn, int cap, int cost) {\n            int idx = e.size();\n            e.push_back({fn, cap, cost, p[sn]}); p[sn] = idx;\n            idx = e.size();\n            e.push_back({sn, 0, -cost, p[fn]}); p[fn] = idx;\n        };\n\n        long long ans = 0, dis[n + m + 10];\n        int from[n + m + 10];\n        bool inq[n + m + 10];\n\n        auto spfa = [&]() {\n            for (int i = S_N; i <= T_N; i++) dis[i] = -1e18, inq[i] = false;\n            queue<int> q;\n            q.push(S_N); dis[S_N] = 0; inq[S_N] = true;\n            while (!q.empty()) {\n                int sn = q.front(); q.pop();\n                inq[sn] = false;\n                for (int i = p[sn]; i >= 0; i = e[i][3]) if (e[i][1] > 0) {\n                    int fn = e[i][0];\n                    if (dis[fn] >= dis[sn] + e[i][2]) continue;\n                    dis[fn] = dis[sn] + e[i][2];\n                    from[fn] = i;\n                    if (inq[fn]) continue;\n                    q.push(fn); inq[fn] = true;\n                }\n            }\n\n            int mf = 1e9;\n            for (int sn = T_N; sn != S_N; sn = e[from[sn] ^ 1][0]) mf = min(mf, e[from[sn]][1]);\n            for (int sn = T_N; sn != S_N; sn = e[from[sn] ^ 1][0]) {\n                e[from[sn]][1] -= mf;\n                e[from[sn] ^ 1][1] += mf;\n                ans += mf * e[from[sn]][2];\n            }\n        };\n\n        for (int i = 0; i < n; i++) for (int j = 0; j < m; j++)\n            adde(i + 1, n + j + 1, 1, board[i][j]);\n        for (int i = 0; i < n; i++) adde(S_N, i + 1, 1, 0);\n        for (int j = 0; j < m; j++) adde(n + j + 1, T_N, 1, 0);\n\n        for (int i = 0; i < 3; i++) spfa();\n        return ans;\n    }\n};\n",
    "submit_ts": "1723906133",
    "subm_id": "556316386"
}