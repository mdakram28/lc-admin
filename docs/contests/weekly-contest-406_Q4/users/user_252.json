{
    "username": "azulon",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, std::vector<int>& horizontalCut, std::vector<int>& verticalCut) {\n        std::sort(horizontalCut.begin(), horizontalCut.end(), std::greater<int>());\n        std::sort(verticalCut.begin(), verticalCut.end(), std::greater<int>());\n        \n        int h = 1, v = 1;\n        int i = 0, j = 0;\n        long long totalCost = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += static_cast<long long>(horizontalCut[i]) * v;\n                h++;\n                i++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[j]) * h;\n                v++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[i]) * v;\n            h++;\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[j]) * h;\n            v++;\n            j++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925015",
    "subm_id": "1320239650"
}