{
    "username": "user9218i",
    "submission": "class Solution {\npublic:\n    \n    map<pair<int, pair<int, int>> , int> dp;\n    int go(int curr, int& k, int jump, int last) {\n        //cout << curr << \" \" << jump << \" \"<< last << endl;\n        if(curr - k > 100)  return 0;\n        if(curr == k) {\n            int ans = 1;\n            if(k == 0)  ans += (jump == 0);\n            if(k > 0) {\n                if(jump == 0)   ans += 3;\n                if(jump == 1)   ans ++;\n            }\n            return ans;\n        }\n        \n        if(dp.find({curr, {jump, last}}) != dp.end()) return dp[{curr, {jump, last}}];\n        int ans = 0;\n        if(jump <= 31)  ans += go(curr + (1LL << jump), k, jump + 1, 0);\n        if(curr > 0 and last == 0)  ans += go(curr - 1, k, jump, 1);\n        \n        return dp[{curr, {jump, last}}] = ans;\n    }\n//     int go(int curr, int jump, int last) {\n        \n//         if(curr == 1) {\n//             //ans ++;\n//             return 1 + 2 *(jump == 0);\n//         }\n//         int ans = 0;\n//         if(!last)   ans += go(curr + 1, jump, 1);\n//         if(jump >= 0 and curr >= (1LL << jump))   ans += go(curr - (1LL << jump) , jump - 1, 0);\n//         return ans;\n//     }\n    int waysToReachStair(int k) {\n        //int ans = 0;\n        dp.clear();\n        return go(1, k, 0, 0);\n        // cout << k << \" \"<< ans << endl;\n        // return ans;\n        \n        // int ans = 0;\n        // return go(k, 0, 2) + go(k, 0, 1) + go(k, 0, 0);\n    }\n};",
    "submit_ts": "1716089947",
    "subm_id": "1261855371"
}