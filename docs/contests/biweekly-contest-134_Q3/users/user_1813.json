{
    "username": "tabish__786",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int numFound = 0;\n        int i = 0;\n        int j = 1;\n        int n = colors.size();\n        \n        while (j < n + k && i < n) {\n            int tempJ = j;\n            int tempEnd = tempJ % n;\n            \n            // Find the end of the current alternating group\n            while (colors[tempEnd] != colors[(tempEnd - 1 + n) % n] && tempJ < n + k - 1) {\n                tempJ++;\n                tempEnd = tempJ % n;\n            }\n            \n            // Calculate the number of groups found\n            numFound += max(tempJ - i - k + 1, 0);\n            i = tempJ;\n            j = i + 1;\n        }\n        \n        return numFound;\n\n    }\n};",
    "submit_ts": "1720280723",
    "subm_id": "1311799777"
}