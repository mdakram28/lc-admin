{
    "username": "shangzhq-xiaohao",
    "submission": "class Solution {\npublic:\n    struct Node {\n        int l, r, cnt;\n    };\n    \n    vector<Node> tr;\n    \n    void build(int u, int l, int r) {\n        tr[u] = {l, r, 0};\n        if(l != r) {\n            int mid = l + r >> 1;\n            build(u << 1, l, mid);\n            build(u << 1 | 1, mid + 1, r);\n        }\n    }\n    \n    void pushup(int u) {\n        tr[u].cnt = tr[u << 1].cnt + tr[u << 1 | 1].cnt;\n    }\n    \n    void modify(int u, int x, int c) {\n        if(tr[u].l == tr[u].r) {\n            tr[u].cnt += c;\n            return;\n        }\n        int mid = tr[u].l + tr[u].r >> 1;\n        if(x <= mid) modify(u << 1, x, c);\n        else modify(u << 1 | 1, x, c);\n        pushup(u);\n    }\n    \n    \n    int query(int u, int l, int r) {\n        if(tr[u].l >= l && tr[u].r <= r) return tr[u].cnt;\n        int mid = tr[u].l + tr[u].r >> 1;\n        int res = 0;\n        if(l <= mid) res += query(u << 1, l, r);\n        if(r > mid) res += query(u << 1 | 1, l, r);\n        return res;\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        tr.resize(4 * n);\n        build(1, 0, n - 1);\n        \n        auto check = [&](int i) {\n            if(i <= 0 || i >= n - 1) return false;\n            return nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n        };\n        \n        for(int i = 1; i < n - 1; i ++) {\n            if(check(i)) modify(1, i, 1);\n        }\n        \n        \n        \n        vector<int> ans;\n        for(auto &i : queries) {\n            int op = i[0], a = i[1], b = i[2];\n            if(op == 1) {\n                int t = query(1, a, b);\n                if(check(a)) t --;\n                if(a != b && check(b)) t --;\n                ans.push_back(t);\n            } else {\n                bool oldl = check(a - 1), oldr = check(a + 1), oldc = check(a);\n                nums[a] = b;\n                bool newl = check(a - 1), newr = check(a + 1), newc = check(a);\n                if(oldl != newl) modify(1, a - 1, newl - oldl);\n                if(oldr != newr) modify(1, a + 1, newr - oldr);\n                if(oldc != newc) modify(1, a, newc - oldc);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506100.0
}