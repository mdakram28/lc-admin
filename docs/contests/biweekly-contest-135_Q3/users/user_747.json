{
    "username": "user0586g",
    "submission": "from collections import defaultdict\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        num_dict = {}\n        num_count = defaultdict(int)\n        for i in range(int(n/2)):\n            item = abs(nums[i] - nums[n-i-1])\n            if item not in num_dict:\n                num_dict[item] = [[nums[i], nums[n-i-1]]]\n            else:\n                num_dict[item].append([nums[i], nums[n-i-1]])\n            num_count[item] += 1\n        \n        if len(num_count.keys()) == 1:\n            return 0\n        else:\n            num_sorted = sorted(num_count.items(), key = lambda x: x[1])[::-1]\n            min_result = math.inf\n            for items in num_sorted:\n                interval = items[0]\n                result = n/2 - items[1]\n                tag = True\n                for key, items2 in num_dict.items():\n                    if key != interval:\n                        for item_list in items2:\n                            if max(item_list[0], item_list[1]) - interval < 0 and min(item_list[0], item_list[1]) + interval > k:\n                                result += 1\n                                tag = False\n                min_result = min(min_result, result)\n                if tag:\n                    return int(min_result)\n            \n            return int(min_result)\n\n\n\n\n\n\n        ",
    "submit_ts": "1721488680",
    "subm_id": "1327429844"
}