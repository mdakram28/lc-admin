{
    "username": "derrick2209",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) { \n        int n=nums.size(); \n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        int res=1; \n        vector<int>ans(k+1,-1); \n        vector<map<int,int>>mp(k+1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp[i][j]=max(dp[i][j],1+ans[l]); \n                } \n                if(mp[j].find(nums[i])!=mp[j].end()){ \n                    dp[i][j]=max(dp[i][j],1+mp[j][nums[i]]); \n                } \n                res=max(res,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                ans[j]=max(ans[j],dp[i][j]); \n                mp[j][nums[i]]=max(mp[j][nums[i]],dp[i][j]); \n            } \n        } \n        return res; \n    }\n};\n",
    "submit_ts": 1717862357.0
}