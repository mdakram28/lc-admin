{
    "username": "ws1255",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        LinkedList<Integer> queue = new LinkedList<>();\n        for(int num : nums) {\n            if(!queue.isEmpty() && queue.peekLast() == num) continue;\n            else queue.offerLast(num);\n        }\n        int[] arr = queue.stream().mapToInt(Integer::intValue).toArray();\n        int n = arr.length;\n        int res = Integer.MAX_VALUE;\n        int[] count = new int[32];\n        int[] prev = new int[n];\n        \n        for(int i = 0, j = 0; j < n; j++) {\n            // System.out.println(\"--------\");\n            int cur = helper(arr[j], count, 1, j - i + 1);\n            prev[j] = Math.abs(cur - k);\n            // System.out.println(\"j: \" + j + \", arr[j]: \" + arr[j] + \", cur: \" + cur + \", i: \" + i);\n            while(cur < k && i < j) {\n                cur = helper(arr[i], count, -1, j - i);\n                i++;\n                prev[j] = Math.min(prev[j], Math.abs(cur - k));\n            }\n            // prev[j] = cur;\n            // System.out.println(\"i: \" + i + \", j: \" + j + \", cur: \" + cur);\n        }\n        \n        \n        for(int i = 0; i < n; i++) {\n            int cur = arr[i];\n            res = Math.min(res, Math.abs(k - cur));\n            res = Math.min(res, Math.abs(k - prev[i]));\n            // if(cur < k) {\n            //     res = Math.min(res, Math.abs(k - cur));\n            // } else {\n            //     // for(int j = i; j >= 0; j--) {\n            //     //     cur = cur & arr[j];\n            //     //     res = Math.min(res, Math.abs(k - cur));\n            //     //     if(cur < k) break;\n            //     // }\n            //     res = Math.min(res, Math.abs(k - prev[i]));\n            // }\n        }\n        System.out.println(\"prev: \" + Arrays.toString(prev));\n        \n        // for(int i = 0; i < nums.length; i++) {\n        //     int cur = nums[i];\n        //     for(int j = i; j < nums.length; j++) {\n        //         cur &= nums[j];\n        //         System.out.println(\"i: \" + i + \", j: \" + j + \", cur: \" + cur);\n        //     }\n        // }\n        return Arrays.stream(prev).min().orElse(0);\n    }\n    \n    int toNum(int[] count) {\n        int cur = 0;\n        for(int i = 0; i < count.length; i++) {\n            if(count[i] > 0) cur |= (1 << i);\n        }\n        return cur;\n    }\n    \n    int helper(int cur, int[] count, int val, int len) {\n        int res = 0;\n        for(int i = 0; i < 32; i++) {\n            if(((cur >> i) & 1) == 1) {\n                count[i] += val;\n            }\n            if(count[i] == len) res |= (1 << i);\n        }\n        return res;\n    }\n}",
    "submit_ts": 1717299660.0
}