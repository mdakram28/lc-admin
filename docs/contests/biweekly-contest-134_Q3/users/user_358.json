{
    "username": "ypsirK",
    "submission": "/**\n    Author: Kristopher Paul\n    Date Created: 06-07-2024\n**/\n#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#define ll long long\n//#define int ll\n#define pb push_back\n#define MOD 1000000007\n//#define MOD 998244353\n#define mp make_pair\n#define FOR(i,a,b) for (int i = a; i < b; i++)\n#define FORD(i,a,b) for (int i = a; i >= b; i--)\n#define remax(a,b) a = max(a,b)\n#define remin(a,b) a = min(a,b)\n#define pii pair<int,int>\n#define F first\n#define S second\n#define vi vector<int>\n#define all(v) v.begin(),v.end()\n#define WL(t) while(t--)\n#define gcd(a,b) __gcd((a),(b))\n#define lcm(a,b) ((a)*(b))/gcd((a),(b))\n#define out(x) cout << #x << \" is \" << x << endl\n#define FastIO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate<typename T> using pset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; // set\ntemplate<typename T> using pmultiset = tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>; // multiset\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nstruct custom_hash {\n    static uint64_t splitmix64(uint64_t x) {\n        x += 0x9e3779b97f4a7c15;\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n        return x ^ (x >> 31);\n    }\n    size_t operator()(uint64_t x) const {\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n        return splitmix64(x + FIXED_RANDOM);\n    }\n};\n\ntemplate<typename T, typename U> using umap = unordered_map<T,U,custom_hash>;\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        FOR(i,0,k-1){\n            colors.pb(colors[i]);\n        }\n        n = colors.size();\n        int ans = 0;\n        int a[n];\n        int p[n];\n        FOR(i,0,n){\n            if(colors[i] != colors[(i-1+n)%n] && colors[i] != colors[(i+1)%n]){\n                a[i] = 1;\n            }else{\n                a[i] = 0;\n            }\n            p[i] = a[i];\n            if(i){\n                p[i] += p[i-1];\n            }\n        }\n        FOR(i,k-1,n){\n            if((p[i-1]-p[i-k+1]) == k-2){\n                ans++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277010",
    "subm_id": "1311643457"
}