{
    "username": "HariShankarKarthik",
    "submission": "class Solution {\n    int bitwiseAND(vector<vector<int>>& contri, const int& num) {\n        int result = 0;\n        for(int i = 0; i < 30; i++) {\n            int currBit = num & (1 << i);\n            contri[i][currBit > 0]++;\n            if(contri[i][0] == 0) {\n                result |= (1 << i);\n            }\n        }\n        return result;\n    }\n    int unAND(vector<vector<int>>& contri, int num) {\n        int result = 0;\n        for(int i = 0; i < 30; i++) {\n            int currBit = num & (1 << i);\n            contri[i][currBit > 0]--;\n            if(contri[i][0] == 0) {\n                result |= (1 << i);\n            }\n        }\n        return result;\n    }\npublic:\n    int minimumDifference(const vector<int>& nums, const int& k) {\n        vector<vector<int>> contri(30, vector<int>(2, 0));\n        int left = 0;\n        int result = INT_MAX;\n        for(int right = 0; right < nums.size(); right++) {\n            int currAND = bitwiseAND(contri, nums[right]);\n            while(currAND < k) {\n                result = min(result, k - currAND);\n                currAND = unAND(contri, nums[left]);\n                left++;\n            }\n            if(currAND == k) {\n                return 0;\n            }\n            result = min(result, currAND - k);\n        }\n        return result;\n    }\n};",
    "submit_ts": "1717299808",
    "subm_id": "1274824517"
}