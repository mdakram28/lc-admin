{
    "username": "ZD64A4wL4w",
    "submission": "class Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        std::map<int, std::vector<int>> differenceMap;\n        std::vector<int> allXValues;\n \n        int n = nums.size();\n        for (int i = 0; i < n / 2; ++i) {\n            int leftValue = nums[i];\n            int rightValue = nums[n - i - 1];\n            int absDifference = std::abs(leftValue - rightValue);\n\n            int maxX = std::max({leftValue, rightValue, k - leftValue, k - rightValue});\n\n            differenceMap[absDifference].push_back(maxX);\n            allXValues.push_back(maxX);\n        }\n\n        int minChangesRequired = n;  \n        std::sort(allXValues.begin(), allXValues.end());\n\n        for (const auto& [diff, xValues] : differenceMap) {\n            int position = std::lower_bound(allXValues.begin(), allXValues.end(), diff) - allXValues.begin();\n            position = position * 2 + (n / 2 - position);\n\n            for (const auto& x : xValues) {\n                if (x < diff) {\n                    position -= 2;\n                } else {\n                    position -= 1;\n                }\n            }\n\n            minChangesRequired = std::min(minChangesRequired, position);\n        }\n\n        return minChangesRequired;\n    }\n};",
    "submit_ts": "1721489157",
    "subm_id": "1327444652"
}