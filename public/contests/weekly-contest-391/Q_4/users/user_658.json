{
    "username": "gohomeclub",
    "submission": "func minimumDistance(points [][]int) int {\n\tvar sum, diff [][2]int\n\tfor i, p := range points {\n\t\tx, y := p[0], p[1]\n\t\tsum = append(sum, [2]int{x + y, i})\n\t\tdiff = append(diff, [2]int{x - y, i})\n\t}\n\tsort.Slice(sum, func(i, j int) bool {\n\t\treturn sum[i][0] < sum[j][0]\n\t})\n\tsort.Slice(diff, func(i, j int) bool {\n\t\treturn diff[i][0] < diff[j][0]\n\t})\n\tn := len(points)\n\tans := math.MaxInt32\n\tfor i := 0; i < n; i++ {\n\t\t// try removing i-th point\n\t\t// mx = max(sum[n - 1] - sum[0], diff[n - 1] - diff[0])\n\t\tmx := -1\n\t\tif (sum[n - 1][1] == i) {\n\t\t\tmx = max(mx, sum[n - 2][0] - sum[0][0])\n\t\t} else if (sum[0][1] == i) {\n\t\t\tmx = max(mx, sum[n - 1][0] - sum[1][0])\n\t\t} else {\n\t\t\tmx = max(mx, sum[n - 1][0] - sum[0][0])\n\t\t}\n\n\t\tif (diff[n - 1][1] == i) {\n\t\t\tmx = max(mx, diff[n - 2][0] - diff[0][0])\n\t\t} else if (diff[0][1] == i) {\n\t\t\tmx = max(mx, diff[n - 1][0] - diff[1][0])\n\t\t} else {\n\t\t\tmx = max(mx, diff[n - 1][0] - diff[0][0])\n\t\t}\n\t\tans = min(ans, mx)\n\t}\n\treturn ans\n}"
}