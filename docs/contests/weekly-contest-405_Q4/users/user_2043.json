{
    "username": "sonu086",
    "submission": "import java.util.*;\n\nclass Solution {\n    // Trie Node Definition\n    class TrieNode {\n        Map<Character, TrieNode> children;\n        int cost;\n        boolean isWord;\n        \n        public TrieNode() {\n            children = new HashMap<>();\n            cost = Integer.MAX_VALUE; // Initialize to max as a placeholder\n            isWord = false;\n        }\n    }\n    \n    // Insert words into Trie\n    private void insertWord(TrieNode root, String word, int cost) {\n        TrieNode node = root;\n        for (char c : word.toCharArray()) {\n            node.children.putIfAbsent(c, new TrieNode());\n            node = node.children.get(c);\n        }\n        node.isWord = true;\n        node.cost = Math.min(node.cost, cost); // Update with the minimum cost for this word\n    }\n    \n    // Main function to find the minimum cost\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        \n        // Build Trie for word lookup\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            insertWord(root, words[i], costs[i]);\n        }\n        \n        // Iterate through the target and update dp\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue; // Skip if this state is not reachable\n            \n            // Traverse the Trie from the current position\n            TrieNode node = root;\n            for (int j = i; j < n; j++) {\n                char c = target.charAt(j);\n                if (!node.children.containsKey(c)) break; // No further match\n                \n                node = node.children.get(c);\n                if (node.isWord) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + node.cost);\n                }\n            }\n        }\n        \n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n}\n",
    "submit_ts": "1720319893",
    "subm_id": "1312275511"
}