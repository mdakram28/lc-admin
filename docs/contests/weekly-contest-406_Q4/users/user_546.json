{
    "username": "yeetcode_dot_io_LC_tutorials",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort()\n        verticalCut.sort()\n        i = len(horizontalCut) - 1\n        j = len(verticalCut) - 1\n        horizontalCutsMade = 0\n        verticalCutsMade = 0\n        # make horiz cut, adds vert cuts + 1 pieces\n        # to make a horiz cut, we do it vert cuts + 1 times\n        res = 0\n        while i >= 0 and j >= 0:\n            if horizontalCut[i] >= verticalCut[j]:\n                actualHorizCuts = verticalCutsMade + 1\n                res += actualHorizCuts * horizontalCut[i]\n                i -= 1\n                horizontalCutsMade += 1\n            else:\n                actualVertCuts = horizontalCutsMade + 1\n                res += actualVertCuts * verticalCut[j]\n                j -= 1\n                verticalCutsMade += 1\n                \n        while i >= 0:\n            res += (verticalCutsMade + 1) * horizontalCut[i]\n            i -= 1\n        while j >= 0:\n            res += (horizontalCutsMade + 1) * verticalCut[j]\n            j -= 1\n        return res\n        \n            ",
    "submit_ts": "1720925338",
    "subm_id": "1320251297"
}