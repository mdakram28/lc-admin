{
    "username": "__kaus__",
    "submission": "class Solution {\n    \n    int solve(int del, const vector<vector<int> > &points)\n    {\n        int n = points.size();\n        vector<int> sum, diff;\n        for(int i=0;i<n;i++)\n        {\n            if(i == del)\n            {\n                continue;\n            }\n            sum.push_back(points[i][0] + points[i][1]);\n            diff.push_back(points[i][0] - points[i][1]);\n        }\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        return max(sum.back() - sum[0], diff.back() - diff[0]);\n    }\n    \npublic:\n    int minimumDistance(vector<vector<int>>& points)\n    {\n        int n = points.size();\n        vector<vector<int> > sum, diff;\n        for(int i=0;i<n;i++)\n        {\n            const auto &p = points[i];\n            sum.push_back({p[0] + p[1], i});\n            diff.push_back({p[0] - p[1], i});\n        }\n        sort(sum.begin(), sum.end());\n        int ps1 = sum[0][1], ps2 = sum.back()[1];\n        sort(diff.begin(), diff.end());\n        int pd1 = diff[0][1], pd2 = diff.back()[1];\n        return min({solve(ps1, points), solve(ps2, points), solve(pd1, points), solve(pd2, points)});\n    }\n};"
}