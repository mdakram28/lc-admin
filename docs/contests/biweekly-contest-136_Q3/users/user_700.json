{
    "username": "KagaKyouichirou",
    "submission": "impl Solution {\n    pub fn min_flips(grid: Vec<Vec<i32>>) -> i32 {\n        let n = grid.len();\n        let m = grid[0].len();\n\n        let mut ans = 0;\n        for i in 0..(n / 2) {\n            for j in 0..(m / 2) {\n                let count = grid[i][j] + grid[n - i - 1][j] + grid[i][m - j - 1] + grid[n - i - 1][m - j - 1];\n                ans += count.min(4 - count);\n            }\n        }\n\n        if n & 1 == 1 {\n            if m & 1 == 1 {\n                ans += grid[n / 2][m / 2];\n\n                let mut row_one = 0;\n                let mut row_conflict = 0;\n                for j in 0..(m / 2) {\n                    if grid[n / 2][j] != grid[n / 2][m - j - 1] {\n                        row_conflict += 1;\n                    } else {\n                        row_one += grid[n / 2][j];\n                    }\n                }\n                ans += row_conflict;\n\n                let mut col_one = 0;\n                let mut col_conflict = 0;\n                for i in 0..(n / 2) {\n                    if grid[i][m / 2] != grid[n - i - 1][m / 2] {\n                        col_conflict += 1;\n                    } else {\n                        col_one += grid[i][m / 2];\n                    }\n                }\n                ans += col_conflict;\n\n                if row_conflict == 0 && col_conflict == 0 && (row_one + col_one) & 1 == 1 {\n                    ans += 2;\n                }\n            } else {\n                let mut row_one = 0;\n                let mut row_conflict = 0;\n                for j in 0..(m / 2) {\n                    if grid[n / 2][j] != grid[n / 2][m - j - 1] {\n                        row_conflict += 1;\n                    } else {\n                        row_one += grid[n / 2][j];\n                    }\n                }\n                ans += row_conflict;\n\n                if row_conflict == 0 && row_one & 1 == 1 {\n                    ans += 2;\n                }\n            }\n        } else {\n            if m & 1 == 1{\n                let mut col_one = 0;\n                let mut col_conflict = 0;\n                for i in 0..(n / 2) {\n                    if grid[i][m / 2] != grid[n - i - 1][m / 2] {\n                        col_conflict += 1;\n                    } else {\n                        col_one += grid[i][m / 2];\n                    }\n                }\n                ans += col_conflict;\n\n                if col_conflict == 0 && col_one & 1 == 1 {\n                    ans += 2;\n                }\n            } else {\n\n            }\n        }\n\n        ans\n    }\n}",
    "submit_ts": "1722697898",
    "subm_id": "552268341"
}