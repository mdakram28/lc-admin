{
    "username": "singh_deopa",
    "submission": "class Solution {\n    int get_area(vector<vector<int>>& grid, int r1, int c1, int r2, int c2) {\n        int mnr = INT_MAX, mxr = INT_MIN, mnc = INT_MAX, mxc = INT_MIN;\n        \n        for (int i = r1; i <= r2; i++) {\n            for (int j = c1; j <= c2; j++) {\n                if (grid[i][j] == 0) {\n                    continue;\n                }\n                \n                mnr = min(mnr, i);\n                mnc = min(mnc, j);\n                mxr = max(mxr, i);\n                mxc = max(mxc, j);\n            }\n        }\n        \n        if (mxr == INT_MIN) {\n            return 0;\n        }\n\n        // cout << r1 << \" \" << c1 << \" \" << r2 << \" \" << c2 << \" \" << mnc << \" \" << mxc << \"\\n\";\n        return (mxr - mnr + 1) * (mxc - mnc + 1);\n    }\n    \n    int get_col(vector<vector<int>>& grid, int r1, int c1, int r2, int c2) {\n        for (int j = c1; j <= c2; j++) {\n            for (int i = r1; i <= r2; i++) {\n                if (grid[i][j] == 1) {\n                    return j;\n                }\n            }\n        }\n        \n        return -1;\n    }\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = (int) grid.size();\n        int m = (int) grid[0].size();\n        int res = INT_MAX;\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                // int area1 = 2;\n                int area1 = get_area(grid, 0, 0, i, j);\n                \n                if (area1 == 0) continue;\n                \n                int right_col = get_col(grid, 0, j + 1, i, m - 1);\n                int below_col = get_col(grid, i + 1, 0, n - 1, j);\n                \n                if (right_col != -1 && below_col != -1) {\n                    int v1 = get_area(grid, i + 1, 0, n - 1, j) + get_area(grid, 0, j + 1, n - 1, m - 1);\n                    int v2 = get_area(grid, i + 1, 0, n - 1, right_col - 1) + get_area(grid, 0, right_col, n - 1, m - 1);\n                    int v3 = get_area(grid, i + 1, 0, n - 1, m - 1) + get_area(grid, 0, j + 1, i, m - 1);\n                    \n                    int tmp = min(v1, min(v2, v3));\n                    res = min(res, tmp + area1);\n                    // cout << i << \" \" << j << \" \" << v1 << \" \" << v2 << \" \" << v3 << \"\\n\";\n                }\n                else if (below_col != -1) {\n                    for (int k = 0; k < m - 1; k++) {\n                        int v1 = get_area(grid, i + 1, 0, n - 1, k) + get_area(grid, i + 1, k + 1, n - 1, m - 1);\n                        // cout << i << \" \" << j << \" \" << k << \" \" << v1 << \"\\n\";\n                        res = min(res, area1 + v1);\n                    }\n                    \n                    for (int k = i + 1; k < n - 1; k++) {\n                        int v1 = get_area(grid, i + 1, 0, k, m - 1) + get_area(grid, k + 1, 0, n - 1, m - 1);\n                        res = min(res, area1 + v1);\n                    }\n                }\n                else if (right_col != -1) {\n                    for (int k = j + 1; k < m - 1; k++) {\n                        int v1 = get_area(grid, 0, j + 1, n - 1, k) + get_area(grid, 0, k + 1, n - 1, m - 1);\n                        res = min(res, area1 + v1);\n                    }\n                    \n                    for (int k = 0; k < n - 1; k++) {\n                        int v1 = get_area(grid, 0, j + 1, k, m - 1) + get_area(grid, k + 1, j + 1, n - 1, m - 1);\n                        res = min(res, area1 + v1);\n                    }\n                }\n                \n                // cout << i << \" \" << j << \" \" << area1 << \" \" << res << \"\\n\";\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1719114970.0
}