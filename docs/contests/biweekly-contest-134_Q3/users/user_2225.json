{
    "username": "raararaara",
    "submission": "using lint = long long;\nusing ii = pair<int, int>;\nusing il = pair<int, lint>;\nusing li = pair<lint, int>;\nusing ll = pair<lint, lint>;\n\nconst int mxn = 1000100, mxp = 1000001;\nconst int MOD = 998244353, inf = -1e9 - 7, INF = 1e9 + 1;\nconst lint lnf = -4e18, LNF = 5e18;\nconst double eps = 1e-10;\nconst int sqrtN = 200;\n\n#define sz(x) int(size(x))\n#define all(x) (x).begin(),(x).end()\n#define compress(x) sort(all(x)), (x).erase(unique(all(x)), (x).end())\n#define lb(x, v) (lower_bound(all(x), v) - (x).begin())\n#define ub(x, v) (upper_bound(all(x), v) - (x).begin())\n#define eb emplace_back\n#define pb push_back\n#define getName(var)  #var\nvector<lint> xl, yl;\n\n#define Yes \"Yes\\n\"\n#define No \"No\\n\"\n\nconst int dr[] = {-1, 0, 1, 0};\nconst int dc[] = {0, -1, 0, 1};\n\ninline int inRange(int r, int c, int R, int C) {\n    return 0 <= r && r < R && 0 <= c && c < C;\n}\n\nlint N, M, Q, R, C, H, K, T;\n\nvoid init() {\n\n}\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& b, int k) {\n        vector<int> a = b;\n        for(auto &x: b) a.eb(x);\n        N = sz(a);\n        vector<int> p(N);\n\n        for(int i = 1; i < N; i++) {\n            p[i] = p[i-1];\n            p[i] += (a[i] != a[i-1]);\n        }\n\n\n        int ret = 0;\n        for(int i = 0; i < sz(b); i++) {\n            ret += (p[i+k-1] - p[i] == k-1);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1720279805",
    "subm_id": "1311765812"
}