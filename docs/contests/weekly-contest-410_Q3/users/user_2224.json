{
    "username": "atulchauhan16",
    "submission": "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace chrono;\nusing namespace __gnu_pbds;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\n#define nline \"\\n\"\n\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n// #define MOD 1000000007\n// #define MOD1 998244353\n#define INF 1e18\n\n\n#define mp make_pair\n#define pb push_back\n#define ppb pop_back\n#define ff first\n#define ss second\n#define PI 3.141592653589793238462\n#define set_bits __builtin_popcountll\n\n\n#define vll vector<ll>\n#define vvll vector<vll>\n#define pll pair<ll, ll>\n#define pdd pair<double, double>\n#define vpll vector<pll>\n#define vsi vector<string>\n#define mapll map<ll,ll>\n#define unmapll unordered_map<ll,ll>\n#define unmap unordered_map\n#define prq priority_queue\n#define lb lower_bound\n#define ub upper_bound\n \n \n#define forn(i, a , b) for (ll i = a; i <= b; i++)\n#define rforn(i, a, b) for (ll i = a; i >=b; i--)\n\n#define all(x) (x).begin(), (x).end()\n#define maxe(x) max_element(x.begin(), x.end())\n#define mine(x) min_element(x.begin(), x.end())\n#define sz(x) ((ll)(x).size())\n#define len(x) ((ll)(x).size())\n\n \n#define YES cout << \"YES\" << nline\n#define NO cout << \"NO\" << nline\n\n//find_by_order = finding kth element of set 0 based inexing like an array or an vector (It returns an Iterator)\n// order_of_key =finding number of elements smaller than X\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n\n/***************************************PRINT STATEMENTS*************************************/\n\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(lld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\n\ntemplate <class T, class V> void _print(pair <T, V> p);\ntemplate <class T> void _print(vector <T> v);\ntemplate <class T> void _print(set <T> v);\ntemplate <class T, class V> void _print(map <T, V> v);\ntemplate <class T> void _print(multiset <T> v);\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(priority_queue<T, V> pq) {cerr << \"[ \";while (!pq.empty()) {_print(pq.top()); pq.pop(); if (!pq.empty()) { cerr << \", \";} }cerr << \" ]\";}\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\nbool revsort(ll a, ll b) {return a > b;}\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\n#define debug _print\n/***************************************SOLVE FUNCTIONS*************************************/\n\n\n#define ll long long int\nint countPairs(int mn , int ind, int rem, const vector<int>& values, vector<vector<vector<ll>>>& nums) {\n    if (ind >= values.size()) return 1;\n    \n    ll MOD = 1e9 + 7;\n    if (nums[ind][mn][rem] != -1) return nums[ind][mn][rem];\n    \n    ll result = 0;\n    for (int i = mn; i <= values[ind]; i++) {\n        for (int j = rem; j >= 0; j--) {\n            if ( values[ind] == i+j) {\n                result += countPairs(i,ind + 1, j, values, nums);\n                result %= MOD;\n            }\n        }\n    }\n    \n    return nums[ind][mn][rem] = result;\n}\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& values) {\n        int n = values.size();\n        vector<vector<vector<ll>>> nums(n, vector<vector<ll>>(51, vector<ll>(51, -1)));\n\n        return countPairs(0, 0, values[0], values, nums);\n    }\n};\n\n",
    "submit_ts": "1723347081",
    "subm_id": "1351591478"
}