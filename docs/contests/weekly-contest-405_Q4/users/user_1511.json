{
    "username": "bayartsogt",
    "submission": "import pprint\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        \"\"\"\n        abcdef\n        ^\n        \"\"\"\n        w2c = {}\n        for w, c in zip(words, costs):\n            w2c[w] = min(w2c.get(w, inf), c)\n            \n        trie = {}\n        for word, cost in w2c.items():\n            root = trie\n            for x in word:\n                if x not in root:\n                    root[x] = {}\n                root = root[x]\n            root[\"cost\"] = cost\n        \n        \n        # pprint.pprint(trie)\n        \n        @cache\n        def go(i):\n            if i == len(target):\n                return 0\n            \n            best = inf\n            root = trie\n            for j in range(i, len(target)):\n                x = target[j]\n                if x in root:\n                    root = root[x]\n                    if \"cost\" in root:\n                        best = min(best, go(j+1) + root[\"cost\"])\n                else:\n                    break\n            \n            return best\n                \n            \n        ans = go(0)\n        return -1 if ans == inf else ans\n            \n                \n                \n                ",
    "submit_ts": "1720324085",
    "subm_id": "1312391229"
}