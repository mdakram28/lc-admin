{
    "username": "kumarfeldspar",
    "submission": "class Solution {\npublic:\n    const static int inf = 1e9;\n    const static int N = 2e5 + 5;\n    struct node {\n        int lr;\n        int l1r;\n        int lr1;\n        int l1r1;\n    };\n    node sgt[4 * N];\n\n    node merge(node a, node b) {\n        node ans;\n        ans.lr = std::max({a.lr1 + b.l1r, a.lr + b.l1r, a.lr1 + b.lr});\n        ans.lr1 = std::max({a.lr1 + b.l1r1, a.lr + b.l1r1, a.lr1 + b.lr1});\n        ans.l1r = std::max({a.l1r1 + b.l1r, a.l1r + b.l1r, a.l1r1 + b.lr});\n        ans.l1r1 = std::max({a.l1r1 + b.l1r1, a.l1r + b.l1r1, a.l1r1 + b.lr1});\n        return ans;\n    }\n\n    void update(int t, int tl, int tr, int i, int value) {\n        if (tl > i || tr < i)\n            return;\n        if (tl == tr) {\n            sgt[t].lr = value;\n            sgt[t].lr1 = sgt[t].l1r = sgt[t].l1r1 = 0;\n            return;\n        }\n        int mid = (tl + tr) / 2;\n        update(2 * t + 1, tl, mid, i, value);\n        update(2 * t + 2, mid + 1, tr, i, value);\n        int left = 2 * t + 1, right = 2 * t + 2;\n        sgt[t] = merge(sgt[left], sgt[right]);\n    }\n\n    node query(int t, int tl, int tr, int l, int r) {\n        if (tl > r || tr < l)\n            return {0, 0, 0, 0}; // Initialize all parts to zero\n        if (l <= tl && r >= tr)\n            return sgt[t];\n        int mid = (tl + tr) / 2;\n        int left = 2 * t + 1, right = 2 * t + 2;\n        return merge(query(left, tl, mid, l, r), query(right, mid + 1, tr, l, r));\n    }\n\n    int maximumSumSubsequence(std::vector<int>& nums, std::vector<std::vector<int>>& queries) {\n        int n = nums.size();\n        for (int i = 0; i < nums.size(); i++) {\n            update(0, 0, n - 1, i, nums[i]);\n        }\n        int cc=1000000007;\n        long long ans = 0;\n        for (int i = 0; i < queries.size(); i++) {\n            int x = queries[i][0], y = queries[i][1];\n            if (y < 0) update(0, 0, n - 1, x, 0);\n            else update(0, 0, n - 1, x, y);\n            int xx = std::max({sgt[0].lr, sgt[0].lr1, sgt[0].l1r, sgt[0].l1r1});\n            ans += (long long)xx;\n            ans%=cc;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716695840",
    "subm_id": "1268144053"
}