{
    "username": "yu-shi-b",
    "submission": "class Solution {\npublic:\n    vector<int> sum ;\n    void add(int x) {\n        int p = 0 ;\n        while (x) {\n            sum[p] += (x&1) ;\n            x = x>>1 ;\n            ++p ;\n        }\n    }\n    void del(int x) {\n        int p = 0 ;\n        while (x) {\n            sum[p] -= (x&1) ;\n            x = x>>1 ;\n            ++p ;\n        }\n    }\n    int check(int aaa) {\n        int z = 0 ;\n        for (int i=0 ; i<31 ; ++i) {\n            z += (sum[i]>=aaa) * pow(2,i) ;\n        }\n        return z ;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0 ;\n        int n = nums.size() ;\n        int l=0 , r=0 ;\n        sum = vector<int>(32,0) ;\n        add(nums[0]) ;\n        vector<int> pos(n,-1) ;\n        vector<int> pos2(n,-1) ;\n        int limit = -1 ;\n        for (int i=0 ; i<n ; ++i) {\n            int x = nums[i] ;\n            if ((x&k) < k) continue ;\n            pos[i] = i ;\n            if (i>0 && pos[i-1]!=-1) pos[i] = pos[i-1] ;\n        }\n        while (r<n) {\n            while (pos[r]==-1 ) {\n                limit = r ;\n                r = l = r+1 ;\n                if (r==n) return ans ;\n                for (int &x : sum)\n                x = 0 ;\n                add(nums[r]);\n            }\n            if (check(r-l+1) == k) {\n                ans += (long long) (l-max(limit,pos2[r])) ;\n                pos2[r] = l ;\n            }\n            if (l<r)\n            {\n                del(nums[l]) ;\n                ++l ; \n                if (check(r-l+1)==k)\n                continue ;\n                --l ;\n                add(nums[l]) ;\n            }\n            ++r ;\n            if (r<n)\n            add(nums[r]) ;\n        }\n        return ans ;\n    }\n};",
    "submit_ts": "1720280115",
    "subm_id": "544570591"
}