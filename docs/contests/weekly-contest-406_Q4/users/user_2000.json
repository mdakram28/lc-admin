{
    "username": "KandulaAsrith",
    "submission": "using ll=long long;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<ll,ll>>pq;\n        for(int i=0;i<m-1;i++){\n            pq.push({horizontalCut[i],0});\n        }\n        for(int i=0;i<n-1;i++){\n            pq.push({verticalCut[i],1});\n        }\n\n        ll horizon=1,vertical=1;\n        ll ans=0;\n        while(!pq.empty()){\n            ll cost=pq.top().first;\n            ll direction=pq.top().second;\n            pq.pop();\n\n            if(direction==0){\n                ans+=1LL*vertical*cost;\n                horizon++;\n            }\n            else{\n                ans+=1LL*horizon*cost;\n                vertical++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926577",
    "subm_id": "1320290276"
}