{
    "username": "sunil1906",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long h_sum = 0, v_sum = 0, i, ans = 0;\n        vector<pair<long long, int>> v;\n        for(i=0;i<horizontalCut.size();i++)     v.push_back({horizontalCut[i], 1});\n        for(i=0;i<verticalCut.size();i++)       v.push_back({verticalCut[i], 0});\n        \n        sort(v.begin(), v.end());\n        for(i=v.size()-1;i>=0;i--){        \n            if(v[i].second == 1){\n                ans += (v_sum + 1) * v[i].first;\n                h_sum++;\n            }\n            else{\n                ans += (h_sum + 1) * v[i].first;\n                v_sum++;\n            }\n        }\n        \n        return ans;        \n    }\n};",
    "submit_ts": "1720925912",
    "subm_id": "1320270151"
}