{
    "username": "Dymonchyk",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        for (int i = 0; i < points.size(); ++i) {\n            int nx = points[i][0] - points[i][1];\n            int ny = points[i][0] + points[i][1];\n            points[i][0] = nx;\n            points[i][1] = ny;\n        }\n        \n        pair<int, int> suf1[100005];\n        pair<int, int> suf2[100005];\n        suf1[points.size() - 1] = {points[points.size() - 1][0], points[points.size() - 1][0]};\n        suf2[points.size() - 1] = {points[points.size() - 1][1], points[points.size() - 1][1]};\n        for (int i = points.size() - 1; i >= 0; --i) {\n            if (i + 1 < points.size()) suf1[i] = suf1[i + 1];\n            suf1[i].first = min(suf1[i].first, points[i][0]);\n            suf1[i].second = max(suf1[i].second, points[i][0]);\n            \n            if (i + 1 < points.size()) suf2[i] = suf2[i + 1];\n            suf2[i].first = min(suf2[i].first, points[i][1]);\n            suf2[i].second = max(suf2[i].second, points[i][1]);\n        }\n        \n        pair<int, int> pref1[100005];\n        pair<int, int> pref2[100005];\n        pref1[0] = {points[0][0], points[0][0]};\n        pref2[0] = {points[0][1], points[0][1]};\n        for (int i = 0; i < points.size(); ++i) {\n            if (i > 0) pref1[i] = pref1[i - 1];\n            pref1[i].first = min(pref1[i].first, points[i][0]);\n            pref1[i].second = max(pref1[i].second, points[i][0]);\n            \n            if (i > 0) pref2[i] = pref2[i - 1];\n            pref2[i].first = min(pref2[i].first, points[i][1]);\n            pref2[i].second = max(pref2[i].second, points[i][1]);\n        }\n        \n        int ans = 2e+9;\n        for (int i = 0; i < points.size(); ++i) {\n            // cout << i << \" - \" << max(calc(pref1, suf1, i, points.size()), calc(pref2, suf2, i, points.size())) << endl;\n            ans = min(ans, max(calc(pref1, suf1, i, points.size()), calc(pref2, suf2, i, points.size())));\n        }\n        \n        return ans;\n    }\n    \n    int calc(pair<int, int> pref[100005], pair<int, int> suf[100005], int i, int n) {\n        int mn1 = 2e+9;\n        if (i > 0) mn1 = min(mn1, pref[i - 1].first);\n        if (i + 1 < n) mn1 = min(mn1, suf[i + 1].first);\n        int mx1 = -2e+9;\n        if (i > 0) mx1 = max(mx1, pref[i - 1].second);\n        if (i + 1 < n) mx1 = max(mx1, suf[i + 1].second);\n        return mx1 - mn1;\n    }\n};"
}