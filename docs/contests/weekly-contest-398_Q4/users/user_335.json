{
    "username": "nnks8908",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) \n    {\n        long long ans=0,up=0,jump=1,down=1;\n        while(1)\n        {\n            // cout<<down<<' '<<up<<' '<<jump<<'\\n';\n            if(up+1-k<=down)\n                ans+=helper(down,up+1-k);\n            // cout<<ans<<'\\n';\n            ++down;\n            up+=jump;\n            jump*=2;\n            if(up<k)\n                continue;\n            if(up+1-k>down)\n                break;\n        }\n        // cout<<'\\n';\n        return ans;\n    }\nprivate:\n    int helper(int n,int m)\n    {\n        // cout<<n<<' '<<m<<'\\n';\n        if(n<0 || m<0)\n            return 0;\n        if(n==0 || m==0)\n            return 1;\n        long long rt = 1;\n        m=min(m,n-m);\n        for(int i=0;i<m;++i)\n        {\n            rt*=(n-i);\n            rt/=(i+1);\n        }\n        return rt;\n    }\n};",
    "submit_ts": 1716088443.0
}