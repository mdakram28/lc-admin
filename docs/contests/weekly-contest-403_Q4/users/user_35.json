{
    "username": "n124345679976",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        def get(a, b, c, d):\n            if b < a or d < c:\n                return 1e9\n            lx, rx, ty, dy = 1e9, -1, 1e9, -1\n            for i in range(a, b+1):\n                for j in range(c, d+1):\n                    if grid[i][j]:\n                        lx = min(lx, j)\n                        rx = max(rx, j)\n                        ty = min(ty, i)\n                        dy = max(dy, i)\n            return (rx-lx+1) * (dy - ty+1)\n        ans = 1e9\n        n, m = len(grid), len(grid[0])\n        for i in range(n):\n            for j in range(m):\n                ans = min(ans, get(0, i, 0, m - 1) + get(i+1, n-1, 0, j) + get(i+1, n-1, j+1, m - 1))\n                ans = min(ans, get(0, i, 0, j) + get(0, i, j+1, m-1) + get(i+1, n-1, 0, m-1))\n                ans = min(ans, get(0, n-1, 0, j) + get(0, i, j+1, m-1) + get(i+1, n-1, j+1, m-1))\n                ans = min(ans, get(0, n-1, j+1, m-1) + get(0, i, 0, j) + get(i+1, n-1, 0, j))\n        for i in range(n):\n            for j in range(i, n):\n                ans = min(ans, get(0, i, 0, m-1) + get(i+1, j, 0, m-1) + get(j+1, n-1, 0, m-1))\n        for i in range(m):\n            for j in range(i, m):\n                ans = min(ans, get(0, n-1, 0, i) + get(0, n-1, i+1, j) + get(0, n-1, j+1, m-1))\n        return ans",
    "submit_ts": 1719111788.0
}