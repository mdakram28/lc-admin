{
    "username": "Xiao__Jun",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        const int SIZE = nums.size();\n        vector<vector<long long>> diffs;\n        diffs.push_back(vector<long long>());\n        long long res = 0;\n        \n        for(long long i = 0, pre = target[i] - nums[i];i < SIZE;i++) {\n            if(target[i] - nums[i] > 0) {\n                if(pre < 0)\n                    diffs.push_back(vector<long long>());\n                diffs.back().push_back(target[i] - nums[i]);\n            }\n            else if(target[i] - nums[i] < 0) {\n                if(pre > 0)\n                    diffs.push_back(vector<long long>());\n                diffs.back().push_back(target[i] - nums[i]);\n            }\n            else if(target[i] - nums[i] == 0)\n                if(diffs.back().size() > 0)\n                    diffs.push_back(vector<long long>());\n            pre = target[i] - nums[i];\n        }\n        \n        for(auto cur : diffs) {\n            if(cur.size() == 0)\n                continue;\n            if(cur[0] < 0)\n                for(int i = 0;i < cur.size();i++)\n                    cur[i]*= -1;\n            vector<pair<long long,long long>> stack;\n            stack.emplace_back(cur[0], 0);\n            res+= cur[0];\n            for(int i = 1;i < cur.size();i++) {\n                long long preVal = stack.back().first;\n                if(cur[i] >= preVal) {\n                    stack.emplace_back(cur[i], preVal);\n                    res+= stack.back().first - stack.back().second;\n                }\n                else {\n                    while(!stack.empty() && cur[i] < stack.back().first) {\n                        stack.pop_back();\n                    }\n                    // if(stack.empty()) {\n                    //     stack.emplace_back(cur[i], 0);\n                    // }\n                    // else {\n                    //     stack.emplace_back(cur[i], stack.back().first);\n                    //     res+= stack.back().first - stack.back().second;\n                    // }\n                    stack.emplace_back(cur[i], 0);\n                }\n            }\n        }\n        \n        return res;\n    }\n};\n/*\n[1,1,1,1,1,1]\n[5,4,3,4,5,6]\n[1,1,1,1,1,1,5,5,5]\n[4,5,6,2,3,4,1,2,3]\n\n[1,1,3,4]\n[4,1,3,2]\n[9,2,6,10,4,8,3,4,2,3]\n[9,5,5,1,7,9,8,7,6,5]\n\n0,3,-1,-9,3,1,5,3,4,2\n\n4,2,3,1\n*/",
    "submit_ts": "1721532509",
    "subm_id": "1327987569"
}