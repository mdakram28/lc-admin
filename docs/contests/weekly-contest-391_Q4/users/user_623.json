{
    "username": "lrxac",
    "submission": "class Solution {\npublic:\n    vector<int> findMax(vector<vector<int>>& points) {\n        int n = points.size();\n        int xl = 0, yl = 0;\n        int xr = 1e8 + 10, yr = 0;\n        vector<int> l, r;\n        int mx1 = INT_MIN, mx2 = INT_MIN;\n        int mn1 = INT_MAX, mn2 = INT_MAX;\n        int p1, p2, p3, p4;\n        for (int i = 0; i < n; i++) {\n            int x = points[i][0], y = points[i][1];\n            if (abs(x - xl) + abs(y - yl) > mx1) {\n                p1 = i;\n                mx1 = abs(x - xl) + abs(y - yl);\n            }\n            if (abs(x - xl) + abs(y - yl) < mn1) {\n                p2 = i;\n                mn1 = abs(x - xl) + abs(y - yl);\n            }\n            if (abs(x - xr) + abs(y - yr) > mx2) {\n                p3 = i;\n                mx2 = abs(x - xr) + abs(y - yr);\n            }\n            if (abs(x - xr) + abs(y - yr) < mn2) {\n                p4 = i;\n                mn2 = abs(x - xr) + abs(y - yr);\n            }\n        }\n        if (mx1 - mn1 > mx2 - mn2) {\n            return {p1, p2, mx1 - mn1};\n        }\n        else {\n            return {p3, p4, mx2 - mn2};\n        }\n        \n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> a = findMax(points);\n        vector<vector<int>> b = points;\n        vector<vector<int>> c = points;\n        b.erase(b.begin() + a[0]);\n        c.erase(c.begin() + a[1]);\n        return min(findMax(b)[2], findMax(c)[2]);\n        \n    }\n};"
}