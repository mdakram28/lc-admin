{
    "username": "krishna_1010",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int>mp;\n\n        for (int i = 0; i < n / 2; ++i) {\n            int x = (abs(nums[i] - nums[n - i - 1]));\n            mp[x]++;\n        \n        }\n        \n        int ans = INT_MAX;\n        for (auto& y : mp) {\n            int target = y.first;\n            int fre = y.second;\n            if(n/2-fre>ans)\n                continue;\n            int curr = 0;\n            for (int i = 0; i < n / 2; ++i) {\n                int diff = abs(nums[i] - nums[n - i - 1]);\n                if (diff != target) {\n                    int mini = min(nums[i], nums[n - i - 1]);\n                    int maxa = max(nums[i], nums[n - i - 1]);\n                    if (k - mini >= target || maxa >= target)\n                        curr++;\n                    else\n                        curr += 2;\n                    \n                    if(curr>ans)\n                        break;\n                }\n            }\n            ans = min(ans, curr);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721489210",
    "subm_id": "1327446386"
}