{
    "username": "\u5351\u5fae\u5927\u4e09\u5728\u7ebf\u627e\u6d3b",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        \n        int n = s.size();\n        vector<long long > a(n+1,0);\n        vector<long long > b(n+1,0);\n        s = ' ' + s;\n        int _1 = 0 , _0 = 0 , j = n ;\n        for(int i = n ; i >= 1; i --){\n            while(j >= 1){\n                int temp1 = _1 + (s[j] == '1');\n                int temp0 = _0 + (s[j] == '0');\n                if(temp1 > k && temp0 > k)break;\n                _1 = temp1;\n                _0 = temp0;\n                j --;\n            }\n            a[i] = j;\n            _1 -= s[i] == '1';\n            _0 -= s[i] == '0';\n        }\n\n        for(int i = 1; i <= n ; i ++)\n        {\n            b[i] = b[i-1] + a[i];\n        }\n\n        vector<long long> ans ;\n        for(auto it : queries){\n            long long  l = it[0] + 1;\n            long long  r = it[1] + 1;\n\n            long long int sum = (r+l) *  (r - l + 1)/2;\n            long long  le = l, re = r;\n            while(le < re){\n                int mid = le + re + 1 >> 1;\n                if(a[mid] <= l-1)le = mid;\n                else re = mid - 1;\n            }\n            long long  len = re - l + 1;\n            long long  mid = l + len ;\n            sum -= b[r]-b[mid-1];\n            sum -= len * (l-1);\n            ans.push_back(sum);            \n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1723951721",
    "subm_id": "556407251"
}