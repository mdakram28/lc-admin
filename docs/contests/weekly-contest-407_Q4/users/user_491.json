{
    "username": "2499370956",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = nums[i] - target[i];\n        }\n        long out = 0;\n        for (int i = 0; i < n; i++) {\n            int sign = Integer.compare(diff[i], 0);\n            if (sign == 0) {\n                continue;\n            }\n            int ops = Math.abs(diff[i]);\n            while (i + 1 < n && sign == Integer.compare(diff[i + 1], 0)) {\n                i++;\n                int abs = Math.abs(diff[i]);\n                if (abs < ops) {\n                    out += ops - abs;\n                    ops = abs;\n                } else {\n                    ops = abs;\n                }\n            }\n            out += ops;\n        }\n        return out;\n    }\n}",
    "submit_ts": "1721531286",
    "subm_id": "1327957096"
}