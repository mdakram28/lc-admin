{
    "username": "gitanjzli",
    "submission": "class Solution {\npublic:\n   long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int length = nums.size();\n        vector<int> differences(length);\n\n        for (int i = 0; i < length; ++i) {\n            differences[i] = target[i] - nums[i];\n        }\n\n        long long totalOps = 0;\n        int segmentDiff = 0;\n\n      \n        for (int i = 0; i < length; ++i) {\n            if (i == 0 || (differences[i - 1] > 0 && differences[i] > 0) || (differences[i - 1] < 0 && differences[i] < 0)) {\n                long long extraOps = abs(differences[i]) - abs(segmentDiff);\n                if (extraOps > 0) {\n                    totalOps += extraOps;\n                }\n                segmentDiff = differences[i];\n            } else {\n                totalOps += abs(differences[i]);\n                segmentDiff = differences[i];\n            }\n        }\n\n        return totalOps;\n    }\n};",
    "submit_ts": "1721533362",
    "subm_id": "1328007281"
}