{
    "username": "Sasta_Coder",
    "submission": "class Solution:\n    modulo = 1000000007\n    max_inv = 400\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        map = {}\n        c=0\n        for i in requirements:\n            map[i[0] + 1] = i[1]\n        perm_c = [[0 for _ in range(self.max_inv + 1)] for _ in range(n + 1)]\n        perm_c[0][0] = 1\n        for j in range(1, n + 1):\n            for k in range(self.max_inv + 1):\n                for l in range(j):\n                    prev_ind = k - l\n                    if prev_ind >= 0:\n                        perm_c[j][k] = (perm_c[j][k] + perm_c[j - 1][prev_ind]) % self.modulo\n\n            if j in map:\n                ind = map[j]\n                for x in range(self.max_inv + 1):\n                    if x != ind:\n                        perm_c[j][x] = 0\n        for y in perm_c[n]:\n            c = (c + y) % self.modulo\n        return c",
    "submit_ts": 1719071435.0
}