{
    "username": "Puneet7373",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& v, int k) {\n        int n = v.size(); \n        vector<vector<int>> dp(n,vector<int>(k+1,1)); \n        vector<map<int,int>> mp(k+1); \n        int ans=1; \n        vector<int> ind(k+1,-1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int w=0;w<j;w++){ \n                    int cur = ind[w];\n                    dp[i][j] = max(dp[i][j], 1+cur); \n                }  \n                if(mp[j].find(v[i]) !=mp[j].end()){ \n                    int cur = mp[j][v[i]];\n                    dp[i][j] = max(dp[i][j],1 + cur); \n                } \n            } \n            for(int j=0;j<=k;j++){ \n                int cur = dp[i][j];\n                ind[j] = max(ind[j],cur); \n                mp[j][v[i]] = max(mp[j][v[i]],cur); \n            } \n        } \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                ans = max(ans,dp[i][j]); \n            } \n        } \n        return ans; \n    }\n};",
    "submit_ts": 1717862391.0
}