{
    "username": "harshal_02",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < n / 2;i++) {\n            for (int j = 0; j < m / 2;j++){\n                vector<int>v = { grid[i][j],grid[n - i - 1][j],grid[i][m - j - 1],grid[n - i - 1][m - j - 1]};\n                int one=count(v.begin(),v.end(),1);\n                int diff=4-one;\n                ans+=min(one,diff);\n            }\n        }\n        int cnt=0;\n        int res=0;\n        if(n%2==1){\n            for (int j = 0; j < m / 2;j++){\n                if (grid[n/2][j]!=grid[n/2][m-1-j]){\n                    res++;\n                    ans++;\n                } \n                else{\n                    if(grid[n/2][j] == 1) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        if(m%2==1){\n            for(int i = 0; i < n / 2;i++){\n                if(grid[i][m/2] != grid[n-1-i][m/2]){\n                    res++;\n                    ans++;\n                }\n                else{\n                    if (grid[i][m/2] == 1){\n                        cnt++;\n                    }\n                }\n            }\n        }\n        if(n%2==1 && m%2==1 && grid[n/2][m/2] == 1){\n            ans++;\n        }\n        \n        if(cnt%2==1 && res==0){\n            ans++;\n            ans++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699988",
    "subm_id": "1343228293"
}