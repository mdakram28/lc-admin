{
    "username": "temporary1_",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int dp[5001][55];\n        int n = nums.size();\n        int max1[2][5001];\n        fill(max1[1],max1[1]+n,0);\n        map<int,int> mp;\n        for (int ki = 0; ki <= k; ++ki) {\n        \tint bit = ki&1;\n        \tmp.clear();\n            for (int i = 0; i < n; ++i) {\n                dp[i][ki] = 1;\n       \t\t\tif (i > 0 && ki > 0)dp[i][ki] = max(dp[i][ki],max1[!bit][i-1]+1);\n       \t\t\tif (mp.find(nums[i]) != mp.end())dp[i][ki] = max(dp[i][ki],mp[nums[i]]+1);\n                max1[bit][i] = max(dp[i][ki],(i > 0 ? max1[bit][i-1] : 0));\n            \tmp[nums[i]] = max(mp[nums[i]],dp[i][ki]);\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < n; ++i) {\n            ans = max(ans,dp[i][k]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717861709",
    "subm_id": "1281799680"
}