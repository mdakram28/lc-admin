{
    "username": "kasturi_2906",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        vector<vector<pair<int, int>>> topThree(m, vector<pair<int, int>>(3, {INT_MIN, -1}));\n        \n        // Precompute the top 3 maximum values and their column indices for each row\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                updateTop3(topThree[i], {board[i][j], j});\n            }\n        }\n        \n        long long maxSum = LLONG_MIN;\n        \n        // Find the maximum sum using the precomputed values\n        for (int i = 0; i < m - 2; ++i) {\n            for (int j = i + 1; j < m - 1; ++j) {\n                for (int k = j + 1; k < m; ++k) {\n                    maxSum = max(maxSum, findMaxSum(topThree[i], topThree[j], topThree[k]));\n                }\n            }\n        }\n        \n        return maxSum;\n    }\n\nprivate:\n    void updateTop3(vector<pair<int, int>>& top3, pair<int, int> value) {\n        if (value.first > top3[0].first) {\n            top3[2] = top3[1];\n            top3[1] = top3[0];\n            top3[0] = value;\n        } else if (value.first > top3[1].first) {\n            top3[2] = top3[1];\n            top3[1] = value;\n        } else if (value.first > top3[2].first) {\n            top3[2] = value;\n        }\n    }\n    \n    long long findMaxSum(const vector<pair<int, int>>& row1, const vector<pair<int, int>>& row2, const vector<pair<int, int>>& row3) {\n        long long maxSum = LLONG_MIN;\n        for (int i = 0; i < 3; ++i) {\n            for (int j = 0; j < 3; ++j) {\n                for (int k = 0; k < 3; ++k) {\n                    if (row1[i].second != row2[j].second && row1[i].second != row3[k].second && row2[j].second != row3[k].second) {\n                        maxSum = max(maxSum, static_cast<long long>(row1[i].first) + row2[j].first + row3[k].first);\n                    }\n                }\n            }\n        }\n        return maxSum;\n    }\n};",
    "submit_ts": "1723908451",
    "subm_id": "1359153183"
}