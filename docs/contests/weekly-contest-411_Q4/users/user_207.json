{
    "username": "Lin",
    "submission": "import java.util.*;\n\nclass Solution {\n    private int[] ps0, ps1, f;\n    private long[] ps;\n    public long[] countKConstraintSubstrings(String s, int k, int[][] queries) {\n        long[] ans = new long[queries.length];\n        int n = s.length();\n        ps0 = new int[n];\n        ps1 = new int[n];\n        for(int i = 0; i < n; i++) {\n            ps0[i] = (i > 0 ? ps0[i - 1] : 0) + (s.charAt(i) == '0' ? 1 : 0);\n            ps1[i] = (i > 0 ? ps1[i - 1] : 0) + (s.charAt(i) == '1' ? 1 : 0);\n        }\n        f = new int[n];\n        for(int i = 0; i < n; i++) {\n            int j = bs(i, k);\n            f[i] = i - j + 1;\n        }\n        ps = new long[n];\n        for(int i = 0; i < n; i++) {\n            ps[i] = (i > 0 ? ps[i - 1] : 0) + f[i];\n        }\n        for(int i = 0; i < ans.length; i++) {\n            int j = bs1(queries[i][0], queries[i][1]);\n            if(j >= 0) {\n                ans[i] = ps[queries[i][1]] - (j > 0 ? ps[j - 1] : 0);\n                long len = j - queries[i][0];\n                ans[i] += (len * (len + 1) / 2);\n            }\n            else {\n                long len = queries[i][1] - queries[i][0] + 1;\n                ans[i] = (len * (len + 1) / 2);\n            }\n        }\n        return ans;\n    }\n    private int bs1(int l, int r) {\n        int l1 = l, r1 = r;\n        while(l1 < r1 - 1) {\n            int m = l1 + (r1 - l1) / 2;\n            int idx = m - f[m] + 1;\n            if(idx >= l) {\n                r1 = m;\n            }\n            else {\n                l1 = m + 1;\n            }\n        }\n        if(l1 - f[l1] + 1 >= l) {\n            return l1;\n        }\n        else if(r1 - f[r1] + 1 >= l) {\n            return r1;\n        }\n        return -1;\n    }\n    private int bs(int idx, int k) {\n        int l = 0, r = idx;\n        while(l < r - 1) {\n            int m = l + (r - l) / 2;\n            if(ps0[idx] - (m > 0 ? ps0[m - 1] : 0) <= k\n                || ps1[idx] - (m > 0 ? ps1[m - 1] : 0) <= k) {\n                r = m;\n            }\n            else {\n                l = m + 1;\n            }\n        }\n        if(ps0[idx] - (l > 0 ? ps0[l - 1] : 0) <= k || ps1[idx] - (l > 0 ? ps1[l - 1] : 0) <= k) {\n            return l;\n        }\n        return r;\n    }\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int[][] q = new int[][]{{0,5},{1,4},{2,3}};\n        solution.countKConstraintSubstrings(\"010101\", 1, q);\n    }\n}",
    "submit_ts": "1723951213",
    "subm_id": "1359766090"
}