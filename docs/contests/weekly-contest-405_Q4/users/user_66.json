{
    "username": "quocdatmc",
    "submission": "class Solution {\npublic:\n    class Trie {\n    public:\n        Trie* child[26];\n        int cost;\n        Trie() : cost(1e9) {\n            for(int i = 0; i < 26; i++) child[i] = nullptr;\n        };\n    };\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie* root = new Trie();\n        int n = target.length();\n        const int mx = 1e9;\n        int dp[n + 2];\n        for(int i = 0; i < n + 2; i++) dp[i] = mx;\n        for(int i = 0; i < (int)words.size(); i++) {\n            string s = words[i];\n            Trie* tmp = root;\n            for(char c : s) {\n                int nxt = c - 'a';\n                if(!tmp->child[nxt]) {\n                    tmp->child[nxt] = new Trie();\n                }\n                tmp = tmp->child[nxt];\n            }\n            tmp->cost = min(tmp->cost, costs[i]);\n        }\n\n        dp[0] = 0;\n        for(int i = 0; i < n; i++) {\n            Trie* tmp = root;\n            if(dp[i] == mx) continue;\n            for(int j = i; j < n; j++) {\n                int c = target[j] - 'a';\n                tmp = tmp->child[c];\n                if(!tmp) break;\n                if(tmp->cost < mx) dp[j + 1] = min(dp[j + 1], dp[i] + tmp->cost);\n            }\n        }\n        if(dp[n] == mx) return -1;\n        return dp[n];\n    }\n};",
    "submit_ts": "1720321134",
    "subm_id": "1312314431"
}