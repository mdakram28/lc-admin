{
    "username": "royliurl",
    "submission": "class Solution {\n    public static class TrieNode {\n        public TrieNode[] next;\n        public boolean word;\n        public int cost;\n        \n        public TrieNode() {\n            this.next = new TrieNode[26];\n            this.word = false;\n            this.cost = Integer.MAX_VALUE;\n        }\n    }\n    \n    public void addWord(TrieNode root, String word, int cost) {\n        TrieNode curr = root;\n        for (char c : word.toCharArray()) {\n            if (curr.next[c - 'a'] == null) {\n                curr.next[c - 'a'] = new TrieNode();\n            }\n            \n            curr = curr.next[c - 'a'];\n        }\n        curr.word = true;\n        curr.cost = Math.min(cost, curr.cost);\n    }\n        \n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            addWord(root, words[i], costs[i]);\n        }\n        \n        int[] dp = new int[target.length() + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        \n        for (int i = 0; i < dp.length; i++) {\n            if (dp[i] == Integer.MAX_VALUE) {\n                continue;\n            }\n            \n            TrieNode curr = root;\n            int idx = i;\n            while (curr != null) {\n                if (curr.word) {\n                    dp[idx] = Math.min(dp[idx], dp[i] + curr.cost);\n                }\n                if (idx < target.length()) {\n                    curr = curr.next[target.charAt(idx) - 'a'];\n                    idx++;\n                } else {\n                    break;\n                }\n                \n            }\n            \n            \n//             int idx = i;\n//             TrieNode curr = root.next[target.charAt(idx) - 'a'];\n            \n//             while (curr != null && idx < target.length()) {\n//                 if (curr.word) {\n//                     dp[idx + 1] = Math.min(dp[idx + 1], dp[i + 1] + curr.cost);\n//                 }\n//                 idx++;\n//                 curr = curr.next[target.charAt(idx) - 'a'];\n//             }\n        }\n        \n        // System.out.println(Arrays.toString(dp));\n        \n        \n        return dp[target.length()] == Integer.MAX_VALUE ? -1 : dp[target.length()];\n    }\n}",
    "submit_ts": "1720322171",
    "subm_id": "1312342624"
}