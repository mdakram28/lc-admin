{
    "username": "_saraswat",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define loop(i, a, n) for (long long i = (a); i < (n); ++i)\n#define loopD(i, a, n) for (long long i = (a); i >= (n); --i)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define sz(a) ((int)a.size())\n#define YES cout << \"YES\" << endl;\n#define NO cout << \"NO\" << endl;\n#define endl '\\n'\n#define fastio std::ios::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n#define pb push_back\n#define pp pop_back()\n#define fi first\n#define si second\n#define v(a) vector<int>(a)\n#define vv(a) vector<vector<int>>(a)\n#define present(c, x) ((c).find(x) != (c).end())\n#define set_bits __builtin_popcountll\n#define MOD 1000000007\n// #define int long long\n\ntypedef long long lli;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<lli, lli> pll;\ntypedef pair<int, int> pii;\ntypedef unordered_map<int, int> umpi;\ntypedef map<int, int> mpi;\ntypedef vector<pii> vp;\ntypedef vector<lli> vll;\ntypedef vector<vll> vvll;\n\n// Use long long to avoid overflow\nlong long power(long long a, long long b)\n{\n    if (b == 0)\n        return 1;\n\n    long long halfPow = power(a, b / 2);\n    if (b & 1) // odd hai to\n        return halfPow * halfPow * a;\n    return halfPow * halfPow;\n}\n\nlong long power(long long a, long long b, long long m)\n{\n    if (b == 0)\n        return 1;\n    a %= m;\n    long long halfPow = power(a, b / 2, m);\n    long long result = halfPow * halfPow % m;\n    if (b & 1) // if b is odd\n        result = result * a % m;\n    return result;\n}\n\nclass Solution\n{\npublic:\n    vector<pair<pii, int>> dp;\n    vvi adj;\n\n    void ishu(int n, int i)\n    {\n        for (int j = i + 1; j < n; ++j)\n        {\n            double distance = sqrt(power(dp[i].first.first - dp[j].first.first, 2) +\n                                   power(dp[i].first.second - dp[j].first.second, 2));\n            int radius_sum = dp[i].second + dp[j].second;\n            if (radius_sum >= distance)\n            {\n                adj[i].push_back(j);\n                adj[j].push_back(i);\n            }\n        }\n    }\n    void ishuuu(int n, int i, int X, int Y)\n    {\n        if (dp[i].first.first <= dp[i].second)\n        {\n            adj[n].push_back(i);\n            adj[i].push_back(n);\n        }\n        if (X - dp[i].first.first <= dp[i].second)\n        {\n            adj[n + 2].push_back(i);\n            adj[i].push_back(n + 2);\n        }\n        if (dp[i].first.second <= dp[i].second)\n        {\n            adj[n + 1].push_back(i);\n            adj[i].push_back(n + 1);\n        }\n        if (Y - dp[i].first.second <= dp[i].second)\n        {\n            adj[n + 3].push_back(i);\n            adj[i].push_back(n + 3);\n        }\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>> &a)\n    {\n        int n = sz(a);\n        dp.resize(n + 1);\n        adj.resize(n + 10);\n\n        loop(i, 0, n)\n        {\n            dp[i].first.first = a[i][0];\n            dp[i].first.second = a[i][1];\n            dp[i].second = a[i][2];\n        }\n\n        loop(i, 0, n)\n        {\n            ishuuu(n, i, X, Y);\n            ishu(n, i);\n        }\n\n        int ans = 0;\n\n        ans = max(ans, dffs(n, n + 1, n + 2, n + 4));\n        ans = max(ans, dffs(n + 3, n + 2, n + 1, n + 4));\n\n        if (ans)\n            return 0;\n        return 1;\n    }\n\nprivate:\n    int dffs(int start, int target1, int target2, int nodes)\n    {\n        queue<int> q;\n        vector<int> visited(nodes + 4, 0);\n        q.push(start);\n        visited[start] = 1;\n\n        while (!q.empty())\n        {\n            int u = q.front();\n            q.pop();\n            for (int v : adj[u])\n            {\n                if (visited[v])\n                    continue;\n                else\n                {\n                    q.push(v);\n                    visited[v] = 1;\n                }\n            }\n        }\n        return visited[target1] || visited[target2];\n    }\n};\n",
    "submit_ts": "1722137116",
    "subm_id": "1335754631"
}