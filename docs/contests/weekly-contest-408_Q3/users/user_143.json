{
    "username": "sunil1906",
    "submission": "class Solution {\npublic:\n    vector<int> pref;\n    \n    void pref_com(string &s){\n        int n = s.size(), i;\n        pref.resize(n+1, 0);\n        for(i=0;i<n;i++){\n            pref[i+1] = (pref[i] + (s[i] == '1'));\n        }\n    }\n    \n    int range_sum(int l, int r){\n        return pref[r+1] - pref[l];\n    }\n    \n    int numberOfSubstrings(string s) {\n        int i, j, n = s.size(), ans = 0, bef[n], aft[n], cont = 0, max_pos = sqrt(n) + 1, cnt, l, r, ones, zeros, left_ones, right_ones, need;\n        for(i=0;i<n;i++)    bef[i] = aft[i] = 0;\n        vector<int> v;\n        \n        pref_com(s);\n        \n        for(i=0;i<n;i++)    if(s[i] == '0') v.push_back(i);\n        \n        // for all substrings of all ones\n        cont = 0;\n        for(i=0;i<n;i++){\n            if(s[i] == '1') cont++;\n            else{\n                ans += (cont * (cont + 1)) / 2;\n                cont = 0;\n            }\n        }\n        ans += (cont * (cont + 1)) / 2;\n        \n        // cout<<\"All ones: \"<<ans<<\"\\n\";\n        \n        cont = 0;\n        for(i=0;i<n;i++){\n            if(s[i] == '1') cont++;\n            else{\n                bef[i] = cont;\n                cont = 0;\n            }\n        }\n        \n        cont = 0;\n        for(i=n-1;i>=0;i--){\n            if(s[i] == '1') cont++;\n            else{\n                aft[i] = cont;\n                cont = 0;\n            }\n        }\n        \n        for(cnt=1;cnt<=max_pos;cnt++){\n            for(i=cnt-1;i<v.size();i++){\n                l = v[i - (cnt - 1)]; r = v[i];\n                ones = range_sum(l, r); zeros = (r - l + 1) - ones;\n                need = max(0, zeros * zeros - ones);\n                left_ones = bef[l]; right_ones = aft[r];\n                if(left_ones + right_ones < need)   continue;\n                // cout<<\"From \"<<l<<\" to \"<<r<<\"\\n\";\n                for(j=0;j<=left_ones;j++){\n                    if(right_ones - (need - j) < 0)   continue;\n                    ans += (right_ones + 1 - max(0, need - j));\n                    // cout<<\"Adding (\"<<j<<\",\"<<(right_ones + 1 - max(0, need - j))<<\")\\n\";\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722137220",
    "subm_id": "1335757589"
}