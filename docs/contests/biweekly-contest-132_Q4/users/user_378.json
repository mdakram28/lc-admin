{
    "username": "simpsimp",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        maximum = 1\n        \n        dp = [[0] * (k + 1) for _ in range(len(nums))]\n        \n        current = []\n        \n        for i in range(len(nums)):\n            dp[i][0] = 1\n            current.append(1)\n        \n        \n        \n        for j in range(0, k + 1):\n            \n            prev = {}\n            \n            nextcurrent = []\n            curmax = 1\n            \n            for i in range(len(nums)):\n                if j > 0:\n                    dp[i][j] = dp[i][j-1]\n                                \n                if nums[i] in prev:\n                    dp[i][j] = max(dp[i][j], 1 + prev[nums[i]])\n                \n                if i - 1 >= 0 and j > 0 and j <= k:\n                    dp[i][j] = max(dp[i][j], 1 + current[i-1])\n                \n                if nums[i] in prev:\n                    prev[nums[i]] = max(dp[i][j], 1 + prev[nums[i]])\n                else:\n                    prev[nums[i]] = dp[i][j]\n                \n                curmax = max(curmax, dp[i][j])\n                \n                if i > 0:\n                    nextcurrent.append(curmax)\n                else:\n                    nextcurrent.append(curmax)\n                \n                maximum = max(maximum, dp[i][j])\n            \n            for i in range(1, len(nums)):\n                current[i] = max(current[i], nextcurrent[i])\n                \n        \n        return maximum",
    "submit_ts": 1717861993.0
}