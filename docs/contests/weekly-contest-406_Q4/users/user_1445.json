{
    "username": "kaowei1996",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        int horizontalSegments = 1, verticalSegments = 1;\n        ll totalCost = 0;\n        int hIndex = 0, vIndex = 0;\n\n        \n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += horizontalCut[hIndex] * verticalSegments;\n                horizontalSegments++;\n                hIndex++;\n            } else {\n                totalCost += verticalCut[vIndex] * horizontalSegments;\n                verticalSegments++;\n                vIndex++;\n            }\n        }\n\n        while (hIndex < horizontalCut.size()) {\n            totalCost += horizontalCut[hIndex] * verticalSegments;\n            hIndex++;\n        }\n\n        \n        while (vIndex < verticalCut.size()) {\n            totalCost += verticalCut[vIndex] * horizontalSegments;\n            vIndex++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925961",
    "subm_id": "1320271671"
}