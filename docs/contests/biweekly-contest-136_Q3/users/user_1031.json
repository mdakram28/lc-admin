{
    "username": "nniiiicccssssppppyyy",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        \n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        int ones = 0;\n        int pair2 = 0;\n        \n        for(int i=0; i<n; i++){\n            for(int j=0; j<m; j++){\n                \n                set<pair<int,int>> st;\n                st.insert({ i, j });\n                st.insert({ n-i-1, j });\n                st.insert({ n-i-1, m-j-1 });\n                st.insert({ i, m-j-1 });\n                \n                int cnt1 = 0;\n                int cnt0 = 0;\n                for(auto [x, y]: st){\n                    cnt1 += grid[x][y] == 1;\n                    cnt0 += grid[x][y] == 0;\n                }\n                \n                if(st.size() == 2){\n                    if(cnt1 == cnt0) pair2++;    \n                }\n                \n                if(cnt1 == cnt0){\n                    ans += cnt1;\n                    for(auto [x, y]: st){\n                        if(grid[x][y] == 1) grid[x][y] = 0; \n                    }\n                }\n                else if(cnt1 > cnt0){\n                    ans += cnt0;\n                    for(auto [x, y]: st){\n                        if(grid[x][y] == 0) grid[x][y] = 1; \n                    }\n                }else{\n                    ans += cnt1;\n                    for(auto [x, y]: st){\n                        if(grid[x][y] == 1) grid[x][y] = 0; \n                    }\n                }\n            }\n        }\n        int cntones = 0;\n        for(auto i: grid){\n            for(auto j: i){\n                cntones += (j==1);\n            }\n        }\n        if(cntones % 2 == 1){\n            cntones -= 1;\n            ans++;\n        }\n        if(cntones > 0 && cntones%2 == 0 and cntones%4 != 0){\n            if(pair2 == 0) ans += 2;\n            cntones -= 2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698331",
    "subm_id": "1343177213"
}