{
    "username": "saikat93ify",
    "submission": "class Solution {\npublic:\n    int calculate_flips(int c1, int c2, int c3, int c4)\n    {\n        map <int, int> frequency; \n        frequency[c1]++; \n        frequency[c2]++; \n        frequency[c3]++; \n        frequency[c4]++;\n\n        return (4 - max(frequency[0], frequency[1]));\n    }\n\n    int minFlips(vector<vector<int>>& grid) \n    {\n        int flips = 0;\n        int rows = grid.size(), columns = grid[0].size();\n        for(int r1 = 0, r2 = rows - 1; r1 < r2; r1++, r2--) \n        {\n            for(int c1 = 0, c2 = columns - 1; c1 < c2; c1++, c2--)\n            {\n                //cout << \"R1 = \" << r1 << \" C1 = \" << c1 << \" R2 = \" << r2 << \" C2 = \" << c2 << \"\\n\";\n                flips += calculate_flips(grid[r1][c1], grid[r1][c2], grid[r2][c2], grid[r2][c1]);\n            }\n        } \n\n        //cout << \"Square Flips = \" << flips << \"\\n\";\n\n        int middle_one_pairs = 0;\n        int middle_flips = 0;\n        if(rows%2 == 1)\n        {\n            int middle_row = rows/2;\n            for(int c1 = 0, c2 = columns - 1; c1 < c2; c1++, c2--)\n            {\n                if(grid[middle_row][c1] != grid[middle_row][c2])\n                {\n                    middle_flips++;\n                    //cout << \"Flipping in middle row\\n\";\n                }\n                else if(grid[middle_row][c1] == 1 && grid[middle_row][c2] == 1)\n                {\n                    middle_one_pairs++;\n                }\n            }\n        }\n\n        if(columns%2 == 1)\n        {\n            int middle_column = columns/2;\n            for(int r1 = 0, r2 = rows - 1; r1 < r2; r1++, r2--)\n            {\n                if(grid[r1][middle_column] != grid[r2][middle_column])\n                {\n                    middle_flips++;\n                }\n                else if(grid[r1][middle_column] == 1)\n                {\n                    middle_one_pairs++;\n                }\n            }\n        }\n\n        flips += middle_flips;\n\n        if(rows%2 == 1 && columns%2 == 1)\n        {\n            flips += (grid[rows/2][columns/2] == 1);\n        }\n\n        if(middle_one_pairs%2 == 1)\n        {\n            flips += (middle_flips > 0 ? 0 : 2);\n        }\n\n        return flips;\n    }\n};",
    "submit_ts": "1722699732",
    "subm_id": "1343220615"
}