{
    "username": "tsreaper",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), ans = 0;\n\n        for (int i = 0, ii = n - 1; i < ii; i++, ii--) for (int j = 0, jj = m - 1; j < jj; j++, jj--) {\n            int sm = grid[i][j] + grid[i][jj] + grid[ii][j] + grid[ii][jj];\n            ans += min(sm, 4 - sm);\n        }\n\n        int one = 0, diff = 0;\n        if (n & 1) {\n            int i = n / 2;\n            for (int j = 0, jj = m - 1; j < jj; j++, jj--) {\n                if (grid[i][j] == grid[i][jj] && grid[i][j] == 1) one++;\n                else if (grid[i][j] != grid[i][jj]) diff++;\n            }\n        }\n        if (m & 1) {\n            int j = m / 2;\n            for (int i = 0, ii = n - 1; i < ii; i++, ii--) {\n                if (grid[i][j] == grid[ii][j] && grid[i][j] == 1) one++;\n                else if (grid[i][j] != grid[ii][j]) diff++;\n            }\n        }\n        ans += diff;\n        if (diff == 0 && one % 2 == 1) ans += 2;\n\n        if (n % 2 == 1 && m % 2 == 1 && grid[n / 2][m / 2] == 1) ans++;\n\n        return ans;\n    }\n};",
    "submit_ts": "1722696281",
    "subm_id": "552260061"
}