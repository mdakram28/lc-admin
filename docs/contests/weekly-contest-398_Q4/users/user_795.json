{
    "username": "noobcoderr",
    "submission": "class Solution {\npublic:\n    map<vector<int>, int> dp;\n    int K;\n    int dfs(int index, int jump, bool down){\n        vector<int> key = {index, jump, down};\n        if(dp.count(key)) return dp[key];\n        if(index==K) return 1;\n        if(index<0 || index>K+1) return 0;\n        int res=dfs(index+(int)pow(2, jump), jump+1, false);\n        if(!down){\n            res += dfs(index-1, jump, true);\n        }\n        dp[key] = res;\n        return dp[key];\n    }\n    int waysToReachStair(int k) {\n        if(k==0){\n            return 2;\n        }\n        if(k==1){\n            return 4;\n        }\n        if(k==2){\n            return 4;\n        }\n        if(k==3){\n            \n        }\n        K=k;\n        return dfs(1, 0, false);\n    }\n};",
    "submit_ts": "1716088660",
    "subm_id": "1261820371"
}