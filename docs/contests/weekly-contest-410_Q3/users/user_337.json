{
    "username": "ibttf",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        n = len(nums)\n        MOD = 10**9 + 7\n        \n        # dp[i][j] represents the number of ways to split nums[i] st first part is j and meets conditions\n        dp = [[0] * (nums[i] + 1) for i in range(n)]\n        # for line in dp:print (line)\n\n        for j in range(nums[0] + 1): #turn the first column into all 1's. theoreitcally you can pick any of these\n            dp[0][j] = 1\n\n        for row in range(1,len(dp)):\n            for col in range(len(dp[0])):\n                prev=dp[row-1]\n                for k in range(len(prev)):\n                    if nums[row-1]-k<=nums[row]-col and col<=k:\n                        dp[row][col]+=dp[row-1][k]\n\n                    \n        return sum(dp[-1])%MOD\n",
    "submit_ts": "1723346156",
    "subm_id": "1351571479"
}