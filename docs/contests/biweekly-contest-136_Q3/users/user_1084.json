{
    "username": "Ark_e",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n\n        int res = 0;\n        if (m % 2 == 1 && n % 2 == 1 && grid[m / 2][n / 2] == 1) {\n            ++res;\n            grid[m / 2][n / 2] = 0;\n        }\n        for (int i = 0 ; i < m / 2; ++i) {\n            for (int j = 0; j < n / 2; ++j) {\n                int ones = 0;\n                if (grid[i][j] == 1) {\n                    ++ones;\n                }\n                if (grid[i][n - 1 - j] == 1) {\n                    ++ones;\n                }\n                if (grid[m-1-i][n-1-j] == 1) {\n                    ++ones;\n                }\n                if (grid[m-1-i][j] == 1) {\n                    ++ones;\n                }\n                if (ones > 2) {\n                    res += 4 - ones;\n                } else {\n                    res += ones;\n                }\n            }\n        }\n\n        int numPairs = 0;\n        int singular = 0;\n        if (m == 1) {\n            for (int j = 0; j < n / 2; ++j) {\n                if (grid[0][j] == 1 && grid[0][n - 1 - j] == 1) {\n                    ++numPairs;\n                } else if (grid[0][j] == 1 || grid[0][n - 1 - j] == 1) {\n                    ++singular;\n                }\n            }    \n        } else if (n == 1) {\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[i][0] == 1 && grid[m - 1 - i][0] == 1) {\n                    ++numPairs;\n                } else if (grid[i][0]  == 1 || grid[m - 1 - i][0] == 1) {\n                    ++singular;\n                }\n            }               \n        }  else if (m % 2 == 1 && n % 2 == 0) {\n            for (int j = 0; j < n / 2; ++j) {\n                if (grid[m / 2][j] == 1 && grid[m / 2][n - 1 - j] == 1) {\n                    ++numPairs;\n                } else if (grid[m / 2][j] == 1 || grid[m / 2][n - 1 - j] == 1) {\n                    ++singular;\n                }\n            }\n        } else if (m % 2 == 0 && n % 2 == 1) {\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[i][n / 2] == 1 && grid[m - 1 - i][n / 2] == 1) {\n                    ++numPairs;\n                } else if (grid[i][n / 2]  == 1 || grid[m - 1 - i][n / 2] == 1) {\n                    ++singular;\n                }\n            }    \n        } else if (m % 2 == 1 && n % 2 == 1) {\n            for (int j = 0; j < n / 2; ++j) {\n                if (grid[m / 2][j] == 1 && grid[m / 2][n - 1 - j] == 1) {\n                    ++numPairs;\n                } else if (grid[m / 2][j] == 1 || grid[m / 2][n - 1 - j] == 1) {\n                    ++singular;\n                }\n            }\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[i][n / 2] == 1 && grid[m - 1 - i][n / 2] == 1) {\n                    ++numPairs;\n                } else if (grid[i][n / 2]  == 1 || grid[m - 1 - i][n / 2] == 1) {\n                    ++singular;\n                }\n            }        \n        } \n\n        if (numPairs % 2 == 0) {\n            res += singular;\n        } else {\n            if (singular > 0) {\n\n                res += singular;\n            } else {\n                res += (singular + 2);\n            }\n        }\n        \n        return res;\n    }\n}",
    "submit_ts": "1722698160",
    "subm_id": "1343171697"
}