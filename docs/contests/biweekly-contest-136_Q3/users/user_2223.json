{
    "username": "2000rating",
    "submission": "class Solution { \npublic: \n    int minFlips(vector<vector<int>>& grid) { \n        int R = grid.size(), C = grid[0].size(), res = 0;\n        if(R & 1 && C & 1)\n            if (grid[R / 2][C / 2] == 1)\n                res++;\n        vector<int> move(3, 0);\n        if(C & 1){\n            int a = 0;\n            int b = R - 1; \n            while (a < b) { \n                int sm = grid[a][C / 2] + grid[b][C / 2]; \n                move[sm] += 1; \n                a++;\n                b--;\n            } \n        } \n        if (R % 2 == 1) { \n            int a = 0;\n            int b = C - 1; \n            while (a < b) { \n                int sm = grid[R / 2][a] + grid[R / 2][b]; \n                move[sm] += 1; \n                a++;\n                b--;\n            }\n        }\n        if(move[2] & 1)\n            res += (move[1] > 0 ? move[1] : 2);\n        else\n            res += move[1]; \n        for (int i = 0; i < R / 2; i++) { \n            for (int j = 0; j < C / 2; j++) { \n                int tot = grid[i][j] + grid[R - 1 - i][j] + grid[i][C - 1 - j] + grid[R - 1 - i][C - 1 - j];\n                if (tot != 0 && tot != 4) { \n                    res += min(tot, 4 - tot); \n                } \n            } \n        }\n        return res;\n    } \n};",
    "submit_ts": "1722700331",
    "subm_id": "1343238649"
}