{
    "username": "n00bl3t",
    "submission": "class Solution {\npublic:\n\n    bool check(int y, int x) {\n        while (x) {\n            if ((x & 1))\n                if (!(y & 1)) return 0;\n            x >>= 1, y >>= 1;\n        }\n        return 1;\n    }\n\n    long long countSubarrays(vector<int>& nums, int K) {\n        long long ans = 0, x = 0;\n        vector<int> v(31);\n\n        for (int i = 0; i < 31; i++)\n            if (!(K & (1 << i)))\n                v[i] = 1, x++;\n\n        for (int s = 0; s < nums.size(); s++) {\n            int e = s;\n            while (e < nums.size() && check(nums[e], K)) e++;\n            int i = s, j = s, cnt = 0;\n            vector<int> cur(31);\n            while (i < e) {\n                while (j < e && cnt < x) {\n                    for (int k = 0; k < 31; k++)\n                        if (!(nums[j] & (1 << k)) && v[k]) {\n                            if (!cur[k]) cnt++;\n                            cur[k]++;\n                        }\n                    j++;\n                }\n                // cout << j << \" \" << e;\n                if (cnt == x)\n                    ans += e - j + 1;\n                for (int k = 0; k < 31; k++)\n                    if (!(nums[i] & (1 << k)) && v[k]) {\n                        if (1 == cur[k]) cnt--;\n                        cur[k]--;\n                    }\n                i++;\n            }\n            s = max(s, e - 1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280886",
    "subm_id": "1311805517"
}