{
    "username": "singhawijeet",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n       long long int totalCost = 0;\n       long long int hCuts = 0, vCuts = 0;\n\n       \n        long long int i = 0, j = 0;\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += horizontalCut[i] * (vCuts + 1);\n                hCuts++;\n                i++;\n            } else {\n                totalCost += verticalCut[j] * (hCuts + 1);\n                vCuts++;\n                j++;\n            }\n        }\n\n     \n        while (i < horizontalCut.size()) {\n            totalCost += horizontalCut[i] * (vCuts + 1);\n            hCuts++;\n            i++;\n        }\n\n     \n        while (j < verticalCut.size()) {\n            totalCost += verticalCut[j] * (hCuts + 1);\n            vCuts++;\n            j++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926136",
    "subm_id": "1320277074"
}