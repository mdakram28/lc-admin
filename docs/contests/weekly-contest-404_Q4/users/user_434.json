{
    "username": "shubhama21",
    "submission": "class Solution {\npublic:\n\n    int diam(vector<vector<int>> &g, int n) {\n        vector<int> dis(n, 1e7);\n        dis[0] = 0;\n        int maxind = 0, md = 0;\n        queue<int> q;\n        q.push(0);\n        while(!q.empty()) {\n            int y = q.front();\n            q.pop();\n            int d = dis[y];\n            if(d > md) {\n                md = d;\n                maxind = y;\n            }\n            for(auto x: g[y]) {\n                if(dis[x] > dis[y]+1) {\n                    dis[x] = dis[y]+1;\n                    q.push(x);\n                }\n            }\n        }\n        vector<int> d(n, 1e7);\n        q.push(maxind);\n        d[maxind] = 0;\n        int sz = 0;\n        while(!q.empty()) {\n            int y = q.front();\n            q.pop();\n            int d1 = d[y];\n            sz = max(sz, d1);\n            for(auto x: g[y]) {\n                if(d[x] > d[y]+1) {\n                    d[x] = d[y]+1;\n                    q.push(x);\n                }\n            }\n        }\n        return sz;\n\n\n    }\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size()+1;\n        int m = edges2.size()+1;\n        vector<vector<int>> g1(n), g2(m);\n        for(auto y: edges1) {\n            g1[y[0]].push_back(y[1]);\n            g1[y[1]].push_back(y[0]);\n        }\n        for(auto y: edges2) {\n            g2[y[0]].push_back(y[1]);\n            g2[y[1]].push_back(y[0]);\n        }\n        int d1 = diam(g1, n);\n        int d2 = diam(g2, m);\n        int x = (d1/2+d1%2)+(d2/2+d2%2)+1;\n        x = max(x, d1);\n        return max(x, d2);\n    }\n};",
    "submit_ts": "1719717955",
    "subm_id": "1304405023"
}