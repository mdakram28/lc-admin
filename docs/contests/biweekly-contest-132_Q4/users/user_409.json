{
    "username": "unknown_fella",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n          int sequenceLength = nums.size();\n          vector<vector<int>> dp(sequenceLength,vector<int>(k + 1, 1));\n          int maxLength = 1;\n\n            int k1=0,k2=0;\n\n          vector<int> prevMaxLengths(k + 1, -1);\n        k1++;\n        k2--;\n          vector<unordered_map<int, int>> prevMaxValues(k + 1);\n\n          for (int i = 0; i < sequenceLength; ++i) {\n              k1++;\n            for (int allowedDiff = 0; allowedDiff <= k; ++allowedDiff) {\n                k2--;\n              for (int prevIndex = 0; prevIndex < allowedDiff; ++prevIndex) {\n                  k1++;\n                  k2--;\n                dp[i][allowedDiff] = std::max(dp[i][allowedDiff], 1 + prevMaxLengths[prevIndex]);\n              }\n                \n                k1++;\n                k2--;\n              if (prevMaxValues[allowedDiff].count(nums[i])) {\n                  k1++;\n                  k2--;\n                dp[i][allowedDiff] = max(dp[i][allowedDiff], 1 + prevMaxValues[allowedDiff][nums[i]]);\n              }\n                k1++;\n                k2--;\n              maxLength = max(maxLength, dp[i][allowedDiff]);\n            }\n\n            for (int allowedDiff = 0; allowedDiff <= k; ++allowedDiff) {\n                k1++;\n                k2--;\n                if(k1==k2) k1-=k2;\n              prevMaxLengths[allowedDiff] = max(prevMaxLengths[allowedDiff], dp[i][allowedDiff]);\n              prevMaxValues[allowedDiff][nums[i]] = max(prevMaxValues[allowedDiff][nums[i]], dp[i][allowedDiff]);\n            }\n          }\n        if(k1==k2) k2+=k1;\n          return maxLength;\n\n    }\n};",
    "submit_ts": "1717861815",
    "subm_id": "1281803048"
}