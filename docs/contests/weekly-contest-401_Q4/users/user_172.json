{
    "username": "yaoyi92",
    "submission": "class Solution {\n  vector<int> uf;\n  void init(int n) {\n    uf.resize(n);\n    for (int i = 0; i < n; i++) {\n      uf[i] = i;\n    }\n  }\n  int find(int i) {\n    //cout << i << endl;\n    //cout << uf[i] << \" \" << i << endl;\n    if (uf[i] == i) return i;\n    else {\n      int ufi = find(uf[i]);\n      uf[i] = ufi;\n      return ufi;\n    }\n  }\n  void merge(int i, int j) {\n    int ufi = find(i);\n    int ufj = find(j);\n    uf[ufj] = ufi;\n  }\n  vector<int> uf2;\n  void init2(int n) {\n    uf2.resize(n);\n    for (int i = 0; i < n; i++) {\n      uf2[i] = i;\n    }\n  }\n  int find2(int i) {\n    //cout << i << endl;\n    //cout << uf[i] << \" \" << i << endl;\n    if (uf2[i] == i) return i;\n    else {\n      int ufi = find(uf2[i]);\n      uf2[i] = ufi;\n      return ufi;\n    }\n  }\n  void merge2(int i, int j) {\n    int ufi = find2(i);\n    int ufj = find2(j);\n    uf2[ufj] = ufi;\n  }\npublic:\n    int maxTotalReward(vector<int>& rewardValues) {\n      //sort(rewardValues.begin(), rewardValues.end());\n      set<int> tmp(rewardValues.begin(), rewardValues.end());\n      vector<int> rewardValues1(tmp.begin(), tmp.end());\n      int n = (*rewardValues1.rbegin())*2+1;\n      init(n);\n      //init2(n);\n      vector<bool> found(n, false);\n      found[0] = true;\n      for (int r: rewardValues1) {\n        for (int k = min(2*r-1,n-1); k >= r; k--) {\n          //cout << r+rr << endl;\n          //cout << \"k \" << k << endl;\n          //while (k != find(k) || (k-r) != find2(k-r)) {\n          //  k = find(k);\n          //  k = find2(k-r)+r;\n          //}\n          k = find(k);\n          if (k < r) break;\n          if (found[k-r]) {\n            found[k] = true;\n            //cout <<\" k :\" << k << endl;\n            if (k > 0) merge(k-1, k);\n          }\n        }\n      }\n      for (int v = n-1; v >= 0; v--) {\n        if (found[v]) return v;\n      }\n      return -1;\n    }\n\n};",
    "submit_ts": 1717904441.0
}