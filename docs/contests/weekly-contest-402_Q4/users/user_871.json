{
    "username": "xish",
    "submission": "class Solution {\n\tint totalLen;\n\tNumArray numArray;\n\tpublic List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n\t\ttotalLen = nums.length;\n\n\t\tList<Integer> ansList = new java.util.ArrayList<>();\n\t\tnumArray = new NumArray();\n\t\tint tCnt[] = new int[nums.length];\n\n\t\tfor (int i = 1 ; i < tCnt.length - 1 ; i++) {\n\t\t\tif ((nums[i - 1] < nums[i]) && (nums[i] > nums[i + 1])) {\n\t\t\t\ttCnt[i]++;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0 ; i < tCnt.length ; i++) {\n\t\t\tnumArray.update(i, tCnt[i]);\n\t\t}\n\n\t\tfor (int i = 0 ; i < queries.length ; i++) {\n\t\t\tint cmd = queries[i][0];\n\t\t\tint u = queries[i][1];\n\t\t\tint v = queries[i][2];\n\n\t\t\tif (cmd == 1) {\n\t\t\t\tint result = numArray.sumRange(u + 1, v - 1);\n\t\t\t\tansList.add(result);\n\t\t\t} else if (cmd == 2) {\n\t\t\t\tnums[u] = v;\n\t\t\t\tdoCheck(nums, tCnt, u);\n\t\t\t\tdoCheck(nums, tCnt, u - 1);\n\t\t\t\tdoCheck(nums, tCnt, u + 1);\n\t\t\t}\n\t\t}\n\t\treturn ansList;\n\t}\n\n\tprivate void doCheck(int[] nums, int[] tCnt, int u) {\n\t\tif (inBound(u - 1) && inBound(u + 1)) {\n\t\t\tif ((nums[u - 1] < nums[u]) && (nums[u] > nums[u + 1])) {\n\t\t\t\ttCnt[u] = 1;\n\t\t\t\tnumArray.update(u, 1);\n\t\t\t} else {\n\t\t\t\ttCnt[u] = 0;\n\t\t\t\tnumArray.update(u, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprivate boolean inBound(int pos) {\n\t\treturn (0 <= pos) && (pos < totalLen);\n\t}\n\n\n\tclass NumArray {\n\t\tint bit[];\n\t\tint data[];\n\n\t\tint lowBit(int x){\n\t\t\treturn x & (-x);\n\t\t}\n\n\t\tint sum(int idx){ // logn\n\t\t\t// \u00c7\u00b0idx\u00b8\u00f6\u00ca\u00fd\u00b5\u00c4\u00ba\u00cd\n\t\t\tint res = 0;\n\t\t\twhile(idx > 0){\n\t\t\t\tres += bit[idx];\n\t\t\t\tidx -= lowBit(idx);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\tpublic NumArray() {\n\t\t\tbit = new int[500010];\n\t\t\tdata = new int[500010];\n\t\t\tfor (int i = 0 ; i < 500010 ; i++) {\n\t\t\t\tbit[i] = 0;\n\t\t\t\tdata[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tvoid update(int i, int val) { //logn\n\t\t\tint diff = val - data[i];\n\t\t\tdata[i] = val;\n\t\t\ti += 1;\n\t\t\twhile(i < 500010){\n\t\t\t\tbit[i] += diff;\n\t\t\t\ti += lowBit(i);\n\t\t\t}\n\t\t}\n\n\t\tint sumRange(int i, int j) { //logn\n\t\t\tif (i > j) return 0;\n\t\t\treturn sum(j+1) - sum(i);\n\t\t}\n\t};\n}",
    "submit_ts": 1718508086.0
}