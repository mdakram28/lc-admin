{
    "username": "eh-",
    "submission": "class Solution {\n    struct Trie{\n        vector<Trie*> next;\n        int cost = 0;\n        Trie(){\n            next = vector<Trie*>(26, nullptr);\n        }\n    };\n    \n    void add(string& s, int cost, Trie* t){\n        Trie* c = t;\n        for(int i = 0; i < s.size(); i++){\n            int currLetter = s[i] - 'a';\n            if(c->next[currLetter] == nullptr){\n                c->next[currLetter] = new Trie();\n            }\n            c = c->next[currLetter];\n        }\n        if(c->cost == 0 || c->cost > cost){\n            c->cost = cost;\n        }\n        \n    }\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie* t = new Trie();\n        for(int i = 0; i < words.size(); i++){\n            add(words[i], costs[i], t);\n        }\n        vector<int> dp(target.size() + 1);\n        int res = recur(dp, 0, target, t);\n        return res == 0 ? -1 : res;\n    }\n    \n    int recur(vector<int>& dp, int currIndex, string& target, Trie* t){\n        if(currIndex == target.size()) return 0;\n        if(dp[currIndex] != 0) return dp[currIndex];\n        int currLow = -1;\n        Trie* c = t;\n        int i = currIndex;\n        while(i < target.size()){\n            int currLetter = target[i] - 'a';\n            if(c->next[currLetter] == nullptr){\n                break;\n            }\n            c = c->next[currLetter];\n            if(c->cost != 0){\n                int currCost = recur(dp, i + 1, target, t);\n                if(currCost != -1){\n                    if(currLow == -1 || currLow > (c->cost + currCost)){\n                        currLow = c->cost + currCost;\n                    }\n                }\n            }\n            i++;\n        }\n        if(dp[currIndex] == 0 || dp[currIndex] > currLow){\n            dp[currIndex] = currLow;\n        }\n        \n        return currLow;\n    }\n};",
    "submit_ts": "1720323771",
    "subm_id": "1312383662"
}