{
    "username": "ReinerBraun71",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int> d(n, 0);\n        set<int> p;\n        fun1(n, d, p);\n        \n        vector<int> r;\n        int i = 0;\n        while (i < q.size()) {\n            int l = q[i][0];\n            int rt = q[i][1];\n\n            fun2(p, l, rt, r);\n            ++i;\n        }\n\n        return r;\n    }\n\nprivate:\n    void fun1(int n, vector<int>& d, set<int>& p) {\n        int i = 1;\n        while (i < n) {\n            d[i] = d[i - 1] + 1;\n            ++i;\n        }\n\n        i = 0;\n        while (i < n) {\n            p.insert(i);\n            ++i;\n        }\n    }\n\n    void fun2(set<int>& p, int l, int rt, vector<int>& r) {\n        auto lb = p.lower_bound(l + 1);\n        auto ub = p.lower_bound(rt);\n\n        p.erase(lb, ub);\n\n        r.push_back(p.size() - 1);\n    }\n};",
    "submit_ts": "1722742997",
    "subm_id": "1343781944"
}