{
    "username": "elizafallskrly",
    "submission": "const int N = 1e5 + 7;//\u5e8f\u5217\u957f\u5ea6\nconst int M = N << 2;//\u7ebf\u6bb5\u68114 * n\u7a7a\u95f4\nstruct SegT {\n\tint l, r;\n\tint sum;\n}tr[M];\nvoid pushup(SegT& u, SegT& l, SegT& r) {\n\tu.sum = l.sum + r.sum;\n}\ninline void build(int u, int l, int r)\n{\n\ttr[u] = { l,r,0 };\n\tif (l == r) return;\n\tint mid = l + r >> 1;\n\tbuild(u << 1, l, mid); build(u << 1 | 1, mid + 1, r);\n\tpushup(tr[u], tr[u << 1], tr[u << 1 | 1]);\n}\ninline void modify(int u, int l, int r, int c)\n{\n\tif (tr[u].l >= l && tr[u].r <= r)\n\t{\n\t\ttr[u].sum = c;\n\t\treturn;\n\t}\n\tint mid = tr[u].l + tr[u].r >> 1;\n\tif (l <= mid) modify(u << 1, l, r, c);\n\tif (r > mid) modify(u << 1 | 1, l, r, c);\n\tpushup(tr[u], tr[u << 1], tr[u << 1 | 1]);\n}\ninline long long query(int u, int l, int r)\n{\n\tif (tr[u].l >= l && tr[u].r <= r) return tr[u].sum;\n\tint mid = tr[u].l + tr[u].r >> 1;\n\tlong long tmp = 0;\n\tif (l <= mid)tmp += query(u << 1, l, r);\n\tif (r > mid) tmp += query(u << 1 | 1, l, r);\n\treturn tmp;\n}\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& q) {\n        vector<int> ans;\n        int n = nums.size();\n        build(1, 1, n);\n        for (int i = 1; i <= n - 2; i ++ ) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) modify(1, i, i, 1);\n        }\n        for (auto e:q) {\n            int op, l, r;\n            op = e[0], l = e[1], r = e[2];\n            if (op == 1) {\n                if (l + 1 > r - 1) ans.push_back(0);\n                else ans.push_back(query(1, l + 1, r - 1));\n            }\n            else {\n                int s = 0, s1 = 0, s2 = 0;\n                nums[l] = r;\n                if (l != 0) s1 += nums[l] > nums[l - 1];\n                if (l != n - 1) s2 += nums[l] > nums[l + 1];\n                s = s1 + s2;\n                if (l != 0 && l != n - 1) {\n                    if (s == 2) modify(1, l, l, 1);\n                    else modify(1, l, l, 0);\n                }\n                if (l - 2 >= 0) {\n                    s1 = nums[l - 1] > nums[l];\n                    int s3 = nums[l - 1] > nums[l - 2];\n                    s = s1 + s3;\n                    if (s == 2) modify(1, l - 1, l - 1, 1);\n                    else modify(1, l - 1, l - 1, 0);\n                }\n                if (l + 2 <= n - 1) {\n                    s1 = nums[l + 1] > nums[l];\n                    int s3 = nums[l + 1] > nums[l + 2];\n                    s = s1 + s3;\n                    if (s == 2) modify(1, l + 1, l + 1, 1);\n                    else modify(1, l + 1, l + 1, 0);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718507244",
    "subm_id": "539780137"
}