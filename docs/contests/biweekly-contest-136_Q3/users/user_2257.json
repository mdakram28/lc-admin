{
    "username": "himans_04",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int flips = 0;\n        vector<int>help(3, 0);\n        if (n % 2 == 1) {\n            int l= 0, r = m - 1;\n            while (l < r) {\n                int sum = grid[n / 2][l] + grid[n / 2][r];\n                help[sum]++;\n                l++;\n                r--;\n            }\n        }\n        if (m % 2 == 1) {\n            int t = 0, b = n - 1;\n            while (t < b) {\n                int sum = grid[t][m / 2] + grid[b][m / 2];\n                help[sum]++;\n                t++;\n                b--;\n            }\n        }\n\n        if (help[2] % 2 == 1) {\n            flips += help[1] > 0 ? help[1] : 2;\n        } else {\n            flips += help[1];\n        }\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int r=grid[i][j]+grid[n - 1 - i][j]+grid[i][m - 1 - j]+grid[n - 1 - i][m - 1 - j];\n                if (r!= 0 && r != 4) {\n                    flips += min(r, 4 - r);\n                }\n            }\n        }\n         if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                flips += 1;\n            }\n        }\n\n        return flips;\n    }\n};\n",
    "submit_ts": "1722700064",
    "subm_id": "1343230600"
}