{
    "username": "yanghedada",
    "submission": "class Solution(object):\n    def maximumValueSum(self, board):\n        \"\"\"\n        :type board: List[List[int]]\n        :rtype: int\n        \"\"\"\n        n = len(board)\n        m = len(board[0])\n        q = []\n        for i in range(n):\n            for j in range(m):\n                heapq.heappush(q,(-board[i][j],i,j))\n        res = float('-inf')\n        def pathback(q,path):\n            nonlocal res\n            # print(path)\n            if len(path) ==3:\n                res = max(sum([-v for v, _, _ in path]), res)\n                # print(path)\n                return\n            tmp = []\n            while q:\n                node = heapq.heappop(q)\n                tmp.append(node)\n                if len(path) ==0:\n                    if -node[0] * 3 <= res:\n                        # print(res, -node[0] * 3, 111)\n                        break\n                    path.append(node)\n                    pathback(q, path)\n                    path.pop(-1)\n                elif len(path) == 1:\n                    a = -node[0] * 2 -path[0][0]\n                    if  a <= res:\n                        # print(res, a, 222)\n                        break\n                    if node[1] != path[-1][1] and node[2] != path[-1][2]:\n                        path.append(node)\n                        pathback(q, path)\n                        path.pop(-1)\n                elif len(path) == 2:\n                    a = -node[0] - path[0][0] - path[1][0]\n                    if a <= res:\n                        # print(res, a, 333, q)\n                        break\n                    flag = True\n                    for _, i, j in path:\n                        if node[1] == i or node[2] == j:\n                            flag = False\n                            break\n                    if flag:\n                        path.append(node)\n                        pathback(q,path)\n                        path.pop(-1)\n            for node in tmp:\n                heapq.heappush(q,node)\n        pathback(q,[])\n        return res",
    "submit_ts": "1723909158",
    "subm_id": "556334797"
}