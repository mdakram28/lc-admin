{
    "username": "Abhi242",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int,int>> pq;\n        for(int i=0;i<(m-1);i++){\n            pq.push({horizontalCut[i],0});\n        }\n        for(int i=0;i<(n-1);i++){\n            pq.push({verticalCut[i],1});\n        }\n        int h=1;\n        int v=1;\n        long long ans=0;\n        while(!pq.empty()){\n            int c=pq.top().first;\n            int dir=pq.top().second;\n            pq.pop();\n            if(dir==0){\n                ans+=(long long)v*c;\n                h++;\n            }else{\n                ans+=(long long)h*c;\n                v++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926310",
    "subm_id": "1320282380"
}