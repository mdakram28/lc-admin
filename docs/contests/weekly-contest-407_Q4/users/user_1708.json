{
    "username": "woodzzZ",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = target[i] - nums[i];\n        }\n        int[] sta = new int[n + 1];\n        int index = 0;\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] == 0) {\n                continue;\n            }\n            int j = i;\n            while (j + 1 < n && ((a[j + 1] < 0 && a[i] < 0) || (a[j + 1] > 0 && a[i] > 0))) {\n                j++;\n            }\n            if (a[i] < 0) {\n                for (int k = i; k <= j; k++) {\n                    a[k] = -a[k];\n                }\n            }\n            index = 0;\n            for (int k = i; k <= j; k++) {\n                if (index == 0) {\n                    ans += a[k];\n                    sta[++index] = a[k];\n                    continue;\n                }\n                if (a[k] == sta[index]) {\n                    continue;\n                }\n                if (a[k] > sta[index]) {\n                    ans += a[k] - sta[index];\n                    sta[++index] = a[k];\n                } else {\n                    index = 0;\n                    sta[++index] = a[k];\n                }\n            }\n            i = j;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721533211",
    "subm_id": "548396596"
}