{
    "username": "PRIYANSHI SRIVASTAVA",
    "submission": "package main\n\nimport (\n\t\"math\"\n\t\"sort\"\n)\n\nfunc maximumValueSum(board [][]int) int64 {\n\tm := len(board)\n\tn := len(board[0])\n\tmaxSum := int64(math.MinInt64)\n\n\t// Create slices to store the best values and their columns\n\tbestValues := make([][3]int64, m)\n\tbestColumns := make([][3]int, m)\n\n\tfor i := 0; i < m; i++ {\n\t\tcolValues := make([][2]int64, n)\n\t\tfor j := 0; j < n; j++ {\n\t\t\tcolValues[j] = [2]int64{int64(board[i][j]), int64(j)}\n\t\t}\n\t\t// Sort the column values in descending order based on value\n\t\tsort.Slice(colValues, func(a, b int) bool {\n\t\t\treturn colValues[a][0] > colValues[b][0]\n\t\t})\n\n\t\tfor k := 0; k < 3 && k < len(colValues); k++ {\n\t\t\tbestValues[i][k] = colValues[k][0]\n\t\t\tbestColumns[i][k] = int(colValues[k][1])\n\t\t}\n\t}\n\n\t// Try all combinations of 3 different rows\n\tfor r1 := 0; r1 < m; r1++ {\n\t\tfor r2 := r1 + 1; r2 < m; r2++ {\n\t\t\tfor r3 := r2 + 1; r3 < m; r3++ {\n\t\t\t\tfor i := 0; i < 3; i++ {\n\t\t\t\t\tfor j := 0; j < 3; j++ {\n\t\t\t\t\t\tif bestColumns[r2][j] == bestColumns[r1][i] {\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor k := 0; k < 3; k++ {\n\t\t\t\t\t\t\tif bestColumns[r3][k] == bestColumns[r1][i] || bestColumns[r3][k] == bestColumns[r2][j] {\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentSum := bestValues[r1][i] + bestValues[r2][j] + bestValues[r3][k]\n\t\t\t\t\t\t\tif currentSum > maxSum {\n\t\t\t\t\t\t\t\tmaxSum = currentSum\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn maxSum\n}\n\n",
    "submit_ts": "1723910359",
    "subm_id": "1359227374"
}