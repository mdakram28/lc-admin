{
    "username": "awesome-bug",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int l = 0, r = 1e9;\n        while (l < r) {\n            int m = l + (r - l) / 2;\n            if (check(nums, k + m, k - m)) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\nprivate:\n    bool check(vector<int>& nums, int upper, int lower) {\n        int n = nums.size();\n        vector<int> count0(31, 0);\n        for (int l = 0, r = 0; r < n; r++) {\n            addValue(count0, nums[r]);\n            if (getValue(count0) > upper) continue;\n            while (getValue(count0) < lower) removeValue(count0, nums[l++]);\n            if (getValue(count0) <= upper) return true;\n        }\n        return false;\n    }\n    void addValue(vector<int>& count0, int num) {\n        for (int i = 0; i < 31; i++) {\n            if ((num & (1 << i)) == 0) count0[i]++;\n        }\n    }\n    void removeValue(vector<int>& count0, int num) {\n        for (int i = 0; i < 31; i++) {\n            if ((num & (1 << i)) == 0) count0[i]--;\n        }\n    }\n    int getValue(vector<int>& count0) {\n        int value = 0;\n        for (int i = 0; i < 31; i++) {\n            if (count0[i] == 0) value += (1 << i);\n        }\n        return value;\n    }\n    // int getUpper(vector<int>& nums, int k) {\n    //     int n = nums.size();\n    //     vector<int> count0(31, 0);\n    //     int upper = *max_element(nums.begin(), nums.end());\n    //     for (int l = 0, r = 0; r < n; r++) {\n    //         addValue(count0, nums[r]);\n    //         while (getValue(count0) < k) removeValue(count0, nums[l++]);\n    //         upper = min(upper, getValue(count0));\n    //     }\n    //     return upper;\n    // }\n};",
    "submit_ts": "1717299703",
    "subm_id": "1274821180"
}