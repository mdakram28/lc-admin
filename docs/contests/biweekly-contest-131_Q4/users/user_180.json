{
    "username": "Kinon",
    "submission": "class Solution {\npublic:\n    const int maxn = (1<<16);\n    int segtree[(1<<17)][4];\n    void build(){\n        for(int i=0; i<maxn; i++){\n            for(int j=0; j<4; j++) segtree[maxn+i][j] = 1;\n        }\n        for(int i=maxn-1; i>0; i--){\n            for(int j=0; j<4; j++) segtree[i][j] = segtree[i*2][j]*2;\n        }\n    }\n    void update(int pos){\n        //cout << \"update \" << pos << endl;\n        pos += maxn;\n        for(int i=1; i<=3; i++) segtree[pos][i] = 0;\n        pos /= 2;\n        while(pos > 0){\n            segtree[pos][1] = segtree[pos*2][1];\n            if(segtree[pos*2][1]==segtree[pos*2][0]) segtree[pos][1]+=segtree[pos*2+1][1];\n            segtree[pos][2] = max({\n                segtree[pos*2][2], segtree[pos*2][3]+segtree[pos*2+1][1], segtree[pos*2+1][2]\n            });\n            segtree[pos][3] = segtree[pos*2+1][3];\n            if(segtree[pos*2+1][3]==segtree[pos*2+1][0]) segtree[pos][3]+=segtree[pos*2][3];\n            pos /= 2;\n        }\n    }\n    int query(int lo, int hi){\n        lo += maxn; hi += maxn;\n        vector<int> kiri, kanan;\n        while(lo<=hi){\n            if(lo%2==1) kiri.push_back(lo);\n            lo = (lo+1)/2;\n            if(hi%2==0) kanan.push_back(hi);\n            hi = (hi-1)/2;\n        }\n        for(int i=kanan.size()-1; i>=0; i--){\n            kiri.push_back(kanan[i]);\n        }\n        int ans = 0, cur = 0;\n        for(int i=0; i<kiri.size(); i++){\n            //for(int j=0; j<4; j++) cout << segtree[kiri[i]][j] << \" \";\n            //cout << endl;\n            if(segtree[kiri[i]][2] == segtree[kiri[i]][0]){ // penuh\n                cur += segtree[kiri[i]][0];\n            }else{\n                ans = max({cur+segtree[kiri[i]][1], segtree[kiri[i]][2], ans});\n                cur = segtree[kiri[i]][3];\n            }\n        }\n        ans = max(ans, cur);\n        //cout << \"query \" << ans << endl;\n        return ans;\n    }\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<bool> ans;\n        build();\n        for(int i=0; i<queries.size(); i++){\n            if(queries[i][0] == 1){\n                update(queries[i][1]);\n            }else{\n                ans.push_back(query(1,queries[i][1]-1)+1 >= queries[i][2]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716651095",
    "subm_id": "1267631966"
}