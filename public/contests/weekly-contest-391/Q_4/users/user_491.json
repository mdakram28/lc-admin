{
    "username": "bool3",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        pts1, pts2 = [], []\n        for i in range(len(points)):\n            x, y = points[i]\n            pts1.append((x+y, i))\n            pts2.append((x-y, i))\n        pts1.sort(); pts2.sort()\n        ans = 0\n        a, b = pts1[-1][0]-pts1[0][0], pts2[-1][0]-pts2[0][0]\n        print(a, b)\n        if a == max(a, b):\n            iptss, iptsd = [], []\n            for i in range(len(points)):\n                if i == pts1[0][1]: continue\n                x, y = points[i]\n                iptss.append(x+y)\n                iptsd.append(x-y)\n            iptss.sort(); iptsd.sort()\n            rf = max(iptss[-1]-iptss[0], iptsd[-1]-iptsd[0])\n            iptss, iptsd = [], []\n            for i in range(len(points)):\n                if i == pts1[-1][1]: continue\n                x, y = points[i]\n                iptss.append(x+y)\n                iptsd.append(x-y)\n            iptss.sort(); iptsd.sort()\n            rl = max(iptss[-1]-iptss[0], iptsd[-1]-iptsd[0])\n            ans = min(rf, rl)\n        else:\n            iptss, iptsd = [], []\n            for i in range(len(points)):\n                if i == pts2[0][1]: continue\n                x, y = points[i]\n                iptss.append(x+y)\n                iptsd.append(x-y)\n            iptss.sort(); iptsd.sort()\n            rf = max(iptss[-1]-iptss[0], iptsd[-1]-iptsd[0])\n            iptss, iptsd = [], []\n            for i in range(len(points)):\n                if i == pts2[-1][1]: continue\n                x, y = points[i]\n                iptss.append(x+y)\n                iptsd.append(x-y)\n            iptss.sort(); iptsd.sort()\n            rl = max(iptss[-1]-iptss[0], iptsd[-1]-iptsd[0])\n            ans = min(rf, rl)\n        return ans"
}