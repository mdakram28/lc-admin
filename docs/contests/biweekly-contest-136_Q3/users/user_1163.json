{
    "username": "boring-mendeleevpoa",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                one = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j]\n                ans += min(one, 4 - one)\n        if m % 2 == n % 2 == 0:\n            return ans\n        zero_one = d_one = 0\n        if m % 2:\n            for j in range(n // 2):\n                zero_one += grid[m // 2][j] != grid[m // 2][n - 1 - j]\n                d_one += grid[m // 2][j] == grid[m // 2][n - 1 - j] == 1\n        if n % 2:\n            for i in range(m // 2):\n                zero_one += grid[i][n // 2] != grid[m - 1 - i][n // 2]\n                d_one += grid[i][n // 2] == grid[m - 1 - i][n // 2] == 1\n        ans += m % 2 and n % 2 and grid[m // 2][n // 2]\n        if d_one % 2 == 0:\n            return ans + zero_one\n        else:\n            return ans + zero_one if zero_one else ans + 2",
    "submit_ts": "1722698946",
    "subm_id": "552273306"
}