{
    "username": "cm_fast",
    "submission": "class Solution\n{\npublic:\n    vector<vector<int>> helper(vector<int> &arr, int n)\n    {\n        vector<vector<int>> result;\n        if (n == 0)\n            return result;\n        vector<int> currentSubarray;\n        currentSubarray.push_back(arr[0]);\n        for (int i = 1; i < n; ++i)\n        {\n            if ((arr[i] >= 0 && arr[i - 1] >= 0) || (arr[i] < 0 && arr[i - 1] < 0))\n            {\n                currentSubarray.push_back(arr[i]);\n            }\n            else\n            {\n                result.push_back(currentSubarray);\n                currentSubarray.clear();\n                currentSubarray.push_back(arr[i]);\n            }\n        }\n        if (!currentSubarray.empty())\n        {\n            result.push_back(currentSubarray);\n        }\n        return result;\n    }\n    long long minimumOperations(vector<int> &a, vector<int> &b)\n    {\n        long long res = 0;\n        int n = a.size();\n        vector<int> diff(n);\n        for (int i = 0; i < n; ++i)\n        {\n            diff[i] = b[i] - a[i];\n        }\n        vector<vector<int>> result = helper(diff, n);\n        for (auto &arr : result)\n        {\n          // cout<<\"this\"<<endl;\n            for (int i = 0; i < arr.size(); i++)\n            {\n                arr[i]=abs(arr[i]);\n                // cout<<arr[i]<<\" \";\n            }\n            // cout<<endl;\n            long long ans = (long long)arr[0];\n            for (int i = 1; i < arr.size(); i++)\n            {\n                // cout << arr[i] << endl;\n                ans += (long long)max(arr[i] - arr[i - 1], 0);\n            }\n            res=res+ans;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721532824",
    "subm_id": "1327994904"
}