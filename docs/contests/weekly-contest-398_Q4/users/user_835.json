{
    "username": "vibhumkaila297",
    "submission": "class Solution {\n    \n    unordered_map<int, vector<vector<int>>> dp;\n    \n    int helper(int k, int i, int jump, bool can) {\n        if(pow(2, jump) >= INT_MAX) return 0;\n        if(dp.count(i) > 0 && dp[i][jump][can] != -1) return dp[i][jump][can];\n        int ans = 0;\n        if(i == k) ans++;\n        if (can) ans += helper(k, i - 1, jump, 0);\n        if (i + (pow(2, jump)) <= k + 1) ans += helper(k, i + (pow(2, jump)), jump + 1, 1);\n        dp[i].resize(32, vector<int>(2, -1));\n        return dp[i][jump][can] = ans;\n    }\n    \npublic:\n    int waysToReachStair(int k) {\n        return helper(k, 1, 0, 1);\n    } \n};",
    "submit_ts": 1716089988.0
}