{
    "username": "DevanshSati18",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        std::sort(horizontalCut.begin(), horizontalCut.end(), std::greater<int>());\n        std::sort(verticalCut.begin(), verticalCut.end(), std::greater<int>());\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        long long totalCost = 0;\n        int h = 0, v = 0;\n        while (h<horizontalCut.size() && v<verticalCut.size()) {\n            if (horizontalCut[h]>verticalCut[v]) {\n                totalCost += static_cast<long long>(horizontalCut[h]) * verticalPieces;\n                horizontalPieces++;\n                h++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[v])*horizontalPieces;\n                verticalPieces++;\n                v++;\n            }\n        }\n        while (h<horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[h]) * verticalPieces;\n            h++;\n        }\n        while (v<verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[v]) * horizontalPieces;\n            v++;\n        }\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925981",
    "subm_id": "1320272266"
}