{
    "username": "Smohite3",
    "submission": "#define pi pair<int,int>\n\n\nclass Solution {\n    \n    \npublic:\n    static bool myCmp(pi a, pi b){\n        \n        if(a.first == b.first) return a.second < b.second;\n        return a.first > b.first;\n    }\n    \n    int helper(vector<int> &nums, int maxi , int k){\n        int res = 0, low = 0, high = nums.size()-1;\n        \n        while(low <= high){\n            int front = nums[low];\n            int back = nums[high];\n            \n            if(abs(front-back) != maxi){\n                if(k - front >= maxi) res++;\n                else if(k - back >= maxi) res++;\n                else if(front >= maxi || back >= maxi) res++;\n                else res+=2;\n            }\n            low++;high--;\n        }\n        \n        return res;\n    }\n    \n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size(), maxi = INT_MIN;\n        vector<pi> vec;\n        \n        unordered_map<int,int> mp;\n        \n        int low = 0, high = n-1;\n        \n        while(low <= high){\n            int front = nums[low];\n            int back = nums[high];\n            \n            mp[abs(front-back)]++;\n            low++; high--;\n        }\n        \n        for(auto &it: mp) vec.push_back({it.second,it.first});\n        \n        sort(vec.begin(),vec.end(),myCmp);\n        maxi = max(maxi,helper(nums,vec[0].second,k));\n        \n        if(vec.size() >= 2) maxi = min(maxi,helper(nums,vec[1].second,k));\n        \n        return maxi;\n    }\n};",
    "submit_ts": "1721489725",
    "subm_id": "1327461870"
}