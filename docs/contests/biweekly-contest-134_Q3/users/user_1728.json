{
    "username": "quack_quack",
    "submission": "class Solution {\npublic:\n//     int is_good(vector<int>&arr , int indx , int k){\n//         int n = arr.size();\n//         for(int i = idx + 1, j = 1 ;  j < k - 1 ; j++){\n//             if(arr[(i - 1) % n] == arr[i % n]){\n//                 return i % n;\n//             }\n//         }\n        \n//         return -1;\n//     }\n//     pair<int , int> get_subs(vector<int>&arr , int idx , int k){\n//         int ans = 1;\n//         int st = arr[idx % n];\n//         int end = arr[(idx + k - 1) % n]\n//         for(int i = idx + 1 , j = idx + k; ){\n//             if(arr[i%n] == st && arr[i%])\n//         }\n        \n//     }\n    int numberOfAlternatingGroups(vector<int>& arr, int k) {\n        int ans = 0;\n        int n = arr.size();\n\n        \n        for(int i = 0 ; i < n ; i++){\n            arr.push_back(arr[i]);\n        }\n        n = arr.size();\n        \n        vector<int>dp(n + 1 , 0);\n        int cnt = 0;\n        \n        for(int i = 1 ; i < (n/2 + k - 1) ; i++){\n            if(arr[i] != arr[i - 1]){\n                cnt++;\n            }else{\n                cnt = 0;\n            }\n            if(cnt + 1 >= k){\n                ans++;\n            }\n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1720279337",
    "subm_id": "1311747132"
}