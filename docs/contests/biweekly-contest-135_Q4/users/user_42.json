{
    "username": "MKLOL",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<double, double> pdd;\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define rep(i, from, to) for (int i = from; i < (to); ++i)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n#define FOR(i, to) for (int i = 0; i < (to); ++i)\ntypedef vector<vector<int> > vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pair<int, int> > vpi;\ntypedef pair<ll,ll> pll;\ntypedef vector<string> vs;\nconst char en = '\\n';\nll best[110][110][2];\nclass Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        int n = sz(grid);\n        int m = sz(grid[0]);\n\n        vvll sm(n, vll(m,0));\n        FOR(i, n) {\n            FOR(j, m) {\n                sm[i][j] = grid[i][j];\n                if (i) sm[i][j] += sm[i-1][j];\n            }\n        }\n        FOR(i, n + 3) {\n            FOR(j, m + 3) {\n                best[i][j][0] = 0;\n                best[i][j][1] = 0;\n            }\n        }\n        FOR(i, n) {\n          FOR(j, m) {\n            ll nv = 0;\n            if (j) nv += sm[i][j-1];\n            if (j+1<m) nv += sm[i][j+1];\n            best[i][j][0] = nv;\n            best[i][j][1] = nv;\n          }\n        }\n        \n        for (int j=1;j<m;++j) {\n            for (int io = 0; io < n; ++ io) {\n                for (int in = 0;in < n; ++ in) {\n                    for (int s = 0;s < 2; ++s) {\n                        //if (s == 1 && in > io) continue;\n                        if (s == 0 && in <= io) {\n                            ll nv = best[io][j-1][s] - sm[in][j];\n                            if (j+1 < m) nv += sm[in][j+1];\n                            best[in][j][1] = max(best[in][j][1], nv);\n                        }\n                        if (s == 0 && in >= io) {\n                            ll nv = best[io][j-1][s] - sm[io][j] + sm[in][j-1] - sm[io][j-1];\n                            if (j + 1 < m) {\n                                nv += sm[in][j+1];\n                            }\n                            best[in][j][s] = max(best[in][j][s], nv);\n                            \n                        }\n                        if (s == 1 && in <= io) {\n                            ll nv = best[io][j-1][s] - sm[in][j];\n                            if (j + 1 < m) {\n                                nv += sm[in][j+1];\n                            }\n                            best[in][j][s] = max(best[in][j][s], nv);\n                        }\n                        \n                        // skip 1\n                        if (j-2 >= 0) {\n                            ll nv = 0;\n                            if (in > io) {\n                                nv += sm[in][j-1] - sm[io][j-1];\n                            }\n                            if (j + 1 < m) {\n                                nv += sm[in][j+1];\n                            }\n                            best[in][j][0] = max(best[in][j][0], best[io][j-2][s] + nv);\n                        }\n                        if (j-3 >= 0) {\n                            ll nv = 0;\n                            nv += sm[in][j-1];\n                             if (j + 1 < m) {\n                                nv += sm[in][j+1];\n                            }\n                            best[in][j][0] = max(best[in][j][0], best[io][j-3][s] + nv);\n                        }\n                    }\n                }\n            }\n        }\n        //cout << sm[4][3] << endl;\n        //cout << best[4][4][0] << endl;\n        //cout << best[4][4][1] << endl;\n        ll ret = 0;\n        FOR(i, n) {\n            FOR(j, m) {\n                FOR(s, 2) {\n                    ret = max(ret, best[i][j][s]);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1721489641",
    "subm_id": "1327459404"
}