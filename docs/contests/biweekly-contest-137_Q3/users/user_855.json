{
    "username": "Bhavik Arora",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<pair<long long, long long>>> top3(m);\n\n        for(int i=0; i<m; ++i) {\n            vector<pair<long long, long long>> vp;\n            for(int j=0; j<n; ++j) {\n                vp.push_back({board[i][j], j});\n            }\n            sort(vp.rbegin(), vp.rend());\n            top3[i] = vector<pair<long long, long long>>(vp.begin(), vp.begin() + min(3, (int)vp.size()));\n        }\n\n        long long res = LLONG_MIN;\n        for(int r1=0; r1<m; ++r1) {\n            for(int r2=r1+1; r2<m; ++r2) {\n                for(int r3=r2+1; r3<m; ++r3) {\n                    for(auto &[val1, c1] :top3[r1]) {\n                        for(auto& [val2, c2] :top3[r2]) {\n                            if(c2 == c1) continue;\n                            for(auto& [val3, c3] :top3[r3]) {\n                                if (c3 == c1 || c3 == c2) continue; \n                                long long curr = val1 + val2 + val3;\n                                res = max(res, curr);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723910218",
    "subm_id": "1359221760"
}