{
    "username": "aUZYYiNOXf",
    "submission": "#include <vector>\n#include <queue>\n#include <cmath>\n#include <utility>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int helper(vector<vector<int>>& g, int s, int t1, int t2, int n) {\n        queue<int> q;\n        vector<int> vis(n + 4, 0);\n\n        q.push(s);\n        vis[s] = 1;\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n\n            for (int v : g[u]) {\n                if (!vis[v]) {\n                    q.push(v);\n                    vis[v] = 1;\n                }\n            }\n        }\n\n        return vis[t1] || vis[t2];\n    }\n\n    bool canReachCorner(int x, int y, vector<vector<int>>& c2) {\n        int nc = c2.size();\n        vector<pair<pair<int, int>, int>> c(nc);\n        vector<vector<int>> g(nc + 4);\n\n        // Initialize the edges of the graph\n        for (int i = 0; i < nc; ++i) {\n            c[i] = {{c2[i][0], c2[i][1]}, c2[i][2]};\n        }\n\n        for (int i = 0; i < nc; ++i) {\n            if (c[i].first.first <= c[i].second) {\n                g[nc].push_back(i);\n                g[i].push_back(nc);\n            }\n            if (x - c[i].first.first <= c[i].second) {\n                g[nc + 2].push_back(i);\n                g[i].push_back(nc + 2);\n            }\n            if (c[i].first.second <= c[i].second) {\n                g[nc + 1].push_back(i);\n                g[i].push_back(nc + 1);\n            }\n            if (y- c[i].first.second <= c[i].second) {\n                g[nc + 3].push_back(i);\n                g[i].push_back(nc + 3);\n            }\n\n        // Compute distances and build the graph\n            for (int j = i + 1; j < nc; ++j) {\n                double d = sqrt(pow(c[i].first.first - c[j].first.first, 2) +\n                                pow(c[i].first.second - c[j].first.second, 2));\n                if (c[i].second + c[j].second >= d) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n        return !(helper(g, nc, nc + 1, nc + 2, nc+4 ) || helper(g, nc + 3, nc + 2, nc + 1, nc + 4));\n    }\n};\n",
    "submit_ts": "1722139196",
    "subm_id": "1335810809"
}