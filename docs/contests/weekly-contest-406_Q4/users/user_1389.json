{
    "username": "code_compile",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> allCuts;\n        for (int cost : horizontalCut) {\n            allCuts.push_back({cost, 'H'});\n        }\n        for (int cost : verticalCut) {\n            allCuts.push_back({cost, 'V'});\n        }\n        sort(allCuts.rbegin(), allCuts.rend());\n\n        int h_pieces = 1;\n        int v_pieces = 1;\n\n\n        long long min_cost = 0;\n\n\n        for (const auto& cut : allCuts) {\n            long long cost = cut.first;\n            char cut_type = cut.second;\n            if (cut_type == 'H') {\n                min_cost += cost * v_pieces;\n                h_pieces += 1;\n            } else {\n                min_cost += cost * h_pieces;\n                v_pieces += 1;\n            }\n        }\n\n        return min_cost;\n    }\n};",
    "submit_ts": "1720926227",
    "subm_id": "1320279751"
}