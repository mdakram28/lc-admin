{
    "username": "ChetanSonigara_07",
    "submission": "from collections import deque\nimport math\nclass Solution:\n    def bfs(self, graph, start, target1, target2, nodes):\n        queue = deque()\n        visited = [False] * (nodes + 4)\n        queue.append(start)\n        visited[start] = True\n        while queue:\n            u = queue.popleft()\n            for v in graph[u]:\n                if not visited[v]:\n                    queue.append(v)\n                    visited[v] = True\n        return 1 if visited[target1] or visited[target2] else 0\n    def canReachCorner(self, X, Y, circles2):\n        circles = [list(circle) for circle in circles2]\n        graph = [[] for _ in range(len(circles2) + 4)]\n        numCircles = len(circles2)\n        for i in range(numCircles):\n            if circles[i][0] <= circles[i][2]:\n                graph[numCircles].append(i)\n                graph[i].append(numCircles)\n            if X - circles[i][0] <= circles[i][2]:\n                graph[numCircles + 2].append(i)\n                graph[i].append(numCircles + 2)\n            if circles[i][1] <= circles[i][2]:\n                graph[numCircles + 1].append(i)\n                graph[i].append(numCircles + 1)\n            if Y - circles[i][1] <= circles[i][2]:\n                graph[numCircles + 3].append(i)\n                graph[i].append(numCircles + 3)\n            for j in range(i + 1, numCircles):\n                distance = math.sqrt((circles[i][0] - circles[j][0]) ** 2 + (circles[i][1] - circles[j][1]) ** 2)\n                radiusSum = circles[i][2] + circles[j][2]\n                if radiusSum >= distance:\n                    graph[i].append(j)\n                    graph[j].append(i)\n        isBlocked = 0\n        isBlocked = max(isBlocked, self.bfs(graph, numCircles, numCircles + 1, numCircles + 2, numCircles + 4))\n        isBlocked = max(isBlocked, self.bfs(graph, numCircles + 3, numCircles + 2, numCircles + 1, numCircles + 4))\n        return isBlocked == 0\n\n",
    "submit_ts": "1722138796",
    "subm_id": "1335799903"
}