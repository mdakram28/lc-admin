{
    "username": "miao-xiao-cun-zai-l",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        auto getMaxMan = [&](vector<vector<int>>& p) {\n            int n = p.size();\n            vector<vector<int>> q(4, vector<int>(p.size()));\n            for(int i=0;i<n;i++) {\n                int x = p[i][0];\n                int y = p[i][1];\n                q[0][i]=x+y;\n                q[1][i]=-x+y;\n                q[2][i]=x-y;\n                q[3][i]=-x-y;\n            }\n            int mx=0;\n            int ra, rb;\n            \n            vector<int> idx(n);\n            iota(idx.begin(), idx.end(), 0);            \n            for(int i=0;i<4;i++) {\n                sort(idx.begin(),idx.end(), [&](int a, int b){\n                    return q[i][a] < q[i][b];\n                });\n                if(mx < q[i][idx.back()]-q[i][idx[0]]) {\n                    mx = q[i][idx.back()]-q[i][idx[0]];\n                    ra = idx.back();\n                    rb = idx[0];\n                }\n            }\n            return pair<int, pair<int, int>>{mx, {ra, rb}};\n        };\n        \n        \n        auto [val, pts] = getMaxMan(points);\n        auto [ra, rb] = pts;\n        \n        auto t = points;\n        t.erase(t.begin() + ra);\n        auto [v, l] = getMaxMan(t);\n        val = min(val, v);\n        \n        t = points;\n        t.erase(t.begin() + rb);\n        auto [v2, ll] = getMaxMan(t);\n        val = min(val, v2);\n        return val;\n    }\n};"
}