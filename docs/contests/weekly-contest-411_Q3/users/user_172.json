{
    "username": "xlx2",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if n == 1:\n            ans = [9,8,9,8,5,6,7,8,9]\n            return str(ans[k-1])\n        if k in [1, 3, 9]:\n            return '9' * n\n        if k == 2:\n            return '8' + '9'*(n-2) + '8'\n        if k == 4:\n            return '8'*n if n < 5 else ('88' + '9'*(n-4) + '88')\n        if k == 5:\n            return '5' + '9'*(n-2) + '5'\n        if n == 2:\n            return str(k) * 2\n        if k == 8:\n            return '8' * n if n < 6 else ('888' + '9'*(n-6) + '888')\n        if k == 6:\n            if n % 2:\n                return '8' + '9' * ((n-3)//2) + '8' + '9' * ((n-3)//2) + '8'\n            else:\n                return '8' + '9' * ((n-4)//2) + '77' + '9' * ((n-4)//2) + '8'\n        # k == 7\n        r = [0] * n\n        r[0] = 1\n        for i in range(1, n):\n            r[i] = (10 * r[i-1]) % 7\n        x = [9] * n\n        y = 0\n        j = n // 2\n        if n % 2:\n            for i in range(n):\n                if i == j: continue\n                y += r[i] * x[i]\n                y %= 7\n            for k in range(9, 0, -1):\n                if (y + r[j] * k) % 7 == 0:\n                    x[j] = k\n                    break\n        else:\n            for i in range(n):\n                if i == j or i == j-1: continue\n                y += r[i] * x[i]\n                y %= 7\n            found = False\n            for k in range(9, 0, -1):\n                if (y + r[j-1]*k + r[j]*k) % 7 == 0:\n                    x[j-1] = x[j] = k\n                    found = True\n                    break\n        return ''.join(map(str, x))",
    "submit_ts": "1723951990",
    "subm_id": "1359785109"
}