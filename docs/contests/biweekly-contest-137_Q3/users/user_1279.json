{
    "username": "Leonardo Zhou",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        vector<map<int, vector<int>, greater<int>>> tops(n);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < board[i].size(); j++) {\n                tops[i][board[i][j]].push_back(j);\n            }\n\n            // for (auto& iter : tops[i]) {\n            //     cout << iter.first << \" \";\n            //     for (int ite : iter.second) {\n            //         cout << ite << \" \";\n            //     }\n            //     cout << \"\\n\";\n            // }\n        }\n\n        long long maximum = -9999999999;\n        for (int i = 0; i < n; i++) {\n            vector<pair<int, int>> itop3;\n            int it = 0;\n            for (auto& iter : tops[i]) {\n                it+=iter.second.size();\n                for (int ite : iter.second) {\n                    itop3.push_back({ite, iter.first});\n                }\n                if (it >= 3) {\n                    break;\n                }\n            }\n            for (int j = i + 1; j < n; j++) {\n                vector<pair<int, int>> jtop3;\n                int it = 0;\n                for (auto& iter : tops[j]) {\n                    it+=iter.second.size();\n                    for (int ite : iter.second) {\n                        jtop3.push_back({ite, iter.first});\n                    }\n                    if (it >= 3) {\n                        break;\n                    }\n                }\n                for (int k = j + 1; k < n; k++) {\n                    vector<pair<int, int>> ktop3;\n                    int it = 0;\n                    for (auto& iter : tops[k]) {\n                        it+=iter.second.size();\n                        for (int ite : iter.second) {\n                            ktop3.push_back({ite, iter.first});\n                        }\n                        if (it >= 3) {\n                            break;\n                        }\n                    }\n                    for (auto& ip : itop3) {\n                        for (auto& jp : jtop3) {\n                            for (auto& kp : ktop3) {\n                                if (ip.first == jp.first || jp.first == kp.first || kp.first == ip.first) {continue;}\n                                maximum = max(maximum, (long long)ip.second + jp.second + kp.second);\n                                // cout << ip.second << \" \" << jp.second << \" \" << kp.second << \" \" << maximum << \"\\n\";\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maximum;\n    }\n};",
    "submit_ts": "1723910262",
    "subm_id": "1359223430"
}