{
    "username": "Mek_san",
    "submission": "class Node{\n    public:\n\n    vector<Node*> ways;\n    bool end;\n    int cost;\n    \n    Node(){\n        this->ways = vector<Node*> (26,NULL);\n        this->end = false;\n        this->cost = INT_MAX;\n    }\n};\n\nclass Trie{\n    public:\n    Node* root;\n    \n    Trie(){\n        root = new Node();\n    }\n    \n    void make_path(int i,string &str,int &cost){\n        Node* tmp = root;\n        \n        while(i<str.size()){\n            int idx = str[i] - 'a';\n            \n            if(tmp->ways[idx] == NULL){\n                tmp->ways[idx] = new Node();\n            }\n            \n            tmp = tmp->ways[idx];\n            i++;\n        }\n        \n        tmp->end = true;\n        tmp->cost = min(tmp->cost,cost);\n    }\n    \n    void build(vector<string>& strs,vector<int>& costs){\n        for(int i=0;i<costs.size();i++){\n            this->make_path(0,strs[i],costs[i]);\n        }\n    }\n};\n\nclass Solution {\npublic:\n    int solve(int i,string& t,Trie &ds,vector<int> &dp){\n        if(i>=t.size()) return 0;\n        \n        int j = i;\n        \n        if(dp[j] != -1) return dp[j];\n        \n        Node* tmp = ds.root;\n        int ans = INT_MAX;\n        \n        while(tmp && i<t.size()){\n            int idx = t[i] - 'a';\n\n            if(tmp->ways[idx] == NULL) break;\n            \n            tmp = tmp->ways[idx];\n            if(tmp->end){\n                int ret = solve(i+1,t,ds,dp);\n                if(ret != INT_MAX){\n                    ret += tmp->cost; \n                }\n                ans = min(ans,ret );\n            }\n            i++;\n        }\n        \n        return dp[j] = ans;\n    }\n    \n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie t;\n        // cout<<(t.root == NULL)<<\" \";\n        t.build(words,costs);\n        vector<int> dp(target.size(),-1);\n        \n        int ans = solve(0,target,t,dp);\n        if(ans==INT_MAX) return -1;\n        return ans;\n    }\n};",
    "submit_ts": "1720324710",
    "subm_id": "1312406096"
}