{
    "username": "ak21eeb0b08",
    "submission": "class Solution {\npublic:\n   \n    long long maximumPoints(vector<int>& enemyEnergies, int currentEnergy) {\n         std::sort(enemyEnergies.begin(), enemyEnergies.end());\n    long long left = 0;\n    long long right = enemyEnergies.size() - 1;\n    long long points = 0;\nif(currentEnergy<enemyEnergies[0])return 0;\n        currentEnergy+=(long long)accumulate(enemyEnergies.begin(),enemyEnergies.end(),0);\n        currentEnergy-=enemyEnergies[0];\n        return currentEnergy/enemyEnergies[0];\n   \n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        long long cnt=0;\n        map<long long,long long>mp;\n      \n        for(int i=0;i<n;i++){\n            map<long long,long long>curr;\n            if(nums[i]==k)++cnt;\n            curr[nums[i]]=1;\n            for(auto&[val,freq]:mp){\n                long long nwrs=val&nums[i];\n                if(nwrs==k)cnt+=freq;\n                curr[nwrs]+=freq;\n            }\n            mp=curr;\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1720280587",
    "subm_id": "1311794934"
}