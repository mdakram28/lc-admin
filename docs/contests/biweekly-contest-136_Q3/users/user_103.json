{
    "username": "Astitva1508",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int r = grid.size();\n        int c = grid[0].size();\n        int beginRow = 0;\n        int endRow = r-1;\n        int ans = 0;\n        int cntOnes = 0;\n        while(beginRow<endRow){\n            int beginCol = 0;\n            int endCol = c-1;\n            while(beginCol<endCol){\n                int cnt = 0;\n                if(grid[beginRow][beginCol]==0) cnt++;\n                if(grid[beginRow][endCol]==0) cnt++;\n                if(grid[endRow][beginCol]==0) cnt++;\n                if(grid[endRow][endCol]==0) cnt++;\n                beginCol++;\n                endCol--;\n                ans+=min(cnt,4-cnt);\n            }\n            beginRow++;\n            endRow--;\n        }\n        if(r%2==0 && c%2==0) return ans;\n        else if(r%2==0){\n            // No of columns is odd\n            int midC = c/2;\n            int beginRow = 0;\n            int endRow = r-1;\n            int cnt = 0;\n            int oneMatch = 0;\n            while(beginRow<endRow){\n                if(grid[beginRow][midC]==grid[endRow][midC]){\n                    if(grid[beginRow][midC]==1) oneMatch++;\n                }else{\n                    cnt++;\n                    ans++;\n                }\n                beginRow++;\n                endRow--;\n            }\n            if(oneMatch%2!=0 && cnt==0) ans+=2;\n        }else if(c%2==0){\n            int midR= r/2;\n            int beginCol = 0;\n            int endCol = c-1;\n            int cnt = 0;\n            int oneMatch = 0;\n            while(beginCol<endCol){\n                if(grid[midR][beginCol]==grid[midR][endCol]){\n                    if(grid[midR][beginCol]==1) oneMatch++;\n                }else{\n                    cnt++;\n                    ans++;\n                }\n                beginCol++;\n                endCol--;\n            }\n            if(oneMatch%2!=0 && cnt==0) ans+=2;\n        }else{\n            int midC = c/2;\n            int beginRow = 0;\n            int endRow = r-1;\n            int cnt = 0;\n            int oneMatch = 0;\n            while(beginRow<endRow){\n                if(grid[beginRow][midC]==grid[endRow][midC]){\n                    if(grid[beginRow][midC]==1) oneMatch++;\n                }else{\n                    cnt++;\n                    ans++;\n                }\n                beginRow++;\n                endRow--;\n            }\n            int midR= r/2;\n            int beginCol = 0;\n            int endCol = c-1;\n            while(beginCol<endCol){\n                if(grid[midR][beginCol]==grid[midR][endCol]){\n                    if(grid[midR][beginCol]==1) oneMatch++;\n                }else{\n                    cnt++;\n                    ans++;\n                }\n                beginCol++;\n                endCol--;\n            }\n            if(oneMatch%2!=0 && cnt==0) ans+=2;\n            \n            if(grid[r/2][c/2]==1) ans++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697603",
    "subm_id": "1343152374"
}