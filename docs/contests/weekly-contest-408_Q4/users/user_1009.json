{
    "username": "jmyanxiang",
    "submission": "class UnionFind:\n    def __init__(self, n: int) -> None:\n        self.rank = [1] * n\n        self.root = [i for i in range(n)]\n\n    def find(self, x: int) -> int:\n        if x == self.root[x]:\n            return x\n        self.root[x] = self.find(self.root[x])\n        return self.root[x]\n\n    def union(self, x: int, y: int) -> bool:\n        root_x = self.find(x)\n        root_y = self.find(y)\n        if root_x == root_y:\n            return False\n        if self.rank[root_x] > self.rank[root_y]:\n            self.root[root_y] = root_x\n        elif self.rank[root_x] < self.rank[root_y]:\n            self.root[root_x] = root_y\n        else:\n            self.root[root_x] = root_y\n            self.rank[root_y] += 1\n        return True\n\n    def is_connected(self, x: int, y: int) -> bool:\n        return self.find(x) == self.find(y)\n\n\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        n = len(circles)\n        uf = UnionFind(n)\n\n        def circles_overlap(circle1, circle2):\n            x1, y1, r1 = circle1\n            x2, y2, r2 = circle2\n            return sqrt((x2 - x1)**2 + (y2 - y1)**2) <= r1 + r2\n        \n        for i in range(n):\n            for j in range(i + 1, n):\n                if circles_overlap(circles[i], circles[j]):\n                    uf.union(i, j)\n        \n        comps = defaultdict(list)\n        for i in range(n):\n            comps[uf.find(i)].append(i)\n        \n        print(comps)\n\n        for group in comps.values():\n            top, bottom, left, right = 0, Y, X, 0\n            for i in group:\n                x, y, r = circles[i]\n                top = max(top, y + r)\n                bottom = min(bottom, y - r)\n                left = min(left, x - r)\n                right = max(right, x + r)\n            \n            if (bottom <= 0 and top >= Y) or (left <= 0 and right >= X) or (top >= Y and right >= X) or (left <= 0 and bottom <= 0):\n                return False\n        return True\n    ",
    "submit_ts": "1722138982",
    "subm_id": "1335804710"
}