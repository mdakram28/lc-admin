{
    "username": "user2032m",
    "submission": "class Solution {\npublic:\n    vector<int> getSetBits(int x) \n    {\n        vector<int> setBits;\n        for (int i = 0; x > 0; ++i) \n        {\n            if (x & 1)\n                setBits.push_back(i);\n\n            x >>= 1;\n        }\n        return setBits;\n    }\n\n    int countand(int windowLength, unordered_map<int, int>& bitCounts) \n    {\n        int result = 0;\n        for (const auto& [key, count] : bitCounts) \n            if (count == windowLength) \n                result |= (1 << key);\n\n        return result;\n    }\n    \n    int minimumDifference(vector<int>& nums, int target) {\n        int n = nums.size();\n\n        int curand = nums[0];\n        int ans = abs(curand - target);\n\n        unordered_map<int, int> map;\n        vector<int> ini = getSetBits(nums[0]);\n\n        for (int bit : ini) \n            map[bit]++;\n\n        int l = 0, r = 0;\n\n        while (r < n) \n        {\n            if (curand > target || l > r) \n            {\n                r++;\n                if (r >= n) break;\n\n                vector<int> bits = getSetBits(nums[r]);\n\n                for (int bit : bits)\n                    map[bit]++;\n            } \n            else \n            {\n                vector<int> bits = getSetBits(nums[l]);\n\n                for (int bit : bits) \n                    if (--map[bit] == 0)\n                        map.erase(bit);\n\n                l++;\n            }\n\n            curand = countand(r - l + 1, map);\n\n            if (l <= r)\n                ans = min(ans, abs(curand - target));\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717299131.0
}