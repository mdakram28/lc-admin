{
    "username": "Ruthvik2835",
    "submission": "class Solution {\npublic:\n#define ll long long\nstruct segtree{\n    struct item{\n        ll a;\n        item(ll val){\n            a=val;\n        }\n    };\n    item single(ll x){\n        item p(x);\n        return p;\n    }\n    ll n;\n    ll val;\n    vector<item> tree;\n    void init(){\n      tree.assign(4*n,single(val));\n    }\n    void build(vector<ll>&a){\n      build(a,0,n-1,0);\n    }\n    item combine(item a,item b){\n        item res(val);\n        res.a=(a.a+b.a);\n        return res;\n    }\n    ll get(ll ql,ll qr){\n      return get(ql,qr,0,n-1,0).a;\n    }\n    item get(ll ql,ll qr,ll l,ll r,ll i){\n        if(r<ql||l>qr)return val;\n        if(r<=qr&&l>=ql){\n          return tree[i];\n        }\n        int m=(l+r)/2;\n        return combine(get(ql,qr,l,m,2*i+1),get(ql,qr,m+1,r,2*i+2));\n    }\n    void update(ll idx,ll x){\n      update(idx,x,0,n-1,0);\n    }\n    void build(vector<ll>&a,ll l,ll r,ll i){\n\n        if(l==r){\n          tree[i].a=a[l];\n          return;\n        }\n        ll m=(l+r)/2;\n        build(a,l,m,2*i+1);\n        build(a,m+1,r,2*i+2);\n        tree[i]=combine(tree[2*i+1],tree[2*i+2]);\n    }\n   \n    \n    void update(ll idx,ll x,ll l,ll r,ll i){\n        if(idx<l||idx>r)return;\n        if(l==r){\n          tree[i].a=x;\n          return;\n        }\n        ll m=(l+r)/2;\n        if(idx<=m)\n          update(idx,x,l,m,2*i+1);\n        else\n          update(idx,x,m+1,r,2*i+2);\n        tree[i]=combine(tree[2*i+1],tree[2*i+2]);\n    }\n        //segtree g;\n        //g.n=n;\n        //g.val=val\n        //g.init();\n        //g.build(a);\n        // //change the combine function , val ,struct accordingly!!!!!\n        // //check (l==r) case update too\n};\n    vector<int> countOfPeaks(vector<int>& v, vector<vector<int>>& q) {\n        int n=v.size();\n        vector<ll>a(n,0);\n        for(int i=1;i<n-1;i++){\n            if(v[i]>v[i+1]&&v[i]>v[i-1]){\n                a[i]=1;\n            }\n        }\n        segtree g;\n        g.n=n;\n        g.val=0;\n        g.init();\n        g.build(a);\n        vector<int>ans;\n        for(auto &x:q){\n            if(x[0]==1){\n                int l=x[1],r=x[2];\n                if(r<=l+1){\n                    ans.push_back(0);\n                }\n                else{\n                    ans.push_back(g.get(l+1,r-1));\n                }\n            }\n            else{\n                ll j=x[1],val=x[2];\n                v[j]=val;\n                if(j-1>0&&j-1<n-1){\n                    int i=j-1;\n                    if(v[i]>v[i+1]&&v[i]>v[i-1]){\n                        a[i]=1;\n                    }\n                    else{\n                        a[i]=0;\n                    }\n                    g.update(i,a[i]);\n                }\n                if(j>0&&j<n-1){\n                    int i=j;\n                    if(v[i]>v[i+1]&&v[i]>v[i-1]){\n                        a[i]=1;\n                    }\n                    else{\n                        a[i]=0;\n                    }\n                    g.update(i,a[i]);\n                }\n                if(j+1>0&&j+1<n-1){\n                    int i=j+1;\n                    if(v[i]>v[i+1]&&v[i]>v[i-1]){\n                        a[i]=1;\n                    }\n                    else{\n                        a[i]=0;\n                    }\n                    g.update(i,a[i]);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507007.0
}