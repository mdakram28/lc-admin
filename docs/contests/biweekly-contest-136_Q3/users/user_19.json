{
    "username": "milesian-c",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        for(int i=0;n-i-1>i;++i){\n            for(int j=0;m-j-1>j;++j){\n                int ni = n-i-1;\n                int nj = m-j-1;\n                int sum = grid[i][j] + grid[ni][j] + grid[i][nj] + grid[ni][nj];\n                ans += min(sum, 4-sum);\n            }\n        }\n        if(n % 2 && m % 2){\n            if(grid[n/2][m/2]) ++ ans;\n        }\n        int sum1 = 0;\n        int sum2 = 0;\n        if(n % 2){\n            for(int j=0;m-j-1>j;++j){\n                if(grid[n/2][j] != grid[n/2][m-j-1]) ++ sum2;\n                sum1 += grid[n/2][j] + grid[n/2][m-j-1];\n            }\n        }\n        if(m % 2){\n            for(int i=0;n-i-1>i;++i){\n                if(grid[i][m/2] != grid[n-i-1][m/2]) ++ sum2;\n                sum1 += grid[i][m/2] + grid[n-i-1][m/2];\n            }           \n        }\n        sum1 %= 4;\n        ans += sum2;\n        if(!sum2) ans += sum1;\n        return ans;\n    }\n};",
    "submit_ts": "1722696176",
    "subm_id": "552259418"
}