{
    "username": "xianglaniunan",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        long[][][] count = new long[n][60][60];\n        int mod = (int) 1e9 + 7;\n        for(int i = 0; i <= nums[0]; i++)\n        {\n            count[0][i][nums[0] - i] = 1;\n        }\n        for(int i = 1; i < n; i++)\n        {\n            int prior = nums[i - 1];\n            int cur = nums[i];\n            for(int a = 0; a <= cur; a++)\n            {\n                int b = cur - a;\n                for(int a0 = 0; a0 <= prior; a0++)\n                {\n                    int b0 = prior - a0;\n                    if(a0 <= a && b0 >= b)\n                    {\n                        count[i][a][b] += count[i - 1][a0][b0];\n                        count[i][a][b] %= mod;\n                    }\n                }\n            }\n        }\n        // for(long[][] d : count)\n        // {\n        //     for(long[] row : d)\n        //     {\n        //         System.out.println(Arrays.toString(row));\n        //     }\n        //     System.out.println(\"==\");\n        // }\n        long re = 0L;\n        for(int i = 0; i <= nums[n - 1]; i++)\n        {\n            re += count[n - 1][i][nums[n - 1] - i];\n            re %= mod;\n        }\n        return (int) re;\n    }\n}",
    "submit_ts": "1723346199",
    "subm_id": "1351572379"
}