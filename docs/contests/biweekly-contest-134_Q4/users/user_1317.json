{
    "username": "codebuzz0001",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n    int n = nums.size();\n    long long count = 0;\n    \n    unordered_map<long long, long long> prevResults; // Stores the number of subarrays ending at the previous position with a certain AND result\n\n    for (int i = 0; i < n; ++i) {\n        unordered_map<long long, long long> currResults; // Stores the current results\n\n        if (nums[i] == k) {\n            ++count;\n        }\n        currResults[nums[i]] = 1;\n\n        for (auto& [val, freq] : prevResults) {\n            long long newAndResult = val & nums[i];\n            if (newAndResult == k) {\n                count += freq;\n            }\n            currResults[newAndResult] += freq;\n        }\n        \n        prevResults = currResults;\n    }\n    \n    return count;\n}\n};",
    "submit_ts": "1720277275",
    "subm_id": "1311656050"
}