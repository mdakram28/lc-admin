{
    "username": "sad-mclarenjci",
    "submission": "class NumArray:\n    __slots__ = 'nums', 'tree'\n\n    def __init__(self, nums: List[int]):\n        n = len(nums)\n        tree = [0] * (n + 1)\n        for i, x in enumerate(nums, 1):  # i \u4ece 1 \u5f00\u59cb\n            tree[i] += x\n            nxt = i + (i & -i)  # \u4e0b\u4e00\u4e2a\u5173\u952e\u533a\u95f4\u7684\u53f3\u7aef\u70b9\n            if nxt <= n:\n                tree[nxt] += tree[i]\n        self.nums = nums\n        self.tree = tree\n\n    def update(self, index: int, val: int) -> None:\n        delta = val - self.nums[index]\n        self.nums[index] = val\n        i = index + 1\n        while i < len(self.tree):\n            self.tree[i] += delta\n            i += i & -i\n\n    def prefixSum(self, i: int) -> int:\n        s = 0\n        while i:\n            s += self.tree[i]\n            i &= i - 1  # i -= i & -i \u7684\u53e6\u4e00\u79cd\u5199\u6cd5\n        return s\n\n    def sumRange(self, left: int, right: int) -> int:\n        return self.prefixSum(right + 1) - self.prefixSum(left)\n\n    \nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        vis = [0] * len(nums)\n        for i in range(1, len(nums) - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                vis[i] = 1\n        ft = NumArray(vis)\n\n        ans = []\n        for idx, a, b in queries:\n            if idx == 1:\n                if a + 1 > b - 1:\n                    ans.append(0)\n                else:\n                    ans.append(ft.sumRange(a + 1, b - 1))\n            else: \n                left = max(1, a - 1)\n                right = min(len(nums) - 1, a + 2)\n                nums[a] = b\n\n                for i in range(left, right):\n                    if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                        ft.update(i, 1)\n                    else:\n                        ft.update(i, 0)\n\n        return ans\n                    ",
    "submit_ts": 1718508485.0
}