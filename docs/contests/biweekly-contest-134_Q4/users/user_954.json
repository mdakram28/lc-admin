{
    "username": "strange-mclarenpfr",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int x) {\n        int n = nums.length;\n        List<int[]> ands = new ArrayList<>();\n        long ans = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            ands.add(0, new int[]{-1, 1});\n            int k = 0;\n            for (int j = 0; j < ands.size(); j++) {\n                int and = ands.get(j)[0], size = ands.get(j)[1];\n                and &= nums[i];\n                if (k == 0 || and != ands.get(k - 1)[0]) {\n                    ands.set(k++, new int[]{and, size});\n                } else if (and == ands.get(k - 1)[0]) {\n                    int[] p = ands.get(k - 1);\n                    p[1] += size;\n                    ands.set(k - 1, p);\n                }\n                if (and == x) ans += size;\n            }\n            ands.subList(k, ands.size()).clear();\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720280071",
    "subm_id": "544570406"
}