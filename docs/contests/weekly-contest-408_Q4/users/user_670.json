{
    "username": "kudovidit",
    "submission": "class Solution {\npublic:\n#define ll long long\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        \n        auto intersect = [](int x1,int x2, int y1, int y2, int r1, int r2) {\n            ll dx= x2-x1, dy=y2-y1, rs=r1+r2;\n            ll dissq= dx*dx+dy*dy;\n            return dissq <= rs*rs;\n        };\n\n        set<int> left, right, bottom, top;\n        int n = circles.size();\n        \n        for (int i = 0; i < n; ++i) {\n            if (circles[i][0] - circles[i][2] <= 0) left.insert(i);\n            if (circles[i][0] + circles[i][2] >= X) right.insert(i);\n            if (circles[i][1] - circles[i][2] <= 0) bottom.insert(i);\n            if (circles[i][1] + circles[i][2] >= Y) top.insert(i);\n        }\n        for(auto x:right){\n            for(int i=0;i<n;i++){\n                if(intersect(circles[i][0], circles[x][0],circles[i][1], circles[x][1],circles[i][2], circles[x][2]))\n                    right.insert(i);\n            }\n        }\n        for(auto x:left){\n            for(int i=0;i<n;i++){\n                if(intersect(circles[i][0], circles[x][0],circles[i][1], circles[x][1],circles[i][2], circles[x][2]))\n                    left.insert(i);\n            }\n        }\n        for(auto x:bottom){\n            for(int i=0;i<n;i++){\n                if(intersect(circles[i][0], circles[x][0],circles[i][1], circles[x][1],circles[i][2], circles[x][2]))\n                    bottom.insert(i);\n            }\n        }\n        for(auto x:top){\n            for(int i=0;i<n;i++){\n                if(intersect(circles[i][0], circles[x][0],circles[i][1], circles[x][1],circles[i][2], circles[x][2]))\n                    top.insert(i);\n            }\n        }\n    \n        // for(auto x:top) cout<<x<<\" \";cout<<endl;\n        // for(auto x:bottom) cout<<x<<\" \";cout<<endl;\n        // for(auto x:left) cout<<x<<\" \";cout<<endl;\n        // for(auto x:right) cout<<x<<\" \";cout<<endl;\n        \n        auto areConnected = [&](const set<int>& s1, const set<int>& s2) {\n            for (int i : s1) {\n                for (int j : s2) {\n                    \n                    if (intersect(circles[i][0], circles[j][0],circles[i][1], circles[j][1],circles[i][2], circles[j][2])) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n        if (areConnected(left, right) || areConnected(bottom, top) || areConnected(left, bottom) || areConnected(top, right)) {\n            return false;\n        }\n\n        return true;\n    }\n};",
    "submit_ts": "1722137650",
    "subm_id": "1335769845"
}