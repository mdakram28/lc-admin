{
    "username": "ryanzhang1730",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n\n        d = defaultdict(int)\n        maxX = abs(nums[0] - nums[-1])\n\n        for i in range(len(nums) // 2):\n            x = abs(nums[i] - nums[len(nums) - i - 1])\n            d[x] += 1\n\n            if d[x] >= d[maxX]:\n                maxX = x\n            \n        c = float('inf')\n        print(maxX)\n        print(d)\n\n        keys = sorted(d.items(), key=lambda x:x[1], reverse=True)\n\n        for maxX, q in keys:\n            count = 0\n            for i in range(len(nums) // 2):\n                x = abs(nums[i] - nums[len(nums) - i - 1])\n\n                if x == maxX:\n                    continue\n                \n                if k - min(nums[i], nums[len(nums) - i - 1]) >= maxX:\n                    count += 1\n                elif max(nums[i], nums[len(nums) - i - 1]) - 0 >= maxX:\n                    count += 1\n                else:\n                    count += 2\n            \n            if count > c: \n                return c\n            c = min(c, count)\n        \n        return c\n\n        ",
    "submit_ts": "1721489218",
    "subm_id": "1327446604"
}