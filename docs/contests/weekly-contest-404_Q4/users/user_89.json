{
    "username": "srikkanthr",
    "submission": "struct tree {\n    vector<vector<int> > g;\n    int n, diam, rad;\n    vector<int> mxup, mxdown;\n    tree(int _n, vector<vector<int> > &edge) : n(_n) {\n        g.clear();\n        g.resize(n);\n        for (auto &vec : edge) {\n            int a = vec[0], b = vec[1];\n            g[a].push_back(b);\n            g[b].push_back(a);\n        }\n        mxup.clear(); mxdown.clear();\n        mxup.resize(n, 0);\n        mxdown.resize(n, 0);\n    }\n    void dfs_down(int u, int par) {\n        mxdown[u] = 0;\n        for (auto &v : g[u]) if (v != par) {\n            dfs_down(v, u);\n            mxdown[u] = max(mxdown[u], mxdown[v] + 1);\n        }\n    }\n    void dfs_up(int u, int par) {\n        int sz = g[u].size();\n        int curmx = 0;\n        int mx1 = -1, mx2 = -1;\n\n        for (int i=0;i<sz;++i) {\n            int v = g[u][i];\n            if (v == par) continue;\n\n            if (mxdown[v] >= mx1) {\n                mx2 = mx1;\n                mx1 = mxdown[v];\n            } else if (mxdown[v] >= mx2) {\n                mx2 = mxdown[v];\n            }\n\n            mxup[v] = max(mxup[v], mxup[u] + 1);\n            mxup[v] = max(mxup[v], curmx + 1);\n            curmx = max(curmx, mxdown[v] + 1);\n        }\n        diam = max(diam, mx1 + mx2 + 2);\n        curmx = 0;\n        for (int i=sz-1;i>=0;--i) {\n            int v = g[u][i];\n            if (v == par) continue;\n            mxup[v] = max(mxup[v], curmx + 1);\n            curmx = max(curmx, mxdown[v] + 1);\n        }\n        for (int i=0;i<sz;++i) {\n            int v = g[u][i];\n            if (v == par) continue;\n            dfs_up(v, u);\n        }\n    }\n    void set_up() {\n        dfs_down(0, -1);\n        diam = 0;\n        dfs_up(0, -1);\n        rad = (int)1e9;\n        for (int i=0;i<n;++i) {\n            int curmx = max(mxdown[i], mxup[i]);\n            rad = min(rad, curmx);\n        }\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int ret = 0;\n        tree t1((int)edges1.size()+1, edges1);\n        tree t2((int)edges2.size()+1, edges2);\n        t1.set_up();\n        t2.set_up();\n        return max({t1.diam, t2.diam, t1.rad + t2.rad + 1});\n    }\n};",
    "submit_ts": 1719716384.0
}