{
    "username": "kapilchihla",
    "submission": " #include <bits/stdc++.h> \n      #include <algorithm>\n      #include <numeric>\n      #define ll long long\n      #define pb push_back\n      #define fr(a, b) for (int i = a; i < b; i++)\n      #define rep(i, a, b) for (int i = a; i < b; i++)\n      #define mod 1000000007\n      #define inf (1LL << 60)\n      #define all(x) (x).begin(), (x).end()\n      #define prDouble(x) cout << fixed << setprecision(10) << x\n      #define triplet pair<ll, pair<ll, ll>>\n      #define kapil ios_base::sync_with_stdio(false);cin.tie(NULL)\n      using namespace std;\n\n    ll power(ll x,ll y,int p=1000000007)\n      {\n        ll res = 1;\n     \n        x = x % p; \n     \n        while (y > 0) \n        {\n            if (y & 1)\n                res = (res * x) % p;\n     \n            y = y >> 1; \n            x = (x * x) % p;\n        }\n        return res;\n    }\n     \n\n    ll modInverse(ll n,int p=1000000007)\n    {\n        return power(n, p - 2, p);\n    }\n     \n    ll nCr(ll n,ll r, int p=1000000007)\n    {\n       \n        if (n < r)\n            return 0;\n        if (r == 0)\n            return 1;\n     \n        ll fac[n + 1];\n        fac[0] = 1;\n        for (int i = 1; i <= n; i++)\n            fac[i] = (fac[i - 1] * i) % p;\n     \n        return (fac[n] * modInverse(fac[r], p) % p\n                * modInverse(fac[n - r], p) % p)\n               % p;\n    }\nclass Solution {\npublic:\n    ll f(vector<int>&nums,int targetBitwiseAND) {\nint n = nums.size();\nlong long totalSubarrays = 0;\n\nunordered_map<long long, long long> previousResults;\n\nfor (int i = 0; i < n; ++i) {\nunordered_map<long long, long long> currentResults;\nif (nums[i] == targetBitwiseAND) {\n++totalSubarrays;\n }\ncurrentResults[nums[i]] = 1;\n for (auto& [prevResult, prevCount] : previousResults) {\nlong long newResult = prevResult & nums[i];\nif (newResult == targetBitwiseAND) {\ntotalSubarrays += prevCount;\n}\ncurrentResults[newResult] += prevCount;\n}\npreviousResults = currentResults;\n}\nreturn totalSubarrays;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n       return f(nums,k);\n    }\n};",
    "submit_ts": "1720279278",
    "subm_id": "1311744813"
}