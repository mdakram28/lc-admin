{
    "username": "lzref",
    "submission": "class Solution\n{\n    /**\n     * @param Integer[][] $circles\n     */\n    function canReachCorner(int $X, int $Y, array $circles): bool\n    {\n        $topLeft = [];\n        $bottomRight = [];\n        foreach ($circles as $idx => [$centerX, $centerY, $r]) {\n            $topLeft[$idx] = $centerX - $r <= 0 || $centerY + $r >= $Y;\n            $bottomRight[$idx] = $centerY - $r <=0 || $centerX + $r >= $X;\n\n            if ($topLeft[$idx] && $bottomRight[$idx]) {\n                return false;\n            }\n        }\n\n        print_r($topLeft); print_r($bottomRight);\n\n        $groups = [];\n        $groupsBoundaries = [];\n\n        foreach ($circles as $idx1 => $circle1) {\n            [$centerX1, $centerY1, $r1] = $circle1;\n\n            $foundGroup = null;\n        \n            foreach ($groups as $groupNum => $group) {\n                foreach ($group as $groupCircleNum) {\n                    [$centerX2, $centerY2, $r2] = $circles[$groupCircleNum];\n\n                    $xDelta = $centerX1 - $centerX2;\n                    $yDelta = $centerY1 - $centerY2;\n                    $check = sqrt($xDelta * $xDelta + $yDelta * $yDelta);\n\n                    if ($check <= abs($r1 - $r2) || $check <= $r1 + $r2) {\n                        // the circles intersect\n\n                        $groups[$groupNum][] = $idx1;\n                        $groupsBoundaries[$groupNum][0] = $groupsBoundaries[$groupNum][0] || $topLeft[$idx1];\n                        $groupsBoundaries[$groupNum][1] = $groupsBoundaries[$groupNum][1] || $bottomRight[$idx1];\n\n                        if (null !== $foundGroup) {\n                            // Need to combine existing groups\n\n                            $groups[$foundGroup] = array_merge($groups[$foundGroup], $groups[$groupNum]);\n                            $groupsBoundaries[$foundGroup][0] = $groupsBoundaries[$foundGroup][0] || $groupsBoundaries[$groupNum][0];\n                            $groupsBoundaries[$foundGroup][1] = $groupsBoundaries[$foundGroup][1] || $groupsBoundaries[$groupNum][1];\n                            unset($groups[$groupNum]);\n                        } else {\n                            $foundGroup = $groupNum;\n                        }\n\n                        break; // Check next group\n                    }\n                }\n            }\n\n            if (null === $foundGroup) {\n                $groups[] = [$idx1];\n                $groupsBoundaries[] = [$topLeft[$idx1], $bottomRight[$idx1]];\n            }\n\n            //echo \"After processing circle $idx1 [$centerX1, $centerY1, $r1] (foundGroup is $foundGroup)\\n\";\n            //print_r($groups);\n            //print_r($groupsBoundaries);\n        }\n\n        foreach ($groupsBoundaries as [$isTopLeft, $isBottomRight]) {\n            if ($isTopLeft && $isBottomRight) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}",
    "submit_ts": "1722137891",
    "subm_id": "1335776573"
}