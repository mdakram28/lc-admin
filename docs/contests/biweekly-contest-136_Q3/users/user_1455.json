{
    "username": "ecstatic-tereshkovaogd",
    "submission": "class Solution {\npublic:\n    pair<int, int> countOne(vector<vector<int>>& points, vector<vector<int>>& grid){\n        int m = grid.size();\n        int n = grid[0].size();\n\n        unordered_set<int> exist;\n        int cnt = 0;\n        for(auto& p : points){\n            int x = p[0], y = p[1];\n            if(exist.find(x * n + y) == exist.end()){\n                cnt += grid[x][y];\n                exist.insert(x * n + y);\n            }\n        }\n\n        return {exist.size(), cnt};\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n\n        vector<pair<int, int>> count;\n        for(int i = 0; i < m / 2 + m % 2; ++i){\n            int r1 = i, r2 = m - 1 - i;\n            for(int j = 0; j < n / 2 + n % 2; ++j){\n                int c1 = j, c2 = n - 1 - j;               \n\n                vector<vector<int>> points = {{r1, c1}, {r1, c2}, {r2, c1}, {r2, c2}};\n                auto cnt = countOne(points, grid);\n                count.push_back(cnt);\n            }\n        }\n\n        int ans = 0;\n        int x0 = 0, x1 = 0, x2 = 0;\n        for(auto& c : count){\n            if(c.first == 4){\n                ans += min(c.second, 4 - c.second);\n            }\n            else if(c.first == 1){\n                ans += c.second;\n            }\n            else{\n                if(c.second == 0)++x0;\n                else if(c.second == 1)++x1;\n                else ++x2;\n            }\n        }\n\n        ans += x1;\n\n        x0 %= 2;\n        x2 %= 2;\n\n        if(x2 && !x1){\n            ans += 2;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699030",
    "subm_id": "552273716"
}