{
    "username": "plyusnovdmitrii",
    "submission": "#include <iostream>\n#include <utility>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <map>\n#include <unordered_set>\n#include <iostream>\n#include <utility>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <fstream>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <bitset>\n#include <sstream>\n#include <ext/rope>\n#include <ctime>\n#include <random>\n#include <cstdlib>\n#include <complex>\n\nusing namespace std;\nusing namespace __gnu_pbds;\nusing namespace __gnu_cxx;\n\n/* clang-format off */\n\n/* TYPES  */\n#define ll long long\n#define pii pair<int, int>\n#define pll pair<long long, long long>\n#define vi vector<int>\n#define vll vector<long long>\n#define vpii vector<pair<int, int>>\n#define vpii vector<pair<int, int>>\n#define vvpii vector<vector<pair<int, int>>>\n#define vpll vector<pair<long long, long long>>\n#define vvpll vector<vector<pair<long long, long long>>>\n#define vvi vector<vector<int>>\n#define vvll vector<vector<long long>>\n#define mii map<int, int>\n#define si set<int>\n#define sc set<char>\n\n\n\n/* FUNCTIONS */\n#define feach(el, v) for(auto &el: v)\n#define rep(i, n) for(int i=0;i<n;i++)\n#define reprv(i, n) for(int i=n-1;i>=0;i--)\n#define reps(i, s, e) for(int i=s;i<e;i++)\n#define reprve(i, e, s) for(int i=e;i>=s;i--)\n#define repe(x, y) for (auto &x: y)\n#define repe2(x, a, y) for (auto &[x,a]: y)\n\ntypedef tree<int, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update> oSet;\n\n\nclass Solution {\npublic:\n    vll segtree;\n\n    void build(vi &x, int v, int tl, int tr) {\n        if (tl == tr) return  void(segtree[v] = x[tl]);\n\n        int tm = (tl + tr) >> 1;\n        build(x, v << 1, tl, tm); build(x, v << 1 | 1, tm + 1, tr);\n        segtree[v] = segtree[v << 1] & segtree[v << 1 |  1];\n    }\n\n    int queryT(int l,  int r, int v, int tl, int tr) {\n        if (l > r) return INT32_MAX;\n        if (l == tl && r == tr) return segtree[v];\n\n        int tm = (tl + tr) >> 1;\n        return queryT(l, min(r, tm), v << 1, tl, tm) & queryT(max(tm + 1, l), r, v << 1 | 1, tm + 1, tr);\n    }\n\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        segtree.resize(4 * n); segtree.assign(4 *  n, 0);\n        build(nums, 1, 0, n - 1);\n        int ans = 1e9;\n        rep(i, n) {\n            int l = i - 1, r = n - 1;\n\n            while (r - l > 1) {\n                int m = (l + r) >> 1, att = queryT(i, m, 1,  0, n - 1);\n                if (att >= k)  l = m;\n                else  r = m;\n            }\n            if (l != i - 1) {\n                int qu = queryT(i, l, 1, 0, n - 1);\n                ans = min(ans, abs(qu - k));\n            }\n            int qu2 = queryT(i, r, 1, 0, n - 1);\n            ans = min(ans, abs(qu2 - k));\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1717298327",
    "subm_id": "1274775107"
}