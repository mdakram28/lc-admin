{
    "username": "2022_grad",
    "submission": "typedef long long int  ll;\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<int>x_plus_y;\n        multiset<int>x_minus_y;\n        int ans = 1e9;\n\n        for (int i = 0; i <n ; ++i){\n            x_plus_y.insert(points[i][0]+points[i][1]);\n            x_minus_y.insert(points[i][0]-points[i][1]);\n        }\n       \n        for (int i = 0; i < n; ++i){\n            int x = points[i][0];\n            int y = points[i][1];\n            auto it = x_plus_y.find(x+y);\n            if(it!=x_plus_y.end()){\n                x_plus_y.erase(it);\n            }\n\n            it = x_minus_y.find(x-y);\n            if(it!=x_minus_y.end()){\n                x_minus_y.erase(it);\n            }\n\n            int mn1 = *x_plus_y.begin();\n            int mn2 = *x_minus_y.begin();\n\n            int mx1 = *x_plus_y.rbegin();\n            int mx2 = *x_minus_y.rbegin();\n\n            ans = min(ans,max(abs(mn1-mx1), abs(mn2-mx2)));\n\n            x_plus_y.insert(x+y);\n            x_minus_y.insert(x-y);\n\n        }\n        if(ans == 1e9)ans=0;\n        return ans;\n\n    }\n};\n\nstatic const auto speedup = []() {\n    std::ios::sync_with_stdio(false); std::cin.tie(nullptr); return 0;\n}();\n"
}