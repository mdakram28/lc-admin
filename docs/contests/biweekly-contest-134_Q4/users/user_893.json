{
    "username": "Chandraprabhu",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        #define ll long long \n        ll ans = 0;\n        int n = nums.size();\n        const int mx = 31;\n        int ze[n+1][mx];\n        for(int i = 0 ;i<mx;i++){\n            ze[n][i] = n;\n        }\n        for(int i = n-1;i>=0;i--){\n            memcpy(ze[i],ze[i+1],sizeof(ze[i]));\n            for(int j = 0 ;j<mx;j++){\n                if(!(nums[i]&(1<<j))){\n                    ze[i][j] = i;\n                }\n            }\n        }\n        for(int i = 0 ;i<n;i++){\n            int cur = nums[i]; \n            int st = n;\n            if(nums[i]==k)st = i;\n            int lst = i;\n            while(1){\n                int nxt = n;\n                // cout<<lst<<' ';\n                for(int j = 0 ;j<mx;j++){\n                    if(cur&(1<<j))\n                        nxt = min(nxt,ze[lst+1][j]);\n                }\n                if(nxt==n){\n                    ans+=n-st;\n                    break;\n                }\n                cur&=nums[nxt];\n                if((cur&k)!=k){\n                    ans+=max(0,nxt-st);\n                    break;\n                }\n                if(cur==k && st==n){\n                    st = nxt;\n                }\n                lst = nxt;\n            }\n            // cout<<ans<<' ';\n        }\n        // cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1720279073",
    "subm_id": "1311736245"
}