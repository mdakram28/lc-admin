{
    "username": "aiswalprince07",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& originalNumbersVector, int givenTargetValue) {\n        map<int, vector<int>> differenceToMaxValuesMap;\n        vector<int> maximumValuesVector;\n        \n        for(int currentIndex = 0; currentIndex < originalNumbersVector.size() / 2; currentIndex++) {\n            int firstNumber = originalNumbersVector[currentIndex];\n            int secondNumber = originalNumbersVector[originalNumbersVector.size() - currentIndex - 1];\n            int absoluteDifference = abs(firstNumber - secondNumber);\n            int maximumPossibleValue = max({firstNumber, secondNumber, givenTargetValue - firstNumber, givenTargetValue - secondNumber});\n            \n            differenceToMaxValuesMap[absoluteDifference].push_back(maximumPossibleValue);\n            maximumValuesVector.push_back(maximumPossibleValue);\n        }\n        \n        int minimumChangesRequired = originalNumbersVector.size();\n        sort(maximumValuesVector.begin(), maximumValuesVector.end());\n        \n        for(auto& differencePair : differenceToMaxValuesMap) {\n            int currentDifference = differencePair.first;\n            int transformationsCount = lower_bound(maximumValuesVector.begin(), maximumValuesVector.end(), currentDifference) - maximumValuesVector.begin();\n            transformationsCount = transformationsCount * 2 + (originalNumbersVector.size() / 2 - transformationsCount);\n            \n            for(auto& maxValue : differencePair.second) {\n                if(maxValue < currentDifference) {\n                    transformationsCount -= 2;\n                } else {\n                    transformationsCount -= 1;\n                }\n            }\n            \n            minimumChangesRequired = min(minimumChangesRequired, transformationsCount);\n        }\n        \n        return minimumChangesRequired;\n    }\n};\n",
    "submit_ts": "1721488374",
    "subm_id": "1327420219"
}