{
    "username": "knotri",
    "submission": "const full = (arr: number[]) => {\n    let count = 0;\n    for(let i = 0; i <= arr[0]; i++) {\n        for(let j = 0; j <= arr[1]; j++) {\n            for(let k = 0; k <= arr[2]; k++) {\n                if ((i <= j) && (j <= k)) {\n                    if ((arr[0] - i) >= (arr[1] - j) && (arr[1] - j) >= (arr[2] - k)) {\n                        count++;\n                        console.log(`${i},${j},${k} | ${arr[0] - i},${arr[1] - j},${arr[2] - k}`)\n                    }\n                }\n            }\n        }\n    }\n    console.log({count})\n}\n\n\n/*\n\nInput:\n[40,40,40,40,41,42,43,44,45,45]\nOutput:\n10272278170\nExpected:\n272278100\n\n*/\n\nfunction countOfPairs(arr: number[]): number {\n    console.log('____')\n    \n    const mod = 10**9 + 7\n    const dp = [\n        Array.from({length: arr[0] + 1}, () => 1)\n    ]\n    for(let i = 1; i < arr.length; i++) {\n        const prev = dp[i - 1]\n        const prevValue = arr[i - 1]\n        const next = []\n        for(let j = 0; j <= arr[i]; j++) {\n            next[j] = 0\n            for(let k = 0; k <= j; k++) {\n                const current = arr[i] - j\n                const prevSpValue = prevValue - k\n                if (current <= prevSpValue) {\n                    // next[j] += (prev[k] ?? 0)\n                    next[j] = (next[j] + (prev[k] ?? 0)) % mod\n                }\n                \n            }\n        }\n        dp.push(next)\n    }\n    \n    const result = dp.at(-1).reduce((a, b) => (a+b) % mod, 0)\n    // console.log('== DP == \\n' + dp.map(d => d.join(', ')).join('\\n') + '\\n == END ==')\n    \n    \n    \n    // full(arr)\n    console.log({result})\n    return result\n};",
    "submit_ts": "1723346282",
    "subm_id": "1351574166"
}