{
    "username": "\u6709\u7ea6\u675f\u5c31\u5e94\u8be5\u6709\u65b9\u7a0b",
    "submission": "class Solution(object):\n    def maximumValueSum(self, board):\n        \"\"\"\n        :type board: List[List[int]]\n        :rtype: int\n        \"\"\"\n        # from sortedcontainers import SortedList\n        s = []\n        n, m = len(board), len(board[0])\n        for i in range(n):\n            for j in range(m):\n                s.append((board[i][j], i, j))\n        s.sort(reverse=True)\n        rmk = [False]*n\n        cmk = [False]*m\n        rv = [-0x7ffffffffff]\n        mn = m*n\n        def dfs(n, v, j):\n            if n==0:\n                rv[0]=max(rv[0], v)\n                return\n            m = 6\n            while m and j<mn:\n                cv, ci, cj = s[j]\n                if rmk[ci]==False and cmk[cj]==False:\n                    rmk[ci], cmk[cj]=True, True\n                    dfs(n-1, v+cv, j+1)\n                    m-=1\n                    rmk[ci], cmk[cj]=False, False\n                j+=1\n        dfs(3, 0, 0)\n        return rv[0]\n        \"\"\"\n        r = s[0][0]\n        rmk[s[0][1]]=True\n        cmk[s[0][2]] = True\n        i = 1\n        mn = m*n\n        while i<mn:\n            v, ci, cj = s[i]\n            if rmk[ci]==False and cmk[cj]==False:\n                r+=v\n                rmk[ci]=True\n                cmk[cj]=True\n                break\n            i+=1\n        while i<mn:\n            v, ci, cj = s[i]\n            if rmk[ci]==False and cmk[cj]==False:\n                r+=v\n                rmk[ci]=True\n                cmk[cj]=True\n                break\n            i+=1\n        return r\n        \"\"\"\n            ",
    "submit_ts": "1723906529",
    "subm_id": "556320229"
}