{
    "username": "ganeshdarshan18",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCut, vector<int>& vCut) {\n        long long int hsize = hCut.size(), vsize = vCut.size() ,cost = 0 , hPiece =1 , vPiece = 1;\n        sort(hCut.begin(),hCut.end());\n        sort(vCut.begin(),vCut.end());\n        long long int i = hsize-1 , j = vsize -1 ;\n        while(i>=0 && j>=0){\n            if(hCut[i]>=vCut[j]){\n                cost += hCut[i--]*vPiece;\n                hPiece++;\n            }else{\n                cost+=vCut[j--]*hPiece;\n                vPiece++;\n            }\n        }\n        while(i>=0)cost+=hCut[i--]*vPiece;\n        while(j>=0) cost+=vCut[j--]*hPiece;\n\n        return cost ;\n    }\n};",
    "submit_ts": "1720926424",
    "subm_id": "1320285845"
}