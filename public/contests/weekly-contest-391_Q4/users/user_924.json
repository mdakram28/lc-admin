{
    "username": "Sushil_kumar",
    "submission": "class Solution {\npublic:\n    \n    int func(vector<vector<int>> &arr, vector<vector<int>> &brr, int i){\n        int lw1 =0;\n        \n        while(lw1<arr.size() && arr[lw1][1]==i){\n            lw1++;\n        }\n        \n        int lw2 =0;\n        \n        while(lw2<brr.size() && brr[lw2][1]==i){\n            lw2++;\n        }\n        \n        int hg1 = arr.size()-1;\n        \n        while(hg1>=0 && arr[hg1][1]==i){\n            hg1--;\n        }\n        \n        int hg2 = brr.size()-1;\n        \n        while(hg2>=0 && brr[hg2][1]==i){\n            hg2--;\n        }\n        \n        return max(arr[hg1][0]-arr[lw1][0], brr[hg2][0]-brr[lw2][0]);\n        \n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<vector<int>> arr;\n        vector<vector<int>> brr;\n        int n = points.size();\n        \n    \n        for(int i=0;i<n;i++){\n            arr.push_back({points[i][0]-points[i][1],i});\n            brr.push_back({points[i][1]+points[i][0],i});\n        }\n        \n        sort(arr.begin(), arr.end());\n        sort(brr.begin(), brr.end());\n        \n        // int mx = max(arr.back()-arr.front(), brr.back()-brr.front());\n        // cout<<mx<<endl;\n        \n        int mn = INT_MAX;\n        \n        mn = min(mn, func(arr, brr, arr[0][1]));\n        // cout<<mn<<\" \"<<arr[0][1]<<endl;\n        mn = min(mn, func(arr, brr, arr[n-1][1]));\n        // cout<<mn<<\" \"<<arr[n-1][1]<<endl;\n        mn = min(mn, func(arr, brr, brr[0][1]));\n         // cout<<mn<<\" \"<<brr[0][1]<<endl;\n        mn = min(mn, func(arr, brr, brr[n-1][1]));\n         // cout<<mn<<\" \"<<brr[n-1][1]<<endl;\n        return mn;\n        \n    }\n};"
}