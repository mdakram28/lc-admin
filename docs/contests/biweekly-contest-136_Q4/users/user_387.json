{
    "username": "jkmp",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1, m = edges.size();\n        \n        std::vector<std::vector<int>> adj(n);\n        for (int i = 0; i < m; i++) {\n            int x = edges[i][0];\n            int y = edges[i][1];\n            adj[x].push_back(y);\n            adj[y].push_back(x);\n        }\n        \n        std::vector<int> down(n);\n        auto dfs = [&](auto self, int x, int p) -> void {\n            for (int y : adj[x]) {\n                if (y != p) {\n                    self(self, y, x);\n                    down[x] = max(down[x], down[y] + 1 + (y % 2 == 0));\n                }\n            }\n        };\n        dfs(dfs, 0, -1);\n        \n        std::vector<int> up(n);\n        auto dfs2 = [&](auto self, int x, int p) -> void {\n            std::vector<int> a;\n            for (int y : adj[x]) {\n                if (y != p) {\n                    a.push_back(y);\n                    up[y] = up[x] + 1 + (x % 2 == 0);\n                }\n            }\n            std::sort(a.begin(), a.end(), [&](int i, int j) {\n                if (down[i] == down[j]) {\n                    return (i % 2) < (j % 2);\n                }\n                return down[i] > down[j];\n            });\n            for (int y : adj[x]) {\n                if (y != p) {\n                    if (y != a[0]) {\n                        up[y] = std::max(up[y], down[a[0]] + 1 + (a[0] % 2 == 0) + 1 + (x % 2 == 0));\n                    } else if (a.size() > 1) {\n                        up[y] = std::max(up[y], down[a[1]] + 1 + (a[1] % 2 == 0) + 1 + (x % 2 == 0));\n                    }\n                    self(self, y, x);\n                }\n            }\n        };\n        dfs2(dfs2, 0, -1);\n        \n        std::vector<int> ans(n);\n        for (int i = 0; i < n; i++) {\n            ans[i] = std::max(down[i], up[i]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722700351",
    "subm_id": "1343239211"
}