{
    "username": "ssayzx",
    "submission": "class Solution {\npublic:\n    #define LOG(format, ...) do { \\\n        if (0) printf(format, ##__VA_ARGS__); \\\n    } while (0)  \n    \n    // [0 ~ n-1]\u7248\u672c\n    struct TreeArray {\n        vector<int> c;\n        // \u6709\u6548\u8303\u56f4[0, n - 1], \u5219\u6570\u7ec4c\u957f\u5ea6\u4e3an\n        TreeArray(int n) { c = vector<int>(n, 0); }\n        int lowbit(int x) { return x & (-x); }\n        // x\u4e3a\u66f4\u65b0\u7684\u4f4d\u7f6e,y\u4e3a\u589e\u91cf\n        void update(int x, int y){ \n            int rx = x + 1;\n            while(rx <= c.size()){\n                c[rx - 1] += y;\n                rx += lowbit(rx);\n            }\n        }\n        int sum(int x){ // \u8ba1\u7b97[0, x]\u7684\u548c\n            int res = 0, rx = x + 1;\n            while(rx > 0){\n                res += c[rx - 1];\n                rx -= lowbit(rx);\n            }\n            return res;\n        }\n        int rangeSum(int a, int b) { // \u8ba1\u7b97[a, b]\u7684\u548c\n            if (b - a + 1 < 3) return 0;\n            return sum(b) - sum(a + 1);\n        };\n    };\n\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n\n        TreeArray tree(n);\n        vector<int> tow(n, 0);\n        auto match = [&](int r) {\n            if (r < 2) return false;\n            return nums[r - 1] > nums[r - 2] && nums[r - 1] > nums[r];\n        };\n\n        for (int i = 2; i < n; i++) {\n            if (match(i)) tow[i] = 1, tree.update(i, 1);\n        }\n        \n        for (int i = 0; i < n; i++) LOG(\"%u \", tow[i]);\n        LOG(\"\\n\");\n\n        vector<int> ans;\n        for (auto &q : queries) {\n            if (q[0] == 2) { // nums[q[2]] = q[3];\n                int l = max(q[1] - 2, 0), r = min(q[1] + 2, n - 1);\n                nums[q[1]] = q[2];\n                LOG(\"nums[%u]=%u (%u,%u)\\n\", q[1], q[2], l, r);\n                for (int i = l; i <= r; i++) {\n                    if (tow[i]) tree.update(i, -1), tow[i] = 0;\n                    if (match(i)) tow[i] = 1, tree.update(i, 1);\n                }\n                for (int i = 0; i < n; i++) LOG(\"%u \", tow[i]);\n                LOG(\"\\n\");\n            } else {\n                LOG(\"query(%u,%u)\\n\", q[1], q[2]);\n                ans.push_back(tree.rangeSum(q[1], q[2]));\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1718508460.0
}