{
    "username": "miyanyanyan",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<vector<int>> d(4, vector<int>(n));\n        vector<vector<int>> index(4, vector<int>(n));\n        int cnt = 0;\n        for (auto& p : points) {\n            int x = p[0], y = p[1];\n            d[0][cnt] = x + y;\n            d[1][cnt] = -x + y;\n            d[2][cnt] = x - y;\n            d[3][cnt] = -x - y;\n            \n            index[0][cnt] = cnt;\n            index[1][cnt] = cnt;\n            index[2][cnt] = cnt;\n            index[3][cnt] = cnt;\n            \n            cnt++;\n        }\n        \n        vector<int> remove;\n        int maxv = INT_MIN;\n        for (int i = 0; i < 4; ++i) {\n            sort(index[i].begin(), index[i].end(), [&](int l, int r){return d[i][l] < d[i][r];});\n            int cur = d[i][index[i][n - 1]] - d[i][index[i][0]];\n            if (cur > maxv) {\n                maxv = cur;\n                remove.clear();\n                remove.push_back(index[i][n - 1]);\n                remove.push_back(index[i][0]);\n            }\n            else if (cur == maxv) {\n                remove.push_back(index[i][n - 1]);\n                remove.push_back(index[i][0]);\n            }\n        }\n        \n        int ans = maxv;\n        for (int k : remove) {\n            int cur = INT_MIN;\n            for (int i = 0; i < 4; ++i) {\n                int left = index[i][0];\n                if (left == k) {\n                    left = index[i][1];\n                }\n                int right = index[i][n - 1];\n                if (right == k) {\n                    right = index[i][n - 2];\n                }\n                cur = max(cur, d[i][right] - d[i][left]);\n            }\n            ans = min(ans, cur);\n        }\n        return ans;\n    }\n    \n};"
}