{
    "username": "bonju85",
    "submission": "class UnionFind:\n    def __init__(self, circles):\n        n = len(circles)\n        self.is_root = [True] * n\n        self.parent = {}\n        self.x_range = {}\n        self.y_range = {}\n\n        for i, circle in enumerate(circles):\n            x, y, r = circle\n            self.parent[i] = i\n            self.x_range[i] = (x-r, x+r)\n            self.y_range[i] = (y-r, y+r)\n\n    def find(self, c):\n        p = self.parent[c]\n        if p != c:\n            self.parent[c] = self.find(p)\n        return self.parent[c]\n\n    def union(self, c1, c2):\n        p1 = self.find(c1)\n        p2 = self.find(c2)\n        self.is_root[c1] = False\n        self.parent[p1] = p2\n        x_range_1 = self.x_range[p1]\n        x_range_2 = self.x_range[p2]\n        self.x_range[p2] = (min(x_range_1[0], x_range_2[0]), max(x_range_1[1], x_range_2[1]))\n        y_range_1 = self.y_range[p1]\n        y_range_2 = self.y_range[p2]\n        self.y_range[p2] = (min(y_range_1[0], y_range_2[0]), max(y_range_1[1], y_range_2[1]))\n\n\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        uf = UnionFind(circles)\n        for i1, c1 in enumerate(circles):\n            x1, y1, r1 = c1\n            for i2, c2 in enumerate(circles):\n                if i1 == i2:\n                    continue\n                x2, y2, r2 = c2\n                if (x1-x2)**2 + (y1-y2)**2 <= (r1+r2)**2:\n                    if uf.find(i1) == uf.find(i2):\n                        continue\n                    uf.union(i1, i2)\n        \n        for i in range(len(circles)):\n            if not uf.is_root[i]:\n                continue\n            x_range = uf.x_range[i]\n            y_range = uf.y_range[i]\n            if x_range[0] <= 0 and x_range[1] >= X or y_range[0] <= 0 and y_range[1] >= Y:\n                return False\n            if x_range[1] >= X and y_range[1] >= Y:\n                return False\n            if x_range[0] <= 0 and y_range[0] <= 0:\n                return False\n        return True\n",
    "submit_ts": "1722139046",
    "subm_id": "1335806380"
}