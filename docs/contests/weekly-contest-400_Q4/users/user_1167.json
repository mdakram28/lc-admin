{
    "username": "Pisces311",
    "submission": "template <typename T = int, int mn = 0, int mx = 100000>\nclass segmentTree {\n    struct Node {\n        T val;\n        int ls, rs;\n    };\n\n    int cnt;\n    vector<Node> tr;\n\n    void pushUp(int o, int l, int r) {\n        tr[o].val = tr[tr[o].ls].val & tr[tr[o].rs].val;\n    }\n\n    void pushDown(int o, int l, int r) {\n        if (!tr[o].ls) tr[o].ls = ++cnt, tr.emplace_back();\n        if (!tr[o].rs) tr[o].rs = ++cnt, tr.emplace_back();\n    }\n\n   public:\n    segmentTree() : tr(1), cnt(0) { tr.reserve(500000); }\n\n    T query(int ql, int qr, int o = 0, int l = mn, int r = mx) {\n        if (r < ql || qr < l) return 2147483647;\n        if (ql <= l && r <= qr) return tr[o].val;\n        pushDown(o, l, r);\n        int mid = (l + r) >> 1;\n        return query(ql, qr, tr[o].ls, l, mid) &\n               query(ql, qr, tr[o].rs, mid + 1, r);\n    }\n\n    void update(int q, T k, int o = 0, int l = mn, int r = mx) {\n        if (r < q || q < l) return;\n        if (q <= l && r <= q) {\n            tr[o].val = k;\n            return;\n        }\n        pushDown(o, l, r);\n        int mid = (l + r) >> 1;\n        update(q, k, tr[o].ls, l, mid);\n        update(q, k, tr[o].rs, mid + 1, r);\n        pushUp(o, l, r);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        segmentTree<> st;\n        for (int i = 0; i < nums.size(); i++) {\n            st.update(i, nums[i]);\n        }\n        int ans = 0x3f3f3f3f;\n        for (int i = 0; i < nums.size(); i++) {\n            int l = 0, r = i;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                int ret = st.query(mid, i);\n                ans = min(ans, abs(ret - k));\n                if (ret < k) {\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717300445.0
}