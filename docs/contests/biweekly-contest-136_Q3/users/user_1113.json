{
    "username": "harshit_99",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        int r = grid.size(),c = grid[0].size();\n        int cnt = 0;\n        for(int i=0;i<r/2;i++)\n        {\n            for(int j=0;j<c/2;j++)\n            {\n                cnt = grid[i][j] + grid[i][c-j-1] + grid[r-i-1][j] + grid[r-i-1][c-j-1];\n                ans += min(cnt,4-cnt);\n            }\n        }\n        if(r%2 != 0 && c%2 != 0)\n        {\n            //balance mid row\n            ans += grid[r/2][c/2];\n            int balanced_ones = 0,unbalanced_ones = 0;\n            for(int j=0;j<c/2;j++)\n                if(grid[r/2][j] == 1 && grid[r/2][c-j-1] == 1)\n                    balanced_ones += 2;\n                else if(grid[r/2][j] != grid[r/2][c-j-1])\n                    unbalanced_ones++;\n            for(int i=0;i<r/2;i++)\n                if(grid[i][c/2] == 1 && grid[r-i-1][c/2] == 1)\n                    balanced_ones += 2;\n                else if(grid[i][c/2] != grid[r-i-1][c/2])\n                    unbalanced_ones++;\n            if(balanced_ones%4 == 0)\n            {\n                ans += unbalanced_ones;\n                return ans;\n            }\n            if(balanced_ones%4 != 0)\n            {\n                if(unbalanced_ones > 0)\n                {\n                    ans += unbalanced_ones;\n                    return ans;\n                }\n                else{\n                    ans += 2;\n                    return ans;\n                }\n            }\n        }\n        if(r%2 != 0 && c%2 == 0)\n        {\n            //balance mid row\n            int balanced_ones = 0,unbalanced_ones = 0;\n            for(int j=0;j<c/2;j++)\n                if(grid[r/2][j] == 1 && grid[r/2][c-j-1] == 1)\n                    balanced_ones += 2;\n                else if(grid[r/2][j] != grid[r/2][c-j-1])\n                    unbalanced_ones++;\n\n            //cout<<balanced_ones<<\" \"<< unbalanced_ones<<endl;\n            \n            if(balanced_ones%4 == 0)\n            {\n                ans += unbalanced_ones;\n                return ans;\n            }\n            if(balanced_ones%4 != 0)\n            {\n                if(unbalanced_ones > 0)\n                {\n                    ans += unbalanced_ones;\n                    return ans;\n                }\n                else{\n                    ans += 2;\n                    return ans;\n                }\n            }\n        }\n        if(r%2 == 0 && c%2 != 0)\n        {\n            //balance mid row\n            int balanced_ones = 0,unbalanced_ones = 0;\n            \n            for(int i=0;i<r/2;i++)\n                if(grid[i][c/2] == 1 && grid[r-i-1][c/2] == 1)\n                    balanced_ones += 2;\n                else if(grid[i][c/2] != grid[r-i-1][c/2])\n                    unbalanced_ones++;\n            \n            if(balanced_ones%4 == 0)\n            {\n                ans += unbalanced_ones;\n                return ans;\n            }\n            if(balanced_ones%4 != 0)\n            {\n                if(unbalanced_ones > 0)\n                {\n                    ans += unbalanced_ones;\n                    return ans;\n                }\n                else{\n                    ans += 2;\n                    return ans;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698827",
    "subm_id": "1343193103"
}