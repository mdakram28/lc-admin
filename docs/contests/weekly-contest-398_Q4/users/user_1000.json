{
    "username": "Momos_",
    "submission": "class Solution {\npublic:\n//     long long binomialCoeff(long long n, long long k)\n//     {\n//         long long C[k + 1];\n//         memset(C, 0, sizeof(C));\n\n//         C[0] = 1; // nC0 is 1\n\n//         for (long long i = 1; i <= n; i++)\n//         {\n\n//             // Compute next row of pascal triangle using\n//             // the previous row\n//             for (long long j = min(i, k); j > 0; j--)\n//                 C[j] = C[j] + C[j - 1];\n//         }\n//         return C[k];\n//     }\nlong long printNcR(long long n, long long r)\n{\n \n    // p holds the value of n*(n-1)*(n-2)...,\n    // k holds the value of r*(r-1)...\n    long long p = 1, k = 1;\n \n    // C(n, r) == C(n, n-r),\n    // choosing the smaller value\n    if (n - r < r)\n        r = n - r;\n \n    if (r != 0) {\n        while (r) {\n            p *= n;\n            k *= r;\n \n            // gcd of p, k\n            long long m = __gcd(p, k);\n            p /= m;\n            k /= m;\n \n            n--;\n            r--;\n        }\n    }\n \n    else\n        p = 1;\n \n    // if our approach is correct p = ans and k = 1\n    return p;\n}\n    long long waysToReachStair(long long k) {\n        long long ans = 0;\n        if(k==1) ans++;\n        if(k==0) ans++;\n        for(long long c=0;c<=60;c++){\n            long long p = (1ll<<(c+1)) - k;\n            if(p<=c+2 && p>=0) {\n                long long n = c+2, r = p;\n                long long temp = printNcR(n,r);\n                ans += temp;\n            }\n            // else break;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716089736.0
}