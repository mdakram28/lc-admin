{
    "username": "abhishekvanjani",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int N=points.size();\n        vector<pair<int,int>> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) {\n            V[i] = {points[i][0] + points[i][1], i};\n            V1[i] = {points[i][0] - points[i][1], i};\n        }\n\n        // Sorting both the vectors\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n\n        int first=V[N-1].first-V[1].first;\n        if(V1[N-1].second != V[0].second && V1[0].second != V[0].second)\n            first=max(first, V1[N-1].first-V1[0].first);\n        else if(V1[N-1].second == V[0].second)\n            first=max(first, V1[N-2].first-V1[0].first);\n        else if(V1[0].second == V[0].second)\n            first=max(first, V1[N-1].first-V1[1].first);\n        \n        int second=V[N-2].first-V[0].first;\n        if(V1[N-1].second != V[N-1].second && V1[0].second != V[N-1].second)\n            second=max(second, V1[N-1].first-V1[0].first);\n        else if(V1[N-1].second == V[N-1].second)\n            second=max(second, V1[N-2].first-V1[0].first);\n        else if(V1[0].second == V[N-1].second)\n            second=max(second, V1[N-1].first-V1[1].first);\n        \n        int third=V1[N-1].first-V1[1].first;\n        if(V[N-1].second != V1[0].second && V[0].second != V1[0].second)\n            third=max(third, V[N-1].first-V[0].first);\n        else if(V[N-1].second == V1[0].second)\n            third=max(third, V[N-2].first-V[0].first);\n        else if(V[0].second == V1[0].second)\n            third=max(third, V[N-1].first-V[1].first);\n        \n        int fourth=V1[N-2].first-V1[0].first;\n        if(V[N-1].second != V1[N-1].second && V[0].second != V1[N-1].second)\n            fourth=max(fourth, V[N-1].first-V[0].first);\n        else if(V[N-1].second == V1[N-1].second)\n            fourth=max(fourth, V[N-2].first-V[0].first);\n        else if(V[0].second == V1[N-1].second)\n            fourth=max(fourth, V[N-1].first-V[1].first);\n        \n        int ans=min(min(first, second), min(third, fourth));\n        return ans;\n    }\n};"
}