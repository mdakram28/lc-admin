{
    "username": "jakao",
    "submission": "struct node{\n        node *nxt[26];\n        int cnt, sz, w;\n        node():cnt(0),sz(0),w(-1){\n            memset(nxt,0,sizeof(nxt));\n        }\n    };\nstruct Trie{\n    \n    node *root;\n    void init(){root = new node();}\n    void insert(const string& s, int cost){\n        node *now = root;\n        for(auto i:s){\n            now->sz++;\n            if(now->nxt[i-'a'] == NULL){\n                now->nxt[i-'a'] = new node();\n            }\n            now = now->nxt[i-'a'];\n        }\n        now->w = cost;\n        now->cnt++;\n        now->sz++;\n    }\n}trie;\n\nclass Solution {\npublic:\n    int dp[100005]={};\n    bool st[100005]={};\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        unordered_map<string, int> mp;\n        int n = words.size();\n        trie.init();\n        for(int i = 0; i < n; i++){\n            if(!mp.count(words[i])){\n                mp[words[i]] = costs[i];\n            }\n            else{\n                mp[words[i]] = min(mp[words[i]], costs[i]);\n            }\n        }\n        memset(dp, 0x3f, sizeof(dp));\n        for(auto i : mp){\n            trie.insert(i.first, i.second);\n        }\n        string s = target;\n        dp[0] = 0;\n        st[0] = 1;\n        for(int i = 0; i < target.size(); i++){\n            if(st[i] == 0)  continue;\n            node *now = trie.root;\n            for(int j = i; j < target.size(); j++){\n                if(now->nxt[s[j] - 'a']){\n                    now = now->nxt[s[j] - 'a'];\n                    if(now->w != -1){\n                        dp[j+1] = min(dp[j+1], dp[i] + now->w);\n                        st[j+1] = 1;\n                    }\n                    // cout << \"dp[\" << j << \"] =\" << dp[j+1] << endl;\n                }\n                else{\n                    break;\n                }\n            }\n        }\n        // cout << \" ------ \" << endl;\n        if(dp[s.size()] > 500000000)    return -1;\n        return dp[s.size()];\n        \n    }\n};",
    "submit_ts": "1720321860",
    "subm_id": "1312334261"
}