{
    "username": "chintawar",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, std::vector<int>& horizontalCut, std::vector<int>& verticalCut) {\n        std::vector<std::pair<int, bool>> cuts;  // Pair of (cost, isHorizontal)\n        \n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, true});\n        }\n        \n        for (int cost : verticalCut) {\n            cuts.push_back({cost, false});\n        }\n        \n        std::sort(cuts.rbegin(), cuts.rend());  // Sort in descending order\n        \n        long long totalCost = 0;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        \n        // Process the cuts in sorted order\n        for (const auto& cut : cuts) {\n            if (cut.second) {\n                // Horizontal cut\n                totalCost += static_cast<long long>(cut.first) * verticalPieces;\n                ++horizontalPieces;\n            } else {\n                // Vertical cut\n                totalCost += static_cast<long long>(cut.first) * horizontalPieces;\n                ++verticalPieces;\n            }\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720924699",
    "subm_id": "1320227337"
}