{
    "username": "VeXe1199",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<vector<int>> dp(n + 1, vector<int>(401, 0));\n        dp[0][0] = 1;\n        \n        vector<int> req(n, -1);\n        for (const auto& r : requirements) {\n            req[r[0]] = r[1];\n        }\n        \n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= min(400, i * (i - 1) / 2); j++) {\n                for (int k = 0; k < i; k++) {\n                    int prev = j - k;\n                    if (prev >= 0 && prev <= min(400, (i - 1) * (i - 2) / 2)) {\n                        dp[i][j] = (dp[i][j] + dp[i-1][prev]) % MOD;\n                    }\n                }\n                \n                if (req[i-1] != -1 && j != req[i-1]) {\n                    dp[i][j] = 0;\n                }\n            }\n        }\n        \n        int result = 0;\n        for (int j = 0; j <= min(400, n * (n - 1) / 2); j++) {\n            result = (result + dp[n][j]) % MOD;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": 1719070194.0
}