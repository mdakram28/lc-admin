{
    "username": "40547011S",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<int> diff(n, 0);\n        for (int i = 0; i < n; i += 1) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        int cur = 0, dir = 1;\n        vector<int> v;\n        for (int i = 0; i < n; i += 1) {\n            if (diff[i] * dir <= 0) {\n                dir *= -1;\n                stack<int> st;\n                for (int j = 0; j < v.size(); j += 1) {\n                    // cout << v[j] << endl;\n                    int max_val = 0;\n                    while (!st.empty() && st.top() > v[j]) {\n                        max_val = max(max_val, st.top());\n                        st.pop();\n                    }\n                    ans += max(0, max_val - v[j]);\n                    \n                    // cout << max_val << \" \" << ans << endl;\n                    st.push(v[j]);\n                }\n                if (!st.empty()) {\n                    ans += st.top();\n                }\n                v.clear();\n            }\n            v.push_back(abs(diff[i]));\n        }\n        stack<int> st;\n        for (int j = 0; j < v.size(); j += 1) {\n            // cout << v[j] << endl;\n            int max_val = 0;\n            while (!st.empty() && st.top() > v[j]) {\n                max_val = max(max_val, st.top());\n                st.pop();\n            }\n            ans += max(0, max_val - v[j]);\n            // cout << max_val << \" \" << ans << endl;\n            st.push(v[j]);\n        }\n        if (!st.empty()) {\n            ans += st.top();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721530731",
    "subm_id": "1327942225"
}