{
    "username": "diffusethinking",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int res = 0;\n        for(int i=0, j=m-1; i<j;i++,j--) {\n            for(int k=0, l=n-1; k<l;k++,l--) {\n                int tmp = grid[i][k] + grid[i][l] + grid[j][k] + grid[j][l];\n                res += min(tmp, 4-tmp);\n            }\n        }\n        \n        if (m%2 == 1 && n%2==1) {\n            if (grid[m/2][n/2] == 1) res++;\n        }\n        int c2 = 0;\n        int onecount = 0;\n        if (m%2==1) {\n            int i = m/2;\n            for(int j=0, k=n-1; j<k; j++, k--) {\n                if(grid[i][j] != grid[i][k]) {\n                    c2++;\n                } else if (grid[i][j]==1) {\n                    onecount += 2;\n                }\n            }\n        }\n        if (n%2==1) {\n            int i=n/2;\n            for(int j=0, k=m-1; j<k; j++, k--) {\n                if(grid[j][i] != grid[k][i]) {\n                    c2++;\n                } else if (grid[j][i] == 1) {\n                    onecount +=2;\n                }\n            }\n        }\n        if (onecount % 4 != 0 && c2==0) {\n            res += 2;\n        } else {\n            res += c2;\n        }\n\n\n        return res;\n\n    }\n};",
    "submit_ts": "1722697210",
    "subm_id": "1343138233"
}