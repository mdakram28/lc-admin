{
    "username": "tarun_kumar1478",
    "submission": "class Solution {\npublic:\n    int mod =1e9+7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> reqCnt(n, -1);\n        for (const auto& req : requirements) {\n            reqCnt[req[0]] = req[1];\n        }\n        \n        vector<vector<long long>> dp(n + 1, vector<long long>(n * (n - 1) / 2 + 1, 0));\n        dp[0][0] = 1;\n        \n        for (int i = 1; i <= n; i++) {\n            vector<long long> prefixSum(i * (i - 1) / 2 + 2, 0);\n            \n            for (int j = 0; j <= (i - 1) * (i - 2) / 2; j++) {\n                prefixSum[j + 1] = (prefixSum[j] + dp[i-1][j]) % mod;\n            }\n            \n            for (int j = 0; j <= i * (i - 1) / 2; j++) {\n                int left = max(0, j - (i - 1));\n                int right = min(j, (i - 1) * (i - 2) / 2);\n                dp[i][j] = (prefixSum[right + 1] - prefixSum[left] + mod) % mod;\n            }\n            \n            if (reqCnt[i-1] != -1) {\n                vector<long long> newDp(n * (n - 1) / 2 + 1, 0);\n                newDp[reqCnt[i-1]] = dp[i][reqCnt[i-1]];\n                dp[i] = newDp;\n            }\n        }\n        \n        return dp[n][reqCnt[n-1]];\n    }\n};",
    "submit_ts": "1719069370",
    "subm_id": "1296794640"
}