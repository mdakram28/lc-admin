{
    "username": "HVCYM",
    "submission": "class Solution {\n  public:\n  int minimumDistance(vector<vector<int>>& points) {\n    multiset<int> st, tt;\n    int n = points.size();\n    vector<int> sum(n), diff(n);\n    for(int i = 0; i < n; i++) {\n      int x = points[i][0] + points[i][1];\n      int y = points[i][0] - points[i][1];\n      sum[i] = x, diff[i] = y;\n      st.insert(x);\n      tt.insert(y);\n    }\n    int ans = 2E9;\n    for(int i = 0; i < n; i++) {\n      st.erase(st.find(sum[i]));\n      tt.erase(tt.find(diff[i]));\n      int d1 = *st.rbegin() - *st.begin();\n      int d2 = *tt.rbegin() - *tt.begin();\n      ans = min(ans, max(d1, d2));\n      st.insert(sum[i]);\n      tt.insert(diff[i]);\n    }\n    return ans;\n  }\n};\n\n/*\n\n1, 8\n3, 1\n3, 6\n7, 7\n9, 1\n9, 8\n\n\n*/"
}