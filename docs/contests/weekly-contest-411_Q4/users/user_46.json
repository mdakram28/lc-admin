{
    "username": "hank55663",
    "submission": "class Solution {\npublic:\n    long long ans[100005];\n    long long S[100005];\n    void add(int x,int k){\n        x++;\n        for(int i = x;i<100005;i+=i&-i){\n            S[i]+=k;\n        }\n    }\n    long long query(int x){\n        long long res=0;\n        x++;\n        for(int i = x;i>0;i-=i&-i){\n            res+=S[i];\n        }\n        return res;\n    }\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        memset(S,0,sizeof(S));\n        int cnt[2]={0,0};\n        int l=0;\n        for(int i = 0;i<s.size();i++){\n            cnt[s[i]-'0']++;\n            while(cnt[0]>k&&cnt[1]>k){\n                cnt[s[l]-'0']--;\n                l++;\n            }\n            ans[i]=l;\n            add(i,i-l+1);\n            printf(\"%d \",ans[i]);\n        }\n        printf(\"\\n\");\n        vector<long long> v;\n        for(auto it:queries){\n            int x=lower_bound(ans,ans+s.size(),it[0])-ans;\n            printf(\"%d\\n\",x);\n            if(x==s.size()||x>it[1]){\n                v.push_back((it[1]-it[0]+1)*1ll*(it[1]-it[0]+2)/2);\n            }\n            else{\n                long long ans=query(it[1])-query(x-1);\n                ans+=((x-it[0])*1ll*(x-it[0]+1)/2);\n                v.push_back(ans);\n            }\n        }\n        \n        return v;\n    }\n};",
    "submit_ts": "1723949936",
    "subm_id": "1359732858"
}