{
    "username": "HarshRajotiya2001",
    "submission": "class Solution {\npublic:\n\n    unordered_map<int,int> sumP;\n    unordered_map<int,int> diffP;\n    set<int> harsum,rajotiyaDiff;\nint minDis=INT_MAX;\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n\n        for(int i=0;i<n;i++){\n            int x=points[i][0];\n            int y=points[i][1];\n            \n            int sum=x+y;\n            int dff=x-y;\n            sumP[sum]++;\n            diffP[dff]++;\n            harsum.insert(sum);\n            rajotiyaDiff.insert(dff);\n        }\n        \n            \n\n        for(int i=0;i<n;i++){\n            \n            int sum=points[i][0]+points[i][1],diff=points[i][0]-points[i][1];\n            \n            if(sumP[sum]==1)\n            harsum.erase(sum);\n            if(diffP[diff]==1)\n            rajotiyaDiff.erase(diff);\n            \n            int rhehe=0;\n            \n            if(harsum.size())rhehe=max( *harsum.rbegin()- *harsum.begin() , *rajotiyaDiff.rbegin()- *rajotiyaDiff.begin());\n            \n            if(sumP[sum]==1)\n            harsum.insert(sum);\n            if(diffP[diff]==1)\n            rajotiyaDiff.insert(diff);\n\n            if(minDis>rhehe)minDis=rhehe;\n        }\n        \n        return minDis;\n    }\n};\n\n\n"
}