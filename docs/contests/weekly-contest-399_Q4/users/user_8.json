{
    "username": "hank55663",
    "submission": "class Solution {\npublic:\n    struct node{\n        node *l,*r;\n        int a,b;\n        long long ans[2][2];\n        node(int _a,int _b):l(NULL),r(NULL),a(_a),b(_b){\n            for(int i = 0;i<2;i++){\n                for(int j = 0;j<2;j++){\n                    ans[i][j]=-1e10;\n                }\n            }\n        }\n    };\n    void pull(node *n){\n        for(int i = 0;i<2;i++){\n            for(int j=0;j<2;j++){\n                n->ans[i][j]=-1e10;\n                for(int k = 0;k<2;k++){\n                    for(int l = 0;l<2;l++){\n                        if(k&&l)continue;\n                        n->ans[i][j]=max(n->ans[i][j],n->l->ans[i][k]+n->r->ans[l][j]);\n                    }\n                }\n            }\n        }\n    }\n    void build(node *n,vector<int> &a){\n        if(n->a==n->b){\n            n->ans[0][0]=0;\n            n->ans[1][1]=a[n->a];\n            return;\n        }\n        int mid=(n->a+n->b)/2;\n        n->l=new node(n->a,mid);\n        n->r=new node(mid+1,n->b);\n        build(n->l,a);\n        build(n->r,a);\n        pull(n);\n    }\n    void update(node *n,int x,int w){\n        if(n->a==n->b){\n            n->ans[0][0]=0;\n            n->ans[1][1]=w;\n            return;\n        }\n        int mid=(n->a+n->b)/2;\n        if(x<=mid)update(n->l,x,w);\n        else update(n->r,x,w);\n        pull(n);\n    }\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        node *root=new node(0,nums.size()-1);\n        build(root,nums);\n        long long ans=0;\n        const int mod=1e9+7;\n        for(auto it:queries){\n            update(root,it[0],it[1]);\n            long long Max=-1e10;\n            for(int i = 0;i<2;i++){\n                for(int j = 0;j<2;j++)Max=max(Max,root->ans[i][j]);\n            }\n            ans+=Max;\n            ans=(ans%mod+mod)%mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716691362.0
}