{
    "username": "shaileshk11",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n    public int numberOfPermutations(int n, int[][] requirements) {\n        int[][] dp = new int[n + 1][401];\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < 401; j++) {\n                if (dp[i - 1][j] == 0) continue;\n                for (int k = 0; k < i; k++) {\n                    int inv = j + (i - 1 - k);\n                    if (inv <= 400) {\n                        dp[i][inv] = (dp[i][inv] + dp[i - 1][j]) % MOD;\n                    }\n                }\n            }\n        }\n\n        boolean[] flag = new boolean[n + 1];\n        int[] flag2 = new int[n + 1];\n        for (int[] req : requirements) {\n            flag[req[0] + 1] = true;\n            flag2[req[0] + 1] = req[1];\n        }\n\n        int[][] dp2 = new int[n + 1][401];\n        dp2[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int inv = 0; inv <= 400; inv++) {\n                if (dp2[i - 1][inv] == 0) continue;\n                for (int j = 0; j < i; j++) {\n                    int temp = inv + (i - 1 - j);\n                    if (temp <= 400) {\n                        if (flag[i] && temp != flag2[i]) continue;\n                        dp2[i][temp] = (dp2[i][temp] + dp2[i - 1][inv]) % MOD;\n                    }\n                }\n            }\n        }\n\n        int result = dp2[n][flag2[n]];\n        return result;\n\n    }\n}",
    "submit_ts": 1719070847.0
}