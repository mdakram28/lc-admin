{
    "username": "gradesking",
    "submission": "int A[30][30];\nint dp1[30][30][30][30];\nint dp2[30][30][30][30];\n\nint cal1(int x1, int x2, int y1, int y2) {\n    if(dp1[x1][x2][y1][y2]!=-1) return dp1[x1][x2][y1][y2];\n    int a1 = 1e9, a2 = 0, b1 = 1e9, b2 = 0;\n    bool flag = true;\n    for(int i=x1;i<=x2;++i) {\n        for(int j=y1;j<=y2;++j) {\n            if(A[i][j]==0) continue;\n            a1 = min(a1, i);\n            a2 = max(a2, i);\n            b1 = min(b1, j);\n            b2 = max(b2, j);\n            flag = false;\n        }\n    }\n    if(flag) return dp1[x1][x2][y1][y2] = 0;\n    return dp1[x1][x2][y1][y2] = (a2-a1+1) * (b2-b1+1);\n}\n\nint cal2(int x1, int x2, int y1, int y2) {\n    if(dp2[x1][x2][y1][y2]!=-1) return dp2[x1][x2][y1][y2];\n    int ans = 1e9;\n    for(int i=x1;i<x2;++i) {\n        ans = min(ans, cal1(x1,i,y1,y2) + cal1(i+1,x2,y1,y2));\n    }\n    for(int i=y1;i<y2;++i) {\n        ans = min(ans, cal1(x1,x2,y1,i) + cal1(x1,x2,i+1,y2));\n    }\n    return dp2[x1][x2][y1][y2] = ans;\n}\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        for(int i=0;i<n;++i) {\n            for(int j=0;j<m;++j) {\n                A[i][j] = grid[i][j];\n            }\n        }\n\n        memset(dp1, -1, sizeof(dp1));\n        memset(dp2, -1, sizeof(dp2));\n\n        int ans = 1e9;\n        for(int i=0;i<n-1;++i) {\n            ans = min(ans, cal1(0, i, 0, m-1) + cal2(i+1, n-1, 0, m-1));\n            ans = min(ans, cal2(0, i, 0, m-1) + cal1(i+1, n-1, 0, m-1));\n        }\n        for(int i=0;i<m-1;++i) {\n            ans = min(ans, cal1(0, n-1, 0, i) + cal2(0, n-1, i+1, m-1));\n            ans = min(ans, cal2(0, n-1, 0, i) + cal1(0, n-1, i+1, m-1));\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1719114209",
    "subm_id": "541400891"
}