{
    "username": "Faith_Previal",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        vector<int> vis(n);\n        int cnt = 0;\n        for(int i = 0; i < n; ++i){\n            if(vis[i])continue;\n            int len = 1;\n            int l = (i - 1 + n) % n;\n            for(; l != i; l = (l - 1 + n) % n){\n                if(vis[l])break;\n                else{\n                    if(colors[l] != colors[(l + 1) % n]){\n                        ++len;\n                        vis[l] = 1;\n                    }\n                    else{\n                        break;\n                    }\n                }\n            }\n            int r = (i + 1 + n) % n;\n            for(; r != i; r = (r + 1 + n) % n){\n                if(vis[r])break;\n                else{\n                    if(colors[r] != colors[(r - 1 + n) % n]){\n                        ++len;\n                        vis[r] = 1;\n                    }\n                    else{\n                        break;\n                    }\n                }\n            }\n            if(l == i && colors[l] != colors[(l + 1) % n] || r == i && colors[r] != colors[(r - 1 + n) % n]){\n                return n;\n            }\n\n            if(len >= k){\n                cnt += len - k + 1;\n            }\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1720280116",
    "subm_id": "544570594"
}