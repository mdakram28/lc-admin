{
    "username": "d6dtd",
    "submission": "class Solution {\npublic:\n    void clear(stack<int>& stk) {\n        while (!stk.empty()) stk.pop();\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            nums[i] -= target[i];\n        }\n        long long res = 0;\n        stack<int> stk;\n        bool flag = true;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0) {\n                if (!flag) {\n                    if (!stk.empty()) res += -stk.top();\n                    clear(stk);\n                }\n                if (!stk.empty() && stk.top() > nums[i]) {\n                    res += stk.top() - nums[i];\n                }\n                while (!stk.empty() && stk.top() > nums[i]) {\n                    stk.pop();\n                }\n                stk.push(nums[i]);\n                flag = true;\n            } else {\n                if (flag) {\n                    if (!stk.empty()) res += stk.top();\n                    clear(stk);\n                }\n                if (!stk.empty() && stk.top() < nums[i]) {\n                    res += nums[i] - stk.top();\n                }\n                while (!stk.empty() && stk.top() < nums[i]) {\n                    stk.pop();\n                }\n                stk.push(nums[i]);\n                flag = false;\n            }\n            \n        }\n        res += flag ? stk.top() : -stk.top();\n        return res;\n    }\n};",
    "submit_ts": "1721531002",
    "subm_id": "548382434"
}