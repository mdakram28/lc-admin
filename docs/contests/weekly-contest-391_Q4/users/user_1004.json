{
    "username": "Nehcled",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<vector<int>> v(n), v1(n);\n        for(int i = 0; i < n; i++){\n            v[i] = {points[i][0] + points[i][1], i};\n            v1[i] = {points[i][0] - points[i][1], i};\n        }\n        ranges::sort(v);\n        ranges::sort(v1);\n        \n        int m = INT_MAX;\n        for(int i = 0; i < n; i++){\n            int vf = v.front()[0], vb = v.back()[0] , v1f = v1.front()[0], v1b = v1.back()[0];\n            if(v.front()[1] == i)vf = v[1][0];\n            if(v.back()[1] == i)vb = v[n-2][0];\n            if(v1.front()[1] == i)v1f = v1[1][0];\n            if(v1.back()[1] == i)v1b = v1[n-2][0];\n            \n            m = min(m,max(vb-vf, v1b-v1f));\n        }\n        \n        \n        return m;\n    }\n};"
}