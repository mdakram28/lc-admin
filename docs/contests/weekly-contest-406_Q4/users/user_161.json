{
    "username": "zhou_zzz",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long totalCost = 0;\n        int hCuts = horizontalCut.size();\n        int vCuts = verticalCut.size();\n    \n        int hCount = 1, vCount = 1;\n\n        int i = 0, j = 0;\n\n        while (i < hCuts || j < vCuts) {\n            if (i < hCuts && (j >= vCuts || horizontalCut[i] >= verticalCut[j])) {\n                totalCost += (long long)horizontalCut[i] * vCount;\n                hCount++;\n                i++;\n            } else {\n                totalCost += (long long)verticalCut[j] * hCount;\n                vCount++;\n                j++;\n            }\n        }\n    \n        return totalCost;        \n    }\n};",
    "submit_ts": "1720925166",
    "subm_id": "546437365"
}