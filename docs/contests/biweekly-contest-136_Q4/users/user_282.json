{
    "username": "BtwdkEHOy2",
    "submission": "#include <bits/stdc++.h>\n#define fst first\n#define snd second\n#define int64 long long\n#define FOR(i, a, b) for(int i = a; i <= b; i++)\n#define FORD(i, b, a) for(int i = b; i >= a; i--)\ntypedef pair<int,int> ii;\nconst int N = 1e5 + 55;\nclass Solution {\npublic:\n    int n, ans[N];\n    ii dp[N];\n    vector<int> adj[N];\n    void dfs1(int u, int p)\n    {\n        ii add = {0, 0};\n        \n        for(auto v: adj[u])\n        {\n            if(v == p) continue;\n            dfs1(v, u);\n            int w = 0;\n            if(v % 2 == 1) w = 1;\n            else  w = 2;\n            \n            if(add.fst <= dp[v].fst + w)\n            {\n                add.snd = add.fst;\n                add.fst = dp[v].fst + w; \n            }\n            else if(add.snd <= dp[v].fst + w)\n            {\n                add.snd = dp[v].fst + w;\n            }\n        }\n        dp[u] = add;\n    }\n    void dfs2(int u, int p)\n    {\n        for(auto v: adj[u])\n        {\n            if(v == p) continue;\n            \n            ii backup = dp[v];\n            int w = 2, new_w = 2;\n            if(v % 2 == 1) w = 1;\n            if(u % 2 == 1) new_w = 1;\n            \n            int new_add = 0;\n            if(dp[u].fst == dp[v].fst + w) new_add = dp[u].snd;\n            else new_add = dp[u].fst;\n            \n         //   if( v == 1) cout << new_add << \" \" << new_w << \"!@#@!\\n\";\n            if(dp[v].fst <= new_add + new_w)\n            {\n                dp[v].snd = dp[v].fst;\n                dp[v].fst = new_add + new_w;\n            }\n            else if(dp[v].snd <= new_add + new_w)\n            {\n                dp[v].snd = new_add + new_w;\n            }\n            ans[v] = dp[v].fst;\n            dfs2(v, u);\n            dp[v] = backup;\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        \n        for(auto v: edges)\n        {\n            adj[v[0]].push_back(v[1]);\n            adj[v[1]].push_back(v[0]);\n            n = max(n, max(v[0], v[1]));\n        }\n        dfs1(0, 0);\n        ans[0] = dp[0].fst;\n        dfs2(0, 0);\n            \n        vector<int> res;\n        \n        for(int i = 0; i <= n; i++) res.push_back(ans[i]);\n        return res;\n    }\n};",
    "submit_ts": "1722699307",
    "subm_id": "1343207718"
}