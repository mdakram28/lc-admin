{
    "username": "vshalu3110",
    "submission": "#include <vector>\n#include <algorithm>\n#include <numeric>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long res = 0;\n        \n        \n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n      \n        int hzntl = 1, vert = 1;\n        \n        int i = 0, j = 0;\n        while (i < m - 1 && j < n - 1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                res += static_cast<long long>(horizontalCut[i]) * vert;\n                hzntl++;\n                i++;\n            } else {\n                res += static_cast<long long>(verticalCut[j]) * hzntl;\n                vert++;\n                j++;\n            }\n        }\n        \n       \n        while (i < m - 1) {\n            res += static_cast<long long>(horizontalCut[i++]) * vert;\n        }\n        \n        while (j < n - 1) {\n            res += static_cast<long long>(verticalCut[j++]) * hzntl;\n        }\n        \n        return res;\n    }\n};\n",
    "submit_ts": "1720926163",
    "subm_id": "1320277871"
}