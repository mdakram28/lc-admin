{
    "username": "LarryNY",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        N = len(points)\n        \n        points.sort()\n\n        def calc(skip):\n            mn = mx = None\n            mnc = mxc = None\n            mnd = mxd = None\n            mndc = mxdc = None\n\n            for i in range(N):\n                if i == skip:\n                    continue\n                \n                total = points[i][0] + points[i][1]\n                delta = points[i][0] - points[i][1]\n\n                if mn is None or mn > total:\n                    mnc = i\n                    mn = total\n                if mx is None or mx < total:\n                    mxc = i\n                    mx = total\n\n                if mnd is None or mnd > delta:\n                    mndc = i\n                    mnd = delta\n                if mxd is None or mxd < delta:\n                    mxdc = i\n                    mxd = delta\n                    \n            return (max(mx - mn, mxd - mnd), mn, mx, mnc, mxc, mnd, mxd, mndc, mxdc)\n        \n        _, mn, mx, mnc, mxc, mnd, mxd, mndc, mxdc = calc(-1)\n        if mx - mn > mxd - mnd:\n            return min(calc(mnc)[0], calc(mxc)[0])\n        else:\n            return min(calc(mndc)[0], calc(mxdc)[0])\n"
}