{
    "username": "akshay_2902",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        int ans = 0;\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                map<int,int> mp;\n                mp[grid[i][j]] += 1;\n                mp[grid[n - i - 1][j]] += 1;\n                mp[grid[i][m - j - 1]] += 1;\n                mp[grid[n - i - 1][m - j - 1]] += 1;\n                \n                ans += min(mp[1], 4 - mp[1]);\n            }\n        }\n        \n        vector<int> cnt(2,0);\n        int must = 0;\n        if (n % 2 != 0) {\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) {\n                    must += 1;\n                    cnt[0] += 1;\n                } else {\n                    if (grid[n / 2][j] == 1) {\n                        cnt[1] += 1;\n                    }\n                }\n            }\n        }\n        \n        if (m % 2 != 0) {\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) {\n                    must += 1;\n                    cnt[0] += 1;\n                } else {\n                    if (grid[i][m / 2] == 1) {\n                        cnt[1] += 1;\n                    }\n                }\n            }\n        }\n\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            must += 1;\n        }\n        \n        if (cnt[0] == 0 && cnt[1] % 2 != 0) {\n            must += 2;\n        }\n        \n        return ans + must;\n    }\n};",
    "submit_ts": "1722699684",
    "subm_id": "1343219192"
}