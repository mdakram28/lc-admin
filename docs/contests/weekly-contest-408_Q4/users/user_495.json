{
    "username": "sm_27",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        def dist(a,b,c,d):\n            return sqrt((a-c)**2 + (b-d)**2)\n        for circle in circles:\n            if dist(circle[0],circle[1],0,0)<=circle[2]:\n                return False\n            if dist(circle[0],circle[1],X,Y)<=circle[2]:\n                return False\n        n = len(circles)\n        parent = [i for i in range(n)]\n        def find(i):\n            nonlocal parent\n            if parent[i] == i:\n                return i\n            parent[i] = find(parent[i])\n            return parent[i]\n        for i in range(n):\n            for j in range(i+1,n):\n                if dist(circles[i][0],circles[i][1],circles[j][0],circles[j][1])<=circles[i][2] + circles[j][2]:\n                    # print(i,j,dist(circles[i][0],circles[i][1],circles[j][0],circles[j][1]))\n                    a = find(i)\n                    b = find(j)\n                    if a<b:\n                        parent[b] = a\n                    else:\n                        parent[a] = b\n        # print(parent)\n        left_top = set()\n        right_bottom = set()\n        for i in range(n):\n            if circles[i][0]<=circles[i][2]:\n                left_top.add(i)\n            if circles[i][1]<=circles[i][2]:\n                right_bottom.add(i)\n            if X-circles[i][0]<=circles[i][2]:\n                right_bottom.add(i)\n            if Y-circles[i][1]<=circles[i][2]:\n                left_top.add(i)\n        for i in left_top:\n            for j in right_bottom:\n                a = find(i)\n                b = find(j)\n                if a == b:\n                    return False\n        return True\n        \n        ",
    "submit_ts": "1722137629",
    "subm_id": "1335769255"
}