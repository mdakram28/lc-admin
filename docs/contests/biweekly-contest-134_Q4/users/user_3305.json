{
    "username": "QP0MoQ5tt6",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        int n = nums.size();\n    long long count = 0;\n    \n    unordered_map<long long, long long> previousResults;\n\n    for (int i = 0; i < n; ++i) {\n        unordered_map<long long, long long> currentResults; \n\n        if (nums[i] == k) {\n            ++count;\n        }\n        currentResults[nums[i]] = 1;\n\n        for (auto& [value, frequency] : previousResults) {\n            long long newAndResult = value & nums[i];\n            if (newAndResult == k) {\n                count += frequency;\n            }\n            currentResults[newAndResult] += frequency;\n        }\n        \n        previousResults = currentResults;\n    }\n    \n        if(1)\n    return count;\n    }\n};",
    "submit_ts": "1720281309",
    "subm_id": "1311820472"
}