{
    "username": "reverent-vaughanykq",
    "submission": "class Solution {\n     public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        int[][] f = new int[n + 1][30];\n        long ans = 0;\n        for (int i = 1; i <= n; i++) {\n            int num = nums[i - 1];\n            for (int j = 0; j < 30; j++) {\n                f[i][j] = f[i - 1][j] + ((num >> j) & 1);\n            }\n            int r = right(i, f, k);\n            int l = left(i, f, k);\n            if (calAnd(r, i, f) == k) ans += r - l + 1;\n        }\n        return ans;\n    }\n\n    // \u627e<=k \u7684\u7b2c\u4e00\u4e2a\u6570\n    public int right(int i, int[][] f, int k) {\n        int l = 0;\n        int r = i;\n        while (l < r) {\n            int m = l + r + 1 >> 1;\n            if (calAnd(m, i, f) > k) r = m - 1;\n            else l = m;\n        }\n        return r;\n    }\n    // \u627e>=k \u7b2c\u4e00\u4e2a\u6570\n    public int left(int i, int[][] f, int k) {\n        int l = 0;\n        int r = i;\n        while (l < r) {\n            int m = l + r >> 1;\n            if (calAnd(m, i, f) < k) l = m + 1;\n            else r = m;\n        }\n        return l;\n    }\n\n    public int calAnd(int l, int r, int[][] f) {\n        int ret = 0;\n        for (int i = 0; i < 30; i++) {\n            if (f[r][i] - f[l][i] == r - l) ret |= (1 << i);\n        }\n        return ret;\n    }\n\n}",
    "submit_ts": "1720278418",
    "subm_id": "544562477"
}