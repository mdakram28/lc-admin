{
    "username": "Indresh Kumar",
    "submission": "typedef long long ll;\n\nclass Solution {\npublic:\n    long long maximumValueSum(std::vector<std::vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n\n        vector<vector<pair<int, int>>> rowTop3(m);\n        \n        for (int i = 0; i < m; ++i) {\n            vector<pair<int, int>> rowValues;\n            for (int j = 0; j < n; ++j) {\n                rowValues.push_back({board[i][j], j});\n            }\n            sort(rowValues.rbegin(), rowValues.rend());\n            for (int k = 0; k < min(3, n); ++k) {\n                rowTop3[i].push_back(rowValues[k]);\n            }\n        }\n        \n        ll ans = LLONG_MIN;\n        \n        for (int i1 = 0; i1 < m; ++i1) {\n            for (int i2 = i1 + 1; i2 < m; ++i2) {\n                for (int i3 = i2 + 1; i3 < m; ++i3) {\n\n                    for (auto& [val1, j1] : rowTop3[i1]) {\n                        for (auto [val2, j2] : rowTop3[i2]) {\n\n                            if (j1 == j2) continue;\n                             \n                            for (auto [val3, j3] : rowTop3[i3]) {\n                                if (j3 == j1 || j3 == j2) continue; \n                                ll sum = (ll)val1 + (ll)val2 + (ll)val3;\n                                ans = max(ans, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1723909722",
    "subm_id": "1359203338"
}