{
    "username": "nikhilbabar",
    "submission": "class Solution {\n    \n    public long util(int i, int jump, int p, int k, Map<String,Long> mp){\n        String key = i + \"_\" + jump + \"_\" + p;\n        \n        if(mp.containsKey(key)) return mp.get(key);\n        \n        if(i == k){\n            if(p == 0 && i > 0){\n                if(jump == 0) return 4;\n                if(jump == 1) return 2;\n                else return 1;\n            } else {\n                if(jump == 0) return 2;\n                else return 1;\n            }\n        }\n        \n        if(i > k+1) return 0;\n        if(jump > 31) return 0;\n        \n        long tm = 0;\n        \n        tm += (p == 0 && i > 0) ? util(i-1, jump, 1, k, mp) : 0;\n        tm += util(i + (1 << jump), jump+1, 0, k, mp);\n        \n        mp.put(key, tm);\n        \n        return tm;\n    }\n    \n    public int waysToReachStair(int k) {\n        return (int)util(1, 0, 0, k, new HashMap<String,Long>());\n    }\n}",
    "submit_ts": "1716089087",
    "subm_id": "1261832661"
}