{
    "username": "Aman_mangukiya",
    "submission": "#define ll long long int\nclass Solution {\npublic:\n    void dfs(ll node,ll parent,vector<ll> adj[],vector<vector<ll>> &dp){\n    dp[node][0]=0;\n    dp[node][1]=0;\n\n    for(auto i:adj[node]){\n      if(i!=parent){\n        dfs(i,node,adj,dp);\n      }\n    }\n    ll maxi1=0,maxi2=0;\n    for(auto it:adj[node]){\n      if(it!=parent){\n        if(dp[it][0]>maxi1){\n          maxi2=maxi1;\n          maxi1=dp[it][0];\n        }\n        else if(dp[it][0]>maxi2){\n          maxi2=dp[it][0];\n        }\n      }\n    }\n    dp[node][1]=1+maxi1+maxi2;\n    dp[node][0]=maxi1+1;\n} \n\n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        int n=e1.size()+1;\n        int m=e2.size()+1;\n        vector<ll>a1[n],a2[m];\n        for(int i=0;i<e1.size();i++){\n                a1[e1[i][0]].push_back(e1[i][1]);\n                a1[e1[i][1]].push_back(e1[i][0]);\n\n        }\n                for(int i=0;i<e2.size();i++){\n                a2[e2[i][0]].push_back(e2[i][1]);\n                a2[e2[i][1]].push_back(e2[i][0]);\n\n        }\n\n         vector<vector<ll>> dp(n,vector<ll> (2));\n         vector<vector<ll>> dpp(m,vector<ll> (2));\n         dfs(0,-1,a1,dp);\n         dfs(0,-1,a2,dpp);\n\n         ll d1=0,d2=0;\n           for(int i=0;i<n;i++){\n   \n               d1=max(d1,dp[i][0]);\n               d1=max(d1,dp[i][1]);\n           }\n\n           for(int i=0;i<m;i++){  \n              d2=max(d2,dpp[i][0]);\n             d2=max(d2,dpp[i][1]);\n           }\n\n\n           ll h1=n,h2=m;\n\n           for(int i=0;i<n;i++){\n                h1=min(h1,dp[i][0]);\n           }\n             for(int i=0;i<m;i++){\n                h2=min(h2,dpp[i][0]);\n           }\n           d1--;\n           d2--;\n\n  return max(max(d1,d2),((d1+1)/2+(d2+1)/2) + 1);\n\n    }\n};",
    "submit_ts": 1719719430.0
}