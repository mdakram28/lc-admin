{
    "username": "yi-ping-an",
    "submission": "\nfrom typing import List\nimport collections\nimport bisect\n\n\nclass Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k:int=3) -> int:\n        n = len(colors)\n        c = 0\n        a = colors + colors[:k-1]\n        N = len(a)\n        g = [1] * N\n        for i in range(1, N):\n            g[i] = g[i-1] + 1 if a[i] != a[i-1] else 1\n            if g[i] >= k:\n                c += 1\n        return c\n\n\ndef _case(*a):\n    assert Solution().numberOfAlternatingGroups(*a[:-1]) == a[-1]\n\n\ndef test():\n    _case([1,1,1], 0)\n    _case([0,1,0,0,1], 3)\n    _case([0,1,0,1,0], 3, 3)\n    _case( [0,1,0,0,1,0,1], 6, 2)\n    _case([1,1,0,1], 4, 0)",
    "submit_ts": "1720277984",
    "subm_id": "544560008"
}