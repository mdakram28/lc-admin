{
    "username": "IsppQYrx3Q",
    "submission": "import java.util.*;\n\nclass Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        \n        // Calculate the difference between nums and target\n        for (int i = 0; i < n; i++) {\n            diff[i] = nums[i] - target[i];\n        }\n\n        long operations = 0;\n        int idx = 0;\n\n        while (idx < n) {\n            int pre1 = 0;\n\n            // Process positive differences\n            while (idx < n && diff[idx] > 0) {\n                if (diff[idx] <= pre1) {\n                    pre1 = diff[idx];\n                } else {\n                    operations += diff[idx] - pre1;\n                    pre1 = diff[idx];\n                }\n                idx++;\n            }\n\n            int pre2 = 0;\n\n            // Process negative differences\n            while (idx < n && diff[idx] < 0) {\n                if (diff[idx] >= pre2) {\n                    pre2 = diff[idx];\n                } else {\n                    operations += pre2 - diff[idx];\n                    pre2 = diff[idx];\n                }\n                idx++;\n            }\n\n            // Skip zeros\n            if (idx < n && diff[idx] == 0) {\n                idx++;\n            }\n        }\n\n        return operations;\n    }\n}\n",
    "submit_ts": "1721531914",
    "subm_id": "1327973066"
}