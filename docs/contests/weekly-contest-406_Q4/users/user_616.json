{
    "username": "hit-lu",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long horizontal_count = 1, verical_count = 1;\n        vector<pair<int, int>> tmp;\n        for (int cut: horizontalCut) {\n            tmp.push_back({cut, 0});\n        }\n        for (int cut: verticalCut) {\n            tmp.push_back({cut, 1});\n        }\n        \n        sort(tmp.begin(), tmp.end(), [&](auto&a, auto&b) {\n            return a.first > b.first;\n        });\n        long long ans = 0;\n        for (auto t: tmp) {\n            if (t.second == 0) {\n                ans += t.first * verical_count;\n                horizontal_count++;\n            }\n            else {\n                ans += t.first * horizontal_count;\n                verical_count++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925701",
    "subm_id": "546441324"
}