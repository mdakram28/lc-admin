{
    "username": "heisenberg_003",
    "submission": "class Solution {\npublic:\n    \n    vector<vector<int>> adj;\n    vector<int> dis;\n    \n    void dfs(int x, int p){\n        for(auto i:adj[x]){\n            if(i!=p){\n                dis[i]=dis[x]+1;\n                dfs(i,x);\n            }\n        }\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& v1, vector<vector<int>>& v2) {\n        int n=(int)v1.size()+1;\n        adj.clear();\n        adj.resize(n);\n        for(int i=0;i<n-1;i++){\n            adj[v1[i][0]].push_back(v1[i][1]);\n            adj[v1[i][1]].push_back(v1[i][0]);\n        }\n        dis.clear();\n        dis.resize(n,0);\n        dfs(0,-1);\n        int root=0,dis1=0;\n        for(int i=0;i<n;i++){\n            if(dis1<dis[i]){\n                dis1=dis[i];\n                root=i;\n            }\n        }\n        dis.clear();\n        dis.resize(n,0);\n        dfs(root,-1);\n        int ans1=*max_element(dis.begin(),dis.end());\n        int m=(int)v2.size()+1;\n        adj.clear();\n        adj.resize(m);\n        for(int i=0;i<m-1;i++){\n            adj[v2[i][0]].push_back(v2[i][1]);\n            adj[v2[i][1]].push_back(v2[i][0]);\n        }\n        dis.clear();\n        dis.resize(m,0);\n        dfs(0,-1);\n        root=0;\n        dis1=0;\n        for(int i=0;i<m;i++){\n            if(dis1<dis[i]){\n                dis1=dis[i];\n                root=i;\n            }\n        }\n        dis.clear();\n        dis.resize(m,0);\n        dfs(root,-1);\n        int ans2=*max_element(dis.begin(),dis.end());\n        int ans=((ans1+1)/2+(ans2+1)/2+1);\n        return max({ans,ans1,ans2});\n    }\n};",
    "submit_ts": 1719717245.0
}