{
    "username": "VarunR",
    "submission": "class Solution {\npublic:\n    \n    int mod = (int)1e9 + 7;\n    \n    long long qry(vector<long long>& pref, int l, int r) {\n        if(l > r) return 0ll;\n        return pref[r] - (l ? pref[l - 1] : 0ll);\n    }\n    \n    int countOfPairs(vector<int>& nums) {\n        int n = (int)nums.size();\n        \n        vector<vector<long long>> dp(n + 1, vector<long long>(1001, 0ll));\n        \n        for(int i = 0; i <= nums[0]; i++) {\n            dp[0][i] = i + 1;\n        }\n        for(int i= nums[0] + 1; i <= 1000; i++) dp[0][i] = dp[0][nums[0]];\n        \n        \n        \n        for(int i = 1; i < n; i++) {\n            for(int j = 0; j <= nums[i]; j++) {\n                int op = nums[i] - j;\n                // so theres some range\n                // the maximum is j\n                // suppose you transition from k\n                // the difference is nums[i - 1] - k\n                // and nums[i - 1] - k >= op\n                // k <= nums[i - 1] - op\n                int vl = nums[i - 1] - op;\n                int mn = min(vl, j);\n                if(mn < 0) continue;\n                dp[i][j] = dp[i - 1][mn];\n            }\n            for(int j = 1; j <= 1000; j++) {\n                dp[i][j] += dp[i][j - 1];\n                if(dp[i][j] >= mod) dp[i][j] -= mod;\n            }\n        }\n        \n        return dp[n - 1].back();\n        \n    }\n};",
    "submit_ts": "1723344410",
    "subm_id": "1351533777"
}