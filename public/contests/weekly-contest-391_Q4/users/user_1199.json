{
    "username": "Mozhi_Shen",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def max_distance(points):\n            pb = -float(\"infinity\")\n            ps = float(\"infinity\")\n            mb = -float(\"infinity\")\n            ms = float(\"infinity\")\n            pbh = 0\n            psh = 0\n            mbh = 0\n            msh =0\n            \n            for idx, [x, y] in enumerate(points):\n                a = x + y\n                b = x - y\n                if a > pb:\n                    pb = a\n                    pbh = idx\n                if a < ps:\n                    ps = a\n                    psh = idx\n                if b > mb:\n                    mb = b\n                    mbh = idx\n                if b < ms:\n                    ms = b\n                    msh = idx\n            # print(pbh,psh,mbh,msh)\n            if pb - ps > mb - ms:\n                return pb - ps, pbh, psh\n            else:\n                return mb - ms, mbh, msh\n        \n        a,b,c = max_distance(points)\n        f = points.copy()\n        f.pop(b)\n        x = max_distance(f)\n        d = points.copy()\n        d.pop(c)\n        y = max_distance(d)\n        return min(x[0],y[0])\n        return 11"
}