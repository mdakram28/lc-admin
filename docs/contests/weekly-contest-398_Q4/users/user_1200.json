{
    "username": "rookie-coder",
    "submission": "class Solution {\n    #define ll long long\n    const ll MOD = 1e9 + 7;\n    unordered_map<int, vector<vector<int>>> memo;\n    ll fn(int i, int jmp, int k, bool pos) {\n        if (jmp>=32)    \n            return 0;\n        if (i>k+5) \n            return 0;\n        if (memo.find(i) != memo.end() and memo[i][jmp][pos]!=-1) \n            return memo[i][jmp][pos];\n        long long ways = i==k;\n        if (i+(1<<jmp) <= k+1)\n            ways = (ways + fn(i+(1<<jmp), jmp+1, k, true)) % MOD;\n        if(pos)\n            ways = (ways + fn(i-1, jmp, k, false)) % MOD;\n        memo[i] = vector<vector<int>>(32,vector<int>(2,-1));\n        return memo[i][jmp][pos] = ways;\n    }\npublic:\n    int waysToReachStair(int k) {\n        return fn(1, 0, k, true);\n    }\n};",
    "submit_ts": 1716090477.0
}