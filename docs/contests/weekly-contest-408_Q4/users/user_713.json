{
    "username": "king0203",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> adj;\n\n    void addEdge(int a, int b) {\n        adj[a].push_back(b);\n        adj[b].push_back(a);\n    }\n\n    bool canReachCorner(int x, int y, vector<vector<int>>& circles) {\n        int n=circles.size();\n        adj.resize(n + 2);\n        \n        vector<int> cx(n), cy(n), r(n);\n        for (int i = 0; i < n; ++i) {\n            cx[i] = circles[i][0];\n            cy[i] = circles[i][1];\n            r[i] = circles[i][2];\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                long long dist = pow(cx[i] - cx[j], 2) + pow(cy[i] - cy[j], 2);\n                if (dist <= pow(r[i] + r[j], 2)) {\n                    addEdge(i, j);\n                }\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            if (cx[i] - r[i] <= 0 || cy[i] + r[i] >= y  ) {\n                addEdge(i, n);\n            }\n            if (cy[i] - r[i] <= 0 || cx[i] + r[i] >= x) {\n                addEdge(i, n + 1);\n            }\n        }\n\n        queue<int> q;\n        vector<int> vis(n + 2, 0);\n        q.push(n);\n        vis[n] = 1;\n        while (!q.empty()) {\n            int par = q.front();\n            q.pop();\n            if(par==n+1) return false;\n            for (int a : adj[par]) {\n                if (vis[a] == 0) {\n                    q.push(a);\n                    vis[a] = 1;\n                }\n            }\n        }\n        return vis[n+1]==0;\n    }\n};",
    "submit_ts": "1722137791",
    "subm_id": "1335773852"
}