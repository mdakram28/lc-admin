{
    "username": "Kajal2000",
    "submission": "class Solution {\npublic:\n    long long solve( int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut )\n    {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n    \n        long long h = 0, v = 0;\n        long long h_cnt = 1, v_cnt = 1;\n        long long total_cost = 0;\n\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                total_cost += horizontalCut[h] * v_cnt;\n                h_cnt++;\n                h++;\n            } else {\n                total_cost += verticalCut[v] * h_cnt;\n                v_cnt++;\n                v++;\n            }\n        }\n\n        \n        while (h < horizontalCut.size()) {\n            total_cost += horizontalCut[h] * v_cnt;\n            h++;\n        }\n\n        \n        while (v < verticalCut.size()) {\n            total_cost += verticalCut[v] * h_cnt;\n            v++;\n        }\n\n        return total_cost;\n    }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        return solve( m ,n, horizontalCut, verticalCut );\n    }\n};",
    "submit_ts": "1720926223",
    "subm_id": "1320279642"
}