{
    "username": "\u5c0f\u767d",
    "submission": "class Solution { \n    long ans=Long.MIN_VALUE;\n    public long maximumValueSum(int[][] board) {\n        int n = board.length;\n        int m =board[0].length;\n        int[] max1=new int[n];\n        int []max2=new int[n];\n        int []max3=new int[n];\n        Arrays.fill(max1,Integer.MIN_VALUE);\n        Arrays.fill(max2,Integer.MIN_VALUE);\n        Arrays.fill(max3,Integer.MIN_VALUE);\n        int []max1pos=new int[n];\n        int []max2pos=new int[n];\n        int []max3pos=new int[n];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                int a=board[i][j];\n                if(a>=max1[i]){\n                    max3[i]=max2[i];\n                    max3pos[i]=max2pos[i];\n                    max2[i]=max1[i];\n                    max2pos[i]=max1pos[i];\n                    max1[i]=a;\n                    max1pos[i]=j;\n                }else if(a>=max2[i]){\n                    max3[i]=max2[i];\n                    max3pos[i]=max2pos[i];\n                    max2[i]=a;\n                    max2pos[i]=j;\n                }else if(a>=max3[i]){\n                    max3[i]=a;\n                    max3pos[i]=j;\n                }\n            }\n        }\n        // for(int i=0;i<n;i++){\n        //     System.out.print(max1[i]);\n        //     System.out.print(max2[i]);\n        //     System.out.println(max3[i]);\n        // }\n        for(int i=0;i<n;i++){\n            for(int j=0;j<3;j++){\n                boolean[] isvisit=new boolean[m];\n                long sum=0;\n                if(j==0){\n                    sum+=max1[i];\n                    isvisit[max1pos[i]]=true;\n                    bfs(0,i,sum,max1,max2,max3,max1pos,max2pos,max3pos,n,isvisit);\n                }else if(j==1){\n                    sum+=max2[i];\n                    isvisit[max2pos[i]]=true;\n                    bfs(0,i,sum,max1,max2,max3,max1pos,max2pos,max3pos,n,isvisit);\n                }else if(j==2){\n                    sum+=max3[i];\n                    isvisit[max3pos[i]]=true;\n                    bfs(0,i,sum,max1,max2,max3,max1pos,max2pos,max3pos,n,isvisit);\n                }\n            }\n        }\n        return ans;\n    }\n\n    public void bfs(int index,int p,long sum,int []max1,int []max2,int []max3,int []max1pos,int []max2pos,int []max3pos,int  n,boolean[]isvisit){\n        index++;\n        if(index==3){\n            ans=Math.max(ans,sum);\n            return;\n        }\n        for(int i=p+1;i<n;i++){\n            for(int j=0;j<3;j++){\n                if(j==0&&isvisit[max1pos[i]]==false){\n                    sum+=max1[i];\n                    isvisit[max1pos[i]]=true;\n                    bfs(index,i,sum,max1,max2,max3,max1pos,max2pos,max3pos,n,isvisit);\n                    sum-=max1[i];\n                    isvisit[max1pos[i]]=false;\n                }else if(j==1&&isvisit[max2pos[i]]==false){\n                    sum+=max2[i];\n                    isvisit[max2pos[i]]=true;\n                    bfs(index,i,sum,max1,max2,max3,max1pos,max2pos,max3pos,n,isvisit);\n                    sum-=max2[i];\n                    isvisit[max2pos[i]]=false;\n                }else if(j==2&&isvisit[max3pos[i]]==false){\n                    sum+=max3[i];\n                    isvisit[max3pos[i]]=true;\n                    bfs(index,i,sum,max1,max2,max3,max1pos,max2pos,max3pos,n,isvisit);\n                    sum-=max3[i];\n                    isvisit[max3pos[i]]=false;\n                }\n            }\n        }\n    }\n}",
    "submit_ts": "1723909922",
    "subm_id": "556338625"
}