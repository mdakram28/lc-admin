{
    "username": "jsanders17",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        \n        freq = {}\n        \n        doubleSubs = {}\n        \n        for i in range(len(nums) // 2):\n            \n            diff = abs(nums[i] - nums[len(nums) - i - 1])\n            \n            freq[diff] = freq.get(diff, 0) + 1\n            \n            maxDiffSingleSub = max(max(nums[i], nums[len(nums) - i - 1]), max(k - nums[i], k - nums[len(nums) - i - 1]))\n            \n            doubleSubs[maxDiffSingleSub] = doubleSubs.get(maxDiffSingleSub, 0) + 1\n            \n        maxFreq = -1\n        diffForMax = k + 1\n        res = sys.maxsize\n        \n        checkedDiffs = set()\n        \n        while diffForMax > math.ceil(k / 2) and len(checkedDiffs) < len(freq.keys()):\n            curRes = 0\n            \n            for diff, f in freq.items():\n\n                if f > maxFreq and diff not in checkedDiffs:\n                    \n                    diffForMax = diff\n                    maxFreq = f\n              \n            if diffForMax > math.ceil(k / 2):\n                \n                checkedDiffs.add(diffForMax)\n                \n                for ds, count in doubleSubs.items():\n\n                    if diffForMax > ds:\n                        \n                        curRes += 2 * count\n                \n                curRes = curRes + (len(nums) // 2) - maxFreq - (curRes // 2)\n                res = min(res, curRes)\n                maxFreq = -1\n            else:\n                \n                curRes = (len(nums) // 2) - maxFreq\n                \n                return min(curRes, res)\n            \n        return res",
    "submit_ts": "1721489794",
    "subm_id": "1327463978"
}