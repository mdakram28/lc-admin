{
    "username": "diezmal",
    "submission": "class Solution {\n    func minFlips(_ grid: [[Int]]) -> Int {\n        let rows = grid.count\n        let cols = grid[0].count\n        let midRow = rows/2\n        let midCol = cols/2\n        var flops = 0\n\n        for row in 0..<midRow {\n            for col in 0..<midCol {\n                let s = grid[row][col] + grid[rows - row - 1][col] + grid[row][cols - col - 1] + grid[rows - row - 1][cols - col - 1]\n                flops += min(s, 4 - s) \n            }\n        }\n        if rows % 2 != 0 && cols % 2 != 0 {\n            flops += grid[midRow][midCol]\n        } \n        var midFlops = 0\n        var ones = 0\n        if cols % 2 != 0 {\n          \n            for row in 0..<midRow {\n                if grid[row][midCol] != grid[rows - row - 1][midCol] {\n                    midFlops += 1\n                   \n                } else {\n                    ones += grid[row][midCol] * 2\n                }\n            }\n        }\n        if rows % 2 != 0 {\n\n            for col in 0..<midCol {\n                if grid[midRow][col] != grid[midRow][cols - col - 1] {\n                    midFlops += 1\n    \n                } else {\n                    ones += grid[midRow][col] * 2\n                }\n            }\n        }\n       \n        flops += midFlops\n        \n        if ones % 4 != 0 &&  midFlops == 0 {\n            flops += 2\n        }\n       \n        \n        return flops\n    }\n}",
    "submit_ts": "1722698228",
    "subm_id": "1343173905"
}