{
    "username": "vickyguptaa7",
    "submission": "class Solution {\n    int dp[305][405];\n    int helper(int indx,int n,int k,vector<vector<int>>&req)\n    {\n        if(n==0)\n            return 0;\n        \n        if(k==0)\n            return 1;\n        \n        if(dp[n][k]!=-1)\n            return dp[n][k];\n        \n        \n        \n        int ans=0,mod=1e9+7;\n        for(int i=0;i<n&&k>=i;i++)\n        {\n            if(indx+1<req.size()&&n-1==req[indx+1][0]&&k-i==req[indx+1][1])\n            {\n                ans+=helper(indx+1,n-1,k-i,req);\n            }\n            else if(indx+1<req.size()&&n-1>=req[indx+1][0]&&k-i>=req[indx+1][1])\n            {\n                ans+=helper(indx,n-1,k-i,req);\n            }\n            else if(indx+1==req.size())\n            {\n                ans+=helper(indx,n-1,k-i,req);\n            }\n            ans%=mod;\n        }\n        return dp[n][k]=ans;\n        // return ans;\n    }\n    \npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        memset(dp,-1,sizeof(dp));\n        sort(req.rbegin(),req.rend());\n        for(auto &x:req)x[0]++;\n        \n        return helper(0,req[0][0],req[0][1],req);\n    }\n};",
    "submit_ts": 1719070282.0
}