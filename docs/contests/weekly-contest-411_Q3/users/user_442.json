{
    "username": "Ko-Yang",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            return \"9\"*n\n        if k == 2:\n            if n == 1:\n                return \"8\"\n            else:\n                return \"8\" + \"9\"*(n-2) + \"8\"\n        if k == 4:\n            if n <= 3:\n                return \"8\"*n\n            else:\n                return \"88\" + \"9\"*(n-4) + \"88\"\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            else:\n                return \"5\" + \"9\"*(n-2) + \"5\"\n        if k == 6:\n            if n <= 2:\n                return \"6\"*n\n            else:\n                if n%2 == 1:\n                    for i in range(9, -1, -1):\n                        if (i + 8*2 + 9*(n-3)) % 3 == 0:\n                            return \"8\" + \"9\"*((n-3)//2) + str(i) + \"9\"*((n-3)//2) + \"8\"\n                else:\n                    for i in range(9, -1, -1):\n                        if (i*2 + 8*2 + 9*(n-4)) % 3 == 0:\n                            return \"8\" + \"9\"*((n-4)//2) + str(i)*2 + \"9\"*((n-4)//2) + \"8\"\n\n        def check_seven(s):\n            start = len(s)%3\n            if start == 0:\n                remainder = 0\n            else:\n                remainder = int(s[:start])\n            for i in range(start, len(s), 3):\n                chunk = s[i:i + 3]\n                chunk_value = int(chunk)\n                remainder += chunk_value if (i-start)%2 == 1 else -chunk_value\n            return abs(remainder) % 7 == 0\n\n        if k == 7:\n            if n == 1:\n                return \"7\"\n            elif n == 2:\n                return \"77\"\n            else:\n                if n%2 == 1:\n                    for i in range(9, -1, -1):\n                        s = \"9\"*((n-1)//2) + str(i) + \"9\"*((n-1)//2)\n                        if check_seven(s):\n                            return s\n                else:\n                    for i in range(9, -1, -1):\n                        s = \"9\"*((n-2)//2) + str(i)*2 + \"9\"*((n-2)//2)\n                        if check_seven(s):\n                            return s \n                    \n        if k == 8:\n            if n <= 6:\n                return \"8\"*n\n            else:\n                return \"8\"*3 + \"9\"*(n-6) + \"8\"*3",
    "submit_ts": "1723952760",
    "subm_id": "1359803996"
}