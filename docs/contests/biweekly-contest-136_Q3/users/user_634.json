{
    "username": "anonys",
    "submission": "class Solution:\n    def minFlips(self, grid: list[list[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n\n        ans = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                cnt = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j]\n                ans += min(cnt, 4-cnt)\n\n        if m%2 == 1 and n%2 == 1 and grid[m//2][n//2] == 1:\n            ans += 1\n\n        swaps = False\n        same_ones = 0\n        if m%2 == 1:\n            i = m//2\n            for j in range(n//2):\n                if grid[i][j] != grid[i][n-1-j]:\n                    swaps = True\n                    ans += 1\n                elif grid[i][j] == 1:\n                    same_ones += 1\n\n        if n%2 == 1:\n            j = n//2\n            for i in range(m//2):\n                if grid[i][j] != grid[m-1-i][j]:\n                    swaps = True\n                    ans += 1\n                elif grid[i][j] == 1:\n                    same_ones += 1\n\n        if not swaps and same_ones % 2 == 1:\n            ans += 2\n\n        return ans\n\n\n\n\n\ntemp = Solution()\ngrid = [[1],[0]]\nans = temp.minFlips(grid)\nprint(ans)\n",
    "submit_ts": "1722698029",
    "subm_id": "1343167344"
}