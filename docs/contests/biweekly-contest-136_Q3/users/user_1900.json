{
    "username": "Satyam_86770",
    "submission": "class Solution {\npublic:\n    int minFlipsPalindrome(int x,int y,int row,int col,int n,int m,vector<vector<int>>& grid)\n    {\n       int ans=0;\n\n       int difPair=0;\n       int extraOnePair=0;\n\n       for(int i=0;i<=row;i++)\n       {\n           for(int j=0;j<=col;j++)\n           {\n               int totalCostForOne=0;\n               int totalCostForZero=0;\n               // forOne\n               map<pair<int,int>,int>mp1;\n               if(grid[i][j]!=1)\n               {\n                  totalCostForOne++;\n               }\n               mp1[{i,j}]++;\n               int newI=n-i-1;\n               if(mp1.find({newI,j})==mp1.end())\n               {\n                    if(grid[newI][j]!=1)\n                    {\n                        totalCostForOne++;\n                    }\n                    mp1[{newI,j}]++;\n               }\n               int newJ=m-j-1;\n               if(mp1.find({i,newJ})==mp1.end())\n               {\n                    if(grid[i][newJ]!=1)\n                    {\n                        totalCostForOne++;\n                    }\n                    mp1[{i,newJ}]++;\n               }\n               if(mp1.find({newI,newJ})==mp1.end())\n               {\n                    if(grid[newI][newJ]!=1)\n                    {\n                        totalCostForOne++;\n                    }\n                    mp1[{newI,newJ}]++;\n               }\n               \n\n\n\n\n                //forZero\n                map<pair<int,int>,int>mp2;\n               if(grid[i][j]!=0)\n               {\n                  totalCostForZero++;\n               }\n               mp2[{i,j}]++;\n               newI=n-i-1;\n               if(mp2.find({newI,j})==mp2.end())\n               {\n                    if(grid[newI][j]!=0)\n                    {\n                        totalCostForZero++;\n                    }\n                    mp2[{newI,j}]++;\n               }\n               newJ=m-j-1;\n               if(mp2.find({i,newJ})==mp2.end())\n               {\n                    if(grid[i][newJ]!=0)\n                    {\n                        totalCostForZero++;\n                    }\n                    mp2[{i,newJ}]++;\n               }\n               if(mp2.find({newI,newJ})==mp2.end())\n               {\n                    if(grid[newI][newJ]!=0)\n                    {\n                        totalCostForZero++;\n                    }\n                    mp2[{newI,newJ}]++;\n               }\n\n               if(mp1.size()==4)\n               {\n                  ans+=min(totalCostForZero,totalCostForOne);\n               }\n\n\n                if(mp1.size()==1)\n                {\n                       if(n%2==1 && m%2==1 && grid[row][col]==1)\n                        {\n                            ans++;\n                            grid[row][col]=0;\n                        }\n                }\n\n                if(mp1.size()==2)\n                {\n                    difPair+=min(totalCostForZero,totalCostForOne);\n                    if(totalCostForOne==0)\n                    {\n                        extraOnePair++;\n                    }\n                }\n\n           }\n       }\n\n       int extraOne=extraOnePair*2;\n     \n       extraOne%=4;\n       if(difPair>0)\n       {\n          extraOne=0;\n       }\n       ans+=difPair;\n       ans+=extraOne;\n\n            \n       \n       return ans;\n\n    }\n\n    int minFlips(vector<vector<int>>& grid) \n    {   \n        int n=grid.size();\n        int m=grid[0].size();\n        int row=(n-1)/2;\n        int col=(m-1)/2;\n        int ans=minFlipsPalindrome(0,0,row,col,n,m,grid);\n        return ans;\n    }\n};",
    "submit_ts": "1722699146",
    "subm_id": "1343202797"
}