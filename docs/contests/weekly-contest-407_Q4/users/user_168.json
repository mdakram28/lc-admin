{
    "username": "megaspazz",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        final int N = nums.length;\n        \n        int[] A = new int[N];\n        for (int i = 0; i < nums.length; ++i) {\n            A[i] = nums[i] - target[i];\n        }\n        \n        long ans = 0;\n        long prop = 0;\n        for (int i = 0; i < nums.length; ++i) {\n            if (A[i] < 0) {\n                long take = Math.max(0, Math.min(prop, -A[i]));\n                long curr = A[i] + take;\n                long extra = -curr;\n                prop = take + extra;\n                // System.out.format(\"i = %d, take = %d, curr = %d, extra = %d, prop = %d%n\", i, take, curr, extra, prop);\n                ans += extra;\n            } else {\n                long take = Math.max(0, Math.min(-prop, A[i]));\n                long curr = A[i] - take;\n                long extra = curr;\n                prop = -(take + extra);\n                // System.out.format(\"i = %d, take = %d, curr = %d, extra = %d, prop = %d%n\", i, take, curr, extra, prop);\n                ans += extra;\n            }\n        }\n        return ans;\n    }\n    \n    // private static long min(long... arr) {\n    //     long ans = arr[0];\n    //     for (int i = 1; i < arr.length; ++i) {\n    //         ans = math.min(ans, arr[i]);\n    //     }\n    //     return ans;\n    // }\n}",
    "submit_ts": "1721530643",
    "subm_id": "1327939591"
}