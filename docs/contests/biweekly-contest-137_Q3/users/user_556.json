{
    "username": "Xiao__Jun",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        const int ROW = board.size(), COL = board[0].size(), OFFSET = 1000;\n        vector<vector<long long>> colMax(ROW, vector<long long>(COL, INT_MIN));\n        multimap<long long,int> upperColMax;\n        long long res = LLONG_MIN;\n        \n        for(int c = 0;c < COL;c++)\n            colMax[ROW - 1][c] = board[ROW - 1][c];\n        \n        for(int r = ROW - 2;r >= 0;r--)\n            for(int c = 0;c < COL;c++)\n                colMax[r][c] = max(colMax[r + 1][c], (long long)board[r][c]);\n        \n        for(int c = 0;c < COL;c++)\n            upperColMax.emplace(board[0][c], c);\n        \n        for(int r = 1;r < ROW - 1;r++) {\n            auto itr = upperColMax.rbegin();\n            long long val1 = itr->first;\n            int col1 = itr->second;\n            itr++;\n            long long val2 = itr->first;\n            int col2 = itr->second;\n            itr++;\n            long long val3 = itr->first;\n            int col3 = itr->second;\n            itr++;\n            \n            for(int c = 0;c < COL;c++) {\n                long long curVal = board[r][c];\n                for(int cd = 0;cd < COL;cd++) {\n                    if(cd == c)\n                        continue;\n                    long long lowerMaxVal = colMax[r + 1][cd];\n                    if(col1 != c && col1 != cd)\n                        res = max(res, curVal + lowerMaxVal + val1);\n                    if(col2 != c && col2 != cd)\n                        res = max(res, curVal + lowerMaxVal + val2);\n                    if(col3 != c && col3 != cd)\n                        res = max(res, curVal + lowerMaxVal + val3);\n                    \n                    // if(r == 1 && c == 3 && cd == 2) {\n                    //     cout<<curVal<<\" \"<<lowerMaxVal<<\" \"<<val1<<\" \"<<val2<<\" \"<<val3<<endl;\n                    // }\n                }\n            }\n            \n            multimap<long long,int> next;\n            \n            for(auto[val,c] : upperColMax) {\n                long long nextMax = max(val, (long long)board[r][c]);\n                next.emplace(nextMax, c);\n            }\n            upperColMax = next;\n        }\n        \n        return res;\n    }\n};\n/*\n[[-95,-22,85,-57],[-4,10,80,68],[-20,-59,99,-97],[-25,-60,71,21]]\n\n[[-95,-22,85,-57]\n,[-4,10,80,68]\n,[-20,-59,99,-97]\n,[-25,-60,71,21]]\n*/",
    "submit_ts": "1723908211",
    "subm_id": "1359142959"
}