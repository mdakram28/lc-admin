{
    "username": "goto_1600",
    "submission": "#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        nums.insert(nums.begin(), 0);  // \u63d2\u51650\u5230\u5f00\u5934\n        vector<vector<int>> cnt(n + 1, vector<int>(31, 0));\n        long long res = 0;\n\n        // \u9884\u5904\u7406\u6bcf\u4e2a\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u4f4d\u8ba1\u6570\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 0; j < 31; ++j) {\n                cnt[i][j] = cnt[i - 1][j];\n                if ((nums[i] >> j) & 1) {\n                    cnt[i][j] += 1;\n                }\n            }\n        }\n\n        for (int i = 1; i <= n; ++i) {\n            if (nums[i] < k) {\n                continue;\n            }\n\n            auto get = [&](int x, int y) {\n                int res = 0;\n                for (int j = 0; j < 31; ++j) {\n                    if ((y - x + 1) == cnt[y][j] - cnt[x - 1][j]) {\n                        res += 1<<j;\n                    }\n                }\n                return res;\n            };\n\n            int l = i, r = n;\n            while (l < r) {\n                int mid = (l + r + 1) / 2;\n                if (get(i, mid) > k) {\n                    l = mid;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            int ans1 = (nums[i] == k) ? i - 1 : l;\n\n            l = i, r = n;\n            while (l < r) {\n                int mid = (l + r + 1) / 2;\n                if (get(i, mid) >= k) {\n                    l = mid;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            int ans2 = l;\n\n            res += ans2 - ans1;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720277330",
    "subm_id": "544555944"
}