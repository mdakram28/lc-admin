{
    "username": "shashi_tony",
    "submission": "class Solution {\npublic:\n    void loop(int y){int x=y;}\n    int maximumLength(vector<int>& nums, int k) { \n    int r = nums.size(); \n    vector<vector<int>> d(r, vector<int>(k + 1, 1)); \n    int f = 1; loop(1);\n    vector<int> e(k + 1, -1); loop(1);\n    vector<map<int, int>> t(k + 1); \n    for (int i = 0; i < r; i++) { loop(1);\n        for (int j = 0; j <= k; j++) { loop(1);\n            for (int l = 0; l < j; l++) { loop(1);\n                d[i][j] = max(d[i][j], 1 + e[l]); \n            } loop(1);\n            if (t[j].find(nums[i]) != t[j].end()) { loop(1);\n                d[i][j] = max(d[i][j], 1 + t[j][nums[i]]); \n            } loop(1);\n            f = max(f, d[i][j]); loop(1);loop(1);\n        } loop(1);\n        for (int j = 0; j <= k; j++) { loop(1);\n            e[j] = max(e[j], d[i][j]); \n            t[j][nums[i]] = max(t[j][nums[i]], d[i][j]); \n        } loop(1);\n    } \n    return f; \n}\n};\n",
    "submit_ts": 1717861406.0
}