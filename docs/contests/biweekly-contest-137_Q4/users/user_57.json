{
    "username": "Tagir Gumerov",
    "submission": "import heapq\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n\n        k = 3 * max(m, n)\n\n        elems = heapq.nlargest(\n            k,\n            ((board[i][j], i, j) for j in range(n) for i in range(m))\n        )\n    \n        result = -float('inf')\n        for index, (elem, i, j) in enumerate(elems):\n            if 3 * elem <= result:\n                return result\n            for index_2 in range(index + 1, k):\n                elem_2, i_2, j_2 = elems[index_2]\n                if elem + 2 * elem_2 <= result:\n                    break\n                if i == i_2 or j == j_2:\n                    continue\n                for index_3 in range(index_2 + 1, k):\n                    elem_3, i_3, j_3 = elems[index_3]\n                    current = elem + elem_2 + elem_3\n                    if current <= result:\n                        break\n                    if i == i_3 or j == j_3 or i_2 == i_3 or j_2 == j_3:\n                        continue\n                    result = max(result, current)\n        \n        return result\n\n        ",
    "submit_ts": "1723907331",
    "subm_id": "1359102295"
}