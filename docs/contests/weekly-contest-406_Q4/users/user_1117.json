{
    "username": "HARSHIT98765",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n         Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        int h = m - 1, v = n - 1;\n        int hIndex = horizontalCut.length - 1, vIndex = verticalCut.length - 1;\n        int horizontalSegments = 1, verticalSegments = 1;\n        long totalCost = 0;\n        \n        while (hIndex >= 0 && vIndex >= 0) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += (long)(horizontalCut[hIndex] * verticalSegments);\n                horizontalSegments++;\n                hIndex--;\n            } else {\n                totalCost +=(long)( verticalCut[vIndex] * horizontalSegments);\n                verticalSegments++;\n                vIndex--;\n            }\n        }\n        \n        while (hIndex >= 0) {\n            totalCost += (long)(horizontalCut[hIndex] * verticalSegments);\n            hIndex--;\n        }\n        \n        while (vIndex >= 0) {\n            totalCost += (long)(verticalCut[vIndex] * horizontalSegments);\n            vIndex--;\n        }\n        \n        return totalCost;\n}\n}",
    "submit_ts": "1720925772",
    "subm_id": "1320265684"
}