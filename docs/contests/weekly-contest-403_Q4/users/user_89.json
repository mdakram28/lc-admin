{
    "username": "lost-temple-2",
    "submission": "public class Solution {\n    public int MinimumSum(int[][] grid) {\n        int n = grid.Length,m = grid[0].Length;\n        int ans = (int)1e9;\n        for (int i=0;i<m;i++) {\n            for (int j=i+1;j<m-1;j++) {\n                int s0 = Cal(grid,0,0,n-1,i);\n                int s1 = Cal(grid,0,i+1,n-1,j);\n                int s2 = Cal(grid,0,j+1,n-1,m-1);\n                if (s0 != -1 && s1 != -1 && s2 != -1) {\n                    ans = Math.Min(ans,s0+s1+s2);\n                }\n            }\n        }\n        for (int i=0;i<n;i++) {\n            for (int j=i+1;j<n-1;j++) {\n                int s0 = Cal(grid,0,0,i,m-1);\n                int s1 = Cal(grid,i+1,0,j,m-1);\n                int s2 = Cal(grid,j+1,0,n-1,m-1);\n                if (s0 != -1 && s1 != -1 && s2 != -1) {\n                    ans = Math.Min(ans,s0+s1+s2);\n                }\n            }\n        }\n        for (int i=0;i<m-1;i++) {\n            for (int j=0;j<n-1;j++) {\n                int s0 = Cal(grid,0,0,n-1,i);\n                int s1 = Cal(grid,0,i+1,j,m-1);\n                int s2 = Cal(grid,j+1,i+1,n-1,m-1);\n                if (s0 != -1 && s1 != -1 && s2 != -1) {\n                    ans = Math.Min(ans,s0+s1+s2);\n                }\n            }\n        }\n        for (int i=0;i<m-1;i++) {\n            for (int j=0;j<n-1;j++) {\n                int s0 = Cal(grid,0,i+1,n-1,m-1);\n                int s1 = Cal(grid,0,0,j,i);\n                int s2 = Cal(grid,j+1,0,n-1,i);\n                if (s0 != -1 && s1 != -1 && s2 != -1) {\n                    ans = Math.Min(ans,s0+s1+s2);\n                }\n            }\n        }\n        for (int i=0;i<n-1;i++) {\n            for (int j=0;j<m-1;j++) {\n                int s0 = Cal(grid,i+1,0,n-1,m-1);\n                int s1 = Cal(grid,0,0,i,j);\n                int s2 = Cal(grid,0,j+1,i,m-1);\n                if (s0 != -1 && s1 != -1 && s2 != -1) {\n                    ans = Math.Min(ans,s0+s1+s2);\n                }\n            }\n        }\n        for (int i=0;i<n-1;i++) {\n            for (int j=0;j<m-1;j++) {\n                int s0 = Cal(grid,0,0,i,m-1);\n                int s1 = Cal(grid,i+1,0,n-1,j);\n                int s2 = Cal(grid,i+1,j+1,n-1,m-1);\n                if (s0 != -1 && s1 != -1 && s2 != -1) {\n                    ans = Math.Min(ans,s0+s1+s2);\n                }\n            }\n        }\n        return ans;\n    }\n    \n    private int Cal(int[][] grid,int sr,int sc,int tr,int tc) {\n        int n = grid.Length,m = grid[0].Length;\n        int l = m,r = 0,t = n,b = 0;\n        bool check = false;\n        for (int i=sr;i<=tr;i++) {\n            for (int j=sc;j<=tc;j++) {\n                if (grid[i][j] == 1) {\n                    check = true;\n                    l = Math.Min(l,j);\n                    r = Math.Max(r,j);\n                    t = Math.Min(t,i);\n                    b = Math.Max(b,i);\n                }\n            }\n        }\n        if (!check) {\n            return -1;\n        }\n        return (b-t+1) * (r-l+1);\n    }\n}",
    "submit_ts": "1719112399",
    "subm_id": "541392194"
}