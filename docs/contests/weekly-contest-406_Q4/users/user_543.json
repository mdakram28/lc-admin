{
    "username": "disandrewed",
    "submission": "class Solution {\npublic:\n    #define LL long long\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        LL horizontalPieces = 1;\n        LL verticalPieces = 1;\n        LL totalCost = 0;\n        LL i = 0, j = 0;\n        \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += horizontalCut[i] * verticalPieces;\n                horizontalPieces++;\n                i++;\n            } else {\n                totalCost += verticalCut[j] * horizontalPieces;\n                verticalPieces++;\n                j++;\n            }\n        }\n        \n        while (i < horizontalCut.size()) {\n            totalCost += horizontalCut[i] * verticalPieces;\n            i++;\n        }\n        \n        while (j < verticalCut.size()) {\n            totalCost += verticalCut[j] * horizontalPieces;\n            j++;\n        }\n        \n        return totalCost;\n        \n        \n    }\n};",
    "submit_ts": "1720925612",
    "subm_id": "1320260504"
}