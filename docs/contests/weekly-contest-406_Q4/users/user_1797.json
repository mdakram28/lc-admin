{
    "username": "gooday-3",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int n, int m, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int,int>> P;\n        for (auto x : horizontalCut) {\n            P.push_back({x, 0});\n        }\n        for (auto y : verticalCut) {\n            P.push_back({y, 1});\n        }\n        \n        sort(P.begin(), P.end());\n        \n        long long res = 0;\n        int idx = 0;\n        int sz = (int) P.size();\n        while (n > 1 || m > 1) {\n            assert(idx < sz);\n            long long w = P[idx].first;\n            int d = P[idx].second;\n            if (d == 0) {\n                res += w * m;\n                --n;\n            } else {\n                res += w * n;\n                --m;\n            }\n            ++idx;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720926459",
    "subm_id": "546446380"
}