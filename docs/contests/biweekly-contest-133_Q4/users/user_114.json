{
    "username": "Farhan20",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& p) {\n        vector<int> vis(n, -1);\n        for(auto e : p) {\n            vis[e[0]] = e[1];\n        }\n        \n        const int mod = 1e9 + 7;\n        \n        vector<int> dp(402);\n        dp[0] = 1;\n        for(int pos = 0; pos < n; pos++) {\n            vector<int> dp2(402);\n            \n            int l = 0, r = 400;\n            if(vis[pos] != -1) {\n                l = vis[pos];\n                r = l;\n            }\n            \n            for(int inv = l; inv <= r; inv++) {\n                for(int val = 0; val <= pos; val++) {\n                    int cur = pos - val;\n                    if(inv - cur >= 0) {\n                        dp2[inv] += dp[inv - cur];\n                        dp2[inv] %= mod;\n                    }\n                }\n            }\n            \n            dp = dp2;\n            // for(int i = 0; i < 4; i++) {\n            //     cout << dp[i] << \" \" ;\n            // }\n            // cout << endl;\n        }\n        \n        // cout << \"vis = \" << vis[n - 1] << endl;\n        return dp[vis[n - 1]];\n    }\n};",
    "submit_ts": 1719068780.0
}