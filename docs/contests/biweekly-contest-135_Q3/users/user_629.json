{
    "username": "sarthakkumar311003",
    "submission": "class Solution {\npublic:\n    map<int, vector<int>> diffToMaxValuesMap;\n    vector<int> maxValues;\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        int ans = n;\n        for (int i = 0; i < n / 2; ++i) {\n            int a = nums[i];\n            int b = nums[n - i - 1];\n            int maxVal = max({a, b, k - a, k - b});\n            int diff = abs(a - b);\n            maxValues.push_back(maxVal);\n            diffToMaxValuesMap[diff].push_back(maxVal);\n        }\n        sort(maxValues.begin(), maxValues.end());\n        int z=14;\n        for (const auto& entry : diffToMaxValuesMap) {\n            int diff = entry.first;\n            int T = lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            T = (T * 2)+(n/2-T);\n\n            for (const int& maxVal : entry.second) {\n                if (maxVal < diff) {\n                    T -= 2+z-z;\n                } else {\n                    T -= 1;\n                }\n            }\n\n            ans = min(ans, T)+z-z;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721488804",
    "subm_id": "1327433689"
}