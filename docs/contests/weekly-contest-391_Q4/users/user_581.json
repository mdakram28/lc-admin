{
    "username": "hero777",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<vector<int>> s;\n        vector<vector<int>> d;\n        for(int i = 0; i < points.size(); i++){\n            s.push_back({points[i][0]+points[i][1], i});\n            d.push_back({points[i][0]-points[i][1], i});\n        }\n        sort(s.begin(), s.end());\n        sort(d.begin(), d.end());\n        set<int> ss;\n        ss.insert(s[0][1]);\n        ss.insert(s.back()[1]);\n        ss.insert(d[0][1]);\n        ss.insert(d.back()[1]);\n        int ans = 5e8;\n        vector<int> e(ss.begin(), ss.end());\n        for(int x: e){\n            int temp = 0;\n            //cout << x << '\\n';\n            if(x != s[0][1] && x != s.back()[1]){\n                //cout << \"uff\\n\";\n                temp = max(temp, abs(s[0][0] - s.back()[0]));\n                //cout << x << '\\n';\n            }\n            else{\n                \n                if(x == s[0][1])\n                    temp = max(temp, abs(s[1][0] - s.back()[0]));\n                else\n                    temp = max(temp, abs(s[0][0] - s[s.size()-2][0]));\n            }\n            if(x != d[0][1] && x != d.back()[1])\n                temp = max(temp, abs(d[0][0] - d.back()[0]));\n            else{\n                \n                if(x == d[0][1])\n                    temp = max(temp, abs(d[1][0] - d.back()[0]));\n                else\n                    temp = max(temp, abs(d[0][0] - d[d.size()-2][0]));\n            }\n            //cout << temp << '\\n';\n            ans = min(ans, temp);\n        }\n        return ans;\n    }\n};"
}