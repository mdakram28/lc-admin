{
    "username": "harsh_kilaji",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        hori = sorted(horizontalCut, reverse=True)\n        vert = sorted(verticalCut, reverse=True)\n        \n        horizontal_pieces = vertical_pieces = 1\n        \n        i = j = total_cost = 0\n        \n        while i < m - 1 and j < n - 1:\n            if hori[i] > vert[j]:\n                total_cost += hori[i] * vertical_pieces\n                horizontal_pieces += 1\n                i += 1\n            else:\n                total_cost += vert[j] * horizontal_pieces\n                vertical_pieces += 1\n                j += 1\n        \n        while i < m - 1:\n            total_cost += hori[i] * vertical_pieces\n            i += 1\n        \n        while j < n - 1:\n            total_cost += vert[j] * horizontal_pieces\n            j += 1\n        \n        return total_cost\n",
    "submit_ts": "1720925325",
    "subm_id": "1320250818"
}