{
    "username": "rupaparasmit",
    "submission": "struct Fenwick {\n    vector<int> bit;  // binary indexed tree\n    int n;\n\n    Fenwick(int n) {\n        this->n = n + 1;\n        bit.assign(n + 1, 0);\n    }\n\n    Fenwick(vector<int> a)\n        : Fenwick(a.size()) {\n        for (size_t i = 0; i < a.size(); i++)\n            add(i, a[i]);\n    }\n\n    int sum(int idx) {\n        int ret = 0;\n        for (++idx; idx > 0; idx -= idx & -idx)\n            ret += bit[idx];\n        return ret;\n    }\n\n    int sum(int l, int r) {\n        return sum(r) - sum(l - 1);\n    }\n\n    void add(int idx, int delta) {\n        for (++idx; idx < n; idx += idx & -idx)\n            bit[idx] += delta;\n    }\n};\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        Fenwick ft(n);\n        // ft.add(0,4);\n        \n        for(int i=1;i<n-1;i++){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]){\n                ft.add(i,1);\n                // cout<<i<<endl;\n            }\n        }\n        // for(int i=0;i<=n;i++){\n        //     cout<<ft.bit[i]<<\" \";\n        // }\n        // cout<<endl;\n        vector<int> ans;\n        for(auto q:queries){\n            if(q[0]==2){\n                \n                int ind=q[1];\n                int val=q[2];\n\n                \n                if(ind>1){\n                    if(nums[ind-1]>nums[ind-2] && nums[ind-1]>nums[ind]){\n                        ft.add(ind-1,-1);\n                        // cout<<ind<<\" \"<<7<<\" \";\n                    }\n                }\n                if(ind<n-2){\n                    if(nums[ind+1]>nums[ind] && nums[ind+1]>nums[ind+2]){\n                        ft.add(ind+1,-1);\n                        // cout<<ind<<\" \"<<7<<\" \";\n                    }\n                } \n                if(ind>0 && ind<n-1){\n                    if(nums[ind]>nums[ind-1] && nums[ind]>nums[ind+1]){\n                        ft.add(ind,-1);\n                        // cout<<ind<<\" \"<<7<<\" \";\n                    }\n                }\n                nums[ind]=val;\n                if(ind>1){\n                    if(nums[ind-1]>nums[ind-2] && nums[ind-1]>nums[ind]){\n                        ft.add(ind-1,1);\n                        // cout<<ind<<\" \"<<7<<\" \";\n                    }\n                }\n                if(ind<n-2){\n                    if(nums[ind+1]>nums[ind] && nums[ind+1]>nums[ind+2]){\n                        ft.add(ind+1,1);\n                        // cout<<ind<<\" \"<<7<<\" \";\n                    }\n                } \n                if(ind>0 && ind<n-1){\n                    if(nums[ind]>nums[ind-1] && nums[ind]>nums[ind+1]){\n                        ft.add(ind,1);\n                        // cout<<ind<<\" \"<<7<<\" \";\n                    }\n                }\n                // for(int i=0;i<=n;i++){\n                //     cout<<ft.bit[i]<<\" \";\n                // }\n                // cout<<endl;\n                \n            }\n            else{\n                int l=q[1];\n                int r=q[2];\n                if(r==l+1 || l==r){\n                    ans.push_back(0);\n                }\n                else{\n                    ans.push_back(ft.sum(l+1,r-1));\n                }\n            }\n            \n        }\n        // cout<<endl;\n        return ans;\n        \n    }\n};",
    "submit_ts": 1718508421.0
}