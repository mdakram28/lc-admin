{
    "username": "Jerry He",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if(k == 1 or k == 3 or k == 9):\n            return '9' * n\n        elif(k == 2):\n            if(n == 1):\n                return '8'\n            return '8' + '9' * (n - 2) + '8'\n        elif(k == 4):\n            if(n <= 4):\n                return '8'*n\n            else:\n                return '88'+'9'*(n-4)+'88'\n        elif(k == 5):\n            if(n <= 2):\n                return '5' * n\n            else:\n                return '5' + '9' * (n - 2) + '5'\n        elif(k == 6):\n            if(n <= 2):\n                return '6'*n\n            if(n % 2 == 1):\n                return '8' + '9' * ((n-1)//2 - 1) + '8' + '9' * ((n-1)//2 - 1) + '8'\n            else:\n                return '8' + '9' * (n//2 - 2) + '77' + '9' * (n//2 - 2) + '8'\n        elif(k == 7):\n            if(n <= 2):\n                return '7'*n\n            elif(n == 3):\n                return '959'\n            else:\n                edgeNineCnt = (n+1)//2 - 1\n                pattern = ['7','77','5','77','7','99','4','44','6','44','4','99']\n                idx = (n-1)%12\n                return '9'*edgeNineCnt + pattern[idx] + '9'*edgeNineCnt\n\n        elif(k==8):\n            if(n <= 6):\n                return '8'*n\n            else:\n                return '888' + '9' * (n - 6) + '888'\n            \n\n\n        ",
    "submit_ts": "1723951730",
    "subm_id": "1359778680"
}