{
    "username": "st993201",
    "submission": "class Solution {\npublic:\n    int dp[2000][100];\n    int n;\n    int mod = 1e9+7;\n\n    long long dfs(int ind, int last_inc, int last_dec, vector<int>& nums){\n        if(ind == n) return 1;\n        if(dp[ind][last_inc] != -1) return dp[ind][last_inc];\n        long long rec = 0;\n        for(int i = last_inc; i <= nums[ind]; i++){\n            int cur_dec = nums[ind] - i;\n            if(cur_dec > last_dec) continue;\n            int tmp = dfs(ind+1, i, cur_dec, nums);\n            rec += tmp;\n            rec %= mod;\n        }\n        return dp[ind][last_inc] = rec ;\n    }\n\n\n    int countOfPairs(vector<int>& nums) {\n        n = nums.size();\n        memset(dp, -1, sizeof(dp));\n        return dfs(0, 0, 2500, nums) % mod;\n    }\n};",
    "submit_ts": "1723345362",
    "subm_id": "1351554135"
}