{
    "username": "omkargho78",
    "submission": "\n\nclass Solution {\n    public int minChanges(int[] nums, int k) {\n        Map<Integer, List<Integer>> diffMap = new HashMap<>();\n        List<Integer> maxList = new ArrayList<>();\n        \n        for (int i = 0; i < nums.length / 2; i++) {\n            int a = nums[i], b = nums[nums.length - i - 1];\n            int diff = Math.abs(a - b);\n            int maxVal = Math.max(Math.max(a, b), Math.max(k - a, k - b));\n            \n            diffMap.computeIfAbsent(diff, key -> new ArrayList<>()).add(maxVal);\n            maxList.add(maxVal);\n        }\n        \n        int result = nums.length;\n        Collections.sort(maxList);\n        \n        for (Map.Entry<Integer, List<Integer>> entry : diffMap.entrySet()) {\n            int diff = entry.getKey();\n            int count = binarySearch(maxList, diff);\n            count = count * 2 + (nums.length / 2 - count);\n            \n            for (int maxVal : entry.getValue()) {\n                if (maxVal < diff) {\n                    count -= 2;\n                } else {\n                    count--;\n                }\n            }\n            \n            result = Math.min(result, count);\n        }\n        \n        return result;\n    }\n    \n    private int binarySearch(List<Integer> list, int target) {\n        int left = 0, right = list.size();\n        while (left < right) {\n            int mid = left + (right - left) / 2;\n            if (list.get(mid) < target) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        return left;\n    }\n}",
    "submit_ts": "1721489005",
    "subm_id": "1327439876"
}