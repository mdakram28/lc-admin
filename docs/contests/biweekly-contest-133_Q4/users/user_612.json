{
    "username": "DarkOp51",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        const int MOD = 1e9 + 7;\n        \n\n        unordered_map<int, int> mp;\n        for (auto& it : reqs) {\n            mp[it[0] + 1] = it[1];\n        }\n\n        const int grid = 400;\n        vector<vector<long>> dp(n + 1, vector<long>(grid + 1, 0));\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= grid; j++) {\n                for (int z = 0; z < i; z++) {\n                    int prevj = j - z;\n                    if (prevj >= 0) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][prevj]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.count(i)) {\n                int targetj = mp[i];\n                for (int j = 0; j <= grid; j++) {\n                    if (j != targetj) {\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        long cnt = 0;\n        for (long it : dp[n]) {\n            cnt = (cnt + it) % MOD;\n        }\n\n        return cnt;\n    }\n};",
    "submit_ts": "1719070488",
    "subm_id": "1296824309"
}