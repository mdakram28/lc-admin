{
    "username": "ming",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        auto check = [](string s) {\n            while (s.length() > 9) {\n                // cout << s << '\\n';\n                int a = s.back() - '0';\n                s.pop_back();\n                int b = s.back() - '0';\n                s.pop_back();\n                int c = s.back() - '0';\n                s.pop_back();\n                int d = s.back() - '0';\n                s.pop_back();\n                int diff = d * 100 + c * 10 + b - a * 2;\n                string app = to_string(diff);\n                s += string(3 - app.length(), '0') + app;\n            }\n            // cout << s << '\\n';\n            return stoi(s) % 7 == 0;\n        };\n        if (k == 1) return string(n, '9');\n        else if (k == 2) {\n            string retVal = \"8\";\n            if (n > 2) retVal += string(n - 2, '9');\n            if (n > 1) retVal.push_back('8');\n            return retVal;\n        } \n        else if (k == 3) return string(n, '9');\n        else if (k == 4) {\n            if (n == 1) return \"8\";\n            else if (n == 2) return \"88\";\n            else if (n == 3) return \"888\";\n            else if (n == 4) return \"8888\";\n            else return \"88\" + string(n - 4, '9') + \"88\";\n        }\n        else if (k == 5) {\n            if (n < 3) return string(n, '5');\n            else return \"5\" + string(n - 2, '9') + \"5\";\n        }\n        else if (k == 6) {\n            string retVal = \"8\";\n            if (n > 2) retVal += string(n - 2, '9');\n            if (n > 1) retVal.push_back('8');\n            int s = accumulate(retVal.begin(), retVal.end(), 0, [](int a, char b) { return a + b - '0'; });\n            int idx1 = n >> 1, idx2 = (n - 1) >> 1;\n            while (s % 3) {\n                retVal[idx1] = retVal[idx2] = retVal[idx1] - 1;\n                s -= 1 + (n & 1 ^ 1);\n            }\n            return retVal;\n        }\n        else if (k == 7) {\n            string retVal(n, '9');\n            int idx1 = n >> 1, idx2 = (n - 1) >> 1;\n            while (true) {\n                if (check(retVal)) break;\n                else retVal[idx1] = retVal[idx2] = retVal[idx1] - 1;\n            }\n            return retVal;\n        }\n        else if (k == 8) {\n            if (n < 7) return string(n, '8');\n            else return \"888\" + string(n - 6, '9') + \"888\";\n        }\n        else return string(n, '9');\n    }\n};",
    "submit_ts": "1723953079",
    "subm_id": "556415394"
}