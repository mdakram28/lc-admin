{
    "username": "fmota",
    "submission": "template<typename T>\nstruct segtree {\n    vector<T> t;\n    int n;\n    segtree(int n): n(n) {\n        t.assign(2 * n, T());\n    }\n    void update(int p, T v){\n        for(t[p += n] = v; p >>= 1; )\n            t[p] = t[p<<1] + t[p<<1|1];\n    }\n    void add(int p, T v){\n        p += n;\n        t[p] = t[p] + v;\n        while(p >>= 1) t[p] = t[p<<1] + t[p<<1|1];\n    }\n    T query(int l, int r){\n        T cl = T(), cr = T();\n        for(l += n, r += n; l < r; l >>= 1, r >>= 1){\n            if(l&1) cl = cl + t[l++];\n            if(r&1) cr = t[--r] + cr;\n        }\n        return cl + cr;\n    }\n};\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& qu) {\n        int n = s.size();\n        vector<int> pos[2], a(n), prv(n);\n        for(int i = 0; i < n; i++){\n            a[i] = s[i] - '0';\n            pos[a[i]].push_back(i);\n            if(i) a[i] += a[i - 1];\n        }\n        for(int i = 0; i < n; i++){\n            int j = i - 2 * k;\n            if(j <= 0){\n                prv[i] = 0;\n            } else {\n                int c1 = a[i] - a[j - 1];\n                if(c1 <= k){\n                    int idx = lower_bound(pos[1].begin(), pos[1].end(), i + 1) - pos[1].begin();\n                    idx--;\n                    idx -= k;\n                    if(idx < 0){\n                        prv[i] = 0;\n                    } else {\n                        prv[i] = pos[1][idx] + 1;\n                    }\n                } else {\n                    int idx = lower_bound(pos[0].begin(), pos[0].end(), i + 1) - pos[0].begin();\n                    idx--;\n                    idx -= k;\n                    if(idx < 0){\n                        prv[i] = 0;\n                    } else {\n                        prv[i] = pos[0][idx] + 1;\n                    }\n                }\n            }\n        }\n        int q = qu.size();\n        using pii = pair<int, int>;\n        vector<vector<pii>> to(n);\n        for(int i = 0; i < q; i++){\n            to[qu[i][1]].emplace_back(qu[i][0], i);\n        }\n        using ll = long long;\n        vector<ll> ans(q);\n        segtree<ll> neg_sum(n), pos_sum(n), cnt(n);\n        for(int i = 0; i < n; i++){\n            cnt.add(prv[i], 1);\n            neg_sum.add(prv[i], -prv[i] + 1);\n            pos_sum.add(i, i);\n            for(auto [j, id] : to[i]){\n                ll in = cnt.query(j, i + 1);\n                ll rh = neg_sum.query(j, i + 1);\n                ll po = pos_sum.query(j, i + 1);\n                ans[id] = po + rh + (i - j + 1 - in) * (-j + 1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950813",
    "subm_id": "1359755739"
}