{
    "username": "deepak_yadav_7",
    "submission": "class Solution {\nprivate:\n    int MaxDist(vector<vector<int>>& A, int N, int skip){\n        vector<int> V(N-1), V1(N-1);\n        int ind = 0;\n        for (int i = 0; i < N; i++) {\n            if(i==skip) continue;\n            V[ind] = A[i][0] + A[i][1];\n            V1[ind] = A[i][0] - A[i][1];\n            ind++;\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        int maximum = max(V.back() - V.front(), V1.back() - V1.front());\n        return maximum;\n    }\n    pair<int, int> f(vector<vector<int>>& A, int N){\n        vector<pair<int, int>> V(N), V1(N);\n        for (int i = 0; i < N; i++) {\n            V[i].first = A[i][0] + A[i][1]; V[i].second = i;\n            V1[i].first = A[i][0] - A[i][1]; V1[i].second = i;\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        int x = V.back().first - V.front().first, y = V1.back().first - V1.front().first;\n        if(x>y){\n            return {V.back().second, V.front().second};\n        }\n        else return {V1.back().second, V1.front().second};\n    }\npublic:\n    int minimumDistance(vector<vector<int>>& nums) {\n        int ans = 1e9;\n        pair<int, int> skip = f(nums, nums.size());\n        int dis1 = MaxDist(nums, nums.size(), skip.first);\n        int dis2 = MaxDist(nums, nums.size(), skip.second);\n        return min(dis1, dis2);\n    }\n};"
}