{
    "username": "yu46656",
    "submission": "class Solution {\npublic:\n    int countOfPairs(std::vector<int>& nums) {\n        constexpr long long M{ 1000000007 };\n\n        int size{ static_cast<int>(nums.size()) };\n\n        constexpr int offset{ 1000 };\n\n        std::vector<long long> dp_a_;\n        std::vector<long long> dp_b_;\n\n        dp_a_.resize(offset + 1, 0);\n        dp_b_.resize(offset + 1);\n\n        std::vector<long long>* dp_a{ &dp_a_ };\n        std::vector<long long>* dp_b{ &dp_b_ };\n\n        for (int k{ 0 }; k <= nums[0]; ++k) { dp_a_[k] = 1; }\n\n        for (int k{ 1 }; k <= offset; ++k) { (*dp_b)[k] += (*dp_b)[k - 1]; }\n\n        for (int i{ 1 }; i < size; ++i) {\n            for (int k{ 0 }; k <= offset; ++k) {\n                if (nums[i] < k) {\n                    (*dp_b)[k] = 0;\n                    continue;\n                }\n\n                int cur_1{ k };\n                int cur_2{ nums[i] - cur_1 };\n\n                int d_end{ std::min(\n                    std::min(k, nums[i - 1]),\n                    std::min(nums[i], nums[i - 1] - nums[i] + k)) };\n\n                (*dp_b)[k] = 0 <= d_end ? (*dp_a)[d_end] : 0;\n            }\n\n            for (int k{ 1 }; k <= offset; ++k) {\n                (*dp_b)[k] = ((*dp_b)[k] + (*dp_b)[k - 1]) % M;\n            }\n\n            std::swap(dp_a, dp_b);\n        }\n\n        long long ret{ 0 };\n\n        for (int k{ 0 }; k <= nums[size - 1]; ++k) {\n            ret = (ret + (*dp_a)[k]) % M;\n        }\n\n        return ret;\n    }\n};\n",
    "submit_ts": "1723347985",
    "subm_id": "1351609402"
}