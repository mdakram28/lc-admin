{
    "username": "Arifrahaman",
    "submission": "//        int[][] dp = new int[n][k + 1];\n//         for (int i = 0; i < n; ++i) {\n//             Arrays.fill(dp[i], 1);\n//         }\n\n//         int ans = 1;\n\n    \n//         int[] vk = new int[k + 1];\n//         Arrays.fill(vk, -1);\n\n\n//         Map<Integer, Integer>[] h = new HashMap[k + 1];\n//         for (int i = 0; i < k + 1; ++i) {\n//             h[i] = new HashMap<>();\n//         }\n\n\nclass Solution {\n    public int maximumLength(int[] wda, int k) {\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        int n = wda.length;\n        if (n == 0)\n            return 0;\n\n        // Initialize DP table\n        int[][] dp = new int[n][k + 1];\n        \n        \n        \n        for (int i = 0; i < n; ++i) {\n            \n            \n            \n            Arrays.fill(dp[i], 1);\n        }\n\n        int ans = 1;\n\n    \n        int[] vk = new int[k + 1];\n        \n        \n        \n        \n        Arrays.fill(vk, -1);\n\n\n        Map<Integer, Integer>[] h = new HashMap[k + 1];\n        for (int i = 0; i < k + 1; ++i) {\n            \n            \n            \n            \n            h[i] = new HashMap<>();\n            \n            \n            \n            \n            \n        }\n\n     \n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j <= k; ++j) {\n  \n                for (int l = 0; l < j; ++l) {\n                    dp[i][j] = Math.max(dp[i][j], 1 + vk[l]);\n                }\n        \n                if (h[j].containsKey(wda[i])) {\n                    \n                    \n                    \n                    \n                    dp[i][j] = Math.max(dp[i][j], 1 + h[j].get(wda[i]));\n                    \n                    \n                    \n                    \n                }\n \n                ans = Math.max(ans, dp[i][j]);\n            }\n         \n            \n            \n            \n            for (int j = 0; j <= k; ++j) {\n\n\n                vk[j] = Math.max(vk[j], dp[i][j]);\n\n\n\n\n\n\n                \n                h[j].put(wda[i], Math.max(h[j].getOrDefault(wda[i], 0), dp[i][j]));\n            }\n        }\n\n        return ans;\n        \n//                    for (int j = 0; j <= k; ++j) {\n\n\n//                 vk[j] = Math.max(vk[j], dp[i][j]);\n\n\n\n\n\n\n                \n//                 h[j].put(wda[i], Math.max(h[j].getOrDefault(wda[i], 0), dp[i][j]));\n    }\n\n\n}\n",
    "submit_ts": "1717862390",
    "subm_id": "1281822290"
}