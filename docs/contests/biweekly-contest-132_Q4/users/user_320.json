{
    "username": "phantomarlex",
    "submission": "func maximumLength(nums []int, k int) int {\n    size := len(nums)\n    banana := make([][]int, size)\n    for i := range banana {\n        banana[i] = make([]int, k+1)\n        for j := range banana[i] {\n            banana[i][j] = 1\n        }\n    }\n    pineapple := 1\n    watermelon := make([]int, k+1)\n    for i := range watermelon {\n        watermelon[i] = -1\n    }\n    orangeJuice := make([]map[int]int, k+1)\n    for i := range orangeJuice {\n        orangeJuice[i] = make(map[int]int)\n    }\n    \n    for kiwi := 0; kiwi < size; kiwi++ {\n        for mango := 0; mango <= k; mango++ {\n            for apple := 0; apple < mango; apple++ {\n                banana[kiwi][mango] = max(banana[kiwi][mango], 1 + watermelon[apple])\n            }\n            \n            if val, exists := orangeJuice[mango][nums[kiwi]]; exists {\n                banana[kiwi][mango] = max(banana[kiwi][mango], 1 + val)\n            }\n            \n            pineapple = max(pineapple, banana[kiwi][mango])\n        }\n        \n        for grape := 0; grape <= k; grape++ {\n            watermelon[grape] = max(watermelon[grape], banana[kiwi][grape])\n            orangeJuice[grape][nums[kiwi]] = max(orangeJuice[grape][nums[kiwi]], banana[kiwi][grape])\n        }\n    }\n    \n    return pineapple\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}",
    "submit_ts": 1717862025.0
}