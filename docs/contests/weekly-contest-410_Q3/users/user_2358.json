{
    "username": "alex84425",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        \"\"\"\n             ....\n           .. \n        ...\n        ...\n           ..\n             ......\n             \n             \n        pick min\n        \n        pick max\n        \n        23\n        \n        0  2        \n        2  0\n        \n        13\n        10\n        \n        0  5\n        5  0\n        pick head and tail\n        \"\"\"\n        MOD  = 10**9+7\n        @cache\n        def dfs(i,pre_num1, pre_num2 ):\n            nonlocal MOD\n            res = 0\n            if i > len(nums)-1:\n                return 1\n            for pick_v in range(0,nums[i]+1):\n                pick_v2 = nums[i]-pick_v\n                if pre_num1 is not None:\n                    if pre_num1 <=  pick_v and  pre_num2  >=  pick_v2:\n                        res += dfs( i+1 ,pick_v , pick_v2 )   % MOD\n                    else:\n                        pass \n                else:\n                    res += dfs( i+1 ,pick_v, pick_v2 )        % MOD\n            return res\n            \n        \n        return dfs(0, None, None) % MOD\n            \n        ",
    "submit_ts": "1723346615",
    "subm_id": "1351581445"
}