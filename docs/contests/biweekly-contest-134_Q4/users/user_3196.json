{
    "username": "sojal04",
    "submission": "class Solution {\npublic:\n    long long solve(vector<int>& nums, int k,int n){\n        vector<int> bits(31,0);\n        long long res=0;\n        int j=0;\n        int i=0;\n        int sum=INT_MAX;\n\n        while(j<n){\n            int c=nums[j];\n            for(int m=0;m<=30;m++){\n                int bit=c&(1<<m);\n                if(!bit){\n                    bits[m]++;\n                }\n            }\n            sum=sum & nums[j];\n            while(i<=j && sum<=k){\n                int d=nums[i];\n                for(int m=0;m<=30;m++){\n                    int bit=d&(1<<m);\n                    if(!bit){\n                        bits[m]--;\n                    }\n                }\n\n                int a=INT_MAX;\n                for(int m=0;m<=30;m++){\n                    if(bits[m]>0){\n                        a=a&(~(1<<m));\n                    }\n                }\n                sum=a;\n                \n                res+=(n-j);\n                i++;\n            }\n            j++;\n        }\n        return res;\n    }\n\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long  ans=0;\n        int n=nums.size();\n        // cout<<solve(nums,k,n)<<endl;\n        // cout<<solve(nums,k-1,n)<<endl;\n\n        ans=solve(nums,k,n)-solve(nums,k-1,n);\n        return ans;\n    }\n};",
    "submit_ts": "1720280306",
    "subm_id": "1311784465"
}