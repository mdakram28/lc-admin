{
    "username": "codingprince25",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> difference_array(n,0);\n        \n        // Compute the difference array\n        for (int i = 0; i < n; ++i) {\n            difference_array[i] = target[i] - nums[i];\n        }\n        \n        long long tot_opr = 0;\n        long long curr_diff = 0;\n        \n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (difference_array[i - 1] > 0 && difference_array[i] > 0) || (difference_array[i - 1] < 0 && difference_array[i] < 0)) {\n                int additional_operations = abs(difference_array[i]) - abs(curr_diff);\n                if (additional_operations > 0) {\n                    tot_opr += additional_operations;\n                }\n                curr_diff = difference_array[i];\n            } else {\n                tot_opr += abs(difference_array[i]);\n                curr_diff = difference_array[i];\n            }\n        }\n        \n        return tot_opr;\n    }\n};",
    "submit_ts": "1721532897",
    "subm_id": "1327996622"
}