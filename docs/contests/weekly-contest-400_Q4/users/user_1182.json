{
    "username": "pankaj_777",
    "submission": "const int N = 1e5 + 10;\nint pref[31][N];\n\nclass Solution {\npublic:\n    void precompute(vector<int>& nums, int n)\n    {\n        for (int i = 0; i < 31; i++) {\n            pref[i][0] = ((nums[0] >> i) & 1);\n            for (int j = 1; j < n; j++) {\n                pref[i][j] = ((nums[j] >> i) & 1);\n                pref[i][j] += pref[i][j - 1];\n            }\n        }\n    }\n\n    int rangeAnd(int l, int r)\n    {\n        int ans = 0;\n        for (int i = 0; i < 31; i++) {\n            int x;\n            if (l == 0)\n                x = pref[i][r];\n            else\n                x = pref[i][r]\n                    - pref[i][l - 1];\n\n            if (x == r - l + 1)\n                ans = (ans | (1 << i));\n        }\n\n        return ans;\n    }\n    \n    int lowerBound(int idx, vector<int>& nums, int n, int k) {\n        int low = idx, high = n - 1, res = nums[idx];\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n            int val = rangeAnd(idx, mid);\n            if (val <= k) {\n                high = mid - 1;\n                if (res > k) res = val;\n                else res = max(res, val);\n            } else {\n                low = mid + 1;\n            }\n        }\n        return res;\n    }\n    \n    int upperBound(int idx, vector<int>& nums, int n, int k) {\n        int low = idx, high = n - 1, res = abs(nums[idx]);\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n            int val = rangeAnd(idx, mid);\n            if (val >= k) {\n                low = mid + 1;\n                res = min(res, val);\n            } else {\n                high = mid - 1;\n            }\n        }\n        return res;\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        precompute(nums, n);\n        int res = 2e9;\n        for (int i = 0; i < n; i++) {\n            res = min(res, abs(nums[i] - k));\n            res = min(res, abs(upperBound(i, nums, n, k) - k));\n            res = min(res, abs(k - lowerBound(i, nums, n, k)));\n        }\n        return res;\n    }\n};",
    "submit_ts": 1717299621.0
}