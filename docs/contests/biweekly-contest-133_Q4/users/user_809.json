{
    "username": "RahulAhuja2901",
    "submission": "class Solution\n{\n    public long recursion(int ind, int cnt, HashMap<Integer, Integer> map, long[][] dp, long mod)\n    {\n        if (ind == 0)\n        {\n            if (cnt == 0)\n            {\n                return 1;\n            }\n            else\n            {\n                return 0;\n            }\n        }\n        if (dp[ind][cnt] != -1)\n        {\n            return dp[ind][cnt];\n        }\n        long count = 0;\n        if (map.containsKey(ind - 1))\n        {\n            int val = map.get(ind - 1);\n            for (int num=0;num<=ind;num++)\n            {\n                int contri = ind - num;\n                if (cnt >= contri)\n                {\n                    int reqCnt = cnt - contri;\n                    if (reqCnt == val)\n                    {\n                        count += recursion(ind - 1, reqCnt, map, dp, mod);\n                        count %= mod;\n                    }\n                }\n            }\n        }\n        else\n        {\n            for (int num=0;num<=ind;num++)\n            {\n                int contri = ind - num;\n                if (cnt >= contri)\n                {\n                    int reqCnt = cnt - contri;\n                    count += recursion(ind - 1, reqCnt, map, dp, mod);\n                    count %= mod;\n                }\n            }\n        }\n        return dp[ind][cnt] = count;\n    }\n    public int numberOfPermutations(int n, int[][] req)\n    {\n        long mod = (long)1e9 + 7;\n        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n        int m = req.length;\n        for (int i=0;i<m;i++)\n        {\n            int end = req[i][0];\n            int cnt = req[i][1];\n            map.put(end, cnt);\n        }\n        long[][] dp = new long[n][401];\n        for (int i=0;i<n;i++)\n        {\n            for (int j=0;j<=400;j++)\n            {\n                dp[i][j] = -1;\n            }\n        }\n        int ind = n - 1;\n        int cnt = map.get(n - 1);\n        return (int)recursion(ind, cnt, map, dp, mod);\n    }\n}",
    "submit_ts": "1719070985",
    "subm_id": "1296836385"
}