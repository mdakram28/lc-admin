{
    "username": "ankushtyagi7777",
    "submission": "class Solution {\npublic:\n    using ll=long long;\n    \n    int prefix_count[32][100005];\n \n// Function to find the prefix sum\nvoid findPrefixCount(vector<int>& arr, int n)\n{\n \n    // Loop for each bit\n    for (int i = 0; i < 32; i++) {\n \n        // Loop to find prefix count\n        prefix_count[i][0] = ((arr[0] >> i) & 1);\n        for (int j = 1; j < n; j++) {\n            prefix_count[i][j] = ((arr[j] >> i) & 1);\n            prefix_count[i][j] += prefix_count[i][j - 1];\n        }\n    }\n}\n \n// Function to answer query\nint rangeAnd(int l, int r)\n{\n \n    // To store the answer\n    int ans = 0;\n \n    // Loop for each bit\n    for (int i = 0; i < 32; i++) {\n        // To store the number of variables\n        // with ith bit set\n        int x;\n        if (l == 0)\n            x = prefix_count[i][r];\n        else\n            x = prefix_count[i][r]\n                - prefix_count[i][l - 1];\n \n        // Condition for ith bit\n        // of answer to be set\n        if (x == r - l + 1)\n            ans = (ans | (1 << i));\n    }\n \n    return ans;\n}\n \n// // Driver code\n// int main()\n// {\n//     int arr[] = { 7, 5, 3, 5, 2, 3 };\n//     int n = sizeof(arr) / sizeof(int);\n \n//     findPrefixCount(arr, n);\n \n//     int queries[][2] = { { 1, 3 }, { 4, 5 } };\n//     int q = sizeof(queries) / sizeof(queries[0]);\n \n//     for (int i = 0; i < q; i++)\n//         cout << rangeAnd(queries[i][0],\n//                          queries[i][1])\n//              << endl;\n \n//     re\n    \n    long long countSubarrays(vector<int>& arr, int k) {\n        int n=arr.size();\n        int val=arr[0];\n        // Lsegtree<int,int> st(n,(1<<30)-1,-1);\n        // st.build(arr);\n        \n        ll cnt=0;\n        findPrefixCount(arr,n);\n        // cout<<st.query(0,2)<<endl;\n        \n        for(int i=0;i<n;i++){\n            int lo=0,hi=i;\n            ll le=-1,ri=-1;\n            \n            while(lo<=hi){\n                ll mid=(lo+hi)/2;\n                // ll v=st.query(mid,i);\n                ll v=rangeAnd(mid,i);\n                if(v<k){\n                    lo=mid+1;\n                }\n                else if(v>k) hi=mid-1;\n                else if(v==k){\n                    le=mid;\n                    hi=mid-1;\n                }\n            }\n            \n            lo=0,hi=i;\n            \n            while(lo<=hi){\n                ll mid=(lo+hi)/2;\n                // ll v=st.query(mid,i);\n                ll v=rangeAnd(mid,i);\n                if(v<k){\n                    lo=mid+1;\n                }\n                else if(v>k) hi=mid-1;\n                else if(v==k){\n                    ri=mid;\n                    lo=mid+1;\n                }\n            }\n            \n            if(le!=-1) cnt+=(ri-le+1);     \n        }\n        \n        \n        return cnt;\n    }\n};",
    "submit_ts": "1720279164",
    "subm_id": "1311740112"
}