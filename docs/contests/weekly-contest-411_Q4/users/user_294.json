{
    "username": "shivambhagat02",
    "submission": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int, q: List[List[int]]) -> List[int]:\n        \n        n = len(s)\n        p = [0] * (n + 1)\n        \n        for i in range(1, n + 1):\n            p[i] = p[i - 1] + int(s[i - 1] == '1')\n        \n        st = [n - 1] * n\n        for i in range(n):\n            l, h = i, n - 1\n            \n            while l <= h:\n                m = (l + h) // 2\n                \n                one = p[m + 1] - p[i]\n                zero = (m - i + 1) - one\n                \n                if one > k and zero > k:\n                    st[i] = m - 1\n                    h = m - 1\n                else:\n                    l = m + 1\n        \n        # print(st)\n        for i in range(1, n):\n            st[i] += st[i - 1]\n        \n        # print(st)\n        \n        ans = []\n        for l, r in q:\n            t = (r - l + 1)\n            \n            k = (t * (t + 1)) // 2\n                        \n            L, H = l, r\n            \n            ider = r + 1\n            \n            while L <= H:\n                m = (L + H) // 2\n                \n                ele = st[m]\n                if m > 0:\n                    ele -= st[m - 1]\n                    \n                if ele <= r:\n                    ider = m\n                    L = m + 1\n                else:\n                    H = m - 1\n            \n            sm = st[ider]\n            if l != 0: sm -= st[l - 1]\n            \n            # print(l, r, ider)\n            \n            if ider != r + 1:\n                k -= (r * (ider - l + 1) - sm)\n            ans.append(k)\n        \n        return ans\n            \n\"\"\"\nsum(6 - 4) + sum(6 - 6) + sum()\n\"\"\"\n            ",
    "submit_ts": "1723953263",
    "subm_id": "1359816616"
}