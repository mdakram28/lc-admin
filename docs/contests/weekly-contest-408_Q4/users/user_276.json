{
    "username": "Hayford08",
    "submission": "class Solution {\npublic:\n    vector<int> visited;\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<vector<int>> adj(n);\n        for (int i = 0; i < n; i++){\n            for (int j = i + 1; j < n; j++){\n                long long r = (circles[i][2] + circles[j][2]);\n                r *= r;\n                if (distance(circles[i], circles[j]) <= r){\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n\n        visited = vector<int>(n);\n        for (int i = 0; i < n; i++){\n            if (visited[i]){\n                continue;\n            }\n            pair<int, int> prx = {X + 1, -1};\n            pair<int, int> pry = {Y + 1, -1};\n            dfs(i, adj, circles, prx, pry);\n            if (!good(prx, pry, X, Y)){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    bool good(pair<int, int> &prx, pair<int, int> &pry, int x, int y){\n        if (prx.first <= 0 && x <= prx.second){\n            return false;\n        }\n        if (pry.first <= 0 && y <= pry.second){\n            return false;\n        }\n        if (prx.first <= 0 && 0 <= prx.second && pry.first <= 0 && 0 <= pry.second){\n            return false;\n        }\n        if (prx.first <= x && x <= prx.second && pry.first <= y && y <= pry.second){\n            return false;\n        }\n        return true;\n    }\n\n    void dfs(int u, vector<vector<int>> &adj, vector<vector<int>> &circles, pair<int, int> &X, pair<int, int> &Y){\n        int x = circles[u][0], y = circles[u][1], r = circles[u][2];\n        X.first = min(X.first, x - r);\n        X.second = max(X.second, x + r);\n        Y.first = min(Y.first, y - r);\n        Y.second = max(Y.second, y + r);\n\n        visited[u] = 1;\n        for (auto &v : adj[u]){\n            if (!visited[v]){\n                dfs(v, adj, circles, X, Y);\n            }\n        }\n    }\n\n    long long distance(vector<int> &a, vector<int> &b){\n        long long dx = a[0] - b[0];\n        long long dy = a[1] - b[1];\n        return dx * dx + dy * dy;\n    }\n};",
    "submit_ts": "1722136725",
    "subm_id": "1335743140"
}