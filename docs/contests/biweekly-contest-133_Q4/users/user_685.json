{
    "username": "vishwa_m_r",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n        \n        int max_inversions = n * (n - 1) / 2;\n        \n        vector<vector<int>> dp(n + 1, vector<int>(max_inversions + 1, 0));\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; ++i) {\n            vector<int> prefix_sum(max_inversions + 2, 0);\n            for (int k = 0; k <= max_inversions; ++k) {\n                prefix_sum[k + 1] = (prefix_sum[k] + dp[i - 1][k]) % MOD;\n            }\n            for (int k = 0; k <= max_inversions; ++k) {\n                dp[i][k] = (prefix_sum[k + 1] - (k >= i ? prefix_sum[k + 1 - i] : 0) + MOD) % MOD;\n            }\n        }\n\n        vector<int> req_dict(n + 1, -1);\n        for (const auto& req : requirements) {\n            req_dict[req[0] + 1] = req[1];\n        }\n        \n        vector<vector<int>> dp2(n + 1, vector<int>(max_inversions + 1, 0));\n        dp2[0][0] = 1;\n\n        for (int i = 1; i <= n; ++i) {\n            vector<int> prefix_sum(max_inversions + 2, 0);\n            for (int k = 0; k <= max_inversions; ++k) {\n                prefix_sum[k + 1] = (prefix_sum[k] + dp2[i - 1][k]) % MOD;\n            }\n            for (int k = 0; k <= max_inversions; ++k) {\n                dp2[i][k] = (prefix_sum[k + 1] - (k >= i ? prefix_sum[k + 1 - i] : 0) + MOD) % MOD;\n                if (req_dict[i] != -1 && dp2[i][k] > 0 && k != req_dict[i]) {\n                    dp2[i][k] = 0;\n                }\n            }\n        }\n\n        return dp2[n][req_dict[n] == -1 ? 0 : req_dict[n]];\n    }\n};\n\n",
    "submit_ts": 1719069786.0
}