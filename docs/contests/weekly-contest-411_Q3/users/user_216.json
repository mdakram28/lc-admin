{
    "username": "Chang Gao",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        def isdivisible7(num):\n            n = len(num)\n            if (n == 0 and num[0] == '\\n'):\n                return 1\n        \n            # Append required 0s at the beginning.\n            if (n % 3 == 1) :\n                num = \"00\" + str(num) \n                n += 2\n            \n            elif (n % 3 == 2) :\n                num = \"0\" + str(num) \n                n += 1\n        \n            # add digits in group of three in gSum\n            GSum = 0\n            p = 1\n            i = n-1\n            while i>=0 :\n        \n                # group saves 3-digit group\n                group = 0\n                group += ord(num[i]) - ord('0')\n                i -= 1\n                group += (ord(num[i]) - ord('0')) * 10\n                i -= 1\n                group += (ord(num[i]) - ord('0')) * 100\n        \n                GSum = GSum + group * p\n        \n                # generate alternate series of \n                # plus and minus\n                p *= (-1)\n                i -= 1\n        \n            return (GSum % 7 == 0)\n\n        if k == 1:\n            return '9' * n\n        if k == 2:\n            if n == 1:\n                return \"8\"\n            return '8' + '9' * (n - 2) + '8'\n        if k == 3:\n            return '9' * n\n        if k == 4:\n            if n <= 4:\n                return \"8\" * n\n            return '88' + '9' * (n - 4) + '88'\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            return '5' + '9' * (n - 2) + '5'\n        if k == 6:\n            if n <= 2:\n                return \"6\" * n\n            if (n % 2) == 1:\n                return '8' + '9' * ((n - 3) // 2) + '8' + '9' * ((n - 3) // 2) + '8'\n            return '8' + '9' * ((n - 3) // 2) + '77' + '9' * ((n - 3) // 2) + '8'\n        if k == 7:\n            if n <= 2:\n                return '7' * n\n            for i in range(9, -1, -1):\n                candidate = '9' * ((n - 1) // 2) + str(i) * (1 if (n % 2 == 1) else 2) + '9' * ((n - 1) // 2)\n                if isdivisible7(candidate):\n                    return candidate\n        if k == 8:\n            if n <= 6:\n                return \"8\" * n\n            return '888' + '9' * (n - 6) + '888'\n        if k == 9:\n            return '9' * n\n        return \"\"",
    "submit_ts": "1723950985",
    "subm_id": "1359760270"
}