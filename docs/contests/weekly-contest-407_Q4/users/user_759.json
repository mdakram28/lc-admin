{
    "username": "molquark",
    "submission": "class Solution {\n        public long minimumOperations(int[] nums, int[] target) {\n            ArrayList<Integer> deltas = new ArrayList<>();\n            int i=0;\n            int len = nums.length;\n            int j=0;\n            for(;i<len;++i){\n                int d = target[i]-nums[i];\n                if(j==0){\n                    deltas.add(d);\n                    j++;\n                    continue;\n                }else{\n                    if(d==deltas.get(j-1)){\n                        continue;\n                    }else {\n                        j++;\n                        deltas.add(d);\n                    }\n                }\n            }\n            int last = deltas.get(0);\n            long ans=Math.abs(last);\n            boolean lastNeg = last < 0;\n            for(i=1;i<j;++i){\n                int now = deltas.get(i);\n                if(now<0){\n                    if(lastNeg){\n                        if(now<last){\n                            ans+=last-now;\n                        }\n                    }else {\n                        ans+=-now;\n                    }\n                    lastNeg=true;\n                }else {\n                    // now >=0\n                    if(lastNeg){\n                        ans+=now;\n                    }else {\n                        if(last<now){\n                            ans+=now-last;\n                        }\n                    }\n                    lastNeg=false;\n                }\n                last = now;\n            }\n            return ans;\n        }\n    }",
    "submit_ts": "1721531786",
    "subm_id": "548388527"
}