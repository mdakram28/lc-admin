{
    "username": "shahchayan9",
    "submission": "from typing import List\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        height = len(grid)\n        width = len(grid[0])\n        \n        flip_count = 0\n        \n        for row in range(height // 2):\n            for col in range(width // 2):\n                block_values = [\n                    grid[row][col],\n                    grid[height - row - 1][col],\n                    grid[row][width - col - 1],\n                    grid[height - row - 1][width - col - 1]\n                ]\n                \n                ones_count = sum(block_values)\n                flip_count += min(ones_count, 4 - ones_count)\n        \n        potential_flips = 0\n        ones_in_middle = 0\n        \n        if height % 2 == 1:\n            mid_row = height // 2\n            for col in range(width // 2):\n                if grid[mid_row][col] != grid[mid_row][width - col - 1]:\n                    flip_count += 1\n                    potential_flips += 1\n                elif grid[mid_row][col] == 1:\n                    ones_in_middle += 1\n        \n        if width % 2 == 1:\n            mid_col = width // 2\n            for row in range(height // 2):\n                if grid[row][mid_col] != grid[height - row - 1][mid_col]:\n                    flip_count += 1\n                    potential_flips += 1\n                elif grid[row][mid_col] == 1:\n                    ones_in_middle += 1\n        \n\n        if height % 2 == 1 and width % 2 == 1 and grid[height // 2][width // 2] == 1:\n            flip_count += 1\n        \n        if potential_flips == 0 and ones_in_middle % 2 != 0:\n            flip_count += 2\n        \n        return flip_count\n",
    "submit_ts": "1722700056",
    "subm_id": "1343230352"
}