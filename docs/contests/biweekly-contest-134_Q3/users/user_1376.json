{
    "username": "inversionpeter",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int amount = colors.size(), counts = 0, matches = 0;\n        for (int i = 0; i < k; ++i) {\n            if (colors[i] == (i & 1)) {\n                ++matches;\n            }\n        }\n        //cout << matches << ' ';\n        if (matches == k) {\n            ++counts;\n        }\n        for (int i = 1; i < amount; ++i) {\n            if (colors[i - 1] == ((i - 1) & 1)) {\n                --matches;\n            }\n            if (colors[(i + k - 1) % amount] == (k & 1 ? ((i) & 1) : !((i) & 1))) {\n                ++matches;\n            }\n            if (matches == k) {\n                ++counts;\n            }\n            //cout << matches << ' ';\n        }\n        \n        matches = 0;\n        for (int i = 0; i < k; ++i) {\n            if (colors[i] != (i & 1)) {\n                ++matches;\n            }\n        }\n        //cout << matches << ' ';\n        if (matches == k) {\n            ++counts;\n        }\n        for (int i = 1; i < amount; ++i) {\n            if (colors[i - 1] != ((i - 1) & 1)) {\n                --matches;\n            }\n            if (colors[(i + k - 1) % amount] != (k & 1 ? ((i) & 1) : !((i) & 1))) {\n                ++matches;\n            }\n            if (matches == k) {\n                ++counts;\n            }\n            //cout << matches << ' ';\n        }\n        //cout << '\\n';\n        return counts;\n    }\n};",
    "submit_ts": "1720277962",
    "subm_id": "1311688025"
}