{
    "username": "ayush001dahiya",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    int hIndex = 0, vIndex = 0;\n    int hCuts = 1, vCuts = 1;\n    long long totalCost = 0;\n\n\n    while (hIndex < m - 1 && vIndex < n - 1) {\n        if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n            totalCost += (long long)horizontalCut[hIndex] * vCuts;\n            hCuts++;\n            hIndex++;\n        } else {\n            totalCost += (long long)verticalCut[vIndex] * hCuts;\n            vCuts++;\n            vIndex++;\n        }\n    }\n\n \n    while (hIndex < m - 1) {\n        totalCost += (long long)horizontalCut[hIndex] * vCuts;\n        hIndex++;\n    }\n\n    while (vIndex < n - 1) {\n        totalCost += (long long)verticalCut[vIndex] * hCuts;\n        vIndex++;\n    }\n\n    return totalCost;\n        \n    }\n};",
    "submit_ts": "1720925450",
    "subm_id": "1320255132"
}