{
    "username": "demonthink",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n          sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        int i = 0, j = 0; \n        int hc = 0, vc = 0; \n        long long ans = 0;\n        \n      \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n               \n                ans += horizontalCut[i] * (vc + 1);\n                hc++;\n                i++;\n            } else {\n                \n                ans += verticalCut[j] * (hc + 1);\n                vc++;\n                j++;\n            }\n        }\n        \n        while (i < horizontalCut.size()) {\n            ans += horizontalCut[i] * (vc + 1);\n            hc++;\n            i++;\n        }\n        \n        while (j < verticalCut.size()) {\n            ans += verticalCut[j] * (hc + 1);\n            vc++;\n            j++;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720926101",
    "subm_id": "1320276025"
}