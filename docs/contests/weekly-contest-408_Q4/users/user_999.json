{
    "username": "Gaurav_Kumar_Gupta",
    "submission": "/**\n * @param {number} X\n * @param {number} Y\n * @param {number[][]} circles\n * @return {boolean}\n */\nvar canReachCorner = function(X, Y, circles) {\n    function bf(graph, start, target1, target2, n) { \n        const queue = []; \n        const visited = Array(n + 4).fill(false); \n        queue.push(start); \n        visited[start] = true; \n \n        while (queue.length > 0) { \n            const u = queue.shift(); \n            for (const v of graph[u]) { \n                if (!visited[v]) { \n                    queue.push(v); \n                    visited[v] = true; \n                } \n            } \n        } \n \n        return visited[target1] || visited[target2]; \n    } \n \n    const nc = circles.length; \n    const graph = Array(nc + 4).fill(null).map(() => []); \n    const c = circles.map(circle => [circle[0], circle[1], circle[2]]); \n \n    for (let i = 0; i < nc; ++i) { \n        \n        if (X - c[i][0] <= c[i][2]) { \n            graph[nc + 2].push(i); \n            graph[i].push(nc + 2); \n        } \n        if (c[i][0] <= c[i][2]) { \n            graph[nc].push(i); \n            graph[i].push(nc); \n        } \n        \n        if (Y - c[i][1] <= c[i][2]) { \n            graph[nc + 3].push(i); \n            graph[i].push(nc + 3); \n        } if (c[i][1] <= c[i][2]) { \n            graph[nc + 1].push(i); \n            graph[i].push(nc + 1); \n        } \n        for (let j = i + 1; j < nc; ++j) { \n            const dx = c[i][0] - c[j][0]; \n            const dy = c[i][1] - c[j][1]; \n            const distance = Math.sqrt(dx * dx + dy * dy); \n            if (c[i][2] + c[j][2] >= distance) { \n                graph[i].push(j); \n                graph[j].push(i); \n            } \n        } \n    } \n \n    return !(bf(graph, nc, nc + 1, nc + 2, nc + 4) || \n             bf(graph, nc + 3, nc + 2, nc + 1, nc + 4)); \n};",
    "submit_ts": "1722138945",
    "subm_id": "1335803795"
}