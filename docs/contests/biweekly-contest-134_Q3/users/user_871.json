{
    "username": "dipakbaghel47",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        \n        vector<int> v;\n        \n        int n = c.size();\n        \n        for ( int i = 0; i < n; i++) v.push_back(c[i]);\n        \n        for ( int i = 0; i < k - 1; i++) v.push_back(c[i]);\n        \n        int ans = 0;\n        \n        int currlen = 0;\n        \n        int start = 0;\n        \n        int size = v.size();\n        \n        for ( int i = 0; i < size; i++)\n        {\n            \n          if ( i == size - 1)\n          {\n               int length = i - start + 1;\n              \n              if ( length == k)ans++;  \n              \n              break;\n          }\n          if ( v[i] == v[i+1])\n          {\n              int length = i - start + 1;\n              \n              if ( length == k)ans++;\n              \n              start = i + 1;\n          }\n          else\n          {\n             int length = i - start + 1;\n             \n             if ( length == k )\n             {\n                ans++;\n                start++;\n             }\n          }\n        }\n        \n        \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1720277882",
    "subm_id": "1311684438"
}