{
    "username": "CutSandstone",
    "submission": "class Solution {\n    int solve(int[][] grid, int x1, int y1, int x2, int y2){\n        if(x1 > x2){\n            int s = x1;\n            x1 = x2;\n            x2 = s;\n        }\n        if(y1 > y2){\n            int s = y1;\n            y1 = y2;\n            y2 = s;\n        }\n        int xmin = 100, xmax = 0, ymin = 100, ymax = 0;\n        for(int i = x1; i<x2; i++)\n            for(int j = y1; j<y2; j++) if(grid[i][j] == 1){\n                xmin = Math.min(xmin,i);\n                ymin = Math.min(ymin,j);\n                xmax = Math.max(xmax,i);\n                ymax = Math.max(ymax,j);\n            }\n        if(xmin > xmax) return 0;\n        return (xmax-xmin+1)*(ymax-ymin+1);\n    }\n    public int minimumSum(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        int ans = n*m;\n        for(int i = 0; i<n; i++) for(int j = 0; j<m; j++){\n            ans = Math.min(ans, solve(grid,0,0,i,j) + solve(grid,n,0,i,j) + solve(grid,n,m,0,j));\n            ans = Math.min(ans, solve(grid,n,m,i,j) + solve(grid,0,m,i,j) + solve(grid,0,0,n,j));\n            ans = Math.min(ans, solve(grid,0,0,i,j) + solve(grid,0,m,i,j) + solve(grid,n,m,i,0));\n            ans = Math.min(ans, solve(grid,0,0,i,m) + solve(grid,n,0,i,j) + solve(grid,n,m,i,j));\n        }\n        for(int i = 0; i<n; i++) for(int j = i+1; j<n; j++)\n            ans = Math.min(ans, solve(grid,0,0,i,m) + solve(grid,i,0,j,m) + solve(grid,j,0,n,m));\n        for(int i = 0; i<m; i++) for(int j = i+1; j<m; j++)\n            ans = Math.min(ans, solve(grid,0,0,n,i) + solve(grid,0,i,n,j) + solve(grid,0,j,n,m));\n        return ans;\n    }\n}",
    "submit_ts": 1719111244.0
}