{
    "username": "lmhhhml2",
    "submission": "class Solution:\n    def numberOfSubstrings(self, s: str) -> int:\n        cnt_ones, cnt_zeroes = [0] * len(s), [0] * len(s)\n        zero_pos = []\n        for i in range(len(s)):\n            if s[i] == '1':\n                cnt_ones[i] += 1\n            else:\n                zero_pos.append(i)\n                cnt_zeroes[i] += 1\n            if i > 0:\n                cnt_ones[i] += cnt_ones[i - 1]\n                cnt_zeroes[i] += cnt_zeroes[i - 1]\n        ret = 0\n        # print(zero_pos)\n        for l in range(len(s)):\n            r, prev_r = l, l - 1\n            while r < len(s):\n                ones = cnt_ones[r] if l == 0 else cnt_ones[r] - cnt_ones[l - 1]\n                zeroes = cnt_zeroes[r] if l == 0 else cnt_zeroes[r] - cnt_zeroes[l - 1]\n                # print(l, r, ones, zeroes)\n                if zeroes ** 2 <= ones:\n                    next_idx = bisect.bisect_left(zero_pos, r + 1)\n                    if next_idx < len(zero_pos):\n                        r = zero_pos[next_idx]\n                        ret += (r - 1 - prev_r)\n                        prev_r = r - 1\n                        # print(ret)\n                    else:\n                        ret += (len(s) - r)\n                        # print(ret)\n                        break\n                else:\n                    r = l + zeroes - 1 + zeroes ** 2\n                    prev_r = r - 1\n        return ret",
    "submit_ts": "1722138331",
    "subm_id": "1335788013"
}