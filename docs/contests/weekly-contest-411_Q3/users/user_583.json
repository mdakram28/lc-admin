{
    "username": "Max Wood",
    "submission": "function fn(n: number, k: number): string {\n    const ring = [1, 3, 2, 6, 4, 5]\n    let result = []\n    if (k === 9) {\n        return \"9\".repeat(n)\n    }\n    if (k === 1) {\n        return \"9\".repeat(n)\n    }\n    const paint = (index, value) => {\n        if (index < n) result[index] = value\n        if ((n - 1 - index) >= 0) result[(n - 1 - index)] = value\n    }\n    if (k === 2) {\n        for(let i = 0; i < n; i++) {\n            result[i] = \"9\"\n        }\n        paint(0, \"8\")\n    }\n    if (k === 4) {\n        for(let i = 0; i < n; i++) {\n            result[i] = \"9\"\n        }\n        paint(0, \"8\")\n        paint(1, \"8\")\n    }\n    if (k === 8) {\n        for(let i = 0; i < n; i++) {\n            result[i] = \"9\"\n        }\n        paint(0, \"8\")\n        paint(1, \"8\")\n        paint(2, \"8\")\n    }\n    if (k === 5) {\n        for(let i = 0; i < n; i++) {\n            result[i] = \"9\"\n        }\n        paint(0, \"5\")\n    }\n    if (k === 6) {\n        if (n === 1) return \"6\"\n        if (n === 2) return \"66\"\n        if (n === 3) return \"888\"\n        if (n === 4) return \"8778\"\n        if (n === 5) return \"89898\"\n        for(let i = 0; i < n; i++) {\n            result[i] = \"9\"\n        }\n        paint(0, \"8\")\n        if (n % 2 === 1) {\n            paint(Math.floor(n / 2), \"8\")\n        } else {\n            paint(n / 2 - 1, \"7\")\n        }\n        \n    }\n    if (k === 3) {\n        return \"9\".repeat(n)\n    }\n    if (k === 7) {\n        let last = null\n        let lastPower = null\n        let total  = 0\n        for(let i = 0; i < n / 2; i++) {\n            let power = (ring[i % ring.length] + ring[(n - 1 - i) % ring.length]) % 7\n            if (i * 2 + 1 === n) {\n                power = ring[i % ring.length] % 7\n            }\n            total = (total + 9*power) % 7\n            if (power !== 0) {\n                last = i\n                lastPower = power\n            }\n        }\n        total = (700 + total - lastPower * 9) % 7\n        let best = null\n        for(let i = 9; i >= 1; i--) {\n            if ((total + lastPower * i) % 7 === 0) {\n                best = i\n                break;\n            }\n        }\n        // console.log({last, lastPower, total, best})\n\n        for(let i = 0; i < n / 2; i++) {\n            const value = (i === last) ? String(best) : \"9\"\n            result[i] = value\n            result[n - 1 - i] = value\n        }\n\n    }\n\n    return result.join(\"\")\n};\n\nfunction largestPalindrome(n: number, k: number): string {\n    // for(let i = 1; i <= 9; i++) {\n    //     // console.log({i, r: fn(i, 7)})\n    //     console.log({i, r: fn(9, i)})\n    // }\n    // for(let i = 1; i <= 9; i++) {\n    //     for(let j = 1; j <= 9; j++) {\n    //         console.log({div: i, l: j, r: fn(j, i)})\n    //     }\n    // }\n    return fn(n, k)\n};",
    "submit_ts": "1723952781",
    "subm_id": "1359804488"
}