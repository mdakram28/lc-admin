{
    "username": "srijan4504",
    "submission": "class Solution {\npublic:\n    // int rec(int level, int left, vector<int>& nums, vector<vector<int>>& dp){\n    //     if(level == -1){\n    //         return 0;\n    //     }\n    //     if(dp[level][left] != -1){\n    //         return dp[level][left];\n    //     }\n    //     int ans = 0;\n    //     for(int i=level-1; i>=-1; i--){\n    //         if((i == -1) || (nums[i] == nums[level])){\n    //             ans = max(ans, 1 + rec(i, left, nums, dp));\n    //         }\n    //         else if(left > 0){\n    //             ans = max(ans, 1 + rec(i, left - 1, nums, dp));\n    //         }\n    //     }\n    //     return dp[level][left] = ans;\n    // }\n    int maximumLength(vector<int>& nums, int k) {\n        int dp[nums.size()+2][k+2];\n        memset(dp, 0, sizeof(dp));\n        for(int i=0; i<=k; i++){\n            map<int,int> mp;\n            for(int j=0; j<=nums.size(); j++){\n                if(j == 0){\n                    dp[j][i] = 0;\n                    continue;\n                }\n                dp[j][i] = max(dp[j][i], 1 + mp[nums[j-1]]);\n                if( i > 0){\n                    dp[j][i] = max(dp[j][i], 1 + dp[j-1][i-1]);\n                }\n                mp[nums[j-1]] = max(mp[nums[j-1]], dp[j][i]);\n            }\n            for(int k=1; k<=nums.size(); k++){\n                dp[k][i] = max(dp[k][i], dp[k-1][i]);\n            }\n        }\n        return dp[nums.size()][k];\n    }\n};",
    "submit_ts": 1717862043.0
}