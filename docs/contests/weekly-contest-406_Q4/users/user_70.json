{
    "username": "happy2901",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    vector<pair<long long, long long>> cuts;\n    \n    for (int cost : horizontalCut) {\n        cuts.push_back({cost, 'H'});\n    }\n    for (int cost : verticalCut) {\n        cuts.push_back({cost, 'V'});\n    }\n    \n    sort(cuts.begin(), cuts.end(), greater<pair<long long, char>>());\n    \n    long long horizontalPieces = 1;\n    long long verticalPieces = 1;\n    long long totalCost = 0;\n    \n    for (auto& cut : cuts) {\n        if (cut.second == 'H') {\n            totalCost += cut.first * verticalPieces;\n            ++horizontalPieces;\n        } else {\n            totalCost += cut.first * horizontalPieces;\n            ++verticalPieces;\n        }\n    }\n    \n    return totalCost;\n    }\n};",
    "submit_ts": "1720924924",
    "subm_id": "1320236233"
}