{
    "username": "Coding_geek20",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<vector<int>>prefix(n,vector<int>(32,0));\n        for(int i=0;i<n;i++){\n            if(i){\n                for(int bit=0;bit<32;bit++)prefix[i][bit]=prefix[i-1][bit];\n            }\n            for(int bit=0;bit<32;bit++){\n                if((1LL<<bit)&nums[i])prefix[i][bit]++;\n            }\n        }\n        // for(int i=0;i<n;i++){\n        //     for(int bit=0;bit<32;bit++)cout<<prefix[i][bit]<<\" \";\n        //     cout<<endl;\n        // }\n        long long count=0;\n        for(int i=0;i<n;i++){\n            int lo=i,hi=n-1;\n            int l=-1,r=-1;\n            while(lo<=hi){\n                int mid=(lo+hi)>>1;\n                int currAnd=0;\n                int len=mid-i+1;\n                for(int bit=0;bit<32;bit++){\n                    int temp=prefix[mid][bit]-(i?prefix[i-1][bit]:0);\n                    if(temp==len)currAnd|=(1LL<<bit);\n                }\n                if(currAnd<k)hi=mid-1;\n                else {\n                    if(currAnd==k){\n                        r=mid;\n                    }\n                    lo=mid+1;\n                }\n            }\n            lo=i,hi=n-1;\n            while(lo<=hi){\n                int mid=(lo+hi)>>1;\n                int currAnd=0;\n                int len=mid-i+1;\n                for(int bit=0;bit<32;bit++){\n                    int temp=prefix[mid][bit]-(i?prefix[i-1][bit]:0);\n                    if(temp==len)currAnd|=(1LL<<bit);\n                }\n                if(currAnd==k){\n                    l=mid;\n                    hi=mid-1;\n                }\n                else if(currAnd>k)lo=mid+1;\n                else hi=mid-1;\n            }\n            if(l!=-1)count+=r-l+1;\n            \n        }\n        return count;\n    }\n};",
    "submit_ts": "1720278665",
    "subm_id": "1311719002"
}