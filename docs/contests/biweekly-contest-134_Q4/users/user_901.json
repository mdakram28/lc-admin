{
    "username": "crazy-wa",
    "submission": "class Solution {\npublic: \n    #define ll long long\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> pre(n,vector<int>(31,0));\n        for(int i=0;i<n;++i){\n            for(int j=0;j<31;++j){\n                pre[i][j] = (nums[i]>>j)&1;\n                if(i>0)\n                    pre[i][j] += pre[i-1][j];\n            }\n        }\n        auto get = [&](int i,int j)->int{\n            int ret = 0;\n            if(i==0){\n                for(int b = 0;b<31;++b){\n                    if(pre[j][b] == j+1){\n                        ret |= (1<<b);\n                    }\n                }\n            }else{\n                for(int b=0;b<31;++b){\n                    if(pre[j][b] - pre[i-1][b] == j-i+1){\n                        ret |= (1<<b);\n                    }\n                }\n            }\n            return ret;\n        };\n        ll ans = 0;\n        for(int l=0,r=0;r<n;++r){\n            if((nums[r] & k) < k){\n                l = r + 1;\n            }else{\n                int L = l, R = r;\n                while(L<=R){\n                    int mid = (L+R)/2;\n                    if(get(mid,r) == k) L = mid + 1;\n                    else R = mid - 1;\n                }\n                ans += (R-l+1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280288",
    "subm_id": "544571326"
}