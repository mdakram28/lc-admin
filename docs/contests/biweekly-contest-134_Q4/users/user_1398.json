{
    "username": "anand_nitp",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& arr, int k) {\n        int n = arr.size();\n        using ll=long long ;\n        ll ans = 0;\n        for(int i=0 ;i<arr.size() ;i++){\n            cout<<\"Anand\" ;\n        }\n        \n        unordered_map<ll, ll> previous;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll, ll> current; \n\n            if (arr[i] == k) {\n                ++ans;\n            }\n            current[arr[i]] = 1;\n\n            for (auto& [val, freq] : previous) {\n                ll newAndResult = val & arr[i];\n                if (newAndResult == k) {\n                    ans += freq;\n                }\n                current[newAndResult] += freq;\n            }\n            \n            previous = current;\n        }\n        \n        return ans;\n\n    }\n};",
    "submit_ts": "1720280991",
    "subm_id": "1311809304"
}