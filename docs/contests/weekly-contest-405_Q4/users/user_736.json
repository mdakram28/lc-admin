{
    "username": "zeromb",
    "submission": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\ntype TrieNode struct {\n\tchildren  map[rune]*TrieNode\n\twordEnds  []pair\n}\n\ntype pair struct {\n\tindex int\n\tcost  int\n}\n\ntype Trie struct {\n\troot *TrieNode\n}\n\nfunc newTrie() *Trie {\n\treturn &Trie{root: &TrieNode{children: make(map[rune]*TrieNode)}}\n}\n\nfunc (t *Trie) insert(word string, index, cost int) {\n\tnode := t.root\n\tfor _, c := range word {\n\t\tif _, ok := node.children[c]; !ok {\n\t\t\tnode.children[c] = &TrieNode{children: make(map[rune]*TrieNode)}\n\t\t}\n\t\tnode = node.children[c]\n\t}\n\tnode.wordEnds = append(node.wordEnds, pair{index: index, cost: cost})\n}\n\nfunc minimumCost(target string, words []string, costs []int) int {\n\tn := len(target)\n\tdp := make([]int, n+1)\n\tfor i := range dp {\n\t\tdp[i] = math.MaxInt32\n\t}\n\tdp[0] = 0\n\n\ttrie := newTrie()\n\tfor i := 0; i < len(words); i++ {\n\t\ttrie.insert(words[i], i, costs[i])\n\t}\n\n\tfor i := 0; i < n; i++ {\n\t\tif dp[i] == math.MaxInt32 {\n\t\t\tcontinue\n\t\t}\n\n\t\tnode := trie.root\n\t\tfor j := i; j < n; j++ {\n\t\t\tc := rune(target[j])\n\t\t\tif _, ok := node.children[c]; !ok {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tnode = node.children[c]\n\t\t\tfor _, p := range node.wordEnds {\n\t\t\t\twordIndex := p.index\n\t\t\t\twordCost := p.cost\n\t\t\t\twordLen := len(words[wordIndex])\n\t\t\t\tif i+wordLen <= n {\n\t\t\t\t\tdp[i+wordLen] = min(dp[i+wordLen], dp[i]+wordCost)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif dp[n] == math.MaxInt32 {\n\t\treturn -1\n\t}\n\treturn dp[n]\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n\n",
    "submit_ts": "1720322476",
    "subm_id": "1312350947"
}