{
    "username": "quynhit",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        m--;\n        n--;\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        long long res = 0, i = 0, j = 0, h = 1, v = 1;\n        while (i < m && j < n){\n            if (horizontalCut[i] > verticalCut[j]){\n                res += (long long)horizontalCut[i++] * v;\n                h++;\n            } else{\n                res += (long long)verticalCut[j++] * h;\n                v++;\n            }\n        }\n        long long total = 0;\n        while (i < m)\n            total += horizontalCut[i++];\n        res += total * v;\n        total = 0;\n        while (j < n)\n            total += verticalCut[j++];\n        res += total * h;\n        return res;\n    }\n};",
    "submit_ts": "1720925222",
    "subm_id": "1320247285"
}