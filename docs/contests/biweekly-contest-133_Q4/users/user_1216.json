{
    "username": "jqodiriy",
    "submission": "class Solution {\npublic:\n    \n    long long dp[2][90004];\n    long long sd[2][90004];\n\n    int req[301];\n\n    int getdp(int x, int y) {\n        if (req[x] == -1) return dp[0][y];\n        if (req[x] != y) return 0;\n        return dp[0][y];\n    }\n\n    int MOD = 1e9 + 7;\n\n    int numberOfPermutations(int n, vector<vector<int>> &requirements) {\n\n\n        for (int i = 0; i < 301; i++) req[i] = -1;\n\n\n        for (auto r: requirements) {\n            req[r[0]] = r[1];\n        }\n\n\n        if (req[0] != 0 && req[0] != -1) return 0;\n\n        dp[0][0] = 1;\n        sd[0][1] = 1;\n        sd[0][2] = 1;\n    \n        for(int i=1; i < 46000; i ++) sd[0][i] = 1;\n\n        int res = 0;\n\n        for (int i = 1; i < n; i++) {\n            int mi = i * (i + 1) / 2;\n\n            sd[1][0] = 0;\n\n            for (int j = 0; j <= n * n ; j++) {\n                if (j > mi) dp[1][j] = 0;\n                else {\n                    int x = min(i, j);\n                    if (req[i] == -1 or req[i] == j)\n                        dp[1][j] = MOD + sd[0][j + 1] - sd[0][j - x];\n                    else\n                        dp[1][j] = 0;\n\n                }\n\n                dp[1][j] %= MOD;\n                sd[1][j + 1] = (sd[1][j] + dp[1][j]) % MOD;\n\n            }\n\n            for (int j = 0; j <= n * n; j++) {\n                sd[0][j] = sd[1][j];\n                sd[1][j] = 0;\n\n                dp[0][j] = dp[1][j];\n                dp[1][j] = 0;\n\n            }\n\n        }\n\n        for (int j = 0; j < 46000; j++) {\n            res += getdp(n - 1, j);\n            res %= MOD;\n        }\n\n        return res % MOD;\n\n    }\n\n};",
    "submit_ts": 1719071665.0
}