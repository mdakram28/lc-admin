{
    "username": "zenmaaan003",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long countSubarrays(const vector<int>& nums, int target) {\n        int n = nums.size();\n        long long count = 0;\n        \n        unordered_map<long long, long long> previous; \n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> current; \n\n            if (nums[i] == target) {\n                ++count;\n            }\n            current[nums[i]] = 1;\n\n            for (const auto& [val, freq] : previous) {\n                long long newVal = val & nums[i];\n                if (newVal == target) {\n                    count += freq;\n                }\n                current[newVal] += freq;\n            }\n            \n            previous = move(current);\n        }\n        \n        return count;\n    }\n};\n",
    "submit_ts": "1720279621",
    "subm_id": "1311758543"
}