{
    "username": "Sherif Youssef",
    "submission": "typedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<ll, ll> pll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\n\nint pows[100001];\nint dp[100001][10];\nll n, k;\n\nll tba(ll l, ll r, ll x)\n{\n    ll res = pows[l] * x;\n    if (l != r)\n        res += pows[r] * x;\n    return res % k;\n}\nbool solve(ll len, ll rem)\n{\n    if (len == 0)\n        return rem == 0;\n    int &res = dp[len][rem];\n    if (!~res)\n    {\n        res = 0;\n        ll cu = min(len, 2ll), l = (n - len) / 2, r = n - l - 1;\n        for (ll i{9}; i >= 1; i--)\n            res = res || solve(len - cu, (rem + tba(l, r, i)) % k);\n        if (len < n)\n            res = res || solve(len - cu, rem);\n    }\n    return res;\n}\n\nstring res;\nvoid build(ll len, ll rem)\n{\n    if (len <= 0)\n        return;\n    ll cu = min(len, 2ll), l = (n - len) / 2, r = n - l - 1;\n    for (ll i{9}; i >= 0; i--)\n    {\n        if (solve(len - cu, (rem + tba(l, r, i)) % k))\n        {\n            res[l] = res[r] = '0' + i;\n            build(len - cu, (rem + tba(l, r, i)) % k);\n            return;\n        }\n    }\n}\n\nclass Solution {\npublic:\n    string largestPalindrome(int nn, int kk) {\n        memset(dp, -1, sizeof dp);\n        n = nn, k = kk;\n        pows[0] = 1 % k;\n        for (ll i{1}; i <= n; i++)\n            pows[i] = (pows[i - 1] * 10) % k;\n        res.resize(n);\n        build(n, 0);\n        return res;\n    }\n};",
    "submit_ts": "1723950751",
    "subm_id": "1359754068"
}