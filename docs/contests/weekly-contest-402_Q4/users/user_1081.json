{
    "username": "Sariabell",
    "submission": "template<typename T>\nclass fenwick_range {\npublic:\n    vector<T> arr;\n\n    int offset = 0;\n\n    fenwick_range(int l, int r) : arr(r - l + 2), offset(l) {\n    }\n\n    void add(int i, T n) {\n        i = i - offset + 1;\n        for (int x = i; x < arr.size(); x += (x & -x))\n            arr[x] += n;\n    }\n\n    T sum(int i) {\n        i = i - offset + 1;\n        T ans = 0;\n        for (int x = i; 0 < x; x -= (x & -x))\n            ans += arr[x];\n        return ans;\n    }\n\n    T sum_range(int l, int r) {\n        if (l > r) return 0;\n        return sum(r) - sum(l - 1);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> v(n);\n        fenwick_range<int> f(0, n);\n        \n        auto check = [&](int i) {\n            if (i == 0) return false;\n            if (i == n - 1) return false;\n            return nums[i - 1] < nums[i] && nums[i] > nums[i + 1];\n        };\n        \n        for (int i = 1; i < n - 1; ++i) {\n            if (check(i)) {\n                f.add(i, 1);\n                v[i] = 1;\n            }\n        }\n        \n        vector<int> ans;\n        for (auto& q : queries) {\n            if (q[0] == 1) {\n                ans.push_back(f.sum_range(q[1] + 1, q[2] - 1));\n            } else {\n                nums[q[1]] = q[2];\n                for (int i = max(1, q[1] - 1); i <= min(n - 2, q[1] + 1); ++i) {\n                    int c = check(i);\n                    f.add(i, c - v[i]);\n                    v[i] = c;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508884.0
}