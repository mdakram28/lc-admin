{
    "username": "an1ket_62",
    "submission": "class Solution {\npublic:\n    int calculate(vector<vector<int>>& a, int &mx){\n        int n=a.size()+1;\n        vector<vector<int>>adj(n+10);\n        for (int i=0;i<a.size();i++){\n            adj[a[i][0]].push_back(a[i][1]);\n            adj[a[i][1]].push_back(a[i][0]);    \n        }\n        queue<int>q;\n        q.push(0);\n        vector<int>par(n+1,-1);\n        int lst=0;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            lst=u;\n            for (auto v:adj[u]){\n                if (v==par[u]){\n                    continue;\n                }\n                par[v]=u;\n                q.push(v);\n                \n                \n            }\n        }\n        vector<int>dist(n+1,-1);\n        dist[lst]=1;\n        q.push(lst);\n        int lst2=lst;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            lst2=u;\n            for (auto v:adj[u]){\n                if (dist[v]!=-1){\n                    continue;\n                }\n                dist[v]=dist[u]+1;\n                q.push(v);\n                \n                \n            }\n        }\n        vector<int>dist2(n+1,-1);\n        q.push(lst2);\n        dist2[lst2]=1;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            for (auto v:adj[u]){\n                if (dist2[v]!=-1){\n                    continue;\n                }\n                dist2[v]=dist2[u]+1;\n                q.push(v);\n                \n                \n            }\n        }\n        mx=max(mx,dist2[lst]);\n        // cout << lst << \" \" << lst2 << endl;\n        int ans=INT_MAX;\n        for (int i=0;i<n;i++){\n            ans=min(ans,max(dist[i],dist2[i]));\n        }\n        return ans;\n        \n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& a, vector<vector<int>>& b) {\n        // int n=a.size()+1;\n//         vector<vector<int>>adj(n+10);\n//         for (int i=0;i<a.size();i++){\n//             adj[a[i][0]].push_back(a[i][1]);\n//             adj[a[i][1]].push_back(a[i][0]);    \n//         }\n//         queue<int>q;\n//         q.push(0);\n//         vector<int>par(n+1,-1);\n//         int lst=0;\n//         while(!q.empty()){\n//             int u=q.front();\n//             q.pop();\n//             lst=u;\n//             for (auto v:adj[u]){\n//                 if (v==par[u]){\n//                     continue;\n//                 }\n//                 par[v]=u;\n//                 q.push(v);\n                \n                \n//             }\n//         }\n//         vector<int>dist(n+1,-1);\n//         dist[lst]=0;\n//         q.push(lst);\n//         int lst2=lst;\n//         while(!q.empty()){\n//             int u=q.front();\n//             q.pop();\n//             lst2=u;\n//             for (auto v:adj[u]){\n//                 if (dist[v]!=-1){\n//                     continue;\n//                 }\n//                 dist[v]=dist[u]+1;\n//                 q.push(v);\n                \n                \n//             }\n//         }\n//         vector<int>dist2(n+1,-1);\n//         q.push(lst2);\n//         while(!q.empty()){\n//             int u=q.front();\n//             q.pop();\n//             for (auto v:adj[u]){\n//                 if (dist2[v]!=-1){\n//                     continue;\n//                 }\n//                 dist2[v]=dist2[u]+1;\n//                 q.push(v);\n                \n                \n//             }\n//         }\n        \n//         int m=b.size();\n//         vector<vector<int>>adj2(m+1);\n//         for (int i=0;i<a.size();i++){\n//             adj2[b[i][0]].push_back(b[i][1]);\n//             adj2[b[i][1]].push_back(b[i][0]);    \n//         }\n        \n//         q.push(0);\n//         vector<int>dd(m+1,-1);\n//         int mx=0;\n//         dd[0]=0;\n//         while(!q.empty()){\n//             int u=q.front();\n//             q.pop();\n//             mx=max(mx,dd[u]);\n//             for (auto v:adj[u]){\n//                 if (dd[v]!=-1){\n//                     continue;\n//                 }\n//                 dd[v]=dd[u]+1;\n//                 q.push(v);\n                \n                \n//             }\n//         }\n//         return lst2;\n        int mx=-1;\n        int ans=calculate(a,mx);\n        int ans2=calculate(b,mx);\n        // cout << ans << \" \" << ans2 << endl;\n        return max(mx-1,ans+ans2-1);\n        \n        \n        \n    }\n};",
    "submit_ts": "1719717876",
    "subm_id": "1304402987"
}