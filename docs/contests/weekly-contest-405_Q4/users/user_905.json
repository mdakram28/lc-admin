{
    "username": "akshay_2902",
    "submission": "class TrieNode {\npublic:\n    unordered_map<char, TrieNode*> mp;\n    int val;\n    \n    TrieNode(){\n        val = INT_MAX;\n    }\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n    \n    Trie() {\n        root = new TrieNode();\n    }\n    \n    void insert(int idx,vector<string>& words, vector<int>& costs) {\n        string word = words[idx];\n        TrieNode* temp = root;\n        for (int i = 0;i<word.size();i++) {\n            if (temp->mp.find(word[i]) == temp->mp.end()) {\n                temp->mp[word[i]] = new TrieNode();\n            }\n            temp = temp->mp[word[i]];\n        }\n        temp->val = min(temp->val, costs[idx]);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string str, vector<string>& words, vector<int>& costs) {\n        int n = str.size();\n        Trie tt;\n        for (int i = 0; i < words.size(); ++i) {\n            tt.insert(i,words,costs);\n        }\n        \n        vector<int> dp(n + 5, INT_MAX);\n        dp[0] = 0;\n        \n        for (int i = 0; i < n; i += 1) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* temp = tt.root;\n            \n            for (int j = i; j < n; j += 1) {\n                if (!temp->mp.count(str[j])) break;\n                temp = temp->mp[str[j]];\n                \n                if (temp->val == INT_MAX) {\n                    continue;\n                }\n                else{\n                    dp[j + 1] = min(dp[j + 1], dp[i] + temp->val);\n                }\n            }\n            \n        }\n        \n        if(dp[n] == INT_MAX) return -1;\n        return dp[n];\n    }\n};",
    "submit_ts": "1720322755",
    "subm_id": "1312358270"
}