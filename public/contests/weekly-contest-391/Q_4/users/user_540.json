{
    "username": "stupidRR",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        multiset<int> diffs,sums;\n        for(int i=0;i<n;i++)\n        {\n            diffs.insert(points[i][0]-points[i][1]);\n            sums.insert(points[i][0]+points[i][1]);\n        }\n        \n        int ans=1e9;\n        for(int i=0;i<n;i++)\n        {\n            diffs.erase(diffs.find(points[i][0]-points[i][1]));\n            sums.erase(sums.find(points[i][0]+points[i][1]));\n            \n            ans=std::min(ans,std::max(*diffs.rbegin()-*diffs.begin(),*sums.rbegin()-*sums.begin()));\n                         \n            diffs.insert(points[i][0]-points[i][1]);\n            sums.insert(points[i][0]+points[i][1]);\n        }\n        return ans;\n    }\n};"
}