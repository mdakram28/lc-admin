{
    "username": "fangxiang666",
    "submission": "class Solution {\npublic:\n    typedef pair<int, int> pii;\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pii> a, b;\n        for(int i = 0; i < n; i ++) {\n            a.push_back({points[i][0] + points[i][1], i});\n            b.push_back({points[i][0] - points[i][1], i});\n        }\n        sort(a.begin(), a.end());\n        sort(b.begin(), b.end());\n        \n        set<int> st; \n        st.insert(a[0].second); st.insert(a.back().second);\n        st.insert(b[0].second); st.insert(b.back().second);\n        auto check = [&](int x) -> int {\n            int res = 0;\n            vector<int> a, b;\n            for(int i = 0; i < n; i ++) {\n                if(i == x) continue;\n                    a.push_back(points[i][0] + points[i][1]);\n                    b.push_back(points[i][0] - points[i][1]);\n                \n            }\n            sort(a.begin(), a.end());\n                sort(b.begin(), b.end());\n                res = max(res, max(a.back() - a[0], b.back() - b[0]));\n            return res;\n        };\n        int ans = 2e8 + 10;\n        for(int t : st) {\n            ans = min(ans, check(t));\n        }\n        return ans;\n    }\n};"
}