{
    "username": "bttsv",
    "submission": "class Solution {\n    class Node {\n        int x;\n        Node[] cs;\n        Node() {\n            x = -1;\n            cs = new Node[26];\n        }\n    }\n    void add(Node node, String s, int p, int cost) {\n        if (p == s.length()) {\n            if (node.x == -1 || cost < node.x)\n                node.x = cost;\n            return;\n        } else {\n            int idx = s.charAt(p) - 'a';\n            if (node.cs[idx] == null)\n                node.cs[idx] = new Node();\n            add(node.cs[idx], s, p + 1, cost);\n        }\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        Node node0 = new Node();\n        for (int i = 0; i < words.length; i++) {\n            StringBuilder t = new StringBuilder();\n            for (int j = words[i].length() - 1; j >= 0; j--)\n                t.append(words[i].charAt(j));\n            add(node0, t.toString(), 0, costs[i]);\n        }\n        char[] s = target.toCharArray();\n        int n = s.length;\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, -1);\n        dp[0] = 0;\n        for (int i = 1; i <= n; i++) {\n            Node node = node0;\n            for (int j = i; j > 0; j--) {\n                if (node.cs[s[j - 1] - 'a'] == null)\n                    break;\n                node = node.cs[s[j - 1] - 'a'];\n                if (node.x != -1 && dp[j - 1] != -1) {\n                    int y = dp[j - 1] + node.x;\n                    if (dp[i] == -1 || y < dp[i])\n                        dp[i] = y;\n                }\n            }\n        }\n        return dp[n];\n    }\n}",
    "submit_ts": "1720322592",
    "subm_id": "1312354008"
}