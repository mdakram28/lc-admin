{
    "username": "user7604rV",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        out = 0\n        m = len(grid)\n        n = len(grid[0])\n\n        for i in range(m//2):\n            for j in range(n//2):\n                c = grid[i][j] + grid[m-1-i][j] + grid[m-1-i][n-1-j] + grid[i][n-1-j]\n                out += min(c,4-c)\n\n        '''mid_row = 0 \n        mid_col = 0\n        add = 100'''\n        s = 0\n\n        if m %2 == 0 and n%2 == 0:\n            return out\n\n        flipped = False\n\n        if m % 2 == 1:\n            for j in range(n//2):\n                if grid[m//2][j] != grid[m//2][n-1-j]:\n                    flipped = True\n                    out += 1\n                s += grid[m//2][j] + grid[m//2][n-1-j]\n\n\n        if n % 2 == 1:\n            for i in range(m//2):\n                if grid[i][n//2] != grid[m-1-i][n//2]:\n                    flipped = True\n                    out += 1\n                s += grid[i][n//2] + grid[m-1-i][n//2]\n                    \n\n        if n %2 == 1 and m%2 == 1:\n            out += grid[m//2][n//2] \n\n        if s % 4 == 2 and not flipped:\n            out += 2\n\n        return out\n            \n\n        \n        \n        ",
    "submit_ts": "1722698181",
    "subm_id": "1343172378"
}