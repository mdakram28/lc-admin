{
    "username": "Kavneet Singh",
    "submission": "class Solution {\n    public int binSearch(long[][] dp, int hi, int idx, long x){\n        int lo= 0;\n        // int ans=Integer.MAX_VALUE;\n\n        while(lo<=hi){\n            int mid= lo + (hi-lo)/2;\n            if(dp[mid][idx]== x){\n                // ans= mid;\n                if(mid>0 && dp[mid-1][idx]==x){\n                    hi= mid-1;\n                }\n                else return mid;\n            }\n            else if(dp[mid][idx]>x){\n                hi= mid-1;\n            }\n            else {\n                lo= mid+1;\n            }\n        }\n\n        return 0;\n    }\n\n    public long[] countKConstraintSubstrings(String s, int k, int[][] q) {\n        long[] res= new long[q.length];\n\n        long[][] dp= new long[s.length()+1][4];\n\n        // int[] sums= new int[s.length()+1];\n        // sums[0]= 1;\n\n        // for(int i=1;i<sums.length;i++){\n        //     sums[i]= sums[i-1] + i;\n        // }\n\n        for(int i=1;i<dp.length;i++){\n            if(s.charAt(i-1)=='1'){\n                dp[i][2]= dp[i-1][2] +1;\n                dp[i][1]= dp[i-1][1];\n            }\n            else {\n                dp[i][2]= dp[i-1][2];\n                dp[i][1]= dp[i-1][1] +1;\n            }\n            int idx1= binSearch(dp, i, 1, dp[i][1]-k);\n            int idx2= binSearch(dp, i, 2, dp[i][2]-k);\n\n            int min= Math.min(idx1, idx2);\n            dp[i][0]= i-min + dp[i-1][0];\n            dp[i][3]= min;\n        }\n\n        // for(int i=0;i<dp.length;i++){\n        //     System.out.println(dp[i][0] + \"  \" + dp[i][1] + \"   \" + dp[i][2]);\n        // }\n\n        for(int i=0;i<q.length;i++){\n            int min= q[i][0];\n            int max= q[i][1];\n            res[i] = dp[max+1][0]- dp[min][0];\n            // System.out.println(res[i]);\n            for(int j=min+1;j<=Math.min(max+1, dp.length-1); j++){\n                if(dp[j][3]>= min) break;\n                res[i]-= min - dp[j][3];\n                // System.out.println(i+ \"  \"+Math.max(dp[j][3], min) + \" , \" + Math.min(dp[j][3], min));\n            }\n            \n        }\n\n        return res;\n    }\n}",
    "submit_ts": "1723953207",
    "subm_id": "1359815164"
}