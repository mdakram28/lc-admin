{
    "username": "dwrdius",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long res = 0;\n        ranges::sort(horizontalCut);\n        ranges::sort(verticalCut);\n        long long hori = 1, vert = 1;\n        long long hidx = horizontalCut.size()-1, vidx = verticalCut.size()-1;\n        while (hidx >= 0 || vidx >= 0) {\n            long long h = (hidx >= 0) ? horizontalCut[hidx] : -1;\n            long long v = (vidx >= 0) ? verticalCut[vidx] : -1;\n            if (h == v) {\n                res += (hori + vert + 1) * h;\n                hidx--; vidx--;\n                hori++; vert++;\n            }\n            else if (h > v) {\n                res += (hori) * h;\n                vert++;\n                hidx--;\n            }\n            else {\n                res += (vert) * v;\n                hori++;\n                vidx--;\n            }\n        }\n        return res;\n    }\n};\n\n\n/* class Solution {\npublic:\n    \n};*/",
    "submit_ts": "1720926155",
    "subm_id": "1320277595"
}