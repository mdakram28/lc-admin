{
    "username": "N_E_E_R_A_J",
    "submission": "const char fastio = [](){\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\n\ntypedef long long int ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pii> vii;\ntypedef vector<pll> vll;\n\n#define ALL(iterable) (iterable).begin(), (iterable).end()\n#define RALL(iterable) (iterable).rbegin(), (iterable).rend()\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\n#define ROUND(x) (((x) >= 0) ? (ll)((x) + 0.5) : (ll)((x) - 0.5))\n#define DEBUG(...) cout << \"[DEBUG-\" << __LINE__ << \"]:\"; debug_cout(__VA_ARGS__);\n\nshort dx4[] = {-1, 0, 1, 0};\nshort dy4[] = {0, 1, 0, -1};\n\nshort dx8[] = {-1, -1, -1, 0, 1, 1, 1, 0};\nshort dy8[] = {-1, 0, 1, 1, 1, 0, -1, -1};\n\nshort kx[] = {2, 1, -1, -2, -2, -1, 1, 2};\nshort ky[] = {1, 2, 2, 1, -1, -2, -2, -1};\n\ntemplate<typename T>\nvoid debug_cout(const T& arg) {\n    cout << \" \" << arg;\n}\n\ntemplate<typename T, typename... Args>\nvoid debug_cout(const T& firstArg, const Args&... args) {\n    cout << \" \" << firstArg;\n    debug_cout(args...);\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &out, pair<T1, T2> &p)\n{\n    out << \"(\" << p.first << \",\" << p.second << \")\";\n    return out;\n}\n\ntemplate <typename T>\nostream &operator<<(ostream &out, vector<T> &vec)\n{\n    out << \"[\";\n    for (auto it = vec.begin(); it != vec.end(); ++it)\n    {\n        if (it != vec.begin())\n            out << \",\";\n        out << *it;\n    }\n    out << \"]\";\n    return out;\n}\n\nclass Solution {\nprivate:\n    int upper(int len)\n    {\n        ll low = 0, high = len, val = -1;\n        while (low <= high)\n        {\n            ll mid = low + (high - low) / 2;\n            \n            if (mid * mid + mid <= len)\n            {\n                val = mid;\n                low = mid + 1;\n            }\n            else\n                high = mid - 1;\n        }\n        \n        return val;\n    }\n\npublic:\n    int numberOfSubstrings(string_view s) {\n        int ones = 0, zeroes = 0, length = 0, count = 0;\n        map<int, vector<int>> z;\n        z[0].push_back(-1);\n        \n        for (auto &&ch: s)\n        {\n            ones += ch == '1';\n            zeroes += ch == '0';\n            ++length;\n            \n            int limit = upper(length);\n            if (limit != -1)\n            {\n                int start = zeroes - limit;\n                auto itr = z.upper_bound(start - 1);\n                while (itr != z.end())\n                {\n                    int minus = itr->first;\n                    int newZero = zeroes - minus;\n                    int minOnes = newZero * newZero;\n                    int maxSubtract = ones - minOnes;\n                    \n                    count += upper_bound(ALL(itr->second), maxSubtract) - itr->second.begin();\n                    ++itr;\n                }\n            }\n\n            z[zeroes].push_back(ones);\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1722138322",
    "subm_id": "1335787750"
}