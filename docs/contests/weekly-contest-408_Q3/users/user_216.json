{
    "username": "DenisGubar",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int result = 0;\n        int const N = s.size();\n        vector<int> A;\n        A.reserve(N + 2);\n        A.push_back(-1);\n        for (int i = 0; i < N; ++i)\n            if (s[i] == '0')\n                A.push_back(i);\n        A.push_back(N);\n        int const X = sqrt(N) + 2;\n        int const M = A.size();\n        for(int L = 0; L < M; ++L)\n            for (int R = L + 1; R - L < X && R < M; ++R)\n            {\n                int length = A[R] - A[L] - 1;\n                int zeroCount = R - L - 1;\n                if (zeroCount == 0)\n                {\n                    result += length * (length + 1) / 2;\n                    continue;\n                }\n                int onesCount = length - zeroCount;\n                if (onesCount < zeroCount * zeroCount)\n                    continue;\n                int left = A[L + 1] - A[L] - 1;\n                int right = A[R] - A[R - 1] - 1;\n                int delta = min(left + right, onesCount - zeroCount * zeroCount);\n                if (left > right)\n                    swap(left, right);\n                int z = min(left, delta);\n                for (int x = 0; x <= z; ++x)\n                    result += min(right, delta - x) + 1;\n            }\n        return result;\n    }\n};\n",
    "submit_ts": "1722137345",
    "subm_id": "1335761095"
}