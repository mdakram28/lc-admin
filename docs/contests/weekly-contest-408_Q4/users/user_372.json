{
    "username": "kumarfeldspar",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        X=(long long)X;\n        Y=(long long)Y;\n        long long n = circles.size();\n        vector<long long> parent(n + 4), rank(n + 4, 0);\n        \n        for (long long i = 0; i < n + 4; ++i) {\n            parent[i] = i;\n        }\n        \n        function<long long(long long)> find = [&](long long u) {\n            if (parent[u] != u) {\n                parent[u] = find(parent[u]);\n            }\n            return parent[u];\n        };\n        \n        auto unionSets = [&](long long u, long long v) {\n            long long rootU = find(u);\n            long long rootV = find(v);\n            if (rootU != rootV) {\n                if (rank[rootU] > rank[rootV]) {\n                    parent[rootV] = rootU;\n                } else if (rank[rootU] < rank[rootV]) {\n                    parent[rootU] = rootV;\n                } else {\n                    parent[rootV] = rootU;\n                    rank[rootU]++;\n                }\n            }\n        };\n        \n        long long BOTTOM = n, TOP = n + 1, LEFT = n + 2, RIGHT = n + 3;\n        \n        for (long long i = 0; i < n; ++i) {\n            long long xi = circles[i][0];\n            long long yi = circles[i][1];\n            long long ri = circles[i][2];\n            \n            if (yi - ri <= 0) unionSets(i, BOTTOM);\n            if (yi + ri >= Y) unionSets(i, TOP);\n            if (xi - ri <= 0) unionSets(i, LEFT);\n            if (xi + ri >= X) unionSets(i, RIGHT);\n        }\n        \n        for (long long i = 0; i < n; ++i) {\n            for (long long j = i + 1; j < n; ++j) {\n                long long xi = circles[i][0];\n                long long yi = circles[i][1];\n                long long ri = circles[i][2];\n                long long xj = circles[j][0];\n                long long yj = circles[j][1];\n                long long rj = circles[j][2];\n                \n                if ((xi - xj) * (xi - xj) + (yi - yj) * (yi - yj) <= (ri + rj) * (ri + rj)) {\n                    unionSets(i, j);\n                }\n            }\n        }\n        \n        return !(find(BOTTOM) == find(TOP) || find(LEFT) == find(RIGHT) ||\n                 find(BOTTOM) == find(LEFT) || find(TOP) == find(RIGHT));\n    }\n};",
    "submit_ts": "1722136908",
    "subm_id": "1335748517"
}