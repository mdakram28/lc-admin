{
    "username": "Mysteriux",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> m;\n        for (auto& it : requirements) {\n            m[it[0]+1] = it[1];\n        }\n        \n        int MOD = 1000000007;\n        \n        vector<vector<long long>> dp(n+1,vector<long long>(401,0));\n        dp[0][0] = 1;\n\n        for(int i=1;i<=n;i++) {\n            for(int inv=0;inv<=400;inv++) {\n                for(int j=0;j<i;j++) {\n                    int prevInv=inv-j;\n                    if (prevInv>=0){\n                        dp[i][inv]=(dp[i][inv]+dp[i-1][prevInv])%MOD;\n                    }\n                }\n            }\n\n            if(m.count(i)) {\n                int targetInv=m[i];\n                for(int inv=0;inv<=400;inv++) {\n                    if (inv!=targetInv){\n                        dp[i][inv]=0;\n                    }\n                }\n            }\n        }\n\n        long long ans=0;\n        for (int inv=0;inv<=400;inv++) {\n            ans=(ans+dp[n][inv])%MOD;\n        }\n\n        return (int)ans;\n    }\n};",
    "submit_ts": "1719070242",
    "subm_id": "1296818175"
}