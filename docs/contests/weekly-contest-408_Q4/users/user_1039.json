{
    "username": "shubham-43",
    "submission": "class Solution {\nvector<int> adj[1003];\nbool visited[1003];\npublic:\n    bool dfs(int i, int right, int top, vector<vector<int>>& circles, bool & l, bool & b, bool & r, bool & t)\n    {\n        if(visited[i])\n        {\n            return false;\n        }\n        visited[i] = true;\n        long long xi = circles[i][0];\n        long long yi = circles[i][1];\n        long long ri = circles[i][2];\n        if(xi - ri <= 0)\n        {\n            l = true;\n        }\n        if(yi - ri <= 0)\n        {\n            b = true;\n        }\n        if(xi + ri >= right)\n        {\n            r = true;\n        }\n        if(yi + ri >= top)\n        {\n            t = true;\n        }\n        if((l && b) || (r && t) || (l && r) || (b && t))\n        {\n            return true;\n        }\n        for(int child: adj[i])\n        {\n            if(dfs(child, right, top, circles, l, b, r, t))\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int len = circles.size();\n        for(int i = 0; i < len; i++)\n        {\n            long long xi = circles[i][0];\n            long long yi = circles[i][1];\n            long long ri = circles[i][2];\n            if(xi - ri >= X)\n            {\n                continue;\n            }\n            if(yi - ri >= Y)\n            {\n                continue;\n            }\n            for(int j = i + 1; j < len; j++)\n            {\n                long long xj = circles[j][0];\n                long long yj = circles[j][1];\n                long long rj = circles[j][2];\n                long long xd = xi - xj;\n                long long yd = yi - yj;\n                long long rd = ri + rj;\n                xd *= xd;\n                yd *= yd;\n                rd *= rd;\n                if(xd + yd <= rd)\n                {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        for(int i = 0; i < len; i++)\n        {\n            visited[i] = false;\n        }\n\n        for(int i = 0; i < len; i++)\n        {\n            bool l = false;\n            bool r = false;\n            bool t = false;\n            bool b = false;\n            if(dfs(i, X, Y, circles, l, b, r, t))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722139141",
    "subm_id": "1335808967"
}