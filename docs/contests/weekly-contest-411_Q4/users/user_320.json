{
    "username": "Khushit Shah",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        long long cnts[n]; // no of substrings from ending at n.\n        \n        int left = 0;\n        int right = 0;\n        int one = s[0] == '1';\n        int zero = s[0] == '0';\n\n        while(right != s.size()) {\n            if(one <= k || zero <= k) {\n                cnts[right] = left;\n                \n                right ++;\n\n                one += (s[right] == '1');\n                zero += (s[right] == '0');\n            } else {\n                one -= (s[left] == '1');\n                zero -= (s[left] == '0');\n                left ++;\n            }\n        }\n\n        long long totalSubs[n];\n        long long sum = 0;\n\n        for(int i = 0; i < n; i ++) {\n            sum += (i-cnts[i]+1);\n            totalSubs[i] = sum;\n        }\n        vector<long long>ansv;\n        for(int i = 0; i < queries.size(); i ++) {\n            int l = queries[i][0];\n            int r = queries[i][1];\n            \n            int index = lower_bound(cnts+l, cnts+r+1, l)-cnts;\n            if(index > r) index = r+1;\n            //cout << l <<\" \" << r << \" \" << index << endl;\n            // first element with cnt >= l.\n            long long ans = totalSubs[r] - (index != 0 ? totalSubs[index-1]:0);\n           \n            long long size = index - l;\n\n            ans += (size)*(size + 1)/2;\n            \n            ansv.push_back(ans);\n\n        }\n\n        return ansv;\n    }\n};",
    "submit_ts": "1723952981",
    "subm_id": "1359809403"
}