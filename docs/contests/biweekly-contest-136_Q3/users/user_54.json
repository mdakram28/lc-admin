{
    "username": "vilcheuski",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int answer = 0;\n        int n = grid.size(), m = grid[0].size();\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ++answer;\n                grid[n / 2][m / 2] = 0;\n            }\n        }\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (grid[i][j] != grid[n - i - 1][j] || grid[i][j] != grid[i][m - j - 1] || grid[i][j] != grid[n - i - 1][m - j - 1]) {\n                    if (i == n - i - 1 || j == m - j - 1) continue;\n                    vector<int> cur = {grid[i][j], grid[n - i - 1][j], grid[i][m - j - 1], grid[n - i - 1][m - j - 1]};\n                    grid[i][j] = grid[n - i - 1][j] = grid[i][m - j - 1] = grid[n - i - 1][m - j - 1] = 0;\n                    int sum = 0;\n                    for (const auto& x : cur) sum += x;\n                    if (sum == 2) answer += 2; else answer += 1;\n                }\n            }\n        }\n        vector<vector<int> > cnt(2, vector<int> (2, 0));\n        if (n % 2 == 1) {\n            int i = n / 2;\n            for (int j = 0; j + j < m; ++j) {\n                int val1 = grid[i][j], val2 = grid[i][m - j - 1];\n                if (val1 > val2) swap(val1, val2);\n                ++cnt[val1][val2];\n            }\n        }\n        if (m % 2 == 1) {\n            int j = m / 2;\n            for (int i = 0; i + i < n; ++i) {\n                int val1 = grid[i][j], val2 = grid[n - i - 1][j];\n                if (val1 > val2) swap(val1, val2);\n                ++cnt[val1][val2];\n            }\n        }\n        int add = 1e9;\n        for (int c01 = 0; c01 <= cnt[0][1]; ++c01) {\n            for (int c11 = 0; c11 <= min(1, cnt[1][1]); ++c11) {\n                int cur = 2 * c01 + (cnt[1][1] - c11) * 2;\n                if (cur % 4 != 0) continue;\n                add = min(add, cnt[0][1] + 2 * c11);\n            }\n        }\n        return answer + add;\n    }\n};",
    "submit_ts": "1722696281",
    "subm_id": "1343100352"
}