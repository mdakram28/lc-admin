{
    "username": "Nelson84",
    "submission": "class Solution {\n    int mod = 1e9+7;\n    int dp[2001][1001];\n    int prefix_dp[2001][1001];\npublic:\n    int countOfPairs(vector<int>& nums) {\n        /*\n            arr1 is monotonically non-decreasing, in other words, arr1[0] <= arr1[1] <= ... <= arr1[n - 1].\n            arr2 is monotonically non-increasing, in other words, arr2[0] >= arr2[1] >= ... >= arr2[n - 1].\n            arr1[i] + arr2[i] == nums[i] for all 0 <= i <= n - 1.\n            \n            nums[0], nums[1], nums[2]\n            arr1 = a0, a1, a2, ...\n            arr2 = nums[0]-a0, nums[1]-a1, nums[2]-a2, ...\n            a0 <= a1 <= a2....\n            nums[0]-a0 >= nums[1]-a1 >= ...\n            => a1 >= nums[1]-nums[0] + a0\n            \n            dp[i][num] = count of pairs with arr1 end with num\n        */\n        int n = nums.size();\n        for(int arr1=0; arr1<=nums[n-1]; arr1++){\n            dp[n-1][arr1]++;\n            prefix_dp[n-1][arr1] = ((arr1>0 ?prefix_dp[n-1][arr1-1] :0) + dp[n-1][arr1])%mod;\n        }\n        for(int i=n-2; i>=0; i--){\n            for(int arr1=0; arr1<=nums[i]; arr1++){\n                int lower_bound = max(arr1, nums[i+1]-nums[i]+arr1);\n                int upper_bound = nums[i+1];\n                \n                if(upper_bound>=lower_bound){\n                    dp[i][arr1] = (prefix_dp[i+1][upper_bound] - (lower_bound>0 ?prefix_dp[i+1][lower_bound-1] :0))%mod;\n                }\n                prefix_dp[i][arr1] = ((arr1>0 ?prefix_dp[i][arr1-1] :0) + dp[i][arr1])%mod;\n            }\n        }\n        int cnt = 0;\n        for(int i=0; i<=1000; i++) cnt = (cnt + dp[0][i])%mod;\n        return (cnt+mod)%mod;\n    }\n};",
    "submit_ts": "1723347191",
    "subm_id": "1351593826"
}