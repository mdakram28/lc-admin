{
    "username": "Navneet_Kumar_Mridul",
    "submission": "// class Solution {\n// public:\n//     int minChanges(vector<int>& nums, int k) {\n//         int n = nums.size();\n//         unordered_map<int, int> changeCount;\n\n//         for (int i = 0; i < n / 2; ++i) {\n//             int a = nums[i];\n//             int b = nums[n - i - 1];\n\n//             int diff = abs(a - b);\n\n//             for (int x = 0; x <= k; ++x) {\n//                 int changes = 0;\n//                 if (abs(a - x) != diff) changes++;\n//                 if (abs(b - x) != diff) changes++;\n//                 changeCount[diff] += changes;\n//             }\n//         }\n\n//         int minChanges = n; // Start with the worst case (changing every pair)\n//         for (const auto& entry : changeCount) {\n//             minChanges = min(minChanges, entry.second);\n//         }\n\n//         return minChanges;\n//     }\n// };\n\n\nclass Solution {\npublic:\n    vector<int> countOccurrences(const vector<int>& nums, int k, unordered_map<int, vector<int>>& diffMap) {\n    vector<int> maxValues;\n    int n = nums.size();\n\n    for (int i = 0; i < n / 2; i++) {\n        int leftVal = nums[i];\n        int rightVal = nums[n - i - 1];\n        int difference = abs(leftVal - rightVal);\n        int maxVal = max({leftVal, rightVal, k - leftVal, k - rightVal});\n        diffMap[difference].push_back(maxVal);\n        maxValues.push_back(maxVal);\n    }\n\n    return maxValues;\n}\n\n    int minChanges(vector<int>& nums, int k) {\n\n    unordered_map<int, vector<int>> diffMap;\n    vector<int> maxValues = countOccurrences(nums, k, diffMap);\n\n    int n = nums.size();\n    int minChangesRequired = n;\n    sort(maxValues.begin(), maxValues.end());\n\n    for (auto& pair : diffMap) {\n        int difference = pair.first;\n        int count = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n        count = count * 2 + (n / 2 - count);\n\n        for (int maxVal : pair.second) {\n            if (maxVal < difference) {\n                count -= 2;\n            } else {\n                count -= 1;\n            }\n        }\n\n        minChangesRequired = min(minChangesRequired, count);\n    }\n\n    return minChangesRequired;\n  }\n};",
    "submit_ts": "1721489473",
    "subm_id": "1327454334"
}