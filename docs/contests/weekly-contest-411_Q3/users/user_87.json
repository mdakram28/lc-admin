{
    "username": "Paras Yadav",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        s = new char[n];\n        Arrays.fill(s, 'x');\n        dp = new boolean[10][n];\n        dp(0, n, 0, k);\n        return new String(s);\n    }\n    boolean dp(int ind, int n, int mod, int k){\n        if(ind > n - 1 - ind){\n            // for(int i = ind; i < n; i++)\n            //     mod = (mod * 10 + (int)(s[i] - '0')) % k;\n            // System.out.println(new String(s)+\" \"+mod);\n            if(mod == 0)\n                return true;\n            return false;\n        }\n        if(dp[mod][ind])\n            return false;\n        dp[mod][ind] = true;\n        for(int val = 9; val > -1; val--){\n            s[ind] = (char)('0' + val);\n            s[n - ind - 1] = (char)('0' + val);\n            int newMod = (val * exp(10, n - 1 - ind, k)) % k;\n            if(ind != n - 1 - ind)\n            newMod = ((newMod + val * exp(10, ind, k)) % k) % k;\n            newMod = (mod + newMod) % k;\n            // System.out.println(ind+\" \"+mod+\" \"+newMod+\" \"+val);\n            if(dp(ind + 1, n, newMod, k))\n                return true;\n            s[ind] = 'x';\n            s[n - ind - 1] = 'x';\n        }\n        return false;\n    }\n    int exp(long a, int b, int mod){\n        long ans = 1l;\n        while(b > 0){\n            if((b & 1) == 1){\n                ans = (ans * a) % mod;\n            }\n            b >>= 1;\n            a = (a * a) % mod;\n        }\n        return (int)(ans);\n    }\n    char s[];\n    boolean dp[][];\n}",
    "submit_ts": "1723950954",
    "subm_id": "1359759410"
}