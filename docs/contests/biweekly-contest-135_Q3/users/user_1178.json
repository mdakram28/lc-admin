{
    "username": "priyankashra",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n       map<int, vector<int>> diffMap;\n        vector<int> maxVals;\n        \n        for(int i = 0; i < nums.size() / 2; i++) {\n            int firstNum = nums[i];\n            int secondNum = nums[nums.size() - i - 1];\n            int difference = abs(firstNum - secondNum);\n            int maxValue = max({firstNum, secondNum, k - firstNum, k -secondNum});\n            diffMap[difference].push_back(maxValue);\n            maxVals.push_back(maxValue);\n        }\n        \n        int minChanges = nums.size();\n        sort(maxVals.begin(), maxVals.end());\n        \n        for(auto& pair : diffMap) {\n            int difference = pair.first;\n            int index = lower_bound(maxVals.begin(), maxVals.end(), difference) - maxVals.begin();\n            int totalChanges = index * 2 + (nums.size() / 2 - index);\n            \n            for(auto& val : pair.second) {\n                if(val < difference) {\n                    totalChanges -= 2;\n                } else {\n                    totalChanges -= 1;\n                }\n            }\n            \n            minChanges = min(minChanges, totalChanges);\n        }\n        \n        return minChanges;\n    }\n};",
    "submit_ts": "1721489234",
    "subm_id": "1327447088"
}