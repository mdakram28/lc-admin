{
    "username": "Sanjeev1903",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ops = 0;\n        long diff = 0;\n        boolean positive = true;\n        int i = 0;\n        while(i < nums.length) {\n            diff = target[i] - nums[i];\n            if(diff == 0) {\n                i++;\n                continue;\n            }\n            positive = diff > 0 ? true : false;\n            i++;\n            while(i < nums.length) {\n                if((positive && target[i] - nums[i] <= 0) || (!positive && target[i] - nums[i] >= 0)) {\n                    break;\n                }\n                if(positive) {\n                    if(diff > target[i] - nums[i]) {\n                        ops += diff - (target[i] - nums[i]);\n                    }\n                    diff = target[i] - nums[i];\n                } else {\n                    if(diff < target[i] - nums[i]) {\n                        ops +=  Math.abs(diff - (target[i] - nums[i]));\n                    }\n                    diff = target[i] - nums[i];\n                }\n                i++;\n            }\n            ops += Math.abs(diff);\n        }\n        return ops;\n    }\n}",
    "submit_ts": "1721533416",
    "subm_id": "1328008468"
}