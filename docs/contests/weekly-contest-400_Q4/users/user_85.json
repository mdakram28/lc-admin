{
    "username": "henryz14",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int res = Integer.MAX_VALUE;\n        Set<Integer> prev = new HashSet<>();\n        Set<Integer> cur = new HashSet<>();\n\n        for (int i = 0 ;i < nums.length ; i++) {\n            if (i == 0){\n                prev.add(nums[i]);\n                res = Math.min(res, Math.abs(nums[i]-k));\n            } else {\n                cur.add(nums[i]);\n                res = Math.min(res, Math.abs(nums[i]-k));\n                \n                for (int p : prev) {\n                    cur.add((p & nums[i]));\n                    res = Math.min(res, Math.abs((p & nums[i])-k));\n                }\n                prev.clear();\n                for (int x : cur) prev.add(x);\n                cur = new HashSet<>();\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1717297453",
    "subm_id": "1274743032"
}