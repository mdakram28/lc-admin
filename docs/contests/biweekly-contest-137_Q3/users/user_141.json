{
    "username": "Sai Krishna",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        vector<pair<int, pair<int, int>>> v(n * m);\n\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                v[i * n + j] = {board[i][j], {i, j}};\n            }\n        }\n\n        sort(v.begin(), v.end());\n\n        int len = n * m;\n        long long inf = (long long)1e10;\n        long long max_one = v[len - 1].first;\n        long long max_two = -inf;\n        pair<int, int> p1, p2, p3;\n        bool ok = false;\n\n        for (int i = len - 2; i >= 0; i--) {\n            p1 = v[i].second;\n            for (int j = len - 1; j > i; j--) {\n                p2 = v[j].second;\n\n                if (p1.first == p2.first or p1.second == p2.second) {\n                    continue;\n                }\n\n                max_two = max(max_two, (long long)v[i].first + (long long)v[j].first);\n                if ((long long)v[j].first == max_one) {\n                    ok = true;\n                    break;\n                }\n            }\n\n            if (ok) {\n                break;\n            }\n        }\n\n\n        long long ans = -inf, cur;\n        ok = false;\n\n        for (int i = len - 3; i >= 0; i--) {\n            p1 = v[i].second;\n\n            for (int j = len - 2; j > i; j--) {\n                p2 = v[j].second;\n\n                if (p1.first == p2.first or p1.second == p2.second) {\n                    continue;\n                }\n\n                for (int k = len - 1; k > j; k--) {\n                    p3 = v[k].second;\n\n                    if (p3.first == p2.first or p3.second == p2.second) {\n                        continue;\n                    }\n\n                    if (p1.first == p3.first or p1.second == p3.second) {\n                        continue;\n                    }\n\n                    cur = (long long)v[j].first + (long long)v[k].first;\n                    ans = max(ans, cur + (long long)v[i].first);\n\n                    if (cur == max_two) {\n                        ok = true;\n                        break;\n                    }\n                }\n\n                if (ok) {\n                    break;\n                }\n            }\n\n            if (ok) {\n                break;\n            }\n        }\n\n        return ans;\n\n    }\n};",
    "submit_ts": "1723908407",
    "subm_id": "1359151299"
}