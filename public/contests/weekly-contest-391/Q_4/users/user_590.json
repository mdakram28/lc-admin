{
    "username": "csjue",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int j1 = 0;\n        int j2 = 0;\n        find(points,&j1,&j2);\n        // cout<<j1<<\" \"<<j2<<endl;\n        int x = find2(points,j1);\n        int y = find2(points,j2);\n        // cout<<x<<\" \"<<y<<endl;\n        return min(x,y);\n    }\n    void find(vector<vector<int>>& points, int*j1, int*j2){\n        int n = points.size();\n        vector<vector<pair<int,int>>> v(4,vector<pair<int,int>>(n));\n        int d1 = 0;\n        int d2 = 0;\n        for(int i = 0; i < n; i++){\n            v[0][i] = {points[i][0]+points[i][1],i};\n            v[1][i] = {points[i][0]-points[i][1],i};\n            v[2][i] = {-points[i][0]+points[i][1],i};\n            v[3][i] = {-points[i][0]-points[i][1],i};\n        }\n        for(int i=0;i<4;i++)sort(v[i].begin(),v[i].end());\n\n        for(int i=0;i<4;i++)\n        {\n            if(v[i][n-1].first-v[i][0].first>d1){\n                *j1 = v[i][n-1].second;\n                *j2 = v[i][0].second;\n                d1 = v[i][n-1].first-v[i][0].first;\n            }\n        }\n\n    }\n    int find2(vector<vector<int>>& points, int j1){\n        int n = points.size();\n        vector<vector<pair<int,int>>> v(4);\n        int d1 = 0;\n        int d2 = 0;\n        for(int i = 0; i < n; i++){\n            if(i==j1)\n                continue;\n            v[0].push_back({points[i][0]+points[i][1],i});\n            v[1].push_back({points[i][0]-points[i][1],i});\n            v[2].push_back({-points[i][0]+points[i][1],i});\n            v[3].push_back({-points[i][0]-points[i][1],i});\n        }\n        for(int i=0;i<4;i++)sort(v[i].begin(),v[i].end());\n\n        for(int i=0;i<4;i++)\n        {\n            if(v[i][n-2].first-v[i][0].first>d1){\n                d1 = v[i][n-2].first-v[i][0].first;\n            }\n        }\n        return d1;\n    }\n};"
}