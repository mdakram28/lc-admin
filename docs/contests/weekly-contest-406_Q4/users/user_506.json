{
    "username": "MartinienV",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        h = len(horizontalCut)\n        v = len(verticalCut)\n        horizontal_pieces = 1\n        vertical_pieces = 1\n\n        total_cost = 0\n        i = 0  # Pointer for horizontal cuts\n        j = 0  # Pointer for vertical cuts\n\n        # While there are cuts to be made\n        while i < h and j < v:\n            if horizontalCut[i] >= verticalCut[j]:\n                total_cost += horizontalCut[i] * vertical_pieces\n                horizontal_pieces += 1\n                i += 1\n            else:\n                total_cost += verticalCut[j] * horizontal_pieces\n                vertical_pieces += 1\n                j += 1\n\n        # If there are remaining horizontal cuts\n        while i < h:\n            total_cost += horizontalCut[i] * vertical_pieces\n            i += 1\n\n        # If there are remaining vertical cuts\n        while j < v:\n            total_cost += verticalCut[j] * horizontal_pieces\n            j += 1\n\n        return total_cost",
    "submit_ts": "1720925596",
    "subm_id": "1320259991"
}