{
    "username": "cpmayank01",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        int n = grid.size();\n        int m = grid[0].size();\n        for(int i=0; i<n/2; i++){ // this does not include center lanes \n            for(int j=0; j<m/2; j++){ // this does not include center lanes\n                vector<vector<int>> positions = mirror_pos(i, j, n, m);\n                int ones = 0;\n                for(auto pos : positions){\n                    int x = pos[0], y = pos[1];\n                    if(grid[x][y] == 1){\n                        ones++;\n                    }\n                }\n                if(ones < 2){\n                    ans += ones;\n                }\n                else{\n                    ans += (4-ones);\n                }\n            }\n        }\n\n        // check for center lanes if n or m or both are odd\n        int paired_one_row = 0;\n        int paired_one_col = 0, alone_one_row = 0, alone_one_col = 0;\n        if(n%2 == 1){\n            int crow = n/2;\n            int paired_one = 0;\n            int alone_one = 0;\n            for(int j=0; j<m/2; j++){\n                if(grid[crow][j] == grid[crow][m-j-1] && grid[crow][j] == 1){\n                    paired_one++;\n                }\n                else if(grid[crow][j] == 1 || grid[crow][m-j-1] == 1){\n                    alone_one++;\n                }\n            }\n            // if(alone_one == 0 && paired_one%2 == 1) ans += 2;\n            // ans += alone_one; \n            paired_one_row = paired_one;\n            alone_one_row = alone_one;\n        }\n        if(m%2 == 1){\n            int ccol = m/2;\n            int paired_one = 0;\n            int alone_one = 0;\n            for(int j=0; j<n/2; j++){\n                if(grid[j][ccol] == grid[n-j-1][ccol] && grid[j][ccol] == 1){\n                    paired_one++;\n                }\n                else if(grid[j][ccol] == 1 || grid[n-j-1][ccol] == 1){\n                    alone_one++;\n                }\n            }\n            // if(alone_one == 0 && paired_one%2 == 1) ans += 2;\n            // ans += alone_one; \n            paired_one_col = paired_one;\n            alone_one_col = alone_one;\n        }\n        if(n%2 == 1 && m%2 == 1){\n            ans += grid[n/2][m/2];\n        }\n        int paired_one = paired_one_col + paired_one_row;\n        int alone_one = alone_one_col + alone_one_row;\n        if(alone_one == 0 && paired_one%2 == 1) ans += 2;\n        ans += alone_one;\n        return ans;\n\n    }\nprivate:\n    vector<vector<int>> mirror_pos(int i, int j, int n, int m){\n        return {{i, j}, {i, m-j-1}, {n-i-1, j}, {n-i-1, m-j-1}};\n    }\n};",
    "submit_ts": "1722697761",
    "subm_id": "1343157963"
}