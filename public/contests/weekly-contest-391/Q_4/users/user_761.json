{
    "username": "is2ac",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int[] d = diam(points);\n        int[] temp = new int[] {0,0};\n        temp[0] = points[d[0]][0];\n        temp[1] = points[d[0]][1];\n        points[d[0]] = points[d[1]];\n        int[] a = diam(points);\n         int y = Math.abs(points[a[0]][0]-points[a[1]][0]);\n        y += Math.abs(points[a[0]][1]-points[a[1]][1]);\n        points[d[1]] = temp;\n        points[d[0]] = temp;\n        int[] b = diam(points);\n       /*System.out.println(Arrays.toString(d));\n        System.out.println(Arrays.toString(a));\n        System.out.println(Arrays.toString(b));*/\nint x = Math.abs(points[b[0]][0]-points[b[1]][0]);\n        x += Math.abs(points[b[0]][1]-points[b[1]][1]);\n               return Math.min(x,y);\n    }\n    public int[] diam(int[][] points) {\n        int[] a = new int[4];\n        int[][] b = new int[4][2];\n        for (int i = 0; i < 3; i++) {\n            b[i] = points[0];\n        }\n        for (int i = 0; i < points.length ;i++) {\n            int[] c = points[i];\n            if (c[0]+c[1] < b[0][0]+b[0][1]) {\n                a[0] = i;\n                b[0] = c;\n            }\n            if (c[0]-c[1] < b[1][0]-b[1][1]) {\n                a[1] = i;\n                b[1] = c;\n            }\n            if (c[1]-c[0] < b[2][1]-b[2][0]) {\n                a[2] = i;\n                b[2] = c;\n            }\n            if (-c[1]-c[0]<b[3][1]-b[3][0]) {\n                a[3] = i;\n                b[3] = c;\n            }\n        }\n        int[] d = new int[] {0,0};\n        int dis = 0;\n        for (int i = 0; i < points.length ;i++) {\n            int cur = 0;\n            for (int j = 0; j < 4; j++) {\n                cur = Math.abs(b[j][0]-points[i][0]);\n                cur+= Math.abs(b[j][1]-points[i][1]);\n                if (cur>dis) {\n                    d[0] = a[j];\n                    d[1] = i;\n                    dis = cur;\n                }\n            }\n        }\n        return d;\n    }\n}"
}