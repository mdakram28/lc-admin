{
    "username": "thermal",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, int>> pq;\n        for (int cost : horizontalCut) {\n            pq.push({cost, 0});\n        }\n        for (int cost : verticalCut) {\n            pq.push({cost, 1});\n        }\n        \n        long long totalCost = 0;\n        int h = 1, v = 1;\n        \n        while (!pq.empty()) {\n            int cost = pq.top().first;\n            int type = pq.top().second;\n            pq.pop();\n            \n            if (type == 0) {\n                totalCost += (long long)cost * v;\n                h++;\n            } else {\n                totalCost += (long long)cost * h;\n                v++;\n            }\n        }\n        \n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925627",
    "subm_id": "546440796"
}