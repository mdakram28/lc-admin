{
    "username": "iamc7054",
    "submission": "class Solution {\npublic:\n    using LL = long;\n    LL modpow(LL a, LL b, LL m) { a %= m; LL r = 1; while (b > 0) { if (b & 1) { r = r * a % m; }a = a * a % m; b >>= 1; }return r; }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        vector<LL> hashes(words.size(), 0);\n        vector<LL> C(target.size() + 1, INT_MAX);\n        vector<vector<int>> eqTo(target.size() + 1);\n        C[0] = 0;\n        unordered_map<string, LL> seen;\n        for(int i = 0; i < words.size(); i++) {\n            string &s = words[i];\n            int &c = costs[i];\n            if (seen.count(s)) {\n                costs[seen[s]] = min(costs[seen[s]], c);\n                continue;\n            }\n            seen[s] = i;\n            LL p = 37, m = 1e9+7;\n            LL costHash = 0;\n            LL targetHash = 0;\n            for(LL q = 0; q < s.size(); q++) {\n                costHash = (costHash * p + s[q]) % m;\n                targetHash = (targetHash * p + target[q]) % m;\n            }\n            for(int q = s.size(); q < target.size(); q++) {\n                if (targetHash == costHash) {\n                    eqTo[q].push_back(i);\n                    // C[q] = min(C[q], C[q - s.size()] + c);\n                }\n                targetHash = (targetHash * p + target[q]) % m;\n                targetHash = (m + targetHash - (modpow(p, s.size(), m) * target[q - s.size()]) % m) % m;\n            }\n            if (targetHash == costHash) {\n                eqTo[target.size()].push_back(i);\n                // cout << s << \" IS EQ \" << endl;\n                // C[target.size()] = min(C[target.size()], C[target.size() - s.size()] + c);\n            }\n        }\n        for(int i = 0; i <= target.size(); i++) {\n            // cout << i << \"   \";\n            for(auto el : eqTo[i]) {\n                // cout << el << ' ';\n                C[i] = min(C[i], C[i - words[el].size()] + costs[el]);\n            }\n            // cout << endl;\n        }\n        // for(int i = 0; i < target.size() + 1; i++) {\n        //     cout << C[i] << ' ';\n        // } cout << endl;\n        if (C[target.size()] == INT_MAX) return -1;\n        return C[target.size()];\n    }\n};",
    "submit_ts": "1720323658",
    "subm_id": "1312380919"
}