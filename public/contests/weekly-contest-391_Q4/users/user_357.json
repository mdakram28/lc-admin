{
    "username": "arayi",
    "submission": "#define fr first\n#define sc second\nclass Solution {\n   public:\n    int mxdist(vector<vector<int>>& points, int i1) {\n        vector<pair<int, int>> sum, df;\n        int n = points.size();\n        for (int i = 0; i < points.size(); ++i) {\n            if (i == i1) {\n                n--;\n                continue;\n            }\n            auto& p = points[i];\n            sum.push_back({p[0] + p[1], i});\n            df.push_back({p[0] - p[1], i});\n        }\n        sort(sum.begin(), sum.end());\n        sort(df.begin(), df.end());\n        return max(sum[n - 1].fr - sum[0].fr, df[n - 1].fr - df[0].fr);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int>> sum, df;\n        int n = points.size();\n        for (int i = 0; i < points.size(); ++i) {\n            auto& p = points[i];\n            sum.push_back({p[0] + p[1], i});\n            df.push_back({p[0] - p[1], i});\n        }\n        sort(sum.begin(), sum.end());\n        sort(df.begin(), df.end());\n        if ((sum[n - 1].fr - sum[0].fr) > (df[n - 1].fr - df[0].fr)) {\n            return min(mxdist(points, sum[n - 1].sc), mxdist(points, sum[0].sc));\n        }\n        return min(mxdist(points, df[n-1].sc), mxdist(points, df[0].sc));\n    }\n};"
}