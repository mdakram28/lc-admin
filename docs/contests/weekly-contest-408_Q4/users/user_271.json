{
    "username": "BhavyRamani",
    "submission": "class Solution {\npublic:\n    long long sqr(long long n){\n        return n*n;\n    }\n    long long dist(long long x1, long long y1, long long x2, long long y2){\n        return sqr(x1-x2) + sqr(y1-y2);\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        vector<int> g[1000];\n        int n = circles.size();\n        for(int i = 0; i < n; i++){\n            for(int j = i+1; j < n; j++){\n                long long val = dist(circles[i][0], circles[i][1], circles[j][0], circles[j][1]);\n                if(val <= sqr(0ll+circles[i][2]+circles[j][2])){\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n        vector<bool> vis(1000);\n        function<void(int, array<bool,4>&)> dfs = [&](int ver, array<bool,4> &flg){\n            vis[ver] = true;\n            int x = circles[ver][0], y = circles[ver][1], r = circles[ver][2];\n            if(r >= y)\n                flg[0] = true;\n            if(r >= abs(Y-y))\n                flg[2] = true;\n            if(r >= x)\n                flg[3] = true;\n            if(r >= abs(X-x))\n                flg[1] = true;\n            for(auto &ch:g[ver]){\n                if(!vis[ch])\n                    dfs(ch, flg);\n            }\n        };\n        for(int i = 0; i < n; i++){\n            if(vis[i])\n                continue;\n            array<bool, 4> flg;\n            for(int j = 0; j < 4; j++)\n                flg[j] = false;\n            dfs(i, flg);\n            if((flg[0] && flg[2]) || (flg[1] && flg[3]) || (flg[1] && flg[2]) || (flg[0] && flg[3]))\n                return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722136386",
    "subm_id": "1335732812"
}