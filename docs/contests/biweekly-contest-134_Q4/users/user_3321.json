{
    "username": "ZAChisworking",
    "submission": "#include <iostream>\n#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        \n        unordered_map<long long, long long> prev; // To store results of previous iterations\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> curr; // To store current results\n            \n            // Check if the current element itself equals k\n            if (nums[i] == k) {\n                ++count;\n            }\n            curr[nums[i]] = 1; // Update current map with the current element\n            \n            // Iterate over previous results\n            for (auto& [val, freq] : prev) {\n                long long newAndResult = val & nums[i];\n                \n                // If new AND result equals k, update the count\n                if (newAndResult == k) {\n                    count += freq;\n                }\n                \n                // Update current map with the new AND result\n                curr[newAndResult] += freq;\n            }\n            \n            // Update previous map to current map for the next iteration\n            prev = curr;\n        }\n        \n        return count;\n    }\n};\n",
    "submit_ts": "1720281454",
    "subm_id": "1311825750"
}