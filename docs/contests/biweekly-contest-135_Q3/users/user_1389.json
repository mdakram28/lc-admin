{
    "username": "codescannner",
    "submission": "class Solution {\n    public int binary_search(List<Integer> arr, int target) {\n        int ans = arr.size();\n        int left = 0, right = ans - 1;\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (arr.get(mid) >= target) {\n                ans = mid;\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n\n        return ans;\n    }\n    public int minChanges(int[] nums, int k) {\n       Map<Integer, List<Integer>> map = new HashMap();\n       List<Integer> list = new ArrayList();\n       int n = nums.length;\n       int left = 0, right = n - 1;\n       while(left <=right){\n            int x = nums[left], y = nums[right];\n            int absdiff = Math.abs(x - y);\n            int abs = Math.max(Math.abs(k - x), Math.abs(k - y));\n            int maxAbsDiff = Math.max(x, Math.max(y, abs));\n            if(!map.containsKey(absdiff)){\n                map.put(absdiff, new ArrayList());\n            }\n            list.add(maxAbsDiff);\n            map.get(absdiff).add(maxAbsDiff);\n            left++;\n            right--;\n       }\n\n        list.sort(null);\n        int res = Integer.MAX_VALUE;\n\n        for(Integer key : map.keySet()){\n            int diff = key;\n            int search = binary_search(list, diff);\n            search += n/2 ;\n            for(int num : map.get(key)){\n                if(num < diff) search-=2;\n                else search-=1;\n            }\n            res = Math.min(search , res);\n        }\n\n        return res;\n\n    }\n}",
    "submit_ts": "1721489735",
    "subm_id": "1327462165"
}