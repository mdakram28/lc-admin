{
    "username": "Pranav Raj",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long ans = -2e18;\n\n        vector<vector<pair<int, int>>> bir(m);\n        \n        for(int i = 0; i < m; i++) \n        {\n            vector<pair<int, int>> cv;\n            for (int j = 0; j < n; ++j) \n            {\n                cv.push_back({board[i][j], j});\n            }\n            sort(cv.rbegin(), cv.rend());\n            bir[i] = vector<pair<int, int>>(cv.begin(), cv.begin() + min(3, n));\n        }\n\n        for(int r1 = 0; r1 < m; r1++) \n        {\n            for(int r2 = r1 + 1; r2 < m; r2++) \n            {\n                for(int r3 = r2 + 1; r3 < m; r3++) \n                {\n\n                    for(auto &p1 : bir[r1]) \n                    {\n                        for(auto &p2 : bir[r2]) \n                        {\n                            if(p2.second == p1.second) \n                                continue;  \n                            for(auto &p3 : bir[r3]) \n                            {\n                                if(p3.second == p1.second)\n                                continue;\n                                if(p3.second == p2.second) \n                                    continue;  \n                                long long sum = p1.first;\n                                sum+= p2.first;\n                                sum+= p3.first;\n                                ans = max(ans, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723909901",
    "subm_id": "1359209906"
}