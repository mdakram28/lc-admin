{
    "username": "Syed Mohammad Wali",
    "submission": "import java.util.*;\n\nclass Solution {\n    private class Cell {\n        int value;\n        int column;\n\n        Cell(int v, int c) {\n            value = v;\n            column = c;\n        }\n    }\n\n    private long maxSum = Long.MIN_VALUE;\n\n    public long maximumValueSum(int[][] board) {\n        List<List<Cell>> topValuesPerRow = extractTopValues(board);\n\n        exploreConfigurations(topValuesPerRow, 0, new HashSet<>(), 3, 0);\n\n        return maxSum;\n    }\n\n    private void exploreConfigurations(List<List<Cell>> board, int currentRow, Set<Integer> selectedColumns, int remainingRooks, long currentSum) {\n        if (remainingRooks == 0) {\n            maxSum = Math.max(maxSum, currentSum);\n            return;\n        }\n\n        if (currentRow == board.size())\n            return;\n\n        exploreConfigurations(board, currentRow + 1, selectedColumns, remainingRooks, currentSum);\n\n        for (int i = 0; i < 3; i++) {\n            int value = board.get(currentRow).get(i).value;\n            int column = board.get(currentRow).get(i).column;\n\n            if (!selectedColumns.contains(column)) {\n                selectedColumns.add(column);\n                exploreConfigurations(board, currentRow + 1, selectedColumns, remainingRooks - 1, currentSum + value);\n                selectedColumns.remove(column);\n            }\n        }\n    }\n\n    private List<List<Cell>> extractTopValues(int[][] board) {\n        List<List<Cell>> topValues = new ArrayList<>();\n\n        for (int i = 0; i < board.length; i++) {\n            PriorityQueue<Cell> maxHeap = new PriorityQueue<>((a, b) -> Integer.compare(b.value, a.value));\n\n            for (int j = 0; j < board[i].length; j++) {\n                maxHeap.add(new Cell(board[i][j], j));\n            }\n\n            List<Cell> rowTopValues = new ArrayList<>();\n            for (int j = 0; j < 3; j++) {\n                rowTopValues.add(maxHeap.poll());\n            }\n            topValues.add(rowTopValues);\n        }\n\n        return topValues;\n    }\n}\n",
    "submit_ts": "1723910011",
    "subm_id": "1359213973"
}