{
    "username": "rkgarg_2127",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> crit;\n        int n = colors.size(), ans = 0,a=0;\n        for (int i = 0; i < n; i++) {\n            int j = i;\n            while (j < n && (colors[j % n] != colors[(j + 1) % n])) {\n                cout << j << \"j \";\n                j++;\n            }\n            crit.push_back(j - i);\n            i = j;\n        }\n        // for (int i = 0; i < crit.size(); i++) {\n        //     cout << crit[i] << \" \";\n        // }\n        \n        if(crit.size()==1 && crit[0]==n )   return n;\n        if (colors[0] != colors[n - 1] && crit.size() >1) {\n            cout<<\"hhfvhfhffh\";\n            crit[0] += crit[crit.size() - 1];\n            a=1;\n        }\n\n        for (int i = 0; i < crit.size()-a ; i++) {\n            cout<<\"hh737ofvh\";\n            if (crit[i] >= k - 1)\n                ans += crit[i] - k + 2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279457",
    "subm_id": "1311751959"
}