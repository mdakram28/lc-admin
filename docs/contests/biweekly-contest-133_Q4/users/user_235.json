{
    "username": "pyjuan91",
    "submission": "class Solution {\nprivate:\n  static const int kMod = 1e9 + 7;\n  static const int kMax = 401;\n  int dp[kMax], dp_swap[kMax];\npublic:\n  int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n    sort(requirements.begin(), requirements.end(), [](const vector<int>& a, const vector<int>& b) {\n      return a[0] < b[0];\n      });\n    memset(dp, 0, sizeof(dp));\n    dp[0] = 1;\n    int dp_idx = 0;\n    int req_idx = 0, rq_sz = requirements.size();\n    if (requirements[0][0] == 0) {\n      if (requirements[0][1] == 0) req_idx++;\n      else return 0;\n    }\n    for (int cur_consi = 1; cur_consi < n; cur_consi++) {\n      memset(dp_swap, 0, sizeof(dp_swap));\n      if (req_idx < rq_sz and requirements[req_idx][0] == cur_consi) {\n        int inv_req = requirements[req_idx][1];\n        dp_swap[inv_req] = dp[inv_req];\n        for (int fill = cur_consi - 1; fill >= 0; fill--) {\n          int extra_inv = cur_consi - fill;\n          if (inv_req - extra_inv < 0) break;\n          dp_swap[inv_req] = (dp[inv_req - extra_inv] + dp_swap[inv_req]) % kMod;\n        }\n        req_idx++;\n      }\n      else {\n        for (int prv_inv = 0; prv_inv < kMax; prv_inv++) {\n          dp_swap[prv_inv] = dp[prv_inv];\n          for (int fill = cur_consi - 1; fill >= 0; fill--) {\n            if (prv_inv - (cur_consi - fill) < 0) break;\n            dp_swap[prv_inv] = (dp[prv_inv - (cur_consi - fill)] + dp_swap[prv_inv]) % kMod;\n          }\n        }\n      }\n      swap(dp, dp_swap);\n      // debug(cur_consi);\n      // debugArr(dp, cur_consi + 1);\n    }\n    return dp[requirements.back()[1]];\n  }\n};",
    "submit_ts": "1719069837",
    "subm_id": "1296807698"
}