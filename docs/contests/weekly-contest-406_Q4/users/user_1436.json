{
    "username": "sunil2525",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n          sort(horizontalCut.begin(),horizontalCut.end());\n         sort(verticalCut.begin(),verticalCut.end());\n         long long ans=0;\n         int row=1,col=1;\n         int i=horizontalCut.size()-1,j=verticalCut.size()-1;\n         while(i>=0 && j>=0){\n             if(horizontalCut[i]>=verticalCut[j]){\n                ans+=(horizontalCut[i]*row);\n                col++;\n                i--;\n             }\n             else {\n                ans+=(verticalCut[j]*col);\n                row++;\n                j--;\n             }\n         }\n         while(i>=0){\n             ans+=(horizontalCut[i]*row);\n             i--;\n\n         }\n         while(j>=0){\n             ans+=(verticalCut[j]*col);\n             j--;\n\n         }\n         return ans;\n\n    }\n};",
    "submit_ts": "1720926255",
    "subm_id": "1320280641"
}