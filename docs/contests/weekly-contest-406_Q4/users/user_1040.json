{
    "username": "anushka22__",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int,int>> cuts;\n        for(int cost : horizontalCut){\n            cuts.push_back({cost,0});\n        }\n        for(int cost : verticalCut){\n            cuts.push_back({cost,1});\n        }\n        sort(cuts.begin(), cuts.end(),greater<pair<int, char>>());\n        long long horizontalPieces = 1;\n        long long verticalPieces = 1;\n        long long ans = 0;\n        for(auto& cut : cuts){\n            int cost = cut.first;\n            int type = cut.second;\n            if(type == 0){\n                ans += cost * verticalPieces;\n                horizontalPieces++;\n            } \n            else{\n                ans += cost * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926017",
    "subm_id": "1320273392"
}