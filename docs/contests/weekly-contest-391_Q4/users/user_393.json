{
    "username": "upperknoot",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        \n        multiset<int> V, V1;\n \n        for (int i = 0; i < n; i++) {\n            V.insert(points[i][0] + points[i][1]);\n            V1.insert(points[i][0] - points[i][1]);\n        }\n \n        int res = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            V.erase(V.find(points[i][0] + points[i][1]));\n            V1.erase(V1.find(points[i][0] - points[i][1]));\n            res = min(res, max(*V.rbegin() - *V.begin(), *V1.rbegin() - *V1.begin()));\n            V.insert(points[i][0] + points[i][1]);\n            V1.insert(points[i][0] - points[i][1]);\n        }\n\n        return res;\n    }\n};"
}