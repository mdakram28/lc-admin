{
    "username": "user2937Vz",
    "submission": "class Solution:\n    def minFlips(self, a: List[List[int]]) -> int:\n        \n        n , m = len(a) , len(a[0])\n        \n        take = []\n        for i in range(n // 2):\n            for j in range(m // 2): \n                c0 = (a[i][j] == 0) + (a[i][-(j + 1)] == 0) + (a[-(i + 1)][j] == 0) + (a[-(i + 1)][-(j + 1)] == 0)\n                c1 = (a[i][j] == 1) + (a[i][-(j + 1)] == 1) + (a[-(i + 1)][j] == 1) + (a[-(i + 1)][-(j + 1)] == 1)\n                \n                take.append([c0 , c1])\n        \n        if(m & 1):\n            for i in range(n // 2):\n                c0 = (a[i][m // 2] == 0) + (a[-(i + 1)][m // 2] == 0)\n                c1 = (a[i][m // 2] == 1) + (a[-(i + 1)][m // 2] == 1)\n                take.append([c0 , c1])\n        \n        if(n & 1):\n            for j in range(m // 2):\n                c0 = (a[n // 2][j] == 0) + (a[n // 2][-(j + 1)] == 0)\n                c1 = (a[n // 2][j] == 1) + (a[n // 2][-(j + 1)] == 1)\n                take.append([c0 , c1])\n        \n        if((n & 1) and (m & 1)):\n            c1 = a[n // 2][m // 2]\n            c0 = 1 - c1\n            take.append([c0 , c1])\n        \n        \n        print(take)\n        dp = [0 , float('inf') , float('inf') , float('inf')]\n        dp[0] = 0\n        for [c0 , c1] in take:\n            ndp = [float('inf') , float('inf') , float('inf') , float('inf')]\n            for rem in range(4):\n                ndp[(rem + (c0 + c1)) % 4] = min(ndp[(rem + (c1 + c0)) % 4] , dp[rem] + c0)\n                ndp[rem] = min(ndp[rem] , dp[rem] + c1)\n            \n            dp = ndp\n        \n        return dp[0]\n        ",
    "submit_ts": "1722696820",
    "subm_id": "1343123461"
}