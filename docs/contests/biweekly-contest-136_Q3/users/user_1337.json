{
    "username": "krishna_1010",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int ones = 0, canbe = 0;\n    int moves(int c1, int c2, int r1, int r2, vector<vector<int>>& grid){\n        int one = 0, zero = 0;\n        if(c1==c2 && r1==r2){\n            if(grid[r1][c1]==0)\n                zero++;\n            else\n                one++;\n        }\n        else if(c1==c2){\n            if(grid[r1][c1]==0)\n                zero++;\n            else\n                one++;\n            if(grid[r2][c1]==0)\n                zero++;\n            else\n                one++;\n        }\n        else if(r1==r2){\n            if(grid[r1][c1]==0)\n                zero++;\n            else\n                one++;\n            if(grid[r1][c2]==0)\n                zero++;\n            else\n                one++;\n        }\n        else{\n            if(grid[r1][c1]==0)\n                zero++;\n            else\n                one++;\n            if(grid[r1][c2]==0)\n                zero++;\n            else\n                one++;\n            if(grid[r2][c1]==0)\n                zero++;\n            else\n                one++;\n            if(grid[r2][c2]==0)\n                zero++;\n            else\n                one++;\n        }\n        if(zero==0 || one==0){\n            ones+=one;\n            return 0;\n        }\n        else{\n            if(one>zero){\n                ones+=one+zero;\n            }\n            if(one==zero){\n                if(one==1)\n                    canbe=1;\n            }\n        }\n        // cout<<one<<\" \"<<zero<<endl;\n        return min(one, zero);\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int c1 = 0, c2 = n-1, r1 = 0, r2 = m-1;\n        int ans = 0;\n        while(c1<=c2 && r1<=r2){\n            int i = c1+1, j = c2-1;\n            ans+=moves(c1, c2, r1, r2, grid);\n            while(i<=j){\n                ans+=moves(i, j, r1, r2, grid);\n                i++;\n                j--;\n            }\n            i = r1+1, j = r2-1;\n            while(i<=j){\n                ans+=moves(c1, c2, i, j, grid);\n                i++;\n                j--;\n            }\n            c1++;\n            r1++;\n            c2--;\n            r2--;\n        }\n        int rem = ones%4;\n        // cout<<ones<<endl;\n        if(rem==0)\n            return ans;\n        if(rem==1)\n            return ans+1;\n        if(rem==2){\n            if(canbe==1)\n                return ans;\n            return ans+=2;\n        }\n        ans++;\n        if(canbe==1)\n            return ans;\n        return ans+=2;\n    }\n};",
    "submit_ts": "1722699198",
    "subm_id": "1343204418"
}