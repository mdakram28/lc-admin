{
    "username": "racsosabe",
    "submission": "class Solution {\n    \n    const int inf = 1e9;\n    \n    int dis(pair<int, int> a, pair<int, int> b) {\n        return abs(a.first - b.first) + abs(a.second - b.second);\n    }\n    \n    int get_best(int ignore, vector<vector<int>> &points) {\n        int max_sum = -inf, min_sum = inf;\n        int max_diff = -inf, min_diff = inf;\n        for(int i = 0; i < points.size(); i++) {\n            if(i == ignore) continue;\n            int cur_sum = points[i][0] + points[i][1];\n            if(cur_sum > max_sum) max_sum = cur_sum;\n            if(cur_sum < min_sum) min_sum = cur_sum;\n            int cur_diff = points[i][0] - points[i][1];\n            if(cur_diff > max_diff) max_diff = cur_diff;\n            if(cur_diff < min_diff) min_diff = cur_diff;\n        }\n        return max(max_sum - min_sum, max_diff - min_diff);\n    }\n    \npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        const int n = points.size();\n        int i1 = 0, i2 = 0, i3 = 0, i4 = 0;\n        for(int i = 1; i < points.size(); i++) {\n            int cur_sum = points[i][0] + points[i][1];\n            if(cur_sum > points[i1][0] + points[i1][1]) i1 = i;\n            if(cur_sum < points[i2][0] + points[i2][1]) i2 = i;\n            int cur_diff = points[i][0] - points[i][1];\n            if(cur_diff > points[i3][0] - points[i3][1]) i3 = i;\n            if(cur_diff < points[i4][0] - points[i4][1]) i4 = i;\n        }\n        int ans1 = get_best(i1, points);\n        int ans2 = get_best(i2, points);\n        int ans3 = get_best(i3, points);\n        int ans4 = get_best(i4, points);\n        return min(min(ans1, ans2), min(ans3, ans4));\n    }\n};"
}