{
    "username": "AlanWuu",
    "submission": "class Solution {\n    long long f[100][100];\n    long long calc(long long n, long long m) {\n        if (n == m) m = 0;\n        for (int i = 0; i <= n; ++i) f[i][0] = 1, f[i][i] = 1;\n        for (int i = 1; i <= n; ++i) for (int j = 1; j < n; ++j) {\n            f[i][j] = f[i-1][j-1] + f[i-1][j];\n        }\n\t\treturn f[n][m];\n    }\npublic:\n    int waysToReachStair(int k) {\n        long long ans = 0;\n        long long chance = 1, sum = 0;\n        for (long long jump = 0; (1LL << jump) <= 2 * k + 10; ++jump, ++chance) {\n            if (1 + sum >= k && (1 + sum - k) <= chance) {\n                ans += calc(jump + 1, 1 + sum - k);\n            }\n            sum += (1LL << jump);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716088809.0
}