{
    "username": "_prakash98",
    "submission": "#include<bits/stdc++.h>\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int,int> mp_cng;\n        for(int i=0,j=nums.size()-1;i<j;i++,j--){\n            mp_cng[abs(nums[i]-nums[j])]++;    \n        }\n        \n        int maxLimitChange[k+1];\n        memset(maxLimitChange,0,sizeof(int)*(k+1));\n        for(int i=0,j=nums.size()-1;i<j;i++,j--){\n            int mxChange = max(k-min(nums[i],nums[j]),max(nums[i],nums[j])-0);\n            maxLimitChange[mxChange]++;\n        }\n        int prefixChange[k+1];\n        memset(prefixChange,0,sizeof(int)*(k+1));\n        for(int i=0;i<=k;i++){\n            if(i==0) {\n                prefixChange[i] = maxLimitChange[i];\n                continue;\n            }\n            prefixChange[i] = prefixChange[i-1] + maxLimitChange[i];\n        }\n        int minChange = INT_MAX;\n        for(int cng=0;cng<=k;cng++){\n            int currChange =  nums.size()/2-mp_cng[cng];\n            if(cng > 0)\n                currChange += prefixChange[cng-1];\n            // cout<<k<<\" \"<<currChange<<endl;\n            if(currChange < minChange){\n                minChange = currChange;\n            }\n        }\n        return minChange;\n        \n    }\n};",
    "submit_ts": "1721489239",
    "subm_id": "1327447242"
}