{
    "username": "tvermaashutosh",
    "submission": "int _ = []() {\n    ios::sync_with_stdio(false),\n    cin.tie(nullptr), cout.tie(nullptr);\n    return 0;\n}();\n\nclass Solution {\npublic:\n    typedef long long ll;\n    ll n1, n2;\n    vector<vector<ll>> g1, g2;\n    vector<bool> vis;\n\n    void dfs(ll v, ll d, ll &mxV, ll &mxD, vector<vector<ll>> &g, vector<bool> &vis)\n    {\n        vis[v] = true;\n        if(d > mxD)\n            mxV = v,\n            mxD = d;\n        for(ll c : g[v])\n            if(!vis[c])\n                dfs(c, d + 1, mxV, mxD, g, vis);\n        vis[v] = false;\n    }\n\n    int minimumDiameterAfterMerge(vector<vector<int>> &e1, vector<vector<int>> &e2) {\n        n1 = e1.size() + 1, n2 = e2.size() + 1;\n        g1.resize(n1, vector<ll>()), g2.resize(n2, vector<ll>());\n        vis.resize(max(n1, n2), false);\n        for(auto i : e1)\n            g1[i[0]].push_back(i[1]),\n            g1[i[1]].push_back(i[0]);\n        for(auto i : e2)\n            g2[i[0]].push_back(i[1]),\n            g2[i[1]].push_back(i[0]);\n        \n        ll mxV, mxD, temp = 0, ans = 0;\n        dfs(0, 0, mxV = 0, mxD = 0, g1, vis);\n        dfs(mxV, 0, mxV, mxD = 0, g1, vis);\n        temp += (mxD + 1) / 2,\n        ans = max(ans, mxD);\n        temp++;\n\n        dfs(0, 0, mxV = 0, mxD = 0, g2, vis);\n        dfs(mxV, 0, mxV, mxD = 0, g2, vis);\n        temp += (mxD + 1) / 2,\n        ans = max(ans, mxD);\n        ans = max(ans, temp);\n\n        return ans;\n    }\n};",
    "submit_ts": "1719719615",
    "subm_id": "1304446305"
}