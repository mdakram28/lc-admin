{
    "username": "Coder_10017",
    "submission": "\nstruct Node{\n    int val; \n    Node* next;\n    Node(int val){\n        this->val = val;\n        this->next = NULL;\n    }\n};\n\nclass Solution {\npublic:\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n\n        Node* root = new Node(0);\n        unordered_map<int, Node*> mp;\n        mp[0] = root;\n\n        Node* prev = root;\n        for(int i=1; i<n; i++){\n            Node* cur = new Node(i);\n            mp[i] = cur;\n            prev->next = cur;\n            prev = cur;\n        }\n\n        vector<int> ans;\n        int removes = 0;\n        for(auto& q: queries){\n            Node* st = mp[q[0]];\n            Node* end = mp[q[1]];\n            if(st==NULL or end==NULL){\n                ans.push_back(n-1-removes);\n                continue;\n            }\n            Node* cur = st;\n            while(cur->next != end and cur->next->val < end->val){\n                cur = cur->next;\n                removes++;\n                mp[cur->val] = NULL;\n                // cout<<\"removing \"<<cur->val<<endl;\n            }\n            st->next = end;\n            ans.push_back(n-1-removes);\n            // cout<<\"after query \"<<endl;\n            // for(Node* temp = root; temp; temp = temp->next) cout<<temp->val<<\" \";\n            // cout<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741837",
    "subm_id": "1343754668"
}