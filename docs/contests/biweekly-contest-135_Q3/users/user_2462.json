{
    "username": "LSG2320",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> map;\n        vector<int> arr;\n        int n = nums.size();\n        int i = 0;\n\n        while (i < n/2) {\n            int val1 = nums[i];\n            int val2 = nums[n-i-1];\n            int diff = abs(val1-val2);\n            int maxval = max({val1,val2,k-val1,k-val2});\n\n            map[diff].push_back(maxval);\n            arr.push_back(maxval);\n            i++;\n        }\n\n        int final = n;\n        sort(arr.begin(),arr.end());\n\n        for (const auto & [diff,array]:map) {\n            int T = 0;\n            int low = 0, high = arr.size();\n            while (low < high) {\n                int mid = low + (high - low) / 2;\n                if (arr[mid] < diff) {\n                    low = mid + 1;\n                } else {\n                    high = mid;\n                }\n            }\n            T = low * 2 + (n / 2 - low);\n\n            int j = 0;\n            while (j < array.size()) {\n                if (array[j] < diff) {\n                    T -= 2;\n                } else {\n                    T -= 1;\n                }\n                j++;\n            }\n\n            final = min(final, T);\n        }\n\n        return final;\n    }\n};\n",
    "submit_ts": "1721490464",
    "subm_id": "1327483382"
}