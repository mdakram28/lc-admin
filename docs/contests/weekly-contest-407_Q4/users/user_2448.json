{
    "username": "leoyu0813",
    "submission": "class Solution {\npublic:\n    bool isSplit (vector<int>& nums, int x)\n    {\n        if (x == 0) return true;\n        if (nums.empty ()) return false;\n        return ((nums.back () > 0) && (x < 0)) || ((nums.back () < 0) && (x > 0));\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size ();\n        vector<int> diff;\n        long long cost = 0;\n        for (int i = 0; i < n; ++i)\n        {\n            int x = nums[i] - target [i];\n            if (!isSplit (diff, x))\n                diff.push_back (x);\n            else if (!diff.empty ()){\n                cost += dfs (diff);\n                diff.clear ();\n                if (x)\n                    diff.push_back (x);\n            }\n        }\n        if (!diff.empty ())\n            cost += dfs (diff);\n        return cost;\n    }\n\n    long long dfs (vector<int>& nums)\n    {\n        if (nums.empty ())\n            return 0;\n        int base = *min_element (nums.begin (), nums.end (), [](int a, int b)\n        {\n            return abs (a) < abs (b);\n        });\n        long long cost = abs (base);\n        for (int& x : nums)\n            x-= base;\n        vector<int> diff;\n        for (int x : nums)\n        {\n            if (!isSplit (diff, x))\n                diff.push_back (x);\n            else if (!diff.empty ()){\n                cost += dfs (diff);\n                diff.clear ();\n                if (x)\n                    diff.push_back (x);\n            }\n        }\n        if (!diff.empty ())\n            cost += dfs (diff);\n        return cost;\n        \n    }\n};",
    "submit_ts": "1721533471",
    "subm_id": "1328009727"
}