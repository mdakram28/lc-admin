{
    "username": "peterrockwave",
    "submission": "class DSU:\n    def __init__(self, l):\n        self.r = [i for i in range(l)]\n    def resolve(self,x):\n        if self.r[x] == x:\n            return x\n        p = self.resolve(self.r[x])\n        self.r[x] = p\n        return p\n    def join(self,x1,x2):\n        p1 = self.resolve(x1)\n        p2 = self.resolve(x2)\n        self.r[p1] = p2\n\nEPS = 0\n\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        dsu = DSU(len(circles))\n        for i,c1 in enumerate(circles):\n            for j,c2 in enumerate(circles):\n                dist = math.hypot(c1[0]-c2[0], c1[1]-c2[1])\n                if dist <= c1[2]+c2[2]+EPS:\n                    # print(c1, c2, dist)\n                    dsu.join(i,j)\n        \n        touches_br = [False for i in range(len(circles))]\n        touches_tl = [False for i in range(len(circles))]\n        for i,c in enumerate(circles):\n            if c[0]+c[2] >= X or c[1]-c[2] <= 0:\n                touches_br[dsu.resolve(i)] = True\n            if c[0]-c[2] <= 0 or c[1]+c[2] >= Y:\n                touches_tl[dsu.resolve(i)] = True\n        \n        # print(dsu.r)\n        # print(touches_br)\n        # print(touches_tl)\n        for i in range(len(circles)):\n            if touches_br[i] and touches_tl[i]:\n                # print(i)\n                return False\n        return True",
    "submit_ts": "1722135080",
    "subm_id": "1335689088"
}