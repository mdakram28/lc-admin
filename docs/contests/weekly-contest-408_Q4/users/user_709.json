{
    "username": "adarshkumar05",
    "submission": "class Solution {\npublic:\n    int bfs(vector<vector<int>> &g, int s, int t1, int t2, int n) {\n        queue<int> q;\n        vector<int> vis(n+4,0);\n        q.push(s);\n        vis[s]=1;\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for(auto v:g[u]) if(!vis[v]) {q.push(v); vis[v] = 1;}\n        }\n        return vis[t1] or vis[t2];\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& c2) {\n        vector<pair<pair<int, int>,int>> c(c2.size());\n        vector<vector<int>> g(c2.size()+4);\n        int nc=c2.size();\n        for(int i=0;i<nc;++i){\n            c[i].first.first=c2[i][0];\n            c[i].first.second=c2[i][1];\n            c[i].second=c2[i][2];\n        }\n        for(int i=0;i<nc;++i) {\n            if(c[i].first.first<=c[i].second){g[nc].push_back(i); g[i].push_back(nc);}\n            if(X-c[i].first.first<=c[i].second){g[nc+2].push_back(i); g[i].push_back(nc+2);}\n            if(c[i].first.second<=c[i].second){g[nc+1].push_back(i); g[i].push_back(nc+1);}\n            if(Y-c[i].first.second<=c[i].second){g[nc+3].push_back(i); g[i].push_back(nc+3);}\n            for(int j=i+1;j<nc;++j) {\n                double d = sqrt(pow(c[i].first.first-c[j].first.first,2)+pow(c[i].first.second-c[j].first.second,2));\n                int rs=c[i].second+c[j].second;\n                if(rs>=d){g[i].push_back(j);g[j].push_back(i);}\n            }\n        }\n        int ans=0;\n        ans=max(ans,bfs(g,nc,nc+1,nc+2,nc+4));\n        ans=max(ans,bfs(g,nc+3,nc+2,nc+1,nc+4));\n        if(ans)return false;\n        return true;\n    }\n};\n",
    "submit_ts": "1722137786",
    "subm_id": "1335773679"
}