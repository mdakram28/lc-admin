{
    "username": "bai-ci-2m",
    "submission": "const int N = 5e4 + 5;\n\nstruct BitTree {\n    struct node { int l, r, val, val_l, val_r; } tr[N << 2];\n    void push_up(int rt) { \n        tr[rt].val = max(tr[rt<<1].val, tr[rt<<1|1].val);\n        tr[rt].val = max(tr[rt].val, tr[rt<<1].val_r + tr[rt<<1|1].val_l);\n        tr[rt].val_l = tr[rt<<1].val_l == tr[rt<<1].r - tr[rt<<1].l \n            ? tr[rt<<1].val_l + tr[rt<<1|1].val_l\n            : tr[rt<<1].val_l;\n        tr[rt].val_r = tr[rt<<1|1].val_r == tr[rt<<1|1].r - tr[rt<<1|1].l\n            ? tr[rt<<1|1].val_r + tr[rt<<1].val_r\n            : tr[rt<<1|1].val_r;\n    }\n    void build(int rt, int l, int r) {\n        tr[rt] = {l, r, 1, 1, r - l};\n        if (l + 1 == r) return;\n        int mid = l + r >> 1;\n        build(rt << 1, l, mid); build(rt << 1 | 1, mid, r);\n        push_up(rt);\n    }\n    void change(int rt, int x) {\n        if (tr[rt].l + 1 == tr[rt].r) {\n            if (tr[rt].l == x) {\n                tr[rt].val_l = 0;\n            } else {\n                tr[rt].val_r = 0;\n            }\n            return;\n        }\n        int mid = tr[rt].l + tr[rt].r >> 1;\n        if (x <= mid) change(rt << 1, x);\n        if (x >= mid) change(rt << 1 | 1, x);\n        push_up(rt);\n    }\n    int ask(int rt, int x) {\n        if (tr[rt].r <= x) return tr[rt].val;\n        int mid = tr[rt].l + tr[rt].r >> 1;\n        if (mid >= x) return ask(rt << 1, x);\n        int ans = max(tr[rt<<1].val, tr[rt<<1].val_r + min(tr[rt<<1|1].val_l, x - mid));\n        ans = max(ans, ask(rt << 1 | 1, x));\n        return ans;\n    }\n} bit;\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<bool> ans;\n        bit.build(1, 0, N - 5);\n        for (auto &q : queries) {\n            if (q[0] == 1) bit.change(1, q[1]);\n            else {\n                ans.emplace_back(bit.ask(1, q[1]) >= q[2]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716650143",
    "subm_id": "534769737"
}