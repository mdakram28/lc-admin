{
    "username": "jawakarsri",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n            int size = nums.size(); // Correct variable name and access the size of 'nums'\n        long long total = 0;\n        unordered_map<long long, long long> previousResults;\n        \n        for (int index = 0; index < size; ++index) {\n            unordered_map<long long, long long> currentResults;\n            long long target = k; // Correctly define 'target' (assuming 'k' is the target value)\n            \n            if (nums[index] == target) {\n                ++total;\n            }\n            currentResults[nums[index]] = 1;\n            \n            for (auto& [value, frequency] : previousResults) {\n                long long newAndResult = value & nums[index]; // Bitwise AND between value and                                                                                                        //nums[index]\n                if (newAndResult == target) {\n                    total += frequency;\n                }\n                currentResults[newAndResult] += frequency;\n            }\n            \n            previousResults = currentResults;\n        }\n        \n        return total;\n      \n    }\n};",
    "submit_ts": "1720280256",
    "subm_id": "1311782538"
}