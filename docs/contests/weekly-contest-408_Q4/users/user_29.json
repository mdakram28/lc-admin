{
    "username": "watashi",
    "submission": "class Solution {\npublic:\n  static int64_t sqr(int64_t x) {\n    return x * x;\n  }\n\n  static int64_t dist2(int64_t x, int64_t y) {\n    return sqr(x) + sqr(y);\n  }\n\n  static bool check(int64_t x, int64_t y, int64_t r, int64_t x1, int64_t x2) {\n    if (x < x1) {\n      return dist2(x - x1, y) <= sqr(r);\n    } else if (x > x2) {\n      return dist2(x - x2, y) <= sqr(r);\n    } else {\n      return sqr(y) <= sqr(r);\n    }\n  }\n\n  bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n    const int n = c.size();\n    const int TL = n, BR = n + 1;\n    vector<vector<int>> e(n + 2);\n    for (int i = 0; i < n; ++i) {\n      int64_t x1 = c[i][0], y1 = c[i][1], r1 = c[i][2];\n      if (check(x1, Y - y1, r1, 0, X) || check(y1, x1, r1, 0, Y)) {\n        e[TL].push_back(i);\n        e[i].push_back(TL);\n      }\n      if (check(x1, y1, r1, 0, X) || check(y1, X - x1, r1, 0, Y)) {\n        e[BR].push_back(i);\n        e[i].push_back(BR);\n      }\n      for (int j = 0; j < i; ++j) {\n        int64_t x2 = c[j][0], y2 = c[j][1], r2 = c[j][2];\n        if (dist2(x2 - x1, y2 - y1) <= sqr(r1 + r2)) {\n          e[i].push_back(j);\n          e[j].push_back(i);\n        }\n      }\n    }\n\n    vector<bool> mark(n + 2, false);\n    queue<int> q;\n    mark[TL] = true;\n    q.push(TL);\n    while (!q.empty()) {\n      const int i = q.front();\n      q.pop();\n      for (int j : e[i]) {\n        if (!mark[j]) {\n          mark[j] = true;\n          q.push(j);\n        }\n      }\n    }\n    return !mark[BR];\n  }\n};",
    "submit_ts": "1722136550",
    "subm_id": "1335737953"
}