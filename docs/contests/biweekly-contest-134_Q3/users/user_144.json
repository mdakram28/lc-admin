{
    "username": "ernestlu",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = (int)colors.size();\n        vector<int> a(2 * n);\n        for (int i = 0; i < 2 * n; i++) {\n            a[i] = colors[i % n];\n        }\n\n        vector<int> d(2 * n);\n        for (int i = 2 * n - 1; i >= 0; i--) {\n            d[i] = 1;\n            if (i + 1 < 2 * n and a[i] != a[i + 1]) {\n                d[i] += d[i + 1];\n            }\n        }\n\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (d[i] >= k)\n                ans++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720276408",
    "subm_id": "1311614743"
}