{
    "username": "gamer37",
    "submission": "#define ll int\n\nint mx=(1<<30)-1;\nvector<int> tree1(400005);\n\nvoid build(ll node,ll s,ll e, vector<int> &nums)\n{\n    if(s==e)\n    {\n        tree1[node]=nums[s];\n    }\n    else\n    {\n        ll mid=(s+e)/2;\n        build(2*node,s,mid,nums);\n        build(2*node+1,mid+1,e,nums);\n\n        tree1[node]=tree1[2*node] & tree1[2*node+1];\n    }\n}\n\nll query(ll node,ll s,ll e,ll l,ll r)\n{\n    if(r<s || e<l)\n    {\n        return mx;\n    }\n    if(l<=s && e<=r)\n    {\n        return tree1[node];\n    }\n    ll mid=(s+e)/2;\n    ll p1=query(2*node,s,mid,l,r);\n    ll p2=query(2*node+1,mid+1,e,l,r);\n    return (p1&p2);\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size(),i,res=1e9+1,low,mid,high;\n        for(i=0;i<4*n+3;i++)\n            tree1[i]=mx;\n        build(1,0,n-1,nums);\n\n        for(i=0;i<n;i++)\n        {\n            low=0,high=i,mid=(low+high)/2;\n            while(low<=high)\n            {\n                int x=query(1,0,n-1,mid,i);\n                if(x>=k)\n                {\n                    res=min(res,x-k);\n                    high=mid-1;\n                }\n                else\n                    low=mid+1;\n                mid=(low+high)/2;\n            }\n            low=0,high=i,mid=(low+high)/2;\n            while(low<=high)\n            {\n                int x=query(1,0,n-1,mid,i);\n                if(x<=k)\n                {\n                    res=min(res,k-x);\n                    low=mid+1;\n                }\n                else\n                    high=mid-1;\n                mid=(low+high)/2;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1717298983",
    "subm_id": "1274797961"
}