{
    "username": "ash_98",
    "submission": "class Solution {\npublic:\n\n    long long func(vector<int> arr){\n        int n = arr.size();\n        if(n == 0) return 0;\n        long long count = 0;\n        vector<vector<int>>bit(30, vector<int>());\n        for(int b = 0; b < 30; b++){\n            for(int i = 0; i < n; i++){\n                int val = arr[i];\n                if((val & (1 << b)) == 0){\n                    bit[b].push_back(i);\n                }\n            }\n            bit[b].push_back(n);\n        }\n        for(int i = 0; i < n; i ++){\n            int st = i;\n            int val = arr[i];\n            for(int b = 0; b < 30; b++){\n                if((val & (1 << b))> 0){\n                    int be = 0, en = bit[b].size() - 1;\n                    int idx = en;\n                    while(be <= en){\n                        int mid = (be + en) >> 1;\n                        if(bit[b][mid] >= i){\n                            idx = mid;\n                            en = mid - 1;\n                        }\n                        else be = mid + 1;\n                    }\n                    st = max(st, bit[b][idx]);\n                }\n            }\n            count += n - st;\n        }\n        return count;\n\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        vector<int>temp;\n        for(int val : nums){\n            if((val & k) != k) ans += func(temp), temp.clear();\n            else temp.push_back(val ^ k);\n        }\n        ans += func(temp);\n        return ans;\n    }\n};",
    "submit_ts": "1720279112",
    "subm_id": "1311737913"
}