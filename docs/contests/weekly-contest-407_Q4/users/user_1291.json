{
    "username": "rbi89",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int[] diffs = new int[nums.length];\n        \n        for (int i = 0; i < diffs.length; i++) {\n            diffs[i] = target[i] - nums[i];\n        }\n        \n        Deque<Integer> stack = new ArrayDeque<>();\n        long total = 0;\n        stack.addLast(-1);\n        \n        System.out.println(Arrays.toString(diffs));\n        \n        for (int i = 0; i <= diffs.length; i++) {\n            if (i == diffs.length || diffs[i] >= 0) {\n                while (stack.peekLast() != -1) {\n                    int floor = diffs[stack.removeLast()];\n                    int ceil = stack.peekLast() == -1 ? 0 : diffs[stack.peekLast()];\n                    total += (ceil - floor);\n                }\n                \n                continue;\n            }\n            \n            int n = diffs[i];\n                \n            while (stack.peekLast() != -1 && diffs[stack.peekLast()] <= n) {\n                int floor = diffs[stack.removeLast()];\n                int ceil = Math.min(n, stack.peekLast() == -1 ? 0 : diffs[stack.peekLast()]);\n                total += (ceil - floor);\n            }\n\n            stack.addLast(i);\n        }\n        \n        stack.addLast(-1);\n        \n        for (int i = 0; i <= diffs.length; i++) {\n            if (i == diffs.length || diffs[i] < 0) {\n                while (stack.peekLast() != -1) {\n                    int ceil = diffs[stack.removeLast()];\n                    int floor = stack.peekLast() == -1 ? 0 : diffs[stack.peekLast()];\n                    total += (ceil - floor);\n                }\n                \n                continue;\n            }\n            \n            int n = diffs[i];\n            \n            while (stack.peekLast() != -1 && diffs[stack.peekLast()] >= n) {\n                int ceil = diffs[stack.removeLast()];\n                int floor = Math.max(n, stack.peekLast() == -1 ? 0 : diffs[stack.peekLast()]);\n                total += (ceil - floor);\n            }\n            \n            stack.addLast(i);\n        }\n        \n        return total;\n    }\n}",
    "submit_ts": "1721532668",
    "subm_id": "1327991260"
}