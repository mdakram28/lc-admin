{
    "username": "singh_deopa",
    "submission": "typedef long long ll;\n\nstruct STree {\n    vector<vector<ll>> st;\n    \n    STree(int& n) {\n        int sz = ceil(log2(1.0 * n));\n        sz = 1 << (sz + 1);\n        st = vector<vector<ll>>(sz, vector<ll>(4));\n    }\n    \n    int mid(int& l, int& r) {\n        return l + ((r - l) >> 1);\n    }\n    \n    int lchild(int& i) {\n        return i << 1 | 1;\n    }\n    \n    vector<ll> merge(vector<ll>& l, vector<ll>& r) {\n        return {\n            max(l[0] + r[2], l[1] + max(r[2], r[0])),\n            max(l[0] + r[3], l[1] + max(r[3], r[1])),\n            max(l[2] + r[2], l[3] + max(r[2], r[0])),\n            max(l[2] + r[3], l[3] + max(r[3], r[1]))\n        };\n    }\n    \n    void build(vector<int>& arr, int tl, int tr, int i) {\n        if (tl == tr) {\n            ll lval = arr[tl];\n            st[i] = {lval, 0LL, 0LL, 0LL};\n            \n            return;\n        }\n        \n        int mi = mid(tl, tr);\n        int l = lchild(i);\n        build(arr, tl, mi, l);\n        build(arr, mi + 1, tr, l + 1);\n        \n        st[i] = merge(st[l], st[l + 1]);\n        \n        // cout << \"data = \" << tl << \"  \"<< tr << \"  \"<< i << \"\\n\";\n        // for (auto x: st[i]) cout << x << \" \";\n        // cout << \"\\n\";\n    }\n    \n    void update(int tl, int tr, int i, int pos, int val) {\n        if (tl == tr) {\n            st[i] = {1LL * val, 0LL, 0LL, 0LL};\n            \n            return;\n        }\n        \n        int mi = mid(tl, tr);\n        int l = lchild(i);\n        \n        if (pos <= mi) {\n            update(tl, mi, l, pos, val);\n        }\n        else {\n            update(mi + 1, tr, l + 1, pos, val);\n        }\n        \n        st[i] = merge(st[l], st[l + 1]);\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = (int) nums.size();\n        STree* stree = new STree(n);\n        stree->build(nums, 0, n - 1, 0);\n        long long res = 0;\n        long long mod = 1000000007LL;\n        \n        for (auto& query: queries) {\n            stree->update(0, n - 1, 0, query[0], query[1]);\n            ll mx = 0;\n            \n            for (ll& i: stree->st[0]) {\n                mx = max(mx, i);\n            }\n            \n            // cout << mx << \" \";\n            \n            res += mx;\n            res %= mod;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1716694397",
    "subm_id": "1268114508"
}