{
    "username": "rejur",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int res = 0;\n        int m = grid.size (), n = grid[0].size ();\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int tmp = grid[i][j] + grid[i][n - j - 1] + grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                res += min (4 - tmp, tmp);\n            }\n        }\n        cout << res << endl;\n        int cnt_fan = 0, cnt_1 = 0;\n        if (m % 2 == 1) {\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[m / 2][j] != grid[m / 2][n - j - 1])\n                    cnt_fan += 2;\n                else if (grid[m / 2][j] == 1)\n                    cnt_1 += 2;\n            }\n        }\n        if (n % 2 == 1) {\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][n / 2] != grid[m - i - 1][n / 2])\n                    cnt_fan += 2;\n                else if (grid[i][n / 2] == 1)\n                    cnt_1 += 2;\n            }\n        }\n        cout << cnt_1 << endl;\n        cout << cnt_fan << endl;\n        res += cnt_fan / 2;\n        res += max (cnt_1 % 4 - cnt_fan, 0);\n        if (m % 2 == 1 && n % 2 == 1 && grid[m / 2][n / 2] == 1)\n            res++;\n        return res;\n    }\n};",
    "submit_ts": "1722697437",
    "subm_id": "552266128"
}