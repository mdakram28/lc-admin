{
    "username": "sourav_suku",
    "submission": "class Solution {\npublic:\n    struct TrieNode{\n        int cost;\n        TrieNode* children[26];\n        TrieNode(){\n            cost=INT_MAX;\n            for(int i=0;i<26;++i)children[i]=NULL;\n        }\n    };\n    void insert(string& word,TrieNode* root,int c){\n        for(int i=0;i<word.size();++i){\n            if(!root->children[word[i]-'a']){\n                root->children[word[i]-'a']=new TrieNode();\n            }\n            root=root->children[word[i]-'a'];\n        }\n        root->cost=min(root->cost,c);\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        // deliberately stop\n        TrieNode* root=new TrieNode();\n        int ind=0;\n        for(auto &e:words){\n            insert(e,root,costs[ind++]);\n        }\n        int n=target.size();\n        vector<int> dp(n,-1);\n        for(int i=n-1;i>=0;--i){\n            TrieNode* ptr=root;\n            for(int j=i;j<n;++j){\n                if(!ptr->children[target[j]-'a'])break;\n                ptr=ptr->children[target[j]-'a'];\n                if(ptr->cost!=INT_MAX){\n                    if(j+1<n&&dp[j+1]==-1)continue;\n                    int val=ptr->cost+(j+1<n?dp[j+1]:0);\n                    if(dp[i]==-1)dp[i]=val;\n                    else dp[i]=min(dp[i],val);\n                }\n            }\n        }\n        return dp[0];\n    }\n};",
    "submit_ts": "1720323765",
    "subm_id": "1312383529"
}