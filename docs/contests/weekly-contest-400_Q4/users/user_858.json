{
    "username": "andrew8455",
    "submission": "void AND_op(int *cur_d, int *d){\n    for(int i=0;i<35;i++){\n        if(d[i] == 0) cur_d[i]++;\n    }\n    return;\n}\nint undo_AND(int *cur_d, int *d, int cur){\n    for(int i=0;i<35;i++){\n        if(cur_d[i] == 1 && d[i]==0){ \n            cur += pow(2,i);\n            cur_d[i]--;\n        }\n        else if(d[i] == 0) cur_d[i]--;\n    }\n    return cur;\n}\nint minimumDifference(int* nums, int n, int k) {\n    int min_dif = INT_MAX;\n    \n    for(int i=0;i<n;i++){\n        min_dif = fmin(min_dif,abs(k-nums[i]));\n    }\n    if(min_dif == 0) return 0;\n    \n    int **dig = calloc(n,sizeof(int*));\n    for(int i=0;i<n;i++){\n        dig[i] = calloc(35,sizeof(int));\n        int d=0,tmp = nums[i];\n        while(tmp>0){\n            dig[i][d++] = tmp%2;\n            tmp /= 2;\n        }\n    }\n    int cur = nums[0], *cur_d = calloc(35,sizeof(int)), l = 0;\n    AND_op(cur_d,dig[0]);\n    for(int i=1;i<n;i++){\n        cur &= nums[i];\n        AND_op(cur_d,dig[i]);\n        \n        min_dif = fmin(min_dif,abs(cur-k));\n        while(l<i && cur<k){\n            cur = undo_AND(cur_d,dig[l++],cur);\n            // for(int d=0;d<5;d++) printf(\"%d\",cur_d[d]);\n            // printf(\"\\nl:%d,cur:%d\\n\",l,cur);\n            min_dif = fmin(min_dif,abs(cur-k));\n        }\n    }\n    \n    return min_dif;\n}",
    "submit_ts": 1717299863.0
}