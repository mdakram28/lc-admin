{
    "username": "tryingtobediff",
    "submission": "class TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.cost = float('inf')\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        root = TrieNode()\n        \n        for word, cost in zip(words, costs):\n            node = root\n            for c in word:\n                if c not in node.children:\n                    node.children[c] = TrieNode()\n                node = node.children[c]\n            node.cost = min(node.cost, cost)\n\n        n = len(target)\n        dp = [10**10] * (n + 1)\n        dp[0] = 0\n\n        for i in range(n):\n            if dp[i] == 10**10:\n                continue\n            node = root\n            for j in range(i, n):\n                if target[j] not in node.children:\n                    break\n                node = node.children[target[j]]\n                if node.cost != 10**10:\n                    dp[j + 1] = min(dp[j + 1], dp[i] + node.cost)\n\n        return [dp[n], -1][dp[n]==10**10]",
    "submit_ts": "1720321117",
    "subm_id": "1312313958"
}