{
    "username": "Tenshi",
    "submission": "class Solution {\npublic:\n    using ll=long long;\n\n    ll f[100010];\n    ll g[100010];\n\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& qs) {\n        int n=s.size();\n        int x=0, y=0;\n        if(s[0]=='0') x=1;\n        else y=1;\n        for(int i=0, j=0; i<n; i++){\n            while(j+1<n){\n                if(s[j+1]=='0' && min(x+1, y)>k) break;\n                if(s[j+1]=='1' && min(x, y+1)>k) break;\n\n                if(s[j+1]=='0') x++;\n                else y++;\n                j++;\n            }\n            f[i]=j;\n            if(s[i]=='0') x--;\n            else y--;\n        }\n\n\n        for(int i=0; i<n; i++){\n            // f[i]=f[i]-i+1;\n            // g[i]=-i+1;\n            g[i]=f[i];\n\n            if(i) f[i]+=f[i-1];\n            // if(i) g[i]+=g[i-1];\n        }\n\n        // for(int i=0; i<n; i++) cout<<f[i]<<endl;\n\n\n        vector<ll> res;\n        for(auto &q: qs){\n            int l=q[0], r=q[1];\n            int L=l, R=r;\n            while(L<R){\n                int mid=L+R>>1;\n                if(g[mid]>=r) R=mid;\n                else L=mid+1;\n            }\n            // cout<<L<<endl;\n            ll t=(1LL*r-l+1)-1LL*(r+l)*(r-l+1)/2;\n            if(g[L]>=r) t+=1LL*r*(r-L+1);\n\n            if(g[L]<r) t+=(f[r]-(l? f[l-1]: 0));\n            else t+=(L-1>=l-1 && L-1>=0? f[L-1]: 0)-(l? f[l-1]: 0);\n            // if(f[L]>=r) t=1LL*(r-L+1)*r+(g[r]-(L? g[L-1]: 0));\n            // if(L!=r){\n            //     t+=(f[L==r? r: L-1]-(l? f[l-1]: 0));\n            // }\n\n            res.push_back(t);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723953399",
    "subm_id": "1359820242"
}