{
    "username": "ard001",
    "submission": "class Solution {\npublic:\n    vector<int> need;\n    vector<vector<int>> dp;\n    static constexpr int mod = 1e9+7;\n    int dfs(int n,int r){\n        if(n==0) return r==0;\n        if(r<0) return -1;\n        if(need[n]!=-1 && need[n]!=r) return 0;\n        if(dp[n][r]!=-1) return dp[n][r];\n        int now = 0 ;\n        for(int k=0;k<n&&k<=r;++k) {\n            now += dfs(n-1,r-k);\n            now %= mod;\n        }\n        return dp[n][r] = now;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        need = vector<int>(n+2,-1);\n        dp = vector<vector<int>> (n+1,vector<int>(500,-1));\n        for(auto r: requirements)need[r[0]+1] = r[1];\n        return dfs(n,need[n]);\n    }\n};",
    "submit_ts": "1719068419",
    "subm_id": "1296764695"
}