{
    "username": "OTTFF",
    "submission": "const int M = 1e5;\nint vis[M][9];\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        vector<int> left(n, 1);\n        for (int i = 1; i < n; i++) {\n            left[i] = left[i - 1] * 10 % k;\n        }\n\n        for (int l = 0, r = n - 1; l < r; l++, r--) {\n            left[l] = (left[l] + left[r]) % k;\n        }\n\n        int mid = (n - 1) / 2;\n\n        // for (int i = 0; i <= mid; i++) {\n        //     cout << left[i] << ' ';\n        // }\n        // cout << endl;\n\n        for (int i = 0; i < k; i++) vis[mid][i] = 0;\n        vis[mid][0] = 1;\n\n        for (int i = mid - 1; i >= 0; i--) {\n            for (int cur = 0; cur < k; cur++) {\n                vis[i][cur] = 0;\n            }\n            for (int cur = 0; cur < k; cur++) {\n                for (int x = 0; x < k; x++) {\n                    if (vis[i + 1][(cur + x * left[i + 1]) % k]) {\n                        vis[i][cur] = 1;\n                        break;\n                    }\n                }\n            }\n        }\n        \n        string ans(n, '0');\n        int sum = 0;\n        for (int i = 0, j = n - 1; i <= mid; i++, j--) {\n            // for (int x = 0; x < k; x++) {\n            //     cout << vis[i][x] << ' ';\n            // }\n            // cout << endl;\n            int cur = -1;\n            for (int x = 9; x >= 0; x--) {\n                if (vis[i][(sum + x * left[i]) % k]) {\n                    cur = x;\n                    break;\n                }\n            }\n\n            sum = (sum + cur * left[i]) % k;\n\n            ans[i] = ans[j] = (char)(cur + '0');\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950268",
    "subm_id": "1359741582"
}