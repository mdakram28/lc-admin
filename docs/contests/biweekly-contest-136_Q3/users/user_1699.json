{
    "username": "paridhiagarwal5313",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        int a = g.size();    \n        int b = g[0].size();   \n        \n        int c = 0; \n        //paridhi\n      \n        c += calculateSubGridFlips(g, a, b);\n        \n        \n        int d = 0; \n        int e = 0; \n        \n        handleMiddleRow(g, a, b, c, d, e);\n        handleMiddleColumn(g, a, b, c, d, e);\n        //paridhi \n      \n        if (a % 2 != 0 && b % 2 != 0 && g[a / 2][b / 2] == 1) {\n            c += 1;\n        }\n        \n        if (d == 0 && e % 2 != 0) {\n            c += 2;\n        }\n        \n        return c;\n    }\n\nprivate:\n    int calculateSubGridFlips(const vector<vector<int>>& g, int a, int b) {\n        int c = 0;\n        \n        for (int f = 0; f < a / 2; ++f) {\n            for (int g_idx = 0; g_idx < b / 2; ++g_idx) {\n                vector<int> h = {\n                    g[f][g_idx],\n                    g[a - f - 1][g_idx],\n                    g[f][b - g_idx - 1],\n                    g[a - f - 1][b - g_idx - 1]\n                };\n                \n                int i = accumulate(h.begin(), h.end(), 0);\n                c += min(i, 4 - i);\n            }\n        }\n        \n        return c;\n    }\n//paridhi\n    void handleMiddleRow(const vector<vector<int>>& g, int a, int b, int& c, int& d, int& e) {\n        if (a % 2 != 0) {\n            int j = a / 2;\n            for (int k = 0; k < b / 2; ++k) {\n                if (g[j][k] != g[j][b - k - 1]) {\n                    c += 1;\n                    d += 1;\n                } else {\n                    if (g[j][k] == 1) {\n                        e += 1;\n                    }\n                }\n            }\n        }\n    }\n//paridhi\n    void handleMiddleColumn(const vector<vector<int>>& g, int a, int b, int& c, int& d, int& e) {\n        if (b % 2 != 0) {\n            int l = b / 2;\n            for (int m = 0; m < a / 2; ++m) {\n                if (g[m][l] != g[a - m - 1][l]) {\n                    c += 1;\n                    d += 1;\n                } else {\n                    if (g[m][l] == 1) {\n                        e += 1;\n                    }\n                }\n            }\n        }\n    }\n};\n",
    "submit_ts": "1722699860",
    "subm_id": "1343224583"
}