{
    "username": "Yidi Chen",
    "submission": "typedef long long ll;\n\nconstexpr ll MAXN = 1e5 + 5;\n\nll n, q;\nll is0[MAXN], is1[MAXN];\nll P[MAXN];\n\nll psaA[MAXN];\nll psaB[MAXN];\n\nll anss[MAXN];\nll idxs[MAXN];\n\nll BITv[MAXN], BITc[MAXN];\n\nll querypsa(ll *psa, ll l, ll r) {\n    return psa[r] - psa[l - 1];\n}\n\nvoid upd(ll *BIT, ll x, ll v) {\n    for (; x <= n; x += (x & -x)) {\n        BIT[x] += v;\n    }\n}\n\nll query(ll *BIT, ll x) {\n    ll ans = 0;\n    for (; x; x -= (x & -x)) ans += BIT[x];\n    return ans;\n}\n\nll query(ll *BIT, ll l, ll r) {\n    return query(BIT, r) - query(BIT, l - 1);\n}\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        for (auto &qt: queries) {\n            qt[0] ++, qt[1] ++;\n        }\n        n = s.size(), q = queries.size();\n        s.insert(s.begin(), 0);\n        for (ll i = 1; i <= n; i ++) {\n            is0[i] = s[i] == '0', is1[i] = s[i] == '1';\n        }\n\n        ll c0 = 0, c1 = 0;\n        for (ll l = 1, r = 0; l <= n; l ++) {\n            for (; (r + 1) <= n\n                && ((c0 + is0[r + 1]) <= k || (c1 + is1[r + 1]) <= k);\n                r ++, c0 += is0[r], c1 += is1[r]);\n            P[l] = r;\n            // cout << P[l] << ',' << c0 << ',' << c1 << ' ';\n            c0 -= is0[l];\n            c1 -= is1[l];\n        }\n        // cout << '\\n';\n\n        for (ll i = 1; i <= n; i ++) {\n            BITv[i] = BITc[i] = 0;\n            psaA[i] = P[i];\n            psaB[i] = -i + 1;\n            psaA[i] += psaA[i - 1];\n            psaB[i] += psaB[i - 1];\n        }\n        \n        priority_queue<pair<ll,ll>> pq;\n        for (ll i = 1; i <= n; i ++) {\n            pq.push({P[i], i});\n        }\n\n        // handle q\n        for (ll i = 0; i < q; i ++) {\n            idxs[i] = i;\n        }\n\n        sort(idxs, idxs + q, [&](auto i, auto j) {\n            return queries[i][1] > queries[j][1];\n        });\n        \n        for (ll j = 0; j < q; j ++) {\n            ll i = idxs[j];\n            ll L = queries[i][0], R = queries[i][1];\n            while (!pq.empty() && pq.top().first >= R) {\n                upd(BITc, pq.top().second, 1);\n                upd(BITv, pq.top().second, -pq.top().first);\n                pq.pop();\n            }\n            // cout << L << ' ' << R << '\\n';\n            // cout << query(BITc, L, R) << ' ' << querypsa(psaA, L, R) << ' ' << query(BITv, L, R) << ' ' << querypsa(psaB, L, R) << '\\n';\n            anss[i] = query(BITc, L, R) * R + querypsa(psaA, L, R) + query(BITv, L, R) \n                      + querypsa(psaB, L, R);\n        }\n\n        vector<ll> results;\n        for (ll i = 0; i < q; i ++) {\n            results.push_back(anss[i]);\n        }\n        return results;\n    }\n};",
    "submit_ts": "1723951265",
    "subm_id": "1359767360"
}