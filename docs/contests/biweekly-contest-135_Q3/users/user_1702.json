{
    "username": "khanduriJi",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n#include <cmath>\n\nclass Solution {\npublic:\n    void calculateDifferences(std::vector<int>& nums_vec1, std::map<int, std::vector<int>>& diff_map3, std::vector<int>& values_vec2, int k_val4) {\n        for (int neeraj_idx1 = 0; neeraj_idx1 < nums_vec1.size() / 2; neeraj_idx1++) {\n            int a_val2 = nums_vec1[neeraj_idx1], b_val3 = nums_vec1[nums_vec1.size() - neeraj_idx1 - 1];\n            int diff_val5 = std::abs(a_val2 - b_val3);\n            int max_val6 = std::max({a_val2, b_val3, k_val4 - a_val2, k_val4 - b_val3});\n            diff_map3[diff_val5].push_back(max_val6);\n            values_vec2.push_back(max_val6);\n        }\n    }\n\n    int findMinimumChanges(std::vector<int>& values_vec3, std::map<int, std::vector<int>>& diff_map4, int total_vals1) {\n        int result_val1 = total_vals1;\n        std::sort(values_vec3.begin(), values_vec3.end());\n\n        for (auto& val : diff_map4) {\n            int diff_val6 = val.first;\n            int position_val2 = std::lower_bound(values_vec3.begin(), values_vec3.end(), diff_val6) - values_vec3.begin();\n            int temp_val1 = position_val2 * 2 + (total_vals1 / 2 - position_val2);\n\n            for (auto& max_val7 : val.second) {\n                if (max_val7 < diff_val6) {\n                    temp_val1 -= 2;\n                } else {\n                    temp_val1 -= 1;\n                }\n            }\n\n            result_val1 = std::min(result_val1, temp_val1);\n        }\n\n        return result_val1;\n    }\n\n    int minChanges(std::vector<int>& nums_vec5, int k_val5) {\n        std::map<int, std::vector<int>> diff_map5;\n        std::vector<int> values_vec4;\n        calculateDifferences(nums_vec5, diff_map5, values_vec4, k_val5);\n        return findMinimumChanges(values_vec4, diff_map5, nums_vec5.size());\n    }\n};\n",
    "submit_ts": "1721489750",
    "subm_id": "1327462591"
}