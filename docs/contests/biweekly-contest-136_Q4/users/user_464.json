{
    "username": "RTXCR7",
    "submission": "class Solution {\npublic:\n\n    void dfs1(int node, int parent, vector<vector<int>>&adj, vector<int>&dp, multiset<int, greater<int>>st[]){\n        dp[node] = 0;\n        int maxTime = 0;\n        for(auto it:adj[node]){\n            if(it!=parent){\n                int nextTime = 1;\n                if(it%2==0)nextTime++;\n                dfs1(it,node,adj,dp,st);\n                st[node].insert(nextTime+dp[it]);\n                maxTime = max(maxTime, nextTime+dp[it]);\n            }\n        }\n        if(st[node].size())dp[node]=maxTime;\n    }\n\n    void reroot(int node1, int node2, vector<int>&dp, multiset<int, greater<int>>st[]){\n        int nextTime = 1;\n        if(node2%2==0)nextTime++;\n        st[node1].erase(st[node1].find(nextTime+dp[node2]));\n        if(st[node1].size())dp[node1] = *(st[node1].begin());\n        else dp[node1] = 0;\n\n\n        int newTime = 1;\n        if(node1%2==0)newTime++;\n        st[node2].insert(newTime + dp[node1]);\n        dp[node2] = *(st[node2].begin());\n\n    }\n\n    void dfs2(int node, int parent, vector<vector<int>>&adj, vector<int>&dp, multiset<int, greater<int>>st[], vector<int>&ans){\n        ans[node] = dp[node];\n        for(auto it:adj[node]){\n            if(it!=parent){\n                reroot(node,it,dp,st);\n                dfs2(it,node,adj,dp,st,ans);\n                reroot(it,node,dp,st);\n            }\n        }\n    }\n\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        vector<vector<int>>adj(n);\n        for(auto it:edges){\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n        vector<int>ans(n);\n        multiset<int,greater<int>>st[n];\n        vector<int>dp(n);\n        dfs1(0,-1,adj,dp,st);\n        dfs2(0,-1,adj,dp,st,ans);\n        return ans;\n    }\n};",
    "submit_ts": "1722698313",
    "subm_id": "1343176615"
}