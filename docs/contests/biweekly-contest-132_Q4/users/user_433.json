{
    "username": "18dgao",
    "submission": "class Solution(object):\n    def maximumLength(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        max_on = defaultdict(lambda: 0)\n        m = defaultdict(lambda: defaultdict(lambda: 0))\n        for i, n in enumerate(nums):\n            for c in range(k+1):\n                m[c][n] = m[c][n] + 1\n            for c in range(k):\n                m[c+1][n] = max(m[c+1][n], max_on[c] + 1)\n            for c in range(k + 1):\n                max_on[c] = max(max_on[c], m[c][n])\n            # print(dict(max_on))\n            # print({k: dict(v) for k, v in m.items()})\n        return max(n for c in m for n in m[c].values())",
    "submit_ts": 1717862238.0
}