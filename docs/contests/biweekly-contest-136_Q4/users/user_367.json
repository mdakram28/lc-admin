{
    "username": "gaoqiaoheimu",
    "submission": "class Solution {\npublic:\n\n    multiset<int> mp[100010];\n\n    void dd(int x, vector<vector<int>> &edge, vector<bool> &vis) {\n        for(auto y: edge[x]) {\n            if (vis[y]) continue;\n            vis[y] = true;\n            dd(y, edge, vis);\n            int d;\n            if (y & 1) d = 1;\n            else d = 2;\n            if (mp[y].empty()) {\n                mp[x].insert(d);\n            } else {\n                mp[x].insert(d + *--mp[y].end());\n            }\n        }\n    }\n\n    void dfs(int x, vector<vector<int>> &edge,  vector<bool> &vis) {\n        for(auto y: edge[x]) {\n            if (vis[y]) continue;\n            vis[y] = true;\n            int d;\n            if (y & 1) d = 1;\n            else d = 2;\n            if (!mp[y].empty()) d += *--mp[y].end();\n            int mx = 0;\n            mp[x].erase(mp[x].find(d));\n            if (!mp[x].empty()) mx = *--mp[x].end();\n            else mx = 0;\n            if (x & 1) mx++;\n            else mx += 2;\n            mp[x].insert(d);\n            mp[y].insert(mx);\n            vis[0] = true;\n            dfs(y, edge, vis);\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> edge(n, vector<int>(0, 0));\n        vector<bool> vis(n, false);\n        vis[0] = true;\n        for(auto e:edges) {\n            edge[e[0]].push_back(e[1]);\n            edge[e[1]].push_back(e[0]);\n        }\n        vector<int> ans(n, 0);\n        dd(0, edge, vis);\n        for(int k=0;k<n;k++) vis[k] = false;\n        dfs(0, edge, vis);\n        for(int k=0;k<n;k++) ans[k] = *--mp[k].end();\n        return ans;\n    }\n};",
    "submit_ts": "1722700362",
    "subm_id": "1343239570"
}