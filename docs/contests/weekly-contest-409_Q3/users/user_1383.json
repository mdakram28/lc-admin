{
    "username": "hiJason",
    "submission": "class Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        # res = []\n        # skip = {}\n        # reversed_skip = {}\n        # paths = {}\n        # for i in range(n):\n        #     paths[i] = i\n\n        # for src, dest in queries:\n        #     if src in skip:\n        #         # curr dest is better\n        #         if dest > skip[src]:\n        #             prev_dest = skip[src]\n        #             removed = paths[dest] - paths[prev_dest]\n        #             paths[n-1] -= removed\n        #             if dest != n-1:\n        #                 paths[dest] -= removed\n                    \n        #             skip[src] = dest\n        #             reversed_skip[dest] = src\n        #     elif dest in reversed_skip:\n        #         # curr src is better\n        #         if src < reversed_skip[dest]:\n        #             prev_src = reversed_skip[dest]\n        #             removed = paths[prev_src] - paths[src]\n        #             paths[n-1] -= removed\n        #             if dest != n-1:\n        #                 paths[dest] -= removed\n                    \n        #             skip[src] = dest\n        #             reversed_skip[dest] = src\n        #     else:\n        #         sentinel = False\n        #         for key, val in skip.items():\n        #             if val >= dest and key <= src:\n        #                 sentinel = True\n        #         if not sentinel:\n        #             skip[src] = dest\n        #             reversed_skip[dest] = src\n        #             paths[dest] = paths[dest] - (dest - src) + 1\n        #             if dest != n-1:\n        #                 paths[n-1] = paths[n-1] - (dest - src) + 1\n\n        #     res.append(paths[n-1])\n\n        # return res\n\n        from sortedcontainers import SortedList\n        res = []\n        nums = SortedList(range(n))\n        for src, dest in queries:\n            if src in nums and dest in nums:\n                del nums[nums.index(src)+1:nums.index(dest)]\n            res.append(len(nums)-1)\n\n        return res",
    "submit_ts": "1722743445",
    "subm_id": "1343792083"
}