{
    "username": "BhupinderJ",
    "submission": "class Solution {\npublic:\n    int table[200000][100]; \n    void buildSparseTable(vector<int> arr, int n) { \n        for (int i = 0; i < n; i++) \n            table[i][0] = arr[i]; \n        for (int j = 1; j <= log2(n); j++) \n            for (int i = 0; i <= n - (1 << j); i++) \n                table[i][j] = (table[i][j - 1] & table[i + (1 << (j - 1))][j - 1]); \n    } \n    int query(int L, int R) { \n        int j = (int)log2(R - L + 1); \n        return (table[L][j] & table[R - (1 << j) + 1][j]); \n    } \n    int find_greater(int l, int r, int k){\n        int hi = r, lo = l;\n        while(hi - lo > 1){\n            int mid = ((hi + lo) >> 1);\n            if(query(l, mid) < k) hi = mid - 1;\n            else lo = mid;\n        }\n        if(query(l, hi) >= k) \n            return query(l, hi);\n        return query(l, lo);\n    }\n    int find_smaller(int l, int r, int k){\n        int hi = r, lo = l;\n        while(hi - lo > 1){\n            int mid = ((lo + hi) >> 1);\n            if(query(l, mid) > k) lo = mid + 1;\n            else hi = mid;\n        }\n        if(query(l, lo) <= k) \n            return query(l, lo);\n        return query(l, hi);\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        buildSparseTable(nums, n);\n        \n        int ans = 1e9;\n        for(int i=0 ; i<n ; i++){\n            int greater = abs(find_greater(i, n-1, k) - k);\n            int smaller = abs(k - find_smaller(i, n-1, k));\n            ans = min(ans, min(greater, smaller));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298710.0
}