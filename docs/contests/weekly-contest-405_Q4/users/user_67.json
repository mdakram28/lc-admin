{
    "username": "txingml",
    "submission": "typedef pair<int, int> pii;\nstruct Trie{\n    int cost = INT_MAX;\n    vector<Trie*> nxt;\n};\n\nvoid add(Trie* root, const string& word, int cost) {\n    Trie* cur = root;\n    for (char c : word) {\n        int i = c - 'a';\n        if (cur->nxt.empty()) cur->nxt.resize(26);\n        if (cur->nxt[i] == nullptr) cur->nxt[i] = new Trie();\n        cur = cur->nxt[i];\n    }\n    cur->cost = min(cur->cost, cost);\n}\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = words.size();\n        Trie* root = new Trie();\n        for (int i = 0; i < n; i++) {\n            add(root, words[i], costs[i]);\n        }\n        // cout << \"done\" << endl;\n        n = target.size();\n        vector<int> dp(n+1, INT_MAX);\n        dp[0] = 0;\n        priority_queue<pii, vector<pii>, greater<pii>> pq;\n        pq.emplace(0, 0);\n        while (!pq.empty()) {\n            auto[val, i] = pq.top(); pq.pop();\n            if (dp[i] < val) continue;\n            Trie* cur = root;\n            while (cur && i < n) {\n                int j = target[i] - 'a';\n                if (cur->nxt.empty() || cur->nxt[j] == nullptr) break;\n                if (cur->nxt[j]->cost < INT_MAX && dp[i+1] > val + cur->nxt[j]->cost) {\n                    dp[i+1] = val + cur->nxt[j]->cost;\n                    pq.emplace(dp[i+1], i+1);\n                }\n                i++;\n                cur = cur->nxt[j];\n            }\n        }\n        if (dp[n] == INT_MAX) dp[n] = -1;\n        return dp[n];\n        \n    }\n};",
    "submit_ts": "1720321175",
    "subm_id": "1312315627"
}