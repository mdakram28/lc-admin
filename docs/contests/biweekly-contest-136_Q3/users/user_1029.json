{
    "username": "theprincipleman",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        countone = 0\n        ans = 0\n        for i in range(n//2):\n            for j in range(m//2):\n                a = grid[i][j]\n                b = grid[i][m-j-1]\n                c = grid[n-i-1][j]\n                d = grid[n-i-1][m-j-1]\n                sm = a+b+c+d\n                if sm == 2:\n                    ans += 2\n                elif sm == 1 or sm == 3:\n                    ans += 1\n                else:\n                    ans += 0\n        onepair = 0\n        zeropair = 0\n        onediff = 0\n        if n%2:\n            for j in range(m//2):\n                if grid[(n//2)][j] != grid[(n//2)][m-j-1]:\n                    onediff += 1\n                    ans += 1\n                elif grid[n//2][j] == 1:\n                    onepair += 1\n                else:\n                    zeropair += 1\n        if m%2:\n            for i in range(n//2):\n                if grid[i][(m//2)] != grid[n-i-1][(m//2)]:\n                    onediff += 1\n                    ans += 1\n                elif grid[i][m//2] == 1:\n                    onepair += 1\n                else:\n                    zeropair += 1\n        mid = 0\n        if n%2 and m%2:\n            ans += grid[(n//2)][(m//2)]\n        onepair %= 2\n        if onepair:\n            if onediff == 0:\n                ans += 2\n        return ans",
    "submit_ts": "1722698913",
    "subm_id": "1343195779"
}