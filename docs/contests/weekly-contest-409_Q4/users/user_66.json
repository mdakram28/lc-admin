{
    "username": "cool-chandrasekharbkq",
    "submission": "\nclass Solution\n{\t\npublic:\n\ttemplate<typename T>struct Fenwick{int n,B;vector<T>a;\n\t\tvoid init(int n_){n=n_+1;for(B=1;B*2<=n;B<<=1){};a.assign(n+1,0);}\n\t\tvoid add(int x,const T&v){for(int i=x;i<=n;i+=i&-i)a[i]+=v;}\n\t\tT sum(int x){T ans{};for(int i=x;i;i-=i&-i)ans+=a[i];return ans;}\n\t\tT rangeSum(int l,int r){return sum(r)-sum(l-1);}\n\t\tint kth(int k){int res=0;for(int b=B;b;b>>=1)if(res+b<=n&&a[res+b]<k)k-=a[res+=b];return res+1;}};\n\tvector<int>c,d,l,r,siz,resr;int n;\n\tset<int>xl,xr;Fenwick<long long>A,B;\n\tvoid merge(int p)\n\t{\n        //cout<<\"mg:\"<<p<<'\\n';\n\t\tint L=p,R=(p+1)%n,LL=l[L],RR=r[R];xr.erase(L),xl.erase(-R);\n\t\tif(xr.empty()){A.add(n,-1);B.add(n,-n);}\n\t\telse\n\t\t{\n\t\t\tA.add(siz[L],-1);B.add(siz[L],-siz[L]);\n\t\t\tA.add(siz[R],-1);B.add(siz[R],-siz[R]);\n\t\t\tr[LL]=RR,l[RR]=LL;siz[LL]=siz[RR]=siz[L]+siz[R];\n\t\t\tA.add(siz[LL],1);B.add(siz[LL],siz[LL]);\n\t\t}\n        outp();\n\t}\n\tvoid era(int p)\n\t{\t\t\n        //cout<<\"era:\"<<p<<'\\n';\n\t\tint L=p,R=(p+1)%n;\n\t\tif(xr.empty())\n\t\t{\n\t\t\txr.insert(L),xl.insert(-R);\n            r[L]=r[R]=L,l[L]=l[R]=R;\n            siz[L]=siz[R]=n;A.add(n,1);B.add(n,n);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint LL,RR;\n\t\t\t{\n\t\t\t\tauto ite=xl.lower_bound(-L);\n\t\t\t\tif(ite==xl.end())LL=-*xl.lower_bound(-(int)1e6);\n\t\t\t\telse LL=-*ite;\n\t\t\t}\n\t\t\t{\n\t\t\t\tauto ite=xr.lower_bound(R);\n\t\t\t\tif(ite==xr.end())RR=*xr.lower_bound(0);\n\t\t\t\telse RR=*ite;\n\t\t\t}\n            //cout<<LL<<'/'<<L<<'/'<<R<<'/'<<RR<<'\\n';\n            A.add(siz[LL],-1);B.add(siz[LL],-siz[LL]);\n\n\t\t\t\n\t\t\tr[LL]=L,l[L]=LL,r[L]=L;l[RR]=R,r[R]=RR,l[R]=R;\n\t\t\tsiz[L]=siz[LL]=(L-LL+n)%n+1,siz[R]=siz[RR]=(RR-R+n)%n+1;\n            xr.insert(L),xl.insert(-R);\n\t\t\tA.add(siz[L],1);B.add(siz[L],siz[L]);\n\t\t\tA.add(siz[R],1);B.add(siz[R],siz[R]);\t\t\t\n\t\t}\n        outp();\n\t}\n\tint qry(int siz)\n\t{\n\t\tif(siz>n)return 0;\n\t\tif(xl.empty())return n;\t\t\n\t\treturn B.rangeSum(siz,n)-A.rangeSum(siz,n)*(siz-1);\n\t}\n    void outp()\n    {\n        return;\n        cout<<\"---\\n\";\n        cout<<\"c:\";for(int i=0;i<n;i++)std::cout<<c[i]<<\".\\n\"[i==n-1];\n        cout<<\"d:\";for(int i=0;i<n;i++)std::cout<<d[i]<<\".\\n\"[i==n-1];\n        for(int i=0;i<n;i++)std::cout<<l[i]<<\".\\n\"[i==n-1];\n        for(int i=0;i<n;i++)std::cout<<r[i]<<\".\\n\"[i==n-1];\n        for(int i=0;i<n;i++)std::cout<<siz[i]<<\".\\n\"[i==n-1];\n        for(int i=1;i<=n;i++)std::cout<<A.rangeSum(i,i)<<\"_\\n\"[i==n];\n        cout<<\"xl\";for(auto&k:xl)cout<<k<<\"^\";cout<<'\\n';\n        cout<<\"xr\";for(auto&k:xr)cout<<k<<\"^\";cout<<'\\n';\n    }\n    vector<int>numberOfAlternatingGroups(vector<int>& colors,vector<vector<int>>& queries)\n    {\n\t\tn=colors.size();l.resize(n,1);c=d=r=siz=l;c=colors;A.init(n);B.init(n);\n        ;\n\t\tfor(int i=0;i<n;i++)A.add(1,1),B.add(1,n),l[i]=r[i]=i,xl.insert(-i),xr.insert(i),d[i]=c[i]^c[(i+1)%n];\n        \n\t\tfor(int i=0;i<n;i++)if(d[i])merge(i);//,outp();\n        //outp();\n        //for(int i=0;i<n;i++)std::cout<<l[i]<<\".\\n\"[i==n-1];\n        //for(int i=0;i<n;i++)std::cout<<r[i]<<\".\\n\"[i==n-1];\n        //for(int i=0;i<n;i++)std::cout<<siz[i]<<\".\\n\"[i==n-1];\n        //exit(0);\n\t\tfor(auto&k:queries)\n\t\t{\n            \n            //std::cout<<k[0]<<\"*********\\n\";\n            //outp();\n            \n\t\t\tif(k[0]==1)\n\t\t\t{\n\t\t\t\tint siz=k[1];resr.push_back(qry(siz));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint p=k[1],col=k[2];\n\t\t\t\tif(c[p]==col)continue;c[p]^=1;\n\t\t\t\td[p]^=1;\n               // std::cout<<p<<\"->\"<<d[p]<<'\\n';\n                d[p]?merge(p):era(p);\n                //std::cout<<p<<\"->\"<<d[p]<<'\\n';\n\t\t\t\tp=(p+n-1)%n;d[p]^=1;\n                //std::cout<<p<<\"->\"<<d[p]<<'\\n';\n\t\t\t\td[p]?merge(p):era(p);\n\t\t\t}\n\t\t}\n       // for(auto&k:resr)cout<<k<<\"_\";cout<<'\\n';\n\t\treturn resr;\n    }\n};",
    "submit_ts": "1722742435",
    "subm_id": "552344613"
}