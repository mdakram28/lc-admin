{
    "username": "z1bbo",
    "submission": "class Solution {\npublic:\n    int BASE = 50005;\n    \n    void update(vector<int>& seg, int i, int val) {\n        i += BASE;\n        seg[i] = val;\n        while (i > 1) {\n            seg[i>>1] = max(seg[i], seg[i^1]);\n            i >>= 1;\n        }\n    }\n    \n    int query(vector<int>& seg, int r) {\n        int ret = 0;\n        // not including\n        r++;\n        int l = BASE;\n        r += BASE;\n        while (l < r) {\n            if (l&1) ret = max(ret, seg[l++]);\n            if (r&1) ret = max(ret, seg[--r]);\n            l >>= 1;\n            r >>= 1;\n        }\n        return ret;\n    }\n    \n    vector<bool> getResults(vector<vector<int>>& queries) {\n        map<int, int> ws;\n        ws[0] = (int)1e6;\n        \n        vector<int> seg(4 * 50000 + 100);\n        update(seg, 0, (int)1e6);\n        \n        vector<bool> ret;\n        for (auto q: queries) {\n            if (q[0] == 1) {\n                // insert block at q[1]\n                int i = q[1];\n                auto prev = ws.lower_bound(i);\n                prev--;\n                // new width = key to i\n                auto prkey = prev->first;\n                auto prval = prev->second;\n                auto diff = i - prkey;\n                update(seg, prkey, diff);\n                update(seg, i, prval - diff);\n                ws.erase(prev);\n                ws[prkey] = diff;\n                ws[i] = prval - diff;\n            } else {\n                int upto = q[1], sz = q[2];\n                if (query(seg, upto-sz) >= sz) {\n                    ret.push_back(true);\n                } else {\n                    ret.push_back(false);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1716649989.0
}