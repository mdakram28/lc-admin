{
    "username": "rejur",
    "submission": "class Solution {\npublic:\n    static const int maxn = 1e5 + 5;\n    struct node {\n        int l, r;\n        int cnt;\n    }t[4 * maxn];\n    int sub;\n    void build (int u, int l, int r) {\n        t[u].l = l;\n        t[u].r = r;\n        if (l == r) {\n            t[u].cnt = 1;\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build (u * 2, l, mid);\n        build (u * 2 + 1, mid + 1, r);\n        t[u].cnt = t[u * 2].cnt + t[u * 2 + 1].cnt;\n    }\n\n    void reg_set_0 (int u, int l, int r) {\n        if (l <= t[u].l && t[u].r <= r) {\n            sub += t[u].cnt;\n            t[u].cnt = 0;\n            return;\n        }\n        if (t[u].cnt == 0) return;\n\n        int mid = (t[u].l + t[u].r) >> 1;\n        if (l <= mid) reg_set_0 (u * 2, l, r);\n        if (mid < r) reg_set_0 (u * 2 + 1, l, r);\n        t[u].cnt = t[u * 2].cnt + t[u * 2 + 1].cnt;\n    }\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> dp(n);\n        vector<int> dp2(n);\n        for (int i = 0; i < n; i++) {\n            dp[i] = n - i - 1;\n            dp2[i] = i;\n        }\n        vector<int> res;\n        build(1, 0, n - 1);\n        for (int i = 0; i < queries.size(); i++) {\n            int ui = queries[i][0];\n            int vi = queries[i][1];\n            cout << ui << \" \" << vi << endl;\n            sub = 0;\n            reg_set_0 (1, ui + 1, vi - 1);\n            /*\n            for (int i = ui + 1; i < vi; i++) {\n                if (vis[i] == 1) {\n                    vis[i] = 0;\n                    cnt++;\n                }\n            }\n            */\n            dp[0] -= sub;\n\n            res.push_back (dp[0]);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722742951",
    "subm_id": "552347888"
}