{
    "username": "8by8",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        pos = []\n        neg = []\n        for i,(a,b) in enumerate(points):\n            pos.append((a+b, i))\n            neg.append((a-b, i))\n        pos.sort()\n        neg.sort()\n        print(pos)\n        print(neg)\n        res = max(pos[-1][0]-pos[0][0], neg[-1][0]-neg[0][0])\n        if pos[-1][1] == neg[-1][1]:\n            res = min(res, max(pos[-2][0]-pos[0][0], neg[-2][0]-neg[0][0]))\n        elif pos[-1][1] == neg[0][1]:\n            res = min(res, max(pos[-2][0]-pos[0][0], neg[-1][0]-neg[1][0]))\n        else:\n            res = min(res, max(pos[-2][0]-pos[0][0], neg[-1][0]-neg[0][0]))\n        if pos[0][1] == neg[-1][1]:\n            res = min(res, max(pos[-1][0]-pos[1][0], neg[-2][0]-neg[0][0]))\n        elif pos[0][1] == neg[0][1]:\n            res = min(res, max(pos[-1][0]-pos[1][0], neg[-1][0]-neg[1][0]))\n        else:\n            res = min(res, max(pos[-1][0]-pos[1][0], neg[-1][0]-neg[0][0]))\n        res = min(res, max(pos[-1][0]-pos[0][0], neg[-2][0]-neg[0][0]))\n        res = min(res, max(pos[-1][0]-pos[0][0], neg[-1][0]-neg[1][0]))\n        return res"
}