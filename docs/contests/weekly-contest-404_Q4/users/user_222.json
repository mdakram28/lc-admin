{
    "username": "nishant_bansal_2003",
    "submission": "#define SZ 200005\nclass Solution\n{\n    pair<int, int> bfs(int src, vector<vector<int>> &adj)\n    {\n        int d = 0;\n        queue<pair<int, int>> q;\n        q.push({src, 0});\n        vector<bool> vis(SZ, false);\n        pair<int, int> u;\n\n        while (!q.empty())\n        {\n            u = q.front();\n            vis[u.first] = true;\n            q.pop();\n            for (auto v : adj[u.first])\n                if (!vis[v])\n                    q.push({v, u.second + 1});\n        }\n        return u;\n    }\n    int getDia(int n, vector<vector<int>> &adj)\n    {\n        pair<int, int> end1 = bfs(0, adj);\n        pair<int, int> end2 = bfs(end1.first, adj);\n        return end2.second + 1;\n    }\n\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>> &edges1, vector<vector<int>> &edges2)\n    {\n        int n = edges1.size() + 1;\n        int m = edges2.size() + 1;\n        vector<vector<int>> adj1(n), adj2(m);\n        for (auto edg : edges1)\n        {\n            int u = edg[0], v = edg[1];\n            adj1[u].push_back(v);\n            adj1[v].push_back(u);\n        }\n        for (auto edg : edges2)\n        {\n            int u = edg[0], v = edg[1];\n            adj2[u].push_back(v);\n            adj2[v].push_back(u);\n        }\n\n        int d1 = getDia(n, adj1);\n        int d2 = getDia(m, adj2);\n        int res = (d1 / 2) + (d2 / 2) + 2;\n        cout << d1 << \" \" << d2 << endl;\n        return max({res, d1, d2}) - 1;\n    }\n};",
    "submit_ts": 1719718188.0
}