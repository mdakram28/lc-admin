{
    "username": "utkarshkolhe",
    "submission": "import bisect\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        arr=[]\n        for i in range(n):\n            arr.append(i)\n        ans=[]\n        for que in queries:\n            s=que[0]\n            e=que[1]\n            # print(que)\n            s1 = bisect.bisect_right(arr,s)\n            s2= bisect.bisect_left(arr,e)\n            for l in range(s1,s2):\n                arr.pop(s1)\n            # arr=arr[:s1]+arr[s2:]\n            ans.append(len(arr)-1)\n        return ans\n        # map1={}\n        # def get(i,j):\n        #     if (i,j) not in map1:\n        #         return j-i\n        #     return map1[(i,j)]\n        \n        # dist = get(0,n-1)\n\n        # ans=[]\n        # for que in queries:\n        #     s=que[0]\n        #     e=que[1]\n\n        #     ans.append(len(arr)-1)\n        # return ans",
    "submit_ts": "1722741321",
    "subm_id": "1343742032"
}