{
    "username": "Roshan1610",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        map<int,int>mp1,mp2;\n        for(auto it:points){\n            int sum=it[0]+it[1];\n            int diff=it[0]-it[1];\n            mp1[sum]++;\n            mp2[diff]++;\n        }\n        int ans=INT_MAX;\n        for(auto it:points){\n            int sum=it[0]+it[1];\n            int diff=it[0]-it[1];\n            if(--mp1[sum]==0)mp1.erase(sum);\n            if(--mp2[diff]==0)mp2.erase(diff);\n            \n            \n            \n            int a=(mp1.rbegin())->first;\n            int b=(mp1.begin())->first;\n            int c=(mp2.rbegin())->first;\n            int d=(mp2.begin())->first;\n            int temp=max(a-b,c-d);\n            ans=min(ans,temp);\n            \n            mp1[sum]++;\n            mp2[diff]++;\n        }\n        return ans;\n    }\n};\n/*\n(1,2), (2,10),(3,13),(5,7) , (6,9), (10,1)\n(10,1),(1,2), (5,7), (6,9), (2,10), (3,13)\n*/"
}