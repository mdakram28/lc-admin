{
    "username": "a0920732333",
    "submission": "class Solution \n{\npublic:\n    int minimumDifference(vector<int>& nums, int k) \n    {\n        int n = nums.size(), l = 0, ptr = 0, val = 0, ans = INT_MAX;\n        vector<int> bits(32);\n        for(int r = 0; r < n; r++)\n        {\n            ptr = nums[r];\n            val = 0;\n            for(int i = 0; i < 32; i++)\n            {\n                if(ptr & 1)\n                {\n                    bits[i]++;\n                }\n                ptr >>= 1;\n                if(bits[i] == r - l + 1)\n                {\n                    val += (1 << i);\n                }\n            }\n            ans = min(ans, abs(val - k));\n            while(val < k && l < r)\n            {\n                ptr = nums[l];\n                l++;\n                val = 0;\n                for(int i = 0; i < 32; i++)\n                {\n                    if(ptr & 1)\n                    {\n                        bits[i]--;\n                    }\n                    ptr >>= 1;\n                    if(bits[i] == r - l + 1)\n                    {\n                        val += (1 << i);\n                    }\n                }\n                // cout << l << ' ' << r << ' ' << val << '\\n';\n                ans = min(ans, abs(val - k));\n                // l++;\n            }\n        }\n        // cout << '\\n';\n        return ans;\n    }\n};",
    "submit_ts": "1717297862",
    "subm_id": "1274758570"
}