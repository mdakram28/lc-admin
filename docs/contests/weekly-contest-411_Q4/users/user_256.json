{
    "username": "Nrusimha Teja",
    "submission": "using ll=long long;\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.length();\n        vector<ll> v(n, n);\n        int head=-1, tail=0;\n        int cnt0=0, cnt1=0;\n        while(tail<n) {\n            while(head+1<n && (s[head+1]=='0'? (cnt0+1<=k || cnt1<=k) : (cnt0<=k || cnt1+1<=k))) {\n                head++;\n                if(s[head]=='0') cnt0++;\n                else cnt1++;\n            }\n            v[tail]=head;\n            if(head>=tail) {\n                if(s[tail]=='0') cnt0--;\n                else cnt1--;\n                tail++;\n            }else {\n                tail++;\n                head=tail-1;\n            }\n        }\n        \n        vector<ll> pre(n, 0);\n        pre[0]=v[0];\n        for(int i=1;i<n;i++) {\n            pre[i]=v[i]+pre[i-1];\n        }\n        \n        vector<ll> ans;\n        for(int i=0;i<queries.size();i++) {\n            ll val=0;\n            ll len=queries[i][1]-queries[i][0]+1;\n            ll ind=lower_bound(v.begin(), v.end(), queries[i][1])-v.begin();\n            if(ind<=queries[i][0]) {\n                val=(len*(len+1))/2;\n            }else {\n                ind=min(ind-1, (ll)queries[i][1]);\n                val=queries[i][1]*(ind-queries[i][0]+1)-(pre[ind]-(queries[i][0]-1>=0 ? pre[queries[i][0]-1] : 0));\n                val=(len*(len+1))/2-val;\n            }\n            ans.push_back(val);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952373",
    "subm_id": "1359794715"
}