{
    "username": "hurryhao",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        int n=nums.size();\n        for (int i=0;i<n;++i) {\n            target[i]-=nums[i];\n        }\n        // target.push_back(0);\n        for (int i=0;i<n;) {\n            if (target[i]==0) {\n                ++i;\n                continue;\n            }\n            bool p = target[i]>0;\n            vector<int> v;\n            int j=i;\n            while (j<n&&(target[j]>0&&p || target[j]<0&&!p)) {\n                v.push_back(abs(target[j]));\n                ++j;\n            }\n            res += get(v);\n            i=j;\n        }\n        return res;\n    }\n    long long get(vector<int> &v) {\n        int n=v.size();\n        if (n==1) return v[0];\n        if (n==2) return max(v[0],v[1]);\n        v.push_back(0);\n        int high=0,low=0;\n        long long res = 0;\n        for (int i=0;i<n;++i) {\n            if (v[i]==v[i+1]) continue;\n            if (v[i]<v[i+1]) {\n                low = min(low, v[i]);\n                high = low;\n            } else { // v[i] > v[i+1]\n                if (high < v[i]) {\n                    res += v[i]-low;\n                    high = v[i];\n                    low = v[i];\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721533581",
    "subm_id": "1328012179"
}