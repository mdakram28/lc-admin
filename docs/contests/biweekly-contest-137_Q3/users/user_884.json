{
    "username": "WYACAC",
    "submission": "class Solution {\n    int m, n;\n    boolean[] isVisited;\n    long ans = Long.MIN_VALUE;\n    long sum = 0L;\n    int[][] topThreeNums;\n    public long maximumValueSum(int[][] board) {\n        m = board.length;\n        n = board[0].length;\n        // \u8868\u793a\u8be5\u5217\u662f\u5426\u5b58\u5728\u8f66\n        // \u6211\u4eec\u7edf\u8ba1\u6bcf\u4e00\u884c\u7684\u524d\u4e09\u5927\u7684\u6570\n        topThreeNums = new int[m][3];\n        for (int i = 0; i < m; i++) {\n            final int row = i;\n            PriorityQueue<Integer> pq = new PriorityQueue<>(3, (o1, o2) -> board[row][o2] - board[row][o1]);\n            for (int j = 0; j < n; j++) {\n                pq.offer(j);\n            }\n            for (int j = 0; j < 3; j++) {\n                topThreeNums[i][j] = pq.poll();\n            }\n        }\n        isVisited = new boolean[n];\n        solve(board, 0, 0);\n        return ans;\n    }\n\n    /**\n     *\n     * @param board \u68cb\u76d8\n     * @param cur \u5f53\u524d\u7684\u884c\u53f7\n     * @param k  \u5f53\u524d\u7684\u8f66\u7684\u6570\u91cf\n     */\n    private void solve(int[][] board, int cur, int k) {\n        if (k == 3) {\n            ans = Math.max(ans, sum);\n            return;\n        }\n        for (int i = cur; i < m; i++) {\n            // \u9009\u62e9\u524d\u4e09\u5927\u7684\n            for (int j = 0; j < 3; j++) {\n                int col = topThreeNums[i][j];\n                if (isVisited[col]) {\n                    continue;\n                }\n                isVisited[col] = true;\n                sum += board[i][col];\n                solve(board, i + 1, k + 1);\n                sum -= board[i][col];\n                isVisited[col] = false;\n            }\n        }\n    }\n}",
    "submit_ts": "1723907903",
    "subm_id": "556328117"
}