{
    "username": "anuragk240",
    "submission": "#include<algorithm>\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int sum[points.size()], diff[points.size()];\n        for(int i = 0; i < points.size(); ++i){\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n        \n        sort(sum, sum + points.size());\n        sort(diff, diff + points.size());\n        int result = max(sum[points.size()-1] - sum[0], diff[points.size()-1] - diff[0]);\n        int s1, s2, d1, d2, temp, s, d;\n        for(int i = 0 ; i < points.size() ; ++i){\n            s = points[i][0] + points[i][1];\n            d = points[i][0] - points[i][1];\n            s1 = sum[0];\n            s2 = sum[points.size()-1];\n            d1 = diff[0];\n            d2 = diff[points.size()-1];\n            if(s == sum[0]){\n                s1 = sum[1];\n            }\n            if(s == sum[points.size()-1]){\n                s2 = sum[points.size()-2];\n            }\n            if(d == diff[0]){\n                d1 = diff[1];\n            }\n            if(d == diff[points.size()-1]){\n                d2 = diff[points.size()-2];\n            }\n            temp = max(s2-s1, d2-d1);\n            result = min(temp, result);\n            // cout<<result<<\",\"<<temp<<endl;\n        }\n        return result;\n    }\n};"
}