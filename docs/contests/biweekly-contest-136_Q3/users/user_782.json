{
    "username": "greg100",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int cnt0 = 0;\n        int cnt_1_pair = 0;\n        if (m % 2 == 1) {\n            int i = 0, j = n - 1;\n            while (i < j) {\n                if (grid[m / 2][i] != grid[m / 2][j]) {\n                    cnt0++;\n                } else {\n                    if (grid[m / 2][i] == 1) {\n                        cnt_1_pair++;\n                    }\n                }\n                i++;\n                j--;\n            }\n        }\n        if (n % 2 == 1) {\n            int a = 0, b =  m - 1;\n            while (a < b) {\n                if (grid[a][n / 2] != grid[b][n / 2]) {\n                    cnt0++;\n                } else {\n                    if (grid[a][n / 2] == 1) {\n                        cnt_1_pair++;\n                    }\n                }\n                a++;\n                b--;\n            }\n        }\n        unordered_map<int, int> mp;\n        for (int i = 0; i <= m / 2 - 1; i++) {\n            for (int j = 0; j <= n / 2 - 1; j++) {\n                int cnt1 = 0;\n                int x1 = grid[i][j];\n                int x2 = grid[i][n - 1 - j];\n                int x3 = grid[m - 1 - i][j];\n                int x4 = grid[m - 1 - i][n - 1 - j];\n                if (x1 == 1) {\n                    cnt1++;\n                }\n                if (x2 == 1) {\n                    cnt1++;\n                }\n                if (x3 == 1) {\n                    cnt1++;\n                }\n                if (x4 == 1) {\n                    cnt1++;\n                }\n                mp[cnt1]++;\n            }\n        }\n        int res = cnt0;\n        if (m % 2 == 1 && n % 2 == 1) {\n            if (grid[m / 2][n / 2] == 1) {\n                res++;\n            }\n        }\n        if (cnt_1_pair % 2 == 1) {\n            if (cnt0 == 0) {\n                res += 2;\n            }\n        }\n//cout << res;\n        for (auto [x, cnt] : mp) {\n//cout << x << \" \" << cnt << endl;\n            if (x == 2) {\n                res += cnt * 2;\n            }\n            if (x == 1 || x == 3) {\n                res += cnt;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722697795",
    "subm_id": "1343159195"
}