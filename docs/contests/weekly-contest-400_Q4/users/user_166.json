{
    "username": "zokumyoin",
    "submission": "class Solution {\n\n    private static class Node {\n        int lo, hi;\n        int v;\n        Node left, right;\n\n        Node(int l, int r, int v) {\n            lo = l;\n            hi = r;\n            this.v = v;\n        }\n\n        static Node create(int[] arr, int l, int r) {\n            if (l == r) {\n                return new Node(l, r, arr[l]);\n            }\n            int mid = l + (r - l) / 2;\n            Node left = create(arr, l, mid);\n            Node right = create(arr, mid + 1, r);\n            Node newNode = new Node(l, r, left.v & right.v);\n            newNode.left = left;\n            newNode.right = right;\n            return newNode;\n        }\n\n        int findAnd(int l, int r) {\n//            System.out.printf(\">> l=%d r=%d lo=%d hi=%d\\n\",l,r, lo, hi);\n            if (l == lo && r == hi) {\n                return v;\n            }\n            int mid = lo + (hi - lo) / 2;\n            if (l > mid) {\n                return right.findAnd(l, r);\n            }\n            if (r <= mid) {\n                return left.findAnd(l, r);\n            }\n            return left.findAnd(l, mid) & right.findAnd(mid + 1, r);\n        }\n    }\n\n    public static void main(String[] a) {\n        Solution sol = new Solution();\n        int[] arr = {1,2,4,5};\n        int k = 3;\n        System.out.println(sol.minimumDifference(arr, k));\n    }\n\n    public int minimumDifference(int[] arr, int k) {\n        int allAnd = -1;\n\n        Node root = Node.create(arr, 0, arr.length - 1);\n        int minDiff = Integer.MAX_VALUE;\n\n        for (int i = arr.length - 1; i >= 0; i--) {\n            allAnd &= arr[i];\n            if (allAnd >= k) {\n                int diff = Math.abs(allAnd - k);\n                minDiff = Math.min(minDiff, diff);\n            } else {\n                int idx = findFirstAndLt(arr, i, root, k);\n                minDiff = Math.min(minDiff, Math.abs(root.findAnd(i, idx) - k));\n                if (idx > i) {\n                    minDiff = Math.min(minDiff, Math.abs(root.findAnd(i, idx - 1) - k));\n                }\n            }\n        }\n        return minDiff;\n    }\n\n    private int findFirstAndLt(int[] arr, int i, Node root, int k) {\n        int lo = i, hi = arr.length - 1;\n        while (lo < hi) {\n            int mid = lo + (hi - lo ) / 2;\n            if (root.findAnd(i, mid) < k) {\n                hi = mid;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return hi;\n\n    }\n}",
    "submit_ts": 1717297928.0
}