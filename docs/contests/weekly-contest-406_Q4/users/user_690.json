{
    "username": "birds3345",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        \n        long long res = 0;\n        \n        int h = 1;\n        int v = 1;\n\n        int i = horizontalCut.size() - 1;\n        int j = verticalCut.size() - 1;\n        while (i >= 0 && j >= 0)\n        {\n            if (horizontalCut[i] > verticalCut[j])\n            {\n                res += 1LL * horizontalCut[i] * v;\n                h++;\n                i--;\n            }\n            else\n            {\n                res += 1LL * verticalCut[j] * h;\n                v++;\n                j--;\n            }\n        }\n        \n        while (i >= 0)\n        {\n            res += 1LL * horizontalCut[i] * v;\n            i--;\n        }\n\n        while (j >= 0)\n        {\n            res += 1LL * verticalCut[j] * h;\n            j--;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720925763",
    "subm_id": "1320265408"
}