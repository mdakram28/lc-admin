{
    "username": "BetoSCL",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {        \n        multiset<int> a;\n        multiset<int> b; \n        \n        int n = points.size();\n        \n        for(int i = 0;i<n;i++){\n            int x = points[i][0];\n            int y = points[i][1];\n            \n            a.insert(x+y);\n            b.insert(x-y);\n            \n        }\n        int mn = *a.begin();\n        int mx = *a.rbegin();\n        \n        int ans = mx-mn;\n        mn = *b.begin();\n        mx = *b.rbegin();\n        ans = max(ans,mx-mn);\n        \n        for(int i = 0;i<n;i++){\n            int x = points[i][0];\n            int y = points[i][1];\n            \n            a.erase(a.find(x+y));\n            b.erase(b.find(x-y));\n            \n            mn = *a.begin();\n            mx = *a.rbegin();\n\n            int res = mx-mn;\n            \n            mn = *b.begin();\n            mx = *b.rbegin();\n            \n            res = max(res,mx-mn);\n            \n            ans = min(ans,res); \n            \n            a.insert(x+y);\n            b.insert(x-y);\n        }\n        \n        return ans;\n    }\n};"
}