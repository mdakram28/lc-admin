{
    "username": "hypothecate",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    vector<ll>bit;\n    ll getsum(ll x){\n        ll sum=0;\n        while(x>0){\n           sum+=bit[x];\n            x=x-(x&-x);\n        }\n        return sum;\n    }\n    void update(ll i,ll x){\n        while(i<bit.size()){\n            bit[i]+=x;\n            i+=(i&-i);\n        }\n     }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& q) {\n        vector<ll>v={INT_MAX};\n        for(auto &c: nums) v.push_back(c);\n        v.push_back(INT_MAX);\n        int n=v.size();\n        bit.resize(n+1,0);\n        for(int i=1;i<n-1;i++){\n            if(v[i]>v[i-1] && v[i]>v[i+1]) {\n                update(i,1);\n            }\n        }\n        vector<int>res;\n        for(auto &c: q) {\n            ll l=c[1],r=c[2];\n            // cout<<c[0]<<\" \";\n            if(c[0]==1) {\n                l++,r++;\n                if(l==r) res.push_back(0);\n                else res.push_back(getsum(r-1)-getsum(l));\n            } else {\n                l++;\n                find(v,l,-1);\n                v[l]=r;\n                // cout<<\"err\";\n                find(v,l,1);\n            }\n        }\n        return res;\n    }\n    void find(vector<ll>&v, ll l, ll p) {\n        if(v[l]>v[l-1] && v[l]>v[l+1]) {\n            update(l,p);\n        }\n        if((l-2)>=0 && v[l-1]>v[l-2] && v[l-1]>v[l]) {\n            update(l-1,p);\n        }\n        if((l+2)<v.size() && v[l+1]>v[l] && v[l+1]>v[l+2]) {\n            update(l+1,p);\n        }\n    }\n};",
    "submit_ts": 1718509089.0
}