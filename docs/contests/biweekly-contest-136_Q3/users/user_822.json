{
    "username": "leoyu0813",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size (), n = grid[0].size ();\n        int ans = 0;\n        auto helper4 = [&](int x, int y)\n        {\n            int cnt = grid [x][y] + grid[m-x-1][y] + grid[x][n-y-1] + grid[m-x-1][n-y-1];\n            ans += min (cnt, 4 - cnt);\n        };\n        vector <int> rows (4, 0), cols (4, 0);\n        rows [2] = 1e6;\n        cols [2] = 1e6;\n        auto helperRow= [&]()\n        {\n            int i = m / 2;\n            for (int j = 0; j < n / 2; ++j)\n            {\n                vector <int> temp (4, 0);\n                int cnt = grid [i][j] + grid[i][n-j-1];\n                temp [0] = min (rows [0] + cnt, rows[2] + 2 - cnt);\n                temp [2] = min (rows [0] + 2 - cnt, rows[2] + cnt);\n                swap (rows, temp);\n            }\n        };\n\n        auto helperCol= [&]()\n        {\n            int j = n / 2;\n            for (int i = 0; i < m / 2; ++i)\n            {\n                vector <int> temp (4, 0);\n                int cnt = grid [i][j] + grid[m-i-1][j];\n                temp [0] = min (cols [0] + cnt, cols[2] + 2 - cnt);\n                temp [2] = min (cols [0] + 2 - cnt, cols[2] + cnt);\n                swap (cols, temp);\n            }\n        };\n        for (int i = 0; i < m / 2; ++i)\n            for (int j = 0; j < n / 2; ++j)\n                helper4 (i, j);\n        if (m % 2)\n            helperRow ();\n        \n        if (n % 2)\n            helperCol ();\n\n        if (m % 2 && n % 2){\n            ans+= grid [m/2][n/2];\n            ans += min ( cols [0] + rows [0], cols [2] + rows [2]);\n        }\n        else if (m % 2){\n            ans += rows [0];\n        }\n        else if (n % 2){\n            ans += cols [0];\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722698481",
    "subm_id": "1343182010"
}