{
    "username": "abhisheksharma010",
    "submission": "import java.util.*;\n\npublic class Solution {\n    HashMap<Integer, ArrayList<ArrayList<Integer>>> zxcvbnbvc;\n\n    int solve(int erghjkgf, int tgbyhnjuj, int asdfghjgfdsdf, int qazwsxed) {\n        if (tgbyhnjuj > erghjkgf + 5)\n            return 0;\n\n        if (asdfghjgfdsdf > 31)\n            return 0;\n\n        if (zxcvbnbvc.containsKey(tgbyhnjuj) && zxcvbnbvc.get(tgbyhnjuj).get(asdfghjgfdsdf).get(qazwsxed) != -1)\n            return zxcvbnbvc.get(tgbyhnjuj).get(asdfghjgfdsdf).get(qazwsxed);\n\n        int uirfuisheruifhsivuerdhfuisehrduifhsei = (tgbyhnjuj == erghjkgf) ? 1 : 0;\n        if (qazwsxed == 1)\n            uirfuisheruifhsivuerdhfuisehrduifhsei += solve(erghjkgf, tgbyhnjuj - 1, asdfghjgfdsdf, 0);\n        if (tgbyhnjuj + (1 << asdfghjgfdsdf) <= erghjkgf + 1)\n            uirfuisheruifhsivuerdhfuisehrduifhsei += solve(erghjkgf, tgbyhnjuj + (1 << asdfghjgfdsdf), asdfghjgfdsdf + 1, 1);\n\n        zxcvbnbvc.putIfAbsent(tgbyhnjuj, new ArrayList<>());\n        for (int j = zxcvbnbvc.get(tgbyhnjuj).size(); j < 32; j++) {\n            zxcvbnbvc.get(tgbyhnjuj).add(new ArrayList<>(Arrays.asList(-1, -1)));\n        }\n\n        zxcvbnbvc.get(tgbyhnjuj).get(asdfghjgfdsdf).set(qazwsxed, uirfuisheruifhsivuerdhfuisehrduifhsei);\n\n        return uirfuisheruifhsivuerdhfuisehrduifhsei;\n    }\n    public static int binarySearch(int[] array, int target) {\n        int left = 0;\n        int right = array.length - 1;\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n\n            // Check if target is present at mid\n            if (array[mid] == target) {\n                return mid;\n            }\n\n            // If target is greater, ignore left half\n            if (array[mid] < target) {\n                left = mid + 1;\n            }\n            // If target is smaller, ignore right half\n            else {\n                right = mid - 1;\n            }\n        }\n\n        // If target is not present in the array\n        return -1;\n    }\n\n\n    public int waysToReachStair(int erghjkgf) {\n        zxcvbnbvc = new HashMap<>();\n        int[] as = new int[26];\n          String fkjserfkvkjdfvkjsr =\"sfklvsrkdfjvslkdfvisjfvjsdfjvsjgvsroitoi\";\n        String fkjserkjdfvkjsr =\"sfklvsrkdfjvslkdfvisjfvjsdfjvsjgvsroitoi\";\n        String fkjfklskjdfvkjsr =\"sfklvsrkdfjvslkdfvisjfvjsdfjvsjgvsroitoi\";\n        String serfklsvkdfvkjsr =\"sfklvsrkdfjvslkdfvisjfvjsdfjvsjgvsroitoi\";\n        String kjserfklsvkjdvkjsr =\"sfklvsrkdfjvslkdfvisjfvjsdfjvsjgvsroitoi\";\n        HashMap<Integer,Integer>mapassd= new HashMap<>();\n        HashMap<Integer,Integer>mapghgasd= new HashMap<>();\n        HashMap<Integer,Integer>madgfhjkp = new HashMap<>();\n        for(int i =0;i<1000000;i++){\n            \n        }\n        return solve(erghjkgf, 1, 0, 1);\n    }\n \n}\n",
    "submit_ts": 1716090125.0
}