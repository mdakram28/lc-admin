{
    "username": "jiu-ren-36",
    "submission": "class Solution {\npublic:\n    using pi = pair<int, int>;\n    int minFlips(vector<vector<int>>& grid) {\n\n        int n = grid.size(), m = grid[0].size(),z0 = 0, z1 = 0, z3 = 0;\n        int res = 0, cnt1 = 0;\n        for(int i = 0; i < n / 2 + n % 2; i++) {\n            for(int j = 0; j < m / 2 + m % 2; j ++) {\n                set<pi> st;\n                st.insert({i, j});\n                st.insert({i, m-j-1});\n                st.insert({n-i-1, j});\n                st.insert({n-i-1, m-j-1});\n                vector<int> cnt(2, 0);\n                if(st.size() == 1) {\n                    for(auto [x, y]: st){\n                        if(grid[x][y] == 1) res++;\n                    }\n                }\n                else if(st.size() == 2) {\n                    for(auto [x, y]: st){\n                        cnt[grid[x][y]]++;\n                    }\n                    if(cnt[0] == 1) {\n                        res++;\n                        z3++;\n                    }\n                    else if(cnt[0] == 2) z0++;\n                    else if(cnt[1] == 2) z1++;\n                }\n                else {\n                    for(auto [x, y]: st){\n                        cnt[grid[x][y]]++;\n                    }\n                    res += min(cnt[0], cnt[1]);\n                }\n            }\n        }\n        if(z1 % 2 == 0) {\n            return res;\n        }\n        else {\n            if(z3) return res;\n            else return res + 2;\n        }\n    }\n};",
    "submit_ts": "1722697463",
    "subm_id": "552266253"
}