{
    "username": "zeningc",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n ;i++)\n            diff[i] = target[i] - nums[i];\n        long ans = 0;\n        int i = 0;\n        while (i < n)   {\n            if (diff[i] == 0)   {\n                i++;\n                continue;\n            }\n            if (diff[i] > 0)    {\n                int j = i;\n                while (j < n && diff[j] > 0)\n                    j++;\n                ans += diff[i];\n                for (int k = i + 1; k < j; k++)\n                    ans += Math.max(0, diff[k] - diff[k - 1]);\n                i = j;\n            }\n            else    {\n                int j = i;\n                while (j < n && diff[j] < 0)\n                    j++;\n                ans += -diff[i];\n                for (int k = i + 1; k < j; k++)\n                    ans += Math.max(0, diff[k - 1] - diff[k]);\n                i = j;\n            }\n        }\n        \n        return ans;\n    }\n}\n/*\n1,-2,2\n*/",
    "submit_ts": "1721530952",
    "subm_id": "1327948204"
}