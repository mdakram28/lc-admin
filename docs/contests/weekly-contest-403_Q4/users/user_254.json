{
    "username": "strange-davinciper",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#pragma region\ntemplate <typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define ll long long\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define ins insert\n\nvoid __print(int x) { cout << x; }\nvoid __print(long x) { cout << x; }\nvoid __print(long long x) { cout << x; }\nvoid __print(unsigned x) { cout << x; }\nvoid __print(unsigned long x) { cout << x; }\nvoid __print(unsigned long long x) { cout << x; }\nvoid __print(float x) { cout << x; }\nvoid __print(double x) { cout << x; }\nvoid __print(long double x) { cout << x; }\nvoid __print(char x) { cout << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cout << (x ? \"true\" : \"false\"); }\ntemplate <size_t N>\nvoid __print(const bitset<N>& x) { cout << x; };\n\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x);\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v);\n\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n    cout << '{';\n    __print(x.first);\n    cout << \", \";\n    __print(x.second);\n    cout << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n    int f = 0;\n    cout << '{';\n    for (auto &i : x) cout << (f++ ? \", \" : \"\"), __print(i);\n    cout << \"}\";\n}\nvoid _print() { cout << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n    __print(t);\n    if (sizeof...(v)) cout << \", \";\n    _print(v...);\n}\n\ntemplate<class T> bool ckmin(T&a, const T& b) { bool B = a > b; a = min(a,b); return B; }\ntemplate<class T> bool ckmax(T&a, const T& b) { bool B = a < b; a = max(a,b); return B; }\n#pragma endregion\n\n#define dbg(x...)                                                            \\\n    cout << \"[\" << __func__ << \":\" << __LINE__ - 9 << \" [\" << #x << \"] = [\"; \\\n    _print(x);                                                               \\\n    cout << endl;\n#define dbg(x...)\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& G) {\n        int R = G.size(), C = G[0].size();\n        \n        int dp[30][30][30][30];\n        memset(dp, 0, sizeof(dp));\n        \n        const auto get_area = [&](auto tlr, auto tlc, auto brr, auto brc) {\n            int mnr = R, mnc = C, mxr = 0, mxc = 0;\n            for (int r = tlr; r <= brr; ++r)\n                for (int c = tlc; c <= brc; ++c)\n                    if (G[r][c] == 1)\n                        mnr = min(mnr, r), mnc = min(mnc, c), mxr = max(mxr, r), mxc = max(mxc, c);\n            return mnr == R ? 0 : (mxr - mnr + 1) * (mxc - mnc + 1);\n        };\n        \n        for (int r1 = 0; r1 < R; ++r1) {\n            for (int c1 = 0; c1 < C; ++c1) {\n                for (int r2 = r1; r2 < R; ++r2) {\n                    for (int c2 = c1; c2 < C; ++c2) {\n                        dp[r1][c1][r2][c2] = get_area(r1, c1, r2, c2);\n                    }\n                }\n            }\n        }\n\n        \n        int res = R * C;\n        for (int r1 = 0; r1 < R - 2; ++r1) {\n            for (int r2 = r1 + 1; r2 < R - 1; ++r2) {\n                res = min(res, dp[0][0][r1][C - 1] + dp[r1 + 1][0][r2][C - 1] + dp[r2 + 1][0][R - 1][C - 1]);\n            }\n        }\n            dbg(1, res);\n        \n        for (int r = 0; r < R - 1; ++r) {\n            for (int c = 0; c < C - 1; ++c) {\n                res = min(res, dp[0][0][r][C - 1] + dp[r + 1][0][R - 1][c] + dp[r + 1][c + 1][R - 1][C - 1]);\n            }\n        }\n            dbg(2, res);\n        for (int c = 0; c < C - 1; ++c) {\n            for (int r = 0; r < R - 1; ++r) {\n                res = min(res, dp[0][0][R - 1][c] + dp[0][c + 1][r][C - 1] + dp[r + 1][c + 1][R - 1][C - 1]);\n            }\n        }\n            dbg(3, res);\n        for (int c1 = 0; c1 < C - 2; ++c1) {\n            for (int c2 = c1 + 1; c2 < C - 1; ++c2) {\n                res = min(res, dp[0][0][R - 1][c1] + dp[0][c1 + 1][R - 1][c2] + dp[0][c2 + 1][R - 1][C - 1]);\n            }\n        }\n            dbg(4, res);\n        for (int r = 0; r < R - 1; ++r) {\n            for (int c = 0; c < C - 1; ++c) {\n                res = min(res, dp[0][0][r][c] + dp[0][c + 1][r][C - 1] + dp[r + 1][0][R - 1][C - 1]);\n            }\n        }\n            dbg(5, res);\n        for (int c = 0; c < C - 1; ++c) {\n            for (int r = 0; r < R - 1; ++r) {\n                res = min(res, dp[0][0][r][c] + dp[r + 1][0][R - 1][c] + dp[0][c + 1][R - 1][C - 1]);\n            }\n        }\n            dbg(6, res);\n        return res;\n    }\n};",
    "submit_ts": 1719113864.0
}