{
    "username": "ankit-2210",
    "submission": "class Solution{\n    struct TrieNode{\n        unordered_map<char, TrieNode *> children;\n        int cost;\n        bool isEnd;\n    };\n    \n    struct TrieNode *root;\n    struct TrieNode *getNode(){\n        struct TrieNode *pNode = new TrieNode();\n        pNode->cost=INT_MAX;\n        pNode->isEnd=false;\n        \n        return pNode;\n    }\n    \npublic:\n    Solution(){\n        root = getNode();\n    }\n    \n    void insert(string &word, int c){\n        struct TrieNode *pCrawl = root;\n        \n        for(int i=0; i<word.size(); i++){\n            char idx = word[i];\n            \n            if(!pCrawl->children[idx]){\n                pCrawl->children[idx] = getNode();\n            }    \n            pCrawl = pCrawl->children[idx];\n        }\n        \n        pCrawl->cost=min(pCrawl->cost, c);\n        pCrawl->isEnd = true;\n    }\n    \n    int minimumCost(string t, vector<string> &w, vector<int> &c){\n        int n = w.size();\n        int m = t.size();\n    \n        for(int i=0; i<n; i++){\n            insert(w[i], c[i]);\n        }\n        \n        vector<int> dp(m+1, INT_MAX);\n        dp[0]=0;\n        for(int i=0; i<m; i++){\n            if(dp[i] == INT_MAX)\n                continue;\n            \n            struct TrieNode *pCrawl = root;\n            int j=i+1;\n            while(j<=m){\n                if(!pCrawl->children[t[j-1]])\n                    break;\n                \n                pCrawl = pCrawl->children[t[j-1]];\n                if(pCrawl->cost != INT_MAX){\n                    dp[j] = min(dp[j], dp[i]+pCrawl->cost);\n                }\n                \n                j++;\n            }\n        }\n        \n        // for(int i=0; i<=m; i++){\n        //     cout << dp[i] << \" \";\n        // }\n        \n        if(dp[m] == INT_MAX)\n            return -1;\n        \n        return dp[m];\n        \n        \n    }\n};",
    "submit_ts": "1720324488",
    "subm_id": "1312400742"
}