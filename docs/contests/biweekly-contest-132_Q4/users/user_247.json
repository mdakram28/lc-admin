{
    "username": "jithin420",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        dp = [[1 for _ in range(len(nums))] for _ in range(k + 1)]\n\n        idxs = defaultdict(list)\n        curr_max = [1] * len(nums)\n        for i, n in enumerate(nums):\n            idxs[n].append(i)\n            dp[0][i] = len(idxs[n])\n            if i:\n                curr_max[i] = max(curr_max[i - 1], dp[0][i])\n\n        for x in range(1, k + 1):\n            last_max = curr_max.copy()\n            curr_max = [1] * len(nums)\n            for i, n in enumerate(nums):\n                if i == 0:\n                    continue\n                dp[x][i] = dp[x - 1][i]\n                # if i == 2 and x == 1:\n                #     print(\"a = \", dp[x - 1][i])\n                j = bisect_left(idxs[n], i)\n                # if i == 2 and x == 1:\n                #     print(\"j = \", j)\n                if j:\n                    jval=idxs[n][j-1]\n                    # if i == 2 and x == 1:\n                    #     print(\"jval = \", jval)\n                    dp[x][i] = max(dp[x][i], dp[x][jval] + 1)\n                    # if i == 2 and x == 1:\n                    #     print(\"b = \", dp[x][j] + 1)\n\n                dp[x][i] = max(dp[x][i], last_max[i - 1] + 1)\n                # if i == 2 and x == 1:\n                #     print(\"c = \", last_max[i - 1] + 1)\n                curr_max[i] = max(curr_max[i - 1], dp[x][i])\n        res = 0\n        for i in range(k + 1):\n            for j in range(len(nums)):\n                res = max(res, dp[i][j])\n        # print(dp)\n        return res",
    "submit_ts": 1717861239.0
}