{
    "username": "user6639bv",
    "submission": "class Solution {\n    Map<String, Integer> map = new HashMap<>();\n    \n    public int waysToReachStair(int k) {\n        return dfs(k, 1, 0, 0);\n    }\n    \n    int dfs(int k, int pos, int jump, int used) {\n        if (pos - k > 1) {\n            return 0;\n        }\n        String key = pos +\"-\"+jump+\"-\"+used;\n        if (map.containsKey(key)) {\n            return map.get(key);\n        }\n        int ans = pos == k ? 1 : 0;\n        if (used == 0 && pos != 0) {\n            ans += dfs(k, pos - 1, jump, 1);\n        }\n        ans += dfs(k, pos + (1 << jump), jump + 1, 0);\n        map.put(key, ans);\n        return ans;\n    }\n}",
    "submit_ts": "1716088800",
    "subm_id": "1261824349"
}