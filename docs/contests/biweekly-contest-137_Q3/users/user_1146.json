{
    "username": "Troels",
    "submission": "class Solution {\n    \n    \n    \npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int M = board.size();\n        int N = board[0].size();\n        vector<tuple<int, int, int>> tuples;\n        \n        for (int i=0; i<M; ++i) {\n            for (int j=0; j<N; ++j) {\n                tuples.push_back(make_tuple(board[i][j],i,j));\n            }\n        }\n        \n        sort(tuples.begin(), tuples.end(), [](const auto& t1, const auto& t2) {\n            return std::get<0>(t1) > std::get<0>(t2);\n        });\n        \n        long long best= 0LL+board[0][0]+board[1][1]+board[2][2];\n        \n        for (int i=0; i<M; ++i) {\n            for (int j=0; j<N; ++j) {\n               \n            \n                for (int ii=i+1; ii<M; ++ii) {\n                    for (int jj=0; jj<N; ++jj) {\n                        if (ii==i or jj==j) {\n                            continue;\n                        }\n                        \n\n                        int ti=0;\n                        while(true) {\n                            auto t = tuples[ti];\n                            if (get<1>(t) == i or get<1>(t) == ii or get<2>(t) == j or get<2>(t) == jj) {\n                                ti++;\n                            }\n                            else {\n                                int iii = get<1>(t);\n                                int jjj = get<2>(t);\n                                if (0LL+board[i][j]+board[ii][jj]+board[iii][jjj] > best) {\n                                    best = 0LL+board[i][j]+board[ii][jj]+board[iii][jjj]; \n                                }\n                                break;\n                              }\n                        }\n                        \n                    }     \n                }\n            }\n        }\n        \n        return best;\n    }\n};",
    "submit_ts": "1723909023",
    "subm_id": "1359176517"
}