{
    "username": "Susovan Haldar",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m  = board.size();\n        int n = board[0].size();\n        vector< vector<vector<int>> > dp;\n        for(int i = 0;i<m;i++){\n             priority_queue< vector<int>, vector<vector<int>>, greater<vector<int>> > pq;\n            for(int j = 0;j<n;j++){\n                pq.push({board[i][j],j});\n                if(pq.size()>3) pq.pop();\n            }\n            vector<vector<int>> res;\n            while(!pq.empty()){\n                res.push_back(pq.top());\n                pq.pop();\n            }\n            dp.push_back(res);\n        }\n        long long output = LONG_MIN;\n        vector<vector<int>> dirs = {{0, 1, 2},{0, 2, 1}, {1, 0, 2}, {1, 2, 0}, {2, 0, 1}, {2, 1, 0}};\n        for(int i = 0;i<m;i++){\n            for(int j = i+1;j<m;j++){\n                for(int k = j+1;k <m;k++){\n                    long long res = LONG_MIN;\n                    for(int a= 0;a<3;a++){\n                        for(int b = 0;b<3;b++){\n                            for(int c = 0;c<3;c++){\n                                if(dp[i][a][1] == dp[j][b][1] || dp[i][a][1] == dp[k][c][1] || dp[j][b][1] == dp[k][c][1]) continue;\n                                long long sum = (long long)dp[i][a][0] + (long long)dp[j][b][0] + (long long)dp[k][c][0];\n                                res = max(res, sum);\n                            }\n                        }\n                    }\n                    output = max(output, res);\n                }\n            }\n        }\n        return output;\n    }\n    \n    \n};",
    "submit_ts": "1723909969",
    "subm_id": "1359212454"
}