{
    "username": "Soham111",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCut, vector<int>& vCut) {\n\n        int hDiv = 1;\n        int vDiv = 1;\n        long long cost = 0;\n\n        priority_queue<pair<int, char>> pq;\n\n        for (auto hc : hCut)\n            pq.push({hc, 'h'});\n\n        for (auto vc : vCut)\n            pq.push({vc, 'v'});\n\n        while (!pq.empty()) {\n            int cutCost = pq.top().first;\n            char cutDir = pq.top().second;\n            pq.pop();\n\n            if (cutDir == 'h') {\n                cost += cutCost * vDiv;\n                hDiv++;\n            } else {\n                cost += cutCost * hDiv;\n                vDiv++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925562",
    "subm_id": "1320258852"
}