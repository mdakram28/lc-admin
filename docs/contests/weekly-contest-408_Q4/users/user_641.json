{
    "username": "AnkurG264",
    "submission": "class Solution {\npublic:\n     bool dfs(vector<vector<int>>& g, vector<int>& vis, int u, int t1, int t2) {\n        if (u == t1 || u == t2) return true;\n        vis[u] = 1;\n        for (int v : g[u]) {\n            if (!vis[v] && dfs(g, vis, v, t1, t2)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int nc = circles.size();\n        vector<pair<pair<int, int>, int>> c(nc);\n        vector<vector<int>> g(nc + 4);\n        \n        for (int i = 0; i < nc; i++) {\n            c[i] = {{circles[i][0], circles[i][1]}, circles[i][2]};\n        }\n        \n        for (int i = 0; i < nc; i++) {\n            if (c[i].first.first <= c[i].second) {\n                g[nc].push_back(i);\n                g[i].push_back(nc);\n            }\n            if (X - c[i].first.first <= c[i].second) {\n                g[nc + 2].push_back(i);\n                g[i].push_back(nc + 2);\n            }\n            if (c[i].first.second <= c[i].second) {\n                g[nc + 1].push_back(i);\n                g[i].push_back(nc + 1);\n            }\n            if (Y - c[i].first.second <= c[i].second) {\n                g[nc + 3].push_back(i);\n                g[i].push_back(nc + 3);\n            }\n            for (int j = i + 1; j < nc; j++) {\n                double d = sqrt(pow(c[i].first.first - c[j].first.first, 2) + \n                                pow(c[i].first.second - c[j].first.second, 2));\n                if (c[i].second + c[j].second >= d) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n        \n        vector<int> vis(nc + 4, 0);\n        if (dfs(g, vis, nc, nc + 1, nc + 2) || dfs(g, vis, nc + 3, nc + 2, nc + 1)) {\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138433",
    "subm_id": "1335790639"
}