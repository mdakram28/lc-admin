{
    "username": "rishirajm7",
    "submission": "import java.util.*;\n\npublic class Solution {\n    public int minChanges(int[] nums, int k) {\n        Map<Integer, List<Integer>> differenceMap = new HashMap<>();\n        List<Integer> valuesList = new ArrayList<>();\n        int length = nums.length;\n\n        for (int i = 0; i < length / 2; i++) {\n            int left = nums[i];\n            int right = nums[length - i - 1];\n            int difference = Math.abs(left - right);\n            int maxValue = Math.max(left, Math.max(right, Math.max(k - left, k - right)));\n            \n            differenceMap.computeIfAbsent(difference, key -> new ArrayList<>()).add(maxValue);\n            valuesList.add(maxValue);\n        }\n\n        Collections.sort(valuesList);\n        int minChanges = length;\n\n        for (Map.Entry<Integer, List<Integer>> entry : differenceMap.entrySet()) {\n            int diff = entry.getKey();\n            List<Integer> maxValues = entry.getValue();\n            int index = Collections.binarySearch(valuesList, diff);\n            \n            if (index < 0) {\n                index = -index - 1;\n            } else {\n                while (index > 0 && valuesList.get(index - 1) == diff) {\n                    index--;\n                }\n            }\n            \n            int changesRequired = index * 2 + (length / 2 - index);\n\n            for (int maxValue : maxValues) {\n                if (maxValue < diff) {\n                    changesRequired -= 2;\n                } else {\n                    changesRequired -= 1;\n                }\n            }\n\n            minChanges = Math.min(minChanges, changesRequired);\n        }\n\n        return minChanges;\n    }\n}\n",
    "submit_ts": "1721489236",
    "subm_id": "1327447167"
}