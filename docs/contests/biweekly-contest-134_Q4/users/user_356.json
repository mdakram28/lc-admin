{
    "username": "_dipu",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\nusing ll = long long int;\n\nclass Solution {\npublic:\n    ll countSubarrays(vector<int>& nums, int k) {\n        const int MAXBIT = 31;\n        int n = nums.size();\n        vector<vector<int>> pref(n, vector<int>(MAXBIT));\n        for (int i = 0; i < n; i++) {\n            for (int p = 0; p < MAXBIT; p++) {\n                bool bit = nums[i] >> p & 1;\n                pref[i][p] += bit;\n                if (i - 1 >= 0) {\n                    pref[i][p] += pref[i - 1][p];\n                }\n            }\n        }\n        ll ans = 0;\n        for (int i = 0; i < n; i++) {\n            int LOW = -1;\n            {\n                int lo = i;\n                int hi = n - 1;\n                while (lo <= hi) {\n                    int mid = lo + hi >> 1;\n                    ll num = 0;\n                    for (int p = 0; p < MAXBIT; p++) {\n                        int cnt = pref[mid][p];\n                        if (i - 1 >= 0) {\n                            cnt -= pref[i - 1][p];\n                        }\n                        if (cnt == mid - i + 1) {\n                            num += 1LL << p;\n                        }\n                    }\n                    if (num == k) {\n                        LOW = mid;\n                        hi = mid - 1;\n                    } else if (num < k) {\n                        hi = mid - 1;\n                    } else {\n                        lo = mid + 1;\n                    }\n                }\n            }\n            if (LOW == -1) {\n                continue;\n            }\n            int HIGH = -1;\n            {\n                int lo = i;\n                int hi = n - 1;\n                while (lo <= hi) {\n                    int mid = lo + hi >> 1;\n                    ll num = 0;\n                    for (int p = 0; p < MAXBIT; p++) {\n                        int cnt = pref[mid][p];\n                        if (i - 1 >= 0) {\n                            cnt -= pref[i - 1][p];\n                        }\n                        if (cnt == mid - i + 1) {\n                            num += 1LL << p;\n                        }\n                    }\n                    if (num == k) {\n                        HIGH = mid;\n                        lo = mid + 1;\n                    } else if (num < k) {\n                        hi = mid - 1;\n                    } else {\n                        lo = mid + 1;\n                    }\n                }\n            }\n            assert(HIGH != -1);\n            ll range = HIGH - LOW + 1;\n            ans += range;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278157",
    "subm_id": "1311696915"
}