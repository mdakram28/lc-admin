{
    "username": "ard001",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> trie;\n    vector<int> min_cost;\n    void insert(const string &word,const int &cost){\n        int n = word.size(),node=1;\n        for(int i=n-1;~i;--i){\n            int b = word[i]-'a';\n            if(!trie[node][b]){\n                trie[node][b] = (int)min_cost.size();\n                vector<int> curr_node = vector<int>(27,0);\n                trie.push_back(curr_node);\n                min_cost.push_back(-1);\n            }\n            node = trie[node][b];\n        }\n        trie[node][26] = 1;\n        min_cost[node] = min_cost[node] == -1 || min_cost[node]>cost ? cost : min_cost[node];\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        trie = vector<vector<int>>(2,vector<int>(27,0));\n        min_cost = vector<int>(2,-1);\n        for(int i=0;i<words.size();++i){\n            insert(words[i], costs[i]);\n        }\n        const int n = target.size();\n        vector<int> dp(n+1,-1);\n        dp[0] = 0;\n\n        for(int i=1;i<=n;++i){\n            for(int j=i,node=1;j && node;--j){\n                node = trie[node][target[j-1]-'a'];\n                if(trie[node][26] && dp[j-1]!=-1) {\n                    int curr_cost = min_cost[node] + dp[j-1];\n                    if(dp[i]==-1 || dp[i]>curr_cost) dp[i] = curr_cost;\n                }\n            }\n        }\n        return dp[n];\n    }\n};",
    "submit_ts": "1720321218",
    "subm_id": "1312316792"
}