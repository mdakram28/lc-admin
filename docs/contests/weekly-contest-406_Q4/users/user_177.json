{
    "username": "Deepj_14",
    "submission": "class Solution {\npublic:\n    \n    long long minimumCost(int m, int n, vector<int>& hc, vector<int>& vc) {\n        vector<Cut> cuts;\n\n    for (int cost : hc) {\n        cuts.push_back({cost, true});\n    }\n    for (int cost : vc) {\n        cuts.push_back({cost, false});\n    }\n\n    sort(cuts.begin(), cuts.end(), [](const Cut& a, const Cut& b) {\n        return a.cost > b.cost;\n    });\n\n    long long hs = 1;\n    long long vs = 1;\n    long long ct = 0;\n\n    for (const Cut& cut : cuts) {\n        if (cut.isHorizontal) {\n            ct += cut.cost * vs;\n            ++hs;\n        } else {\n            ct += cut.cost * hs;\n            ++vs;\n        }\n    }\n\n    return ct;\n    }\n\n    private:   \n    struct Cut {\n        long long cost;\n        bool isHorizontal;\n    };\n\n    \n};",
    "submit_ts": "1720925190",
    "subm_id": "1320246097"
}