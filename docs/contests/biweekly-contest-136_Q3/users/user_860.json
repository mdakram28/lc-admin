{
    "username": "DevlinShivam",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int flips = 0, a=0, b=0;\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int total = grid[i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][j] + grid[n - 1 - i][m - 1 - j];\n                flips += min(total, 4 - total);\n            }\n        }\n\n        if(n%2==1 and m%2==1)\n        {\n            if(grid[(n/2)][m/2])flips++;\n        }\n\n        if (n % 2 == 1) {\n            int i = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                a += grid[i][j] != grid[i][m - 1 - j];\n                if( grid[i][j] and grid[i][m - 1 - j])b++;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int j = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                a += grid[i][j] != grid[n - 1 - i][j];\n\n                if(grid[i][j] and grid[n - 1 - i][j])b++;\n            }\n        }\n\n        if(b%2==0)\n        {\n            return flips+a;\n        }\n        else\n        {\n            if(a)\n            {\n                return flips+a;\n            }\n            else\n            {\n                return flips+2;\n            }\n\n        }\n\n    }\n};\n",
    "submit_ts": "1722698565",
    "subm_id": "1343184740"
}