{
    "username": "Gourav Ghosh",
    "submission": "import java.math.BigInteger;\nclass Solution {\n    public String largestPalindrome(int n, int k) {\n        if(k==1){\n            StringBuilder res = new StringBuilder();\n            for(int i = 0;i<n;i++) res.append('9');\n            return res.toString();\n        }\n        else if(k==2){\n            if(n==1) return \"8\";\n            StringBuilder res = new StringBuilder();\n            for(int i = 0;i<n-2;i++) res.append('9');\n            res.insert(0,'8');\n            res.append('8');\n            return res.toString();\n        }\n        else if(k==3 || k==9){\n            StringBuilder res = new StringBuilder();\n                for(int i = 0;i<n;i++) {res.append('9');}\n                return res.toString();\n\n        }\n        else if(k==4){\n            if(n==1) return \"8\";\n            else if(n==2) return \"88\";\n            else if(n==3) return \"888\";\n            StringBuilder res = new StringBuilder();\n            for(int i = 0;i<n-4;i++) res.append('9');\n            res.insert(0,'8');\n            res.insert(0,'8');\n            res.append('8');\n            res.append('8');\n            return res.toString();\n        }\n        if(k==5){\n            if(n==1) return \"5\";\n            StringBuilder res = new StringBuilder();\n            for(int i = 0;i<n-2;i++) res.append('9');\n            res.insert(0,'5');\n            res.append('5');\n            return res.toString();\n        }\n        else if(k==6){\n            int[] arr = new int[n];\n            if(n==1) return \"6\";\n            else if(n==2) return \"66\";\n            Arrays.fill(arr,9);\n            arr[0] = 8;\n            arr[n-1] = 8;\n            int sum = 9*n - 2;\n            StringBuilder res = new StringBuilder();\n            if(sum%3==0){\n                for(int i = 0;i<n;i++) {res.append((char)(arr[i] + '0'));}\n                return res.toString();\n            }\n            if(n%2==0){\n                int lm = n/2 - 1;\n                int rm = n/2;\n                while(sum%3!=0){\n                    arr[lm]--;\n                    arr[rm]--;\n                    sum -= 2;\n                    if(arr[lm]==0){\n                        lm--;\n                        rm++;\n                    }\n                }\n                \n                for(int i = 0;i<n;i++) {res.append((char)(arr[i] + '0'));}\n                return res.toString();\n            }\n            else{\n                int m = n/2;\n                while(sum%3!=0){\n                    arr[m]--;\n                    sum--;\n                }\n                for(int i = 0;i<n;i++) {res.append((char)(arr[i] + '0'));}\n                return res.toString();\n                \n            }\n        }\n        else if(k == 7) {\n            int halfLength = (n + 1) / 2; // Half length for odd/even n\n\n            // Start from the largest possible half\n            BigInteger start = BigInteger.TEN.pow(halfLength).subtract(BigInteger.ONE);\n            BigInteger end = BigInteger.TEN.pow(halfLength - 1);\n\n            for (BigInteger i = start; i.compareTo(end) > 0; i = i.subtract(BigInteger.ONE)) {\n                // Create the palindrome from the half\n                String halfStr = i.toString();\n                StringBuilder palindromeStr = new StringBuilder(halfStr);\n                if (n % 2 == 0) {\n                    palindromeStr.append(new StringBuilder(halfStr).reverse());\n                } else {\n                    palindromeStr.append(new StringBuilder(halfStr).reverse().substring(1));\n                }\n\n                BigInteger palindrome = new BigInteger(palindromeStr.toString());\n\n                // Check divisibility by 7\n                if (palindrome.mod(BigInteger.valueOf(7)).equals(BigInteger.ZERO)) {\n                    return palindrome.toString();\n                }\n            }\n            return \"\";\n        }\n\n        \n        else if(k==8){\n            if(n==1) return \"8\";\n            else if(n==2) return \"88\";\n            else if(n==3) return \"888\";\n            else if(n==4) return \"8888\";\n            else if(n==5) {\n                return \"88888\";\n            }\n            else{\n                StringBuilder res = new StringBuilder();\n                for(int i = 0;i<n-6;i++) res.append('9');\n                res.insert(0,'8');\n                res.insert(0,'8');\n                res.insert(0,'8');\n                res.append('8');\n                res.append('8');\n                res.append('8');  \n                return res.toString();\n            }\n        }\n        return \"\";\n    }\n}",
    "submit_ts": "1723951827",
    "subm_id": "1359781003"
}