{
    "username": "strange-davinciper",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#pragma region\ntemplate <typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define ll long long\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define ins insert\n\nvoid __print(int x) { cout << x; }\nvoid __print(long x) { cout << x; }\nvoid __print(long long x) { cout << x; }\nvoid __print(unsigned x) { cout << x; }\nvoid __print(unsigned long x) { cout << x; }\nvoid __print(unsigned long long x) { cout << x; }\nvoid __print(float x) { cout << x; }\nvoid __print(double x) { cout << x; }\nvoid __print(long double x) { cout << x; }\nvoid __print(char x) { cout << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cout << (x ? \"true\" : \"false\"); }\ntemplate <size_t N>\nvoid __print(const bitset<N>& x) { cout << x; };\n\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x);\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v);\n\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n    cout << '{';\n    __print(x.first);\n    cout << \", \";\n    __print(x.second);\n    cout << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n    int f = 0;\n    cout << '{';\n    for (auto &i : x) cout << (f++ ? \", \" : \"\"), __print(i);\n    cout << \"}\";\n}\nvoid _print() { cout << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n    __print(t);\n    if (sizeof...(v)) cout << \", \";\n    _print(v...);\n}\n\ntemplate<class T> bool ckmin(T&a, const T& b) { bool B = a > b; a = min(a,b); return B; }\ntemplate<class T> bool ckmax(T&a, const T& b) { bool B = a < b; a = max(a,b); return B; }\n#pragma endregion\n\n#define dbg(x...)                                                            \\\n    cout << \"[\" << __func__ << \":\" << __LINE__ - 9 << \" [\" << #x << \"] = [\"; \\\n    _print(x);                                                               \\\n    cout << endl;\n// #define dbg(x...)\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n\n        vector<array<int, 30>> P(n);\n        for (int i = 0; i < n; ++i) {\n            auto a = nums[i];\n            for (int j = 0; j < 30; ++j) {\n                if (1 << j & a) ++P[i][j];\n                if (i > 0) P[i][j] += P[i - 1][j];\n            }\n        }\n\n        // P[i][j] = # of set j-th bits in the subarray nums[0:i + 1]\n\n        // computes &A[l : r + 1]\n        const auto get_subarray_and = [&](auto l, auto r) {\n            int res = 0, required = r - l + 1;\n            for (int i = 0; i < 30; ++i) {\n                if (P[r][i] - (l == 0 ? 0 : P[l - 1][i]) == required)\n                    res += 1 << i;\n            }\n            return res;\n        };\n\n        const auto bs1 = [&](auto i) {\n            int l = i, r = n - 1;\n\n            const auto ok = [&](auto m) {\n                return get_subarray_and(i, m) >= k;\n            };\n\n            while (l < r) {\n                auto m = l + (r - l) / 2;\n                if (ok(m)) l = m + 1;\n                else r = m;\n            }\n\n            return ok(l) ? l : l - 1;\n        };\n        \n        const auto bs2 = [&](auto i) {\n            int l = i, r = n - 1;\n\n            const auto ok = [&](auto m) {\n                return get_subarray_and(i, m) <= k;\n            };\n\n            while (l < r) {\n                auto m = l + (r - l) / 2;\n                if (ok(m)) r = m;\n                else l = m + 1;\n            }\n\n            return l;\n        };\n\n\n        auto res = 0LL;\n        for (int i = 0; i < n; ++i) {\n            auto a = bs2(i);\n            auto b = bs1(i);\n            res += a >= 0 && b < n && a <= b && get_subarray_and(i, a) == k ? b - a + 1 : 0;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720278168",
    "subm_id": "544561071"
}