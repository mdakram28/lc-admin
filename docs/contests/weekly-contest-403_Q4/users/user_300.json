{
    "username": "bronzekiller2017",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        \n        height = len(grid)\n        width = len(grid[0])\n        \n                \n        transposed = []\n        for i in range(width):\n            curr = []\n            for j in range(height):\n                curr.append(grid[j][i])\n            transposed.append(curr)  \n            \n            \n        ans = height*width\n        \n        for i in range(1, height):\n            top, bot = grid[:i], grid[i:]\n            topto = self.minimumArea(top)\n            botto = self.minimumArea(bot)\n            topsplit = self.findtwo(top)\n            botsplit = self.findtwo(bot)\n            \n            ans = min(ans, topto + botsplit, botto + topsplit)\n        \n        \n        for j in range(1, width):\n            left, right = transposed[:j], transposed[j:]\n            leftto = self.minimumArea(left)\n            rightto = self.minimumArea(right)\n            leftsplit = self.findtwo(left)\n            rightsplit = self.findtwo(right)\n            \n            \n            ans = min(ans, leftto + rightsplit, rightto + leftsplit)\n        \n        return ans\n        \n        \n        \n        \n    \n    def findtwo(self, grid):\n        \n        height = len(grid)\n        width = len(grid[0])\n        \n        transposed = []\n        for i in range(width):\n            curr = []\n            for j in range(height):\n                curr.append(grid[j][i])\n            transposed.append(curr)                \n            \n        \n        ans = height*width\n        \n        for i in range(1, height):\n            top, bot = grid[:i], grid[i:]\n            topto = self.minimumArea(top)\n            botto = self.minimumArea(bot)\n            ans = min(ans, topto+botto)\n        \n        for j in range(1, width):\n            left, right = transposed[:j], transposed[j:]\n            leftto = self.minimumArea(left)\n            rightto = self.minimumArea(right)\n            ans = min(ans, leftto+rightto)\n        \n        return ans\n        \n        \n    def minimumArea(self, grid: List[List[int]]) -> int:\n        height = len(grid)\n        width = len(grid[0])\n        \n        firsth, lasth = None, None\n        firstw, lastw = None, None\n        \n        \n        for i in range(height):\n            for j in range(width):\n                if firsth == None and grid[i][j] == 1:\n                    firsth = i\n                if grid[i][j] == 1:\n                    lasth = i\n        \n        for j in range(width):\n            for i in range(height):\n                if firstw == None and grid[i][j] == 1:\n                    firstw = j\n                if grid[i][j] == 1:\n                    lastw = j\n        \n        if firsth == None and lasth == None:\n            return 0\n        \n        h = lasth - firsth + 1\n        w = lastw - firstw + 1\n        # print(firsth, lasth, firstw, lastw)\n        # print(h, w)\n        return h*w",
    "submit_ts": "1719113923",
    "subm_id": "1297336004"
}