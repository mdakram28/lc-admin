{
    "username": "Jing-You",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n                long long res=-10000000000;\n        int n=board.size(), m=board[0].size();\n        \n        vector<array<array<int, 3>, 3>> temp(m);\n        \n        for (int i=0; i<m; ++i) {\n            for (int j=0; j<3; ++j) {\n                temp[i][j]={INT_MIN, 0, 0};\n            }\n        }\n        \n        for (int i=0; i<n; ++i) {\n            for (int j=0; j<m; ++j) {\n                if (board[i][j] >= temp[j][0][0]) {\n                    temp[j][2] = temp[j][1];\n                    temp[j][1] = temp[j][0];\n                    temp[j][0] = {board[i][j], i, j};\n                } else if (board[i][j] >= temp[j][1][0]) {\n                    temp[j][2] = temp[j][1];\n                    temp[j][1] = {board[i][j], i, j};\n                } else if (board[i][j] >= temp[j][2][0]) {\n                    temp[j][2] = {board[i][j], i, j};\n                }\n            }\n        }\n        \n        priority_queue<array<int, 3>, vector<array<int, 3>>, greater<array<int, 3>>> Q;\n        \n        for (int i=0; i<m; ++i) {\n            for (int j=0; j<3; ++j){\n                Q.push(temp[i][j]);\n                if (Q.size() > 16) Q.pop();\n            }\n        }\n        \n        vector<array<int, 3>> temp2;\n        while (!Q.empty()) {\n            temp2.push_back(Q.top());\n            Q.pop();\n        }\n        \n        vector<array<long long, 5>> temp4;\n            \n        for (int j=0; j<temp2.size(); ++j) {\n            for (int k=j+1; k<temp2.size(); ++k) {\n                if (temp2[j][1] == temp2[k][1] || temp2[j][2] == temp2[k][2]) continue;\n                temp4.push_back({(long long)temp2[j][0] + temp2[k][0],\n                    temp2[j][1], temp2[j][2], temp2[k][1], temp2[k][2]});\n            }\n        }\n        \n        sort(temp4.begin(), temp4.end(), greater<array<long long, 5>>());\n        \n        for (int i=0; i<n; ++i) {\n            for (int j=0; j<m; ++j) {\n                for (auto& a : temp4) {\n                    if (a[1]==i || a[2]==j || a[3]==i || a[4]==j) continue;\n                    res = max(res, a[0] + board[i][j]);\n                    break;\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723910193",
    "subm_id": "1359220813"
}