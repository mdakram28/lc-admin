{
    "username": "dipss777",
    "submission": "class Solution {\npublic:\n    int value(map<int,int> &mp) {\n        if(mp.empty()) return -1;\n        auto itb = mp.begin();\n        auto ite = mp.end();\n        ite--;\n        int val = (*ite).first-(*itb).first;\n        return val;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        map<int, int> mp1, mp2;\n        for(auto &p : points) {\n            mp1[p[0]+p[1]]++;\n            mp2[p[0]-p[1]]++;\n        }\n        \n        int ans = INT_MAX;\n        for(auto &p : points) {\n            int p1 = p[0]+p[1];\n            int p2 = p[0]-p[1];\n            mp1[p1]--;\n            mp2[p2]--;\n            if(mp1[p1] == 0) {\n                mp1.erase(p1);\n            }\n            if(mp2[p2] == 0) {\n                mp2.erase(p2);\n            }\n            \n            int val1 = value(mp1);\n            int val2 = value(mp2);\n            ans = min(ans, max(val1, val2));\n            \n            mp1[p1]++;\n            mp2[p2]++;\n        }\n        \n        \n        return ans;\n    }\n};"
}