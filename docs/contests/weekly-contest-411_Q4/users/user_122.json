{
    "username": "Linh Nguyen",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        \n        vector<int> minIndex(n);\n        vector<long long> ss(n);\n        \n        int n0 = (s[0] == '0'), n1 = (s[0] == '1'), j = 0;\n        for (int i = 0; i < n; i++) {\n            if (i > 0) {\n                minIndex[i] = minIndex[i - 1];\n            }\n            if (n0 <= k || n1 <= k) {\n                minIndex[i] = j;\n            }\n            \n            while (j < n && (n0 <= k || n1 <= k)) {\n                j++;\n                if (j == n) {\n                    j = n - 1;\n                    break;\n                }\n                n0 += (s[j] == '0');\n                n1 += (s[j] == '1');\n                if (n0 <= k || n1 <= k) {\n                    minIndex[i] = j;\n                }\n            }\n                        \n            if (s[i] == '0') {\n                n0--;\n            } else {\n                n1--;\n            }            \n        }\n        \n        ss[0] = minIndex[0] + 1;\n        for (int i = 1; i < n; i++) {\n            ss[i] = ss[i - 1] + (minIndex[i] - i + 1);\n        }\n        \n        int m = queries.size();\n        vector<long long> ret(m);\n        for (int i = 0; i < m; i++) {\n            int u = queries[i][0], v = queries[i][1];\n            \n            int low = u, high = v, ans = -1;\n            while (low <= high) {\n                int mid = (low + high) / 2;\n                if (minIndex[mid] >= v) {\n                    ans = mid;\n                    high = mid - 1;\n                } else {\n                    low = mid + 1;\n                }\n            }\n                                                \n            if (ans < 0) {\n                int lp = v - u + 1;\n                ret[i] = 1LL * lp * (lp + 1) / 2;\n            } else {\n                int lp = v - ans + 1;\n                ret[i] = 1LL * lp * (lp + 1) / 2;\n                if (ans > 0) {\n                    ret[i] += ss[ans - 1];\n                }\n                if (u > 0) {\n                    ret[i] -= ss[u - 1];\n                }\n            }\n        }\n        \n        return ret;\n    }\n};",
    "submit_ts": "1723953033",
    "subm_id": "1359810652"
}