{
    "username": "dennis753951",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        // 30\n        \n        stack<int> s[30];\n        int n = nums.size();\n        \n        int R[n][30];\n        \n        for(int i = 0; i != n; ++i)\n            fill(R[i], R[i] + 30, n);\n        \n        int t;\n        for(int i = 0; i != n; ++i) {\n            t = nums[i];\n            for(int j = 0; j != 30; ++j) {\n                if(~t & 1) {\n                    while(!s[j].empty()) {\n                        R[s[j].top()][j] = i;\n                        s[j].pop();\n                    }\n                    R[i][j] = i;\n                }\n                else {\n                    s[j].push(i);\n                }\n                \n                t >>= 1;\n            }\n        }\n        \n        bitset<30> b = k;\n        \n        long res = 0;\n        int l, r;\n        for(int st = 0; st != n; ++st) {\n            l = st, r = n - 1;\n            \n            // cout << \"st = \" << st << \"\\n\";\n            \n            for(int j = 0; j != 30 && l <= r; ++j) {\n                if(!b[j]) {\n                    l = max(l, R[st][j]); \n                }\n                else {\n                    r = min(r, R[st][j] - 1);\n                }\n            }\n            \n            // cout << \"  \" << l << \", \" << r << \"\\n\";\n            \n            // cout << \"  += \" << r - l + 1 << \"\\n\";\n            if(l <= r)\n                res += r - l + 1;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720278245",
    "subm_id": "1311700750"
}