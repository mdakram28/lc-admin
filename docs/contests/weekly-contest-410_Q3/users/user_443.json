{
    "username": "wddd",
    "submission": "class Solution {\n    private final static int MOD = (int) (1e9 + 7);\n    \n    public int countOfPairs(int[] nums) {\n\n        int[] base1 = new int[nums.length];\n        for (int i = 1; i < nums.length; i++) {\n            base1[i] = base1[i - 1];\n            if (nums[i] - nums[i - 1] > 0) {\n                base1[i] += nums[i] - nums[i - 1];\n            }\n        }\n\n        int[] base2 = new int[nums.length];\n        for (int i = nums.length - 2; i >= 0; i--) {\n            base2[i] = base2[i + 1];\n            if (nums[i] > nums[i + 1]) {\n                base2[i] += nums[i] - nums[i + 1];\n            }\n        }\n\n        for (int i = 0; i < nums.length; i++) {\n            nums[i] -= base1[i];\n            nums[i] -= base2[i];\n        }\n        \n        if (nums[0] < 0) {\n            return 0;\n        }\n\n        long[][] cache = new long[nums[0] + 1][nums.length + 1];\n        return (int) (count(nums[0], nums.length, cache) % MOD);\n    }\n\n    private long count(int a, int b, long[][] cache) {\n        if (b == 1) {\n            return a + 1;\n        }\n        \n        if (cache[a][b] > 0) {\n            return cache[a][b];\n        }\n\n        long result = 0;\n        for (int i = a; i >= 0; i--) {\n            result += count(i, b - 1, cache);\n            result %= MOD;\n        }\n\n        cache[a][b] = result;\n        return result;\n    }\n}",
    "submit_ts": "1723345736",
    "subm_id": "1351562247"
}