{
    "username": "HsuBokai",
    "submission": "class Solution {\n    long long cc[31][31];\npublic:\n    int waysToReachStair(int k) {\n        memset(cc, 0, sizeof(cc));\n        for (int i = 0; i < 31; ++i) cc[i][0] = 1;\n        for (int i = 0; i < 31; ++i) cc[i][i] = 1;\n        int ret = 0;\n        if (k == 1) ret = 1;\n        long long len = 1;\n        long long mn = 1;\n        long long mx = 2;\n        while (true) {\n            if (k < mn) break;\n            if (mn <= k && k <= mx) {\n                int diff = mx-k;\n                // c_len_diff\n                ret += c_a_b(len, diff);\n            }\n            mn = mn + mx - 1;\n            mx *= 2;\n            len++;\n        }\n        int ret1 = 0;\n        k++;\n        if (k == 1) ret1 = 1;\n        len = 1;\n        mn = 1;\n        mx = 2;\n        while (true) {\n            if (k < mn) break;\n            if (mn <= k && k <= mx) {\n                int diff = mx-k;\n                // c_len_diff\n                ret1 += c_a_b(len, diff);\n            }\n            mn = mn + mx - 1;\n            mx *= 2;\n            len++;\n        }\n        return ret1 + ret;\n    }\n    \n    long long c_a_b(long long a, long long b) {\n        if (cc[a][b] > 0) return cc[a][b];\n        long long ans = c_a_b(a-1, b-1) + c_a_b(a-1, b);\n        cc[a][b] = ans;\n        return ans;\n    }\n};",
    "submit_ts": 1716090774.0
}