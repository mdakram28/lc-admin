{
    "username": "smalukav",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        size_t sy = board.size();\n        size_t sx = board[0].size();\n        vector<S> s(sy);\n        for (size_t y = 0; y < sy; ++y) {\n            for (size_t x = 0; x < sx; ++x)\n                s[y].update(board[y][x], x);\n        }\n        long long ans = numeric_limits<long long>::min();\n        for (size_t y1 = 0; y1 < sy; ++y1) {\n            for (size_t y2 = y1 + 1; y2 < sy; ++y2) {\n                for (size_t y3 = y2 + 1; y3 < sy; ++y3) {\n                    const auto& s1 = s[y1];\n                    const auto& s2 = s[y2];\n                    const auto& s3 = s[y3];\n                    for (size_t x1 = 0; x1 < 3; ++x1) {\n                        for (size_t x2 = 0; x2 < 3; ++x2) {\n                            for (size_t x3 = 0; x3 < 3; ++x3) {\n                                if (s1.i[x1] != s2.i[x2] && s1.i[x1] != s3.i[x3] && s2.i[x2] != s3.i[x3])\n                                    ans = max(ans, 0LL + s1.v[x1] + s2.v[x2] + s3.v[x3]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n\nprivate:\n    struct S {\n        array<int, 3> i{};\n        array<int, 3> v{numeric_limits<int>::min(), numeric_limits<int>::min(), numeric_limits<int>::min()};\n\n        void update(int cv, int ci) {\n            if (cv > v[0]) {\n                v[2] = v[1];\n                i[2] = i[1];\n                v[1] = v[0];\n                i[1] = i[0];\n                v[0] = cv;\n                i[0] = ci;\n            } else if (cv > v[1]) {\n                v[2] = v[1];\n                i[2] = i[1];\n                v[1] = cv;\n                i[1] = ci;\n            } else if (cv > v[2]) {\n                v[2] = cv;\n                i[2] = ci;\n            }\n        }\n    };\n};",
    "submit_ts": "1723906730",
    "subm_id": "1359069217"
}