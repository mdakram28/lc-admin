{
    "username": "utk_s_sood",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& x, vector<int>& y) {\n        long long res = 0;\n        \n        // Sort the cost arrays in descending order\n        sort(x.begin(), x.end(), greater<int>());\n        sort(y.begin(), y.end(), greater<int>());\n        \n        long long horizontalCuts = 1, verticalCuts = 1;\n        long long i = 0, j = 0;\n        \n        // Traverse the cost arrays to calculate minimum cost\n        for (; i < m - 1 && j < n - 1;) {\n            if (x[i] > y[j]) {\n                res += x[i] * verticalCuts;\n                horizontalCuts++;\n                i++;\n            } else {\n                res += y[j] * horizontalCuts;\n                verticalCuts++;\n                j++;\n            }\n        }\n        \n        // Add remaining horizontal cuts\n        for (; i < m - 1; i++) {\n            res += x[i] * verticalCuts;\n        }\n        \n        // Add remaining vertical cuts\n        for (; j < n - 1; j++) {\n            res += y[j] * horizontalCuts;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720926272",
    "subm_id": "1320281219"
}