{
    "username": "bowen1248",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int minsum, maxsum, mindiff, maxdiff;\n        vector<vector<int>> p = vector<vector<int>>(4, vector<int>(2, 0));\n        int index1 = 0;\n        int index2 = 0;\n        int index3 = 0;\n        int index4 = 0;\n        minsum = maxsum = points[0][0] + points[0][1];\n        mindiff = maxdiff = points[0][0] - points[0][1];\n        p[0][0] = points[0][0];\n        p[0][1] = points[0][1];\n        p[1][0] = points[0][0];\n        p[1][1] = points[0][1];\n        p[2][0] = points[0][0];\n        p[2][1] = points[0][1];\n        p[3][0] = points[0][0];\n        p[3][1] = points[0][1];\n        for (int i = 1; i < points.size(); i++) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            if (sum < minsum) {\n                minsum = sum;\n                p[0][0] = points[i][0];\n                p[0][1] = points[i][1];\n                index1 = i;\n            }\n            else if (sum > maxsum) {\n                maxsum = sum;\n                p[1][0] = points[i][0];\n                p[1][1] = points[i][1];\n                index2 = i;\n            }\n            if (diff < mindiff) {\n                mindiff = diff;\n                p[2][0] = points[i][0];\n                p[2][1] = points[i][1];\n                index3 = i;\n            }\n            else if (diff > maxdiff) {\n                maxdiff = diff;\n                p[3][0] = points[i][0];\n                p[3][1] = points[i][1];\n                index4 = i;\n            }\n        }\n        \n        int tmp = (maxsum - minsum) > (maxdiff - mindiff) ? 1: 0;\n        if (tmp) {\n            points.erase(points.begin() + index1);\n            if (index1 < index2) {\n                index2--;\n            }\n            points.push_back({p[0][0], p[0][1]});\n        } else {\n            points.erase(points.begin() + index3);\n            if (index3 < index4) {\n                index4--;\n            }\n            points.push_back({p[2][0], p[2][1]});\n        }\n        \n        minsum = maxsum = points[0][0] + points[0][1];\n        mindiff = maxdiff = points[0][0] - points[0][1];\n\n        for (int i = 1; i < points.size() - 1; i++) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            if (sum < minsum) {\n                minsum = sum;\n            }\n            else if (sum > maxsum) {\n                maxsum = sum;\n            }\n            if (diff < mindiff) {\n                mindiff = diff;\n            }\n            else if (diff > maxdiff) {\n                maxdiff = diff;\n            }\n        }\n        \n        int maximum1 = max(maxsum - minsum, maxdiff - mindiff);\n        if (tmp) {\n            points.erase(points.begin() + index2);\n        } else {\n            points.erase(points.begin() + index4);\n        }\n        \n        minsum = maxsum = points[0][0] + points[0][1];\n        mindiff = maxdiff = points[0][0] - points[0][1];\n\n        for (int i = 1; i < points.size(); i++) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            if (sum < minsum) {\n                minsum = sum;\n            }\n            else if (sum > maxsum) {\n                maxsum = sum;\n            }\n            if (diff < mindiff) {\n                mindiff = diff;\n            }\n            else if (diff > maxdiff) {\n                maxdiff = diff;\n            }\n        }\n        \n        // if ((maxsum - minsum) > (maxdiff - mindiff)) {\n        //     cout << p[1][0] << p[1][1] << \" \" << p[0][0] << p[0][1];\n        // } else {\n        //     cout << p[2][0] << p[2][1] << \" \" << p[3][0] << p[3][1];\n        // }\n        int maximum2 = max(maxsum - minsum, maxdiff - mindiff);\n        return min(maximum1, maximum2);\n    }\n};"
}