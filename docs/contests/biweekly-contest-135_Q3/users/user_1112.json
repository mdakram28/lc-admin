{
    "username": "qqrahul12",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int[] fq = new int[100001];\n        int n = nums.length;\n        int[] dp = new int[n/2];\n        for (int i = 0; i < nums.length / 2; i++) {\n            int diff = Math.abs(nums[i] - nums[nums.length - i - 1]);\n            fq[diff]++;\n            dp[i] = Math.max(Math.max(nums[i], nums[n - i - 1]), Math.max(k - nums[i], k - nums[n - i - 1]));\n        }\n        Arrays.sort(dp);\n        int j = 0;\n        int mfq = n;\n        for (int i = 0; i < fq.length; i++) {\n            while (j< n/2 && dp[j] < i)\n                j++;\n            int tmp = 0;\n            if (i <= k / 2)\n                tmp = n / 2 - fq[i];\n            else {\n                tmp = n / 2 - fq[i] + j;\n            }\n            if (tmp < mfq) mfq = tmp;\n        }\n        return mfq;\n    }\n}",
    "submit_ts": "1721489168",
    "subm_id": "1327445017"
}