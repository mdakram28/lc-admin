{
    "username": "Bandwidth_",
    "submission": "import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    int check=0;\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long count = 0;\n        \n        Map<Long, Long> prevResults = new HashMap<>();\n        \n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> currResults = new HashMap<>();\n            if (nums[i] == k) {\n                ++count;\n            }\n            isSorted(check);\n            currResults.put((long) nums[i], 1L);\n            \n            for (Map.Entry<Long, Long> entry : prevResults.entrySet()) {\n                long val = entry.getKey();\n                long freq = entry.getValue();\n                long newAndResult = val & nums[i];\n                isSorted(check);\n                if (newAndResult == k) {\n                    count += freq;\n                }\n                currResults.put(newAndResult, currResults.getOrDefault(newAndResult, 0L) + freq);\n            }\n            \n            prevResults = currResults;\n        }\n        \n        return count;\n    }\n\n    public static void main(String[] args) {\n        Solution sol = new Solution();\n        int[] nums = {1, 2, 3, 4, 5};\n        int k = 1;\n        System.out.println(sol.countSubarrays(nums, k));  // Example usage\n    }\n        public   boolean isSorted(int x) {\n            int n =x;\n            int []arr={check};\n            for (int i = 0; i < n - 1; i++) {\n                if (arr[i] > arr[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    \n}\n",
    "submit_ts": "1720280165",
    "subm_id": "1311779253"
}