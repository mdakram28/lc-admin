{
    "username": "Ravi",
    "submission": "const int inf = 1e8;\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& qry) {\n        using ll = long long;\n        int n = s.size();\n        vector<ll>ones(n, 0LL), zero(n, 0LL);\n        for(int i = 0; i < n; i++){\n            if(s[i] == '0')zero[i] += 1;\n            else ones[i] += 1;\n            if(i){\n                zero[i] += zero[i-1];\n                ones[i] += ones[i-1];\n            }\n        }\n        auto b_search = [&](int x, int y, vector<ll>&vec){\n            int l = x, r = y, res = y;\n            auto check = [&](int val){\n                return (vec[val] - ((x > 0) ? vec[x-1] : 0)) <= k;\n            };\n            while(l <= r){\n                ll mid = (l+r)/2;\n                if(check(mid)){\n                    res = mid;\n                    l = mid+1;\n                } else{\n                    r = mid-1;\n                }\n            }\n            return res;\n        };\n        vector<ll>right_bound(n, 0LL), len_rb(n, 0LL);\n        auto f = [&](ll x){\n            return (x*(x+1))/2;\n        };\n        for(int i = 0; i < n; i++){\n            right_bound[i] = max(b_search(i, n-1, zero), b_search(i, n-1, ones));\n            len_rb[i] = (right_bound[i] - i + 1);\n            if(i > 0){\n                len_rb[i] += len_rb[i-1];\n            }\n        }\n        // for(auto i: right_bound)cout<<i<<\" \";cout<<'\\n';\n        // for(auto i: len_rb)cout<<i<<\" \";cout<<'\\n';\n        vector<ll>ans;\n        for(auto q: qry){\n            if(right_bound[q[0]] > q[1]){\n                ans.push_back(f(q[1] - q[0] + 1));\n                continue;\n            }\n            ll l = q[0], r = q[1], res = q[1];\n            while(l <= r){\n                ll mid = (l+r)/2;\n                if(right_bound[mid] <= q[1]){\n                    res = mid; l = mid+1;\n                 } else{\n                    r = mid-1;\n                }\n            }\n            l = q[0];\n            ll cur_ans = len_rb[res] - ((l > 0) ? len_rb[l-1] : 0LL) + f(q[1] - res);\n            ans.push_back(cur_ans);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950701",
    "subm_id": "1359752760"
}