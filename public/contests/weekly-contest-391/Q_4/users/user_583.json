{
    "username": "pcardenasb",
    "submission": "class Solution:\n    \n    def get_extreme(self, points):\n        x_max = [-float('inf')] * 2\n        x_min = [float('inf')] * 2\n        i_max = [0, 0]\n        i_min = [0, 0]\n        for i, p in enumerate(points):\n            x = [0, 0]\n            for j in range(2):\n                x[j] = p[0] + (-1)**j * p[1]\n            \n                if x[j] > x_max[j]:\n                    i_max[j] = i\n                    x_max[j] = x[j]\n                if x[j] < x_min[j]:\n                    i_min[j] = i\n                    x_min[j] = x[j]\n        return i_max, i_min, x_max, x_min\n    \n    \n    def minimumDistance(self, points: List[List[int]]) -> int:\n        i_max, i_min, _, _ = self.get_extreme(points)\n        \n        minimum = float('inf')\n        \n        for i in chain(i_max, i_min):\n            pts = points.copy()\n            pts.pop(i)\n            _, _, x_max, x_min = self.get_extreme(pts)\n\n            minimum = min(minimum, max(x_max[0] - x_min[0], x_max[1] - x_min[1]))\n        \n        return minimum\n\n                    \n        "
}