{
    "username": "pala25",
    "submission": "class Solution {\npublic:\n       const int MOD = 1e9 + 7;\n    int dp[2001][51][51];\n    int countMonotonicPairs(int index, int lastValue, int remaining, vector<int>& nums) {\n        if (index == nums.size()) return 1;\n        if (dp[index][lastValue][remaining] != -1) return dp[index][lastValue][remaining];\n        \n        int result = 0;\n        for (int candidate = 0; candidate <= 50; candidate++) {\n            if (candidate >= lastValue && nums[index] - candidate <= remaining && nums[index] - candidate >= 0) {\n                result = (result + countMonotonicPairs(index + 1, candidate, nums[index] - candidate, nums)) % MOD;\n            }\n        }\n        return dp[index][lastValue][remaining] = result;\n    }\n    int countOfPairs(vector<int>& nums) {\n        memset(dp, -1, sizeof(dp));\n        return countMonotonicPairs(0, 0, 50, nums);\n    \n    }\n};",
    "submit_ts": "1723345349",
    "subm_id": "1351553850"
}