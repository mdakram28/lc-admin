{
    "username": "awesome-hertzffs",
    "submission": "class Solution {\n public:\n  long long countSubarrays(vector<int>& a, int k) {\n    int n = a.size();\n    a.push_back(0);\n    reverse(a.begin(), a.end());\n\n    vector<vector<int>> g(30, vector<int>(n + 1, 0));\n    for (int i = 1; i <= n; i++) {\n      for (int j = 0; j < 30; j++) {\n        g[j][i] = g[j][i - 1] + (a[i] >> j & 1);\n      }\n    }\n\n    auto f = [&](int l, int r) {\n      int ans = 0;\n      for (int i = 0; i < 30; i++) {\n        if (g[i][r] - g[i][l - 1] == r - l + 1) {\n          ans |= 1 << i;\n        }\n      }\n      return ans;\n    };\n\n    auto find_upper = [&](int l, int r, int lim) {\n      while (l < r) {\n        int mid = (l + r + 1) >> 1;\n        if (f(mid, lim) > k) {\n          r = mid - 1;\n        } else {\n          l = mid;\n        }\n      }\n      return l;\n    };\n\n    auto find_lower = [&](int l, int r, int lim) {\n      while (l < r) {\n        int mid = (l + r) >> 1;\n        if (f(mid, lim) < k) {\n          l = mid + 1;\n        } else {\n          r = mid;\n        }\n      }\n      return l;\n    };\n\n    auto calc = [&](int r) {\n      int upper = find_upper(1, r, r);\n      if (f(upper, r) != k) {\n        return 0;\n      }\n      return upper - find_lower(1, upper, r) + 1;\n    };\n\n\n    long long ans = 0;\n    for (int i = 1; i <= n; i++) {\n      if ((a[i] & k) != k) {\n        continue ;\n      }\n      ans += calc(i);\n    }\n\n    return ans;\n  }\n};",
    "submit_ts": "1720277803",
    "subm_id": "544558869"
}