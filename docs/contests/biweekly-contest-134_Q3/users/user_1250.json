{
    "username": "HOBBIT__",
    "submission": "class Solution {\npublic:\n    vector<int> solve(string s) {\n        int n = s.length();\n        vector<int> arr(n, 0);\n\n        for (int i = 1; i < n; i++) {\n            int pre = arr[i - 1];\n\n            while (pre > 0 && s[i] != s[pre]) {\n                pre = arr[pre - 1];\n            }\n\n            arr[i] = pre + (s[i] == s[pre]);\n        }\n        return arr;\n    }\n\n    int numberOfAlternatingGroups(vector<int>& nums, int k) {\n        int n = nums.size();\n        if (k == 1 || n == 0){\n            return n;\n        }\n\n        string s;\n        for (int i = 0; i < n; i++) {\n            s += '0' + nums[i];\n        }\n        \n        string temp = s + s;\n\n        string a, b;\n        int cur = 0;\n        \n        for (int i = 0; i < k; i++) {\n            a += '0' + cur;\n            cur = 1 - cur;\n        }\n        \n        cur = 1;\n        \n        for (int i = 0; i < k; i++) {\n            b += '0' + cur;\n            cur = 1 - cur;\n        }\n\n        string s1 = a + '$' + temp;\n        string s2 = b + '$' + temp;\n\n        vector<int> arr1 = solve(s1);\n        vector<int> arr2 = solve(s2);\n\n        int ans = 0;\n        for (int i = 0; i < n + 2 * k; i++) {\n            if (arr1[i] == k || arr2[i] == k){\n                ans++;\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1720278443",
    "subm_id": "1311709377"
}