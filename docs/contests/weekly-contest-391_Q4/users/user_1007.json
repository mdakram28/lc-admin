{
    "username": "wufengxuan1230",
    "submission": "class Solution {\npublic:\n    int x[4][100001] = {0};\n    //  x1 - x2 + y1 - y2; x1 >= x2, y1 >= y2\n    // -x1 + x2 + y1 - y2; x1 <  x2, y1 >= y2\n    //  x1 - x2 - y1 + y2; x1 >= x2, y1 <  y2\n    // -x1 + x2 - y1 + y2; x1 <  x2, y1 <  y2\n    \n    //   (x1 + y1)  - (x2 + y2)\n    //  (-x1 + y1)  - (-x2 + y2)\n    //   (x1 - y1)  - (x2 - y2)\n    //  (-x1 - y1)  - (-x2 - y2))\n    int minimumDistance(vector<vector<int>>& points) {\n        for (int i = 0; i < points.size(); ++i) {\n            int m = points[i][0], n = points[i][1];\n            x[0][i] =  m + n;\n            x[1][i] = -m + n;\n            x[2][i] =  m - n;\n            x[3][i] = -m - n;\n        }\n        \n        for (int i = 0; i < 4; ++i) {\n            sort(x[i], x[i] + points.size());\n        }\n        \n        int res = INT_MAX;\n        for (int i = 0; i < points.size(); ++i) {\n            int m = points[i][0], n = points[i][1];\n            \n            int d = 0;\n            if (m + n == x[0][points.size() - 1]) {\n                d = max(d, x[0][points.size() - 2] - x[0][0]);\n            } else if (m + n == x[0][0]) {\n                d = max(d, x[0][points.size() - 1] - x[0][1]);\n            } else {\n                d = max(d, x[0][points.size() - 1] - x[0][0]);\n            }\n            \n            if (-m + n == x[1][points.size() - 1]) {\n                d = max(d, x[1][points.size() - 2] - x[1][0]);\n            } else if (-m + n == x[1][0]) {\n                d = max(d, x[1][points.size() - 1] - x[1][1]);\n            } else {\n                d = max(d, x[1][points.size() - 1] - x[1][0]);\n            }\n            \n            if (m - n == x[2][points.size() - 1]) {\n                d = max(d, x[2][points.size() - 2] - x[2][0]);\n            } else if (m - n == x[2][0]) {\n                d = max(d, x[2][points.size() - 1] - x[2][1]);\n            } else {\n                d = max(d, x[2][points.size() - 1] - x[2][0]);\n            }\n            \n            if (-m - n == x[3][points.size() - 1]) {\n                d = max(d, x[3][points.size() - 2] - x[3][0]);\n            } else if (-m - n == x[3][0]) {\n                d = max(d, x[3][points.size() - 1] - x[3][1]);\n            } else {\n                d = max(d, x[3][points.size() - 1] - x[3][0]);\n            }\n            res = min(d, res);\n        }\n        return res;\n    }\n};"
}