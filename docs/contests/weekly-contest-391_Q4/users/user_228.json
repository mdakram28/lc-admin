{
    "username": "Laxman_Singh_Saini",
    "submission": "def max_d(arr, n):\n    min_sum = max_sum = arr[0][0] + arr[0][1]\n    min_diff = max_diff = arr[0][0] - arr[0][1]\n    mins , maxs , mind , maxd = 0,0,0,0\n    for i in range(1,n):\n        sum = arr[i][0] + arr[i][1]\n        diff = arr[i][0] - arr[i][1]\n        if (sum < min_sum):\n            min_sum = sum\n            mins = i\n        elif (sum > max_sum):\n            max_sum = sum\n            maxs = i\n        if (diff < min_diff):\n            min_diff = diff\n            mind = i\n        elif (diff > max_diff):\n            max_diff = diff\n            maxd = i\n \n    maxxi = max(max_sum - min_sum, max_diff - min_diff)\n \n    return maxxi , mins , maxs , mind , maxd\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n       \n        d,a,b,c,e = max_d(points , len(points))\n        \n        ans = d\n        n = len(points)\n       \n        \n        temp = points.pop(a)\n        d , p,q,r,s = max_d(points , len(points))\n        ans = min(ans,d)\n        points.insert(a , temp)\n    \n        temp = points.pop(b)\n        d , p,q,r,s = max_d(points , len(points))\n        ans = min(ans,d)\n        points.insert(b , temp)\n        \n    \n        temp = points.pop(c)\n        d , p,q,r,s = max_d(points , len(points))\n        ans = min(ans,d)\n        points.insert(c , temp)\n        \n       \n        temp = points.pop(e)\n        d , p,q,r,s = max_d(points , len(points))\n        ans = min(ans,d)\n        points.insert(e, temp)\n        \n        return ans\n        \n        \n        \n        \n        \n        "
}