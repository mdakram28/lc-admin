{
    "username": "pensive-easleys0j",
    "submission": "class Solution {\n#include <set>\npublic:\n\tint minimumDistance(vector<vector<int>>& points) {\n\t\tmultiset<int> mst1,mst2;\n\t\tint ans = 1e9 + 10;\n\t\tfor(auto p : points){\n\t\t\tmst1.insert(p[0] + p[1]);\n\t\t\tmst2.insert(p[0] - p[1]);\n\t\t}\n\t\tfor(auto p : points){\n\t\t\t//p[0],p[1]\n\t\t\tmst1.erase(mst1.find(p[0]+p[1]));\n\t\t\tmst2.erase(mst2.find(p[0]-p[1]));\n\t\t\tans = min(ans,max(*--mst1.end()-*mst1.begin(),*--mst2.end()-*mst2.begin()));\n\t\t\tmst1.insert(p[0] + p[1]);\n\t\t\tmst2.insert(p[0] - p[1]);\n\t\t}\n\t\treturn ans;\n\t}\n};"
}