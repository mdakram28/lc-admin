{
    "username": "Kazama_0126",
    "submission": "#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n\n// Define ordered_multiset\ntemplate <typename T>\nusing ordered_multiset = tree<\n    T,\n    null_type,\n    less<T>,\n    rb_tree_tag,\n    tree_order_statistics_node_update>;\n\n  \n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int,int> mp;\n        ordered_multiset<int> oms;\n        multiset<pair<int,int>> ms;\n        int n = nums.size();\n        for(int i = 0;i<n/2; i++){\n            int diff = abs(nums[i] - nums[n-i-1]);\n            mp[diff]++;\n            ms.insert({diff,max(min(nums[i],nums[n-i-1]), k - max(nums[n-i-1],nums[i]))});\n            // cout<<diff<<\" \"<<max(nums[i], k - nums[n-i-1])<<endl;\n        }\n\n        int cnt = 0;\n        int res = n/2;\n        int prev = -1;\n        for(auto x:ms){\n            cnt++;\n            if(x.first == prev){\n                oms.insert(x.first + x.second);\n                continue;\n            }\n            int diff = x.first;\n            int temp = n/2 - mp[diff] - cnt;\n            int t = (oms.order_of_key(diff));\n            // cout<<diff<<\" \"<<cnt<<\" \"<<t<<endl;\n            temp += (cnt + t);\n            oms.insert(diff + x.second);\n\n            res = min(res,temp);\n\n            prev = diff;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721489819",
    "subm_id": "1327464742"
}