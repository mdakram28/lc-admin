{
    "username": "kimkapitan",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontal_cuts: List[int], vertical_cuts: List[int]) -> int:\n        \n        horizontal_cuts.sort()\n        vertical_cuts.sort()\n\n        horizontal_pieces = 1\n        vertical_pieces = 1\n\n        horizontal_i = len(horizontal_cuts) - 1\n        vertical_i = len(vertical_cuts) - 1\n        total_cost = 0\n\n        while horizontal_i >= 0 and vertical_i >= 0:\n\n            if horizontal_cuts[horizontal_i] > vertical_cuts[vertical_i]:\n                total_cost += horizontal_cuts[horizontal_i] * vertical_pieces\n                horizontal_i -= 1\n                horizontal_pieces += 1\n            else:\n                total_cost += vertical_cuts[vertical_i] * horizontal_pieces\n                vertical_i -= 1\n                vertical_pieces += 1\n\n        while horizontal_i >= 0:\n            total_cost += horizontal_cuts[horizontal_i] * vertical_pieces\n            horizontal_i -= 1\n            horizontal_pieces += 1\n\n        while vertical_i >= 0:    \n            total_cost += vertical_cuts[vertical_i] * horizontal_pieces\n            vertical_i -= 1\n            vertical_pieces += 1\n\n        return total_cost\n",
    "submit_ts": "1720925400",
    "subm_id": "1320253502"
}