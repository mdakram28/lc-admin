{
    "username": "Varuas5",
    "submission": "class Solution {\n    private static final int MOD = 1000000007;\n    public int countOfPairs(int[] nums) {\n        int[][][] memo = new int[nums.length][51][51];\n        for (int i = 0; i < memo.length; i++) {\n            for (int j = 0; j < memo[i].length; j++) {\n                Arrays.fill(memo[i][j], -1);\n            }\n        }\n\n        return helper(nums, 0, Integer.MIN_VALUE, Integer.MAX_VALUE, memo);\n    }\n\n    private int helper(int[] nums, int index, int prev1, int prev2, int[][][] memo) {\n        if (index == nums.length) {\n            return 1;\n        }\n\n        if (prev1 != Integer.MIN_VALUE && prev2 != Integer.MAX_VALUE && memo[index][prev1][prev2] != -1) {\n            return memo[index][prev1][prev2];\n        }\n\n        int num = nums[index];\n        int numCombos = 0;\n        for (int left = 0; left <= num; left++) {\n            int right = num - left;\n            if (left >= prev1 && right <= prev2) {\n                numCombos += helper(nums, index + 1, left, right, memo);\n                numCombos %= MOD;\n            }\n        }\n\n        if (prev1 == Integer.MIN_VALUE) {\n            return numCombos % MOD;\n        } else {\n            return memo[index][prev1][prev2] = numCombos % MOD;\n        }\n    }\n}",
    "submit_ts": "1723346389",
    "subm_id": "1351576511"
}