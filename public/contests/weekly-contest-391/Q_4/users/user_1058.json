{
    "username": "ostmbh",
    "submission": "class Solution {\npublic:\n    #include<algorithm>\n    struct T{\n        int id,x;\n        bool operator<(const T& a)const{\n            return x < a.x;\n        }\n    };\n    vector<T>p[4];\n    typedef long long ll;\n    int n;\n    int check(ll x){\n        ll res=0;\n        int id1, id2;\n        for(int i=0;i<4;i++){\n            if(res< p[i][n-1].x - p[i][0].x){\n                    res = p[i][n-1].x - p[i][0].x;\n                    id1 = p[i][n-1].id;\n                    id2 = p[i][0].id;\n            }\n        }\n        \n        ll res1 = 0;\n        for(int i=0;i<4;i++){\n            int L=((p[i][n-1].id == id1))?p[i][n-2].x:p[i][n-1].x;\n            int R=((p[i][0].id == id1))?p[i][1].x:p[i][0].x;\n            if(L-R>res1)\n                res1 = L-R;\n        }\n        \n        ll res2 = 0;\n        for(int i=0;i<4;i++){\n            int L=((p[i][n-1].id == id2))?p[i][n-2].x:p[i][n-1].x;\n            int R=((p[i][0].id == id2))?p[i][1].x:p[i][0].x;\n            if(L-R>res2)\n                res2 = L-R;\n        }\n        \n        return min(res1,res2)<=x;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        ll l = 0, r= 2ll * 100000000;\n        n = points.size();\n        for(int i=0;i<4;i++)\n            p[i].clear();\n        for(int i=0;i<n;i++){\n            T tmp;\n            tmp.id = i;\n            tmp.x = points[i][0] + points[i][1];\n            p[0].push_back(tmp);\n            tmp.x = points[i][0] - points[i][1];\n            p[1].push_back(tmp);\n            tmp.x = -points[i][0] + points[i][1];\n            p[2].push_back(tmp);\n            tmp.x = -points[i][0] - points[i][1];\n            p[3].push_back(tmp);\n        }\n        \n        for(int i=0;i<4;i++)\n            sort(p[i].begin(),p[i].end());\n        while(l+1<r){\n            ll mid =(l+r)>>1;\n            if(check(mid))\n                r=mid;\n            else l=mid;\n        }\n        if(check(l))\n            return l;\n        return r; \n    }\n};"
}