{
    "username": "Wolfester",
    "submission": "class Solution {\npublic:\n    \n    pair<int,int> bfs(vector<vector<int>> &gr, int ver){\n        queue<pair<int,int>>q;\n        int n = gr.size();\n        q.push({ver, 0});\n        vector<int> vis(n, 0); vis[ver] = 1;\n\n        pair<int,int> z;\n\n        while(!q.empty()){\n            z = q.front(); q.pop();\n\n            for(auto x : gr[z.first]){\n                if(vis[x]) continue;\n                else {vis[x] = 1; q.push({x, z.second+1});}\n            }\n        }\n\n        return z;\n    }\n    int diameter(vector<vector<int>>& gr){\n        auto nn1 = bfs(gr, 0);\n        auto nn2 = bfs(gr, nn1.first);\n        \n        return nn2.second+1;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size()+1, m = edges2.size()+1;\n        vector<vector<int>> gr1(n), gr2(m);\n        \n        for(auto x : edges1){\n            gr1[x[0]].push_back(x[1]);\n            gr1[x[1]].push_back(x[0]);\n        }\n        \n        for(auto x : edges2){\n            gr2[x[0]].push_back(x[1]);\n            gr2[x[1]].push_back(x[0]);\n        }\n        \n        int a = diameter(gr1);\n        int b = diameter(gr2);  cout<<a<<\" \"<<b<<endl;\n        \n        if(a==1 and b==1) return 1;\n        if(a==1 and b==2) return 2;\n        if(a==2 and b==1) return 2;\n        if(a==1 or b==1) return max(a-1, b-1);\n        \n        int ans = max(a-1, b-1);\n        int temp = a/2 + 1 + b/2;\n        \n        //int temp = max({a1+b1}, {a1})\n        \n        ans = max(ans, temp);\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": 1719718988.0
}