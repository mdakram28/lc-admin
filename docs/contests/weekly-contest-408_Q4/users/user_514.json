{
    "username": "AmanJha04527",
    "submission": "class Solution {\npublic:\n    int b(vector<vector<int>> &g, int s, int t1, int t2, int n) {\n        queue<int> q;\n        vector<int> v(n + 4, 0);\n        q.push(s);\n        v[s] = 1;\n        \n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int i : g[u]) {\n                if (!v[i]) {\n                    q.push(i);\n                    v[i] = 1;\n                }\n            }\n        }\n        return v[t1] || v[t2];\n    }\n    bool canReachCorner(int x, int y, vector<vector<int>>& c2) {\n        int n = c2.size();\n        vector<pair<pair<int, int>, int>> c(n);\n        vector<vector<int>> g(n + 4);\n       \n        for (int i = 0; i < n; ++i) {\n            c[i] = {{c2[i][0], c2[i][1]}, c2[i][2]};\n        }\n       \n        for (int i = 0; i < n; ++i) {\n            if (c[i].first.first <= c[i].second) {\n                g[n].push_back(i);\n                g[i].push_back(n);\n            }\n            if (x - c[i].first.first <= c[i].second) {\n                g[n + 2].push_back(i);\n                g[i].push_back(n + 2);\n            }\n            if (c[i].first.second <= c[i].second) {\n                g[n + 1].push_back(i);\n                g[i].push_back(n + 1);\n            }\n            if (y - c[i].first.second <= c[i].second) {\n                g[n + 3].push_back(i);\n                g[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j) {\n                if (c[i].second + c[j].second >= sqrt(pow(c[i].first.first - c[j].first.first, 2) + pow(c[i].first.second - c[j].first.second, 2))) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n        int check = max(b(g, n, n + 1, n + 2, n + 4), b(g, n + 3, n + 2, n + 1, n + 4));\n        return !check;\n    }\n};",
    "submit_ts": "1722137411",
    "subm_id": "1335762986"
}