{
    "username": "aadityavvij",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int numVertical = 1;\n        int numHorizontal = 1;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        int i = m-2;\n        int j = n-2;\n        long long ans = 0;\n        while(i>=0 || j>=0){\n            if(i<0){\n                ans = ans + verticalCut[j]*numHorizontal;\n                numVertical++;\n                j--;\n                continue;\n            }\n            if(j<0){\n                ans = ans + horizontalCut[i]*numVertical;\n                numHorizontal++;\n                i--;\n                continue;\n            }\n            if(verticalCut[j] > horizontalCut[i]){\n                ans = ans + verticalCut[j]*numHorizontal;\n                numVertical++;\n                j--;\n            }\n            else{\n                ans = ans + horizontalCut[i]*numVertical;\n                numHorizontal++;\n                i--;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926171",
    "subm_id": "1320278069"
}