{
    "username": "nickname",
    "submission": "import java.util.Arrays;\nimport java.util.Comparator;\n\nclass Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        int[][]rowsMaxTriplet = new int[m][3];\n        for(int i = 0; i < m; i++){\n            Integer []ids=new Integer[n];\n            Arrays.setAll(ids, a->a);\n            int finalI = i;\n            Arrays.sort(ids, Comparator.comparingInt(a->board[finalI][a]));\n\n            for(int j=n-1;j>=n-3;j--){\n                rowsMaxTriplet[finalI][n-1-j]=ids[j];\n            }\n        }\n\n        long res=Long.MIN_VALUE;\n        for(int i = 0; i < m; i++){\n            for(int j=i+1; j < m; j++){\n                for(int k=j+1; k < m; k++){\n\n                    for(int a: rowsMaxTriplet[i]){\n                        for(int b: rowsMaxTriplet[j]){\n                            if(a==b)continue;\n                            for(int c: rowsMaxTriplet[k]){\n                                if(a==c || b==c)continue;\n\n                                res=Math.max(res,\n                                        0l+board[i][a]+board[j][b]+board[k][c]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return res;\n    }\n}",
    "submit_ts": "1723906207",
    "subm_id": "556316901"
}