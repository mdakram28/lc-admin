{
    "username": "nishant2004",
    "submission": "class Solution {\npublic:\n\n    long long subarraysWithANDAtLeastK(vector<int>& nums, int k){\n        int n = nums.size();\n        long long ans = 0;\n        int l = 0, r = 0;\n\n        vector<int> bits(31, 0);\n        int curr_and = 0;\n        while(r < n){\n            for(int i = 0; i < 31; i++){\n                if((nums[r] >> i) & 1){\n                    bits[i]++;\n                }\n            }\n\n            curr_and = 0;\n            for(int i = 0; i < 31; i++){\n                if(bits[i] == r - l + 1){\n                    curr_and += pow(2, i);\n                }\n            }\n\n            while(l <= r && curr_and < k){\n                for(int i = 0; i < 31; i++){\n                    if((nums[l] >> i) & 1){\n                        bits[i]--;\n                    }\n                }\n                l++;\n\n                curr_and = 0;\n                for(int i = 0; i < 31; i++){\n                    if(bits[i] == r - l + 1){\n                        curr_and += pow(2, i);\n                    }\n                }\n            }\n\n            ans += (r - l + 1);\n            r++;\n        }\n\n        return ans;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        return subarraysWithANDAtLeastK(nums, k) - subarraysWithANDAtLeastK(nums, k + 1);\n    }\n};",
    "submit_ts": "1720280803",
    "subm_id": "1311802609"
}