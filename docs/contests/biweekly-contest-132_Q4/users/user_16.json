{
    "username": "Kude",
    "submission": "#pragma GCC optimize(\"O2\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < (int)(n); i++)\n#define rrep(i,n) for(int i = (int)(n) - 1; i >= 0; i--)\n#define all(x) begin(x), end(x)\n#define rall(x) rbegin(x), rend(x)\ntemplate<class T> bool chmax(T& a, const T& b) { if (a < b) { a = b; return true; } else return false; }\ntemplate<class T> bool chmin(T& a, const T& b) { if (b < a) { a = b; return true; } else return false; }\nusing ll = long long;\nusing P = pair<int,int>;\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing VL = vector<ll>;\nusing VVL = vector<VL>;\n\n\nint dp[5100][55];\nint mx[55];\n\ntemplate <class S>\nstruct value_compression : vector<S> {\n  bool built = false;\n  using VS = vector<S>;\n  using VS::VS;\n  value_compression(vector<S> v) : vector<S>(move(v)) {}\n  void build() {\n    sort(this->begin(), this->end());\n    this->erase(unique(this->begin(), this->end()), this->end());\n    built = true;\n  }\n  template <class T>\n  void convert(T first, T last) {\n    assert(built);\n    for (; first != last; ++first) *first = (*this)(*first);\n  }\n  int operator()(S x) {\n    assert(built);\n    return lower_bound(this->begin(), this->end(), x) - this->begin();\n  }\n  void clear() {\n    this->clear();\n    built = false;\n  }\n};\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n      int n = a.size();\n      value_compression vc = a;\n      vc.build();\n      vc.convert(all(a));\n      int sz = vc.size();\n      rep(i, sz) rep(j, k + 1) dp[i][j] = 0;\n      rep(j, k + 1) mx[j] = 0;\n      int ans = 0;\n      for (int x : a) {\n        rrep(j, k + 1) {\n          if (j != k) {\n            if (chmax(dp[x][j+1], mx[j] + 1)) chmax(mx[j+1], mx[j] + 1);\n          }\n          chmax(mx[j], ++dp[x][j]);\n        }\n      }\n      rep(i, sz) chmax(ans, dp[i][k]);\n      return ans;\n    }\n};",
    "submit_ts": "1717858146",
    "subm_id": "1281676425"
}