{
    "username": "megurine",
    "submission": "#include <bits/stdc++.h>\n\n#ifdef MEGURINE\n#include \"algo/debug.h\"\n#include \"algo/debug_lc.h\"\n#else\n#define debug(...) 42\n#endif\n\nusing namespace std;\n\n#define itr(it) begin(it), end(it)\n\nint __fast_io__ = []() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\n\ntemplate<typename T>\nbool chmax(T &a, T b) { return a < b ? (a = b, true) : false; }\n\ntemplate<typename T>\nbool chmin(T &a, T b) { return a > b ? (a = b, true) : false; }\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>> &queries) {\n        set<int> S;\n        for (int i = 0; i < n; ++i) S.emplace(i);\n        vector<int> ans;\n        for (auto &it: queries) {\n            int i = it[0], j = it[1];\n            auto itr = S.upper_bound(i);\n            while (*itr < j) {\n                itr = S.erase(itr);\n            }\n            debug(i, j, S);\n            ans.emplace_back(int(S.size()) - 1);\n        }\n        return ans;\n    }\n};\n\n#ifdef MEGURINE\n\nint main() {\n    freopen(\"../input.txt\", \"r\", stdin);\n    freopen(\"../output.txt\", \"w\", stdout);\n    clock_t start = clock();\n    int T;\n    cin >> T;\n    getchar();\n    while (T--) {\n        Solution sol;\n        test<int, vector<vector<int>>>(sol, &Solution::shortestDistanceAfterQueries);\n    }\n\n    clock_t end = clock();\n    cout << \"\\nRunning Time: \" << (double) (end - start) / CLOCKS_PER_SEC * 1000 << \"ms\" << endl;\n    return 0;\n}\n\n#endif\n",
    "submit_ts": "1722739597",
    "subm_id": "1343698391"
}