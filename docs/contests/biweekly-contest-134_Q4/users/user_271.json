{
    "username": "sgdfbahjbhbaisdufg",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> cnt1(32), cnt2(32);\n        auto off = [&](vector<int>& cnt, int j, int delta) {\n            for (int i = 0; i < 31; ++i) {\n                if ((nums[j] & (1 << i)) == 0) {\n                    cnt[i] += delta;\n                }\n            }\n        };\n        auto getv = [&](vector<int>& cnt) {\n            int v = 0;\n            for (int i = 0; i < 31; ++i) {\n                if (cnt[i] == 0) {\n                    v |= (1 << i);\n                }\n            }\n            return v;\n        };\n        \n        int l1 = 0, l2 = 0;\n        ll ans = 0;\n        for (int r = 0; r < n; ++r) {\n            off(cnt1, r, 1);\n            int v1 = INT_MIN;\n            while ((v1 = getv(cnt1)) < k) {\n                off(cnt1, l1, -1);\n                l1++;\n            }\n            \n            off(cnt2, r, 1);\n            int v2 = INT_MIN;\n            while ((v2 = getv(cnt2)) <= k) {\n                off(cnt2, l2, -1);\n                l2++;\n            }\n            \n            if (v1 == k) {\n                ans += (l2 - l1);\n            }\n            \n            // printf(\"%d %d %d %d %d %d\\n\", r, l1, l2, v1, v2, ans);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278671",
    "subm_id": "1311719264"
}