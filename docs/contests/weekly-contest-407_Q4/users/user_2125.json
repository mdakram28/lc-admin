{
    "username": "hardiksachan",
    "submission": "class Solution {\npublic:\n    vector<int> nextSmallerToLeft(vector<int>& a) {\n        int n = a.size();\n        vector<int> left(n);\n        stack<int> st;\n        for (int i = n - 1; i >= 0; i--) {\n            while (!st.empty() && a[st.top()] > a[i]) {\n                left[st.top()] = a[i];\n                st.pop();\n            }\n            st.push(i);\n        }\n        return left;\n    }\n\n    long long countOperations(vector<int>& arr) {\n        long long moves = 0;\n        int n = arr.size();\n\n        vector<int> left = nextSmallerToLeft(arr);\n        vector<int> delta(n);\n\n        for (int i = 0; i < n; i++) {\n            delta[i] = arr[i] - left[i];\n        }\n\n        for (int i = 0; i < n; i++) {\n            if (i > 0 && arr[i - 1] >= arr[i]) {\n                continue;\n            }\n            moves += (long long)(delta[i]);\n        }\n\n        return moves;\n    };\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> positive(n), negative(n);\n\n        for (int i = 0; i < n; i++) {\n            if (nums[i] == target[i]) {\n                positive[i] = 0;\n                negative[i] = 0;\n            } else if (nums[i] < target[i]) {\n                positive[i] = target[i] - nums[i];\n                negative[i] = 0;\n            } else {\n                positive[i] = 0;\n                negative[i] = nums[i] - target[i];\n            }\n        }\n\n        return countOperations(positive) + countOperations(negative);\n    }\n};",
    "submit_ts": "1721533723",
    "subm_id": "1328015260"
}