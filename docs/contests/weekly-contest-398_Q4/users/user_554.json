{
    "username": "code_OR",
    "submission": "class Solution {\n    int req;\n    map<pair<int, int>, int> dp;\n    int count(long long curr, int step){\n        if(dp.find({curr, step}) != dp.end())return dp[{curr, step}];\n        if(curr > req+1)return 0;\n        if(curr == req+1) return dp[{curr, step}] =1+count((curr-1)+(1ll<<step), step+1);\n        if(curr==req)  return dp[{curr, step}] = 1ll+count(curr+(1ll<<step), step+1) + count((curr-1)+(1ll<<step), step+1);\n        return dp[{curr, step}] = count(curr+(1ll<<step), step+1) + count((curr-1)+(1ll<<step), step+1);\n    }\npublic:\n    int waysToReachStair(int k) {\n        req = k;\n        int step=0;\n        return count(1, 0);\n    }\n};",
    "submit_ts": 1716088923.0
}