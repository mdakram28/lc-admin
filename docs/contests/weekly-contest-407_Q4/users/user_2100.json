{
    "username": "silvertint10",
    "submission": "# from sortedcontainers import SortedList\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        A = [b - a for a, b in zip(nums, target)]\n        B = []\n        for i, a in enumerate(A):\n            if not i or a != A[i - 1]:\n                B.append(a)\n\n        C = sorted(B)\n        N = len(C)\n        x = C[N // 2]\n\n        def check(B):\n            if not B: return 0\n            dic = defaultdict(list)\n            for i, b in enumerate(B):\n                dic[b].append(i)\n            ans = 0\n            n = len(B)\n            left, right = [0] * n, [0] * n\n            stack = [(float(\"inf\"), -1)]\n            for i in range(n):\n                while stack and stack[-1][0] < B[i]: stack.pop()\n                left[i] = stack[-1][0]\n                stack.append((B[i], i))\n            stack = [(float(\"inf\"), n)]\n            for i in range(n - 1, -1, -1):\n                while stack and stack[-1][0] <= B[i]: stack.pop()\n                right[i] = stack[-1][0]\n                stack.append((B[i], i))\n            for k in sorted(dic):\n                for i in dic[k]:\n                    tmp = inf\n                    if left[i] < tmp: tmp = left[i]\n                    if right[i] < tmp: tmp = right[i]\n                    if tmp < inf:\n                        ans += tmp - k\n            return ans - k\n\n        ans = 0\n        for i, g in groupby(B, key=lambda x: x >= 0):\n            g = list(g)\n            if i:\n                g = [-x for x in g]\n            ans += check(g)\n        return ans\n        \n        \n            ",
    "submit_ts": "1721533394",
    "subm_id": "548397505"
}