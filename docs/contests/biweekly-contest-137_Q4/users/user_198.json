{
    "username": "babinclaudiu",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<pair<int,int>>>vec(board.size(), vector<pair<int,int>>());\n        int k = 0;\n        long long ans = -1e18;\n        multiset<pair<int,int>>ms;\n        for(auto row : board) {\n            vector<pair<int,int>>v;\n            for(int i = 0;i < row.size();i++) v.push_back(make_pair(row[i], i));\n            sort(v.rbegin(), v.rend());\n            for(int i = 0;i < 3;i++) {\n                vec[k].push_back(v[i]);\n                ms.insert(v[i]);\n            }\n            k++;\n        }\n        for(int i = 0;i < board.size();i++) {\n            for(int k = 0;k < 3;k++) ms.erase(ms.find(vec[i][k]));\n            for(int j = i + 1;j < board.size();j++) {\n                for(int k = 0;k < 3;k++) ms.erase(ms.find(vec[j][k]));\n                for(int k1 = 0;k1 < 3;k1++) {\n                    for(int k2 = 0;k2 < 3;k2++) {\n                        if(vec[i][k1].second != vec[j][k2].second) {\n                            auto it = --ms.end();\n                            while((*it).second == vec[i][k1].second || (*it).second == vec[j][k2].second) {\n                                it--;\n                            }\n                            ans = max(ans, 1LL * vec[i][k1].first + vec[j][k2].first + (*it).first);\n                        }\n                    }\n                }\n                for(int k = 0;k < 3;k++) ms.insert(vec[j][k]);\n            }\n            for(int k = 0;k < 3;k++) ms.insert(vec[i][k]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907412",
    "subm_id": "1359106363"
}