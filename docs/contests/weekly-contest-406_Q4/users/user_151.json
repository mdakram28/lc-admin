{
    "username": "chrristy_george",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         priority_queue<int> hor,ver;\n        for(auto val: horizontalCut){\n            hor.push(val);\n        }\n        for(auto val: verticalCut){\n            ver.push(val);\n        }\n        int cnt1 = 0;\n        int cnt2 = 0;\n        long long res = 0;\n        while((!hor.empty()) || (!ver.empty())){\n            int horMax = (hor.empty())?(INT_MIN):hor.top();\n            int verMax = (ver.empty())?(INT_MIN):ver.top();\n            if(horMax>verMax){\n                hor.pop();\n                long long curans = (cnt2+1)*horMax;\n                res+=curans;\n                cnt1++;\n            }\n            else{\n                ver.pop();\n                long long curans = (cnt1+1)*verMax;\n                res+=curans;\n                cnt2++;\n            }\n        }\n        return res;\n        \n    }\n};",
    "submit_ts": "1720925140",
    "subm_id": "1320244283"
}