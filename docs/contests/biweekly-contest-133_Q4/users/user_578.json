{
    "username": "Zeus_28",
    "submission": "class Solution {\npublic:\n    const int MOD = 1000000007;\nconst int MAX_INVERSIONS = 400;\n\nunordered_map<int, int> initializeRequirements(vector<vector<int>>& requirements) {\n    unordered_map<int, int> reqMap;\n    for (auto& req : requirements) {\n        reqMap[req[0] + 1] = req[1];\n    }\n    return reqMap;\n}\n\nvector<vector<long long>> calculatePermutations(int n, const unordered_map<int, int>& reqMap) {\n    vector<vector<long long>> permCounts(n + 1, vector<long long>(MAX_INVERSIONS + 1, 0));\n    permCounts[0][0] = 1;\n\n    for (int length = 1; length <= n; length++) {\n        for (int inversions = 0; inversions <= MAX_INVERSIONS; inversions++) {\n            for (int newPos = 0; newPos < length; newPos++) {\n                int prevInversions = inversions - newPos;\n                if (prevInversions >= 0) {\n                    permCounts[length][inversions] = (permCounts[length][inversions] + permCounts[length - 1][prevInversions]) % MOD;\n                }\n            }\n        }\n\n        if (reqMap.count(length)) {\n            int targetInversions = reqMap.at(length);\n            for (int inversions = 0; inversions <= MAX_INVERSIONS; inversions++) {\n                if (inversions != targetInversions) {\n                    permCounts[length][inversions] = 0;\n                }\n            }\n        }\n    }\n\n    return permCounts;\n}\n\nint calculateResult(int n, const vector<vector<long long>>& permCounts) {\n    long long result = 0;\n    for (int inversions = 0; inversions <= MAX_INVERSIONS; inversions++) {\n        result = (result + permCounts[n][inversions]) % MOD;\n    }\n    return static_cast<int>(result);\n}\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n            unordered_map<int, int> reqMap = initializeRequirements(requirements);\n    vector<vector<long long>> permCounts = calculatePermutations(n, reqMap);\n    return calculateResult(n, permCounts);\n\n    }\n};",
    "submit_ts": "1719070415",
    "subm_id": "1296822460"
}