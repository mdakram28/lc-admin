{
    "username": "arignote",
    "submission": "class Solution {\n\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] result = new int[queries.length];\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for (int i = 0, k = n - 1; i < queries.length; i++) {\n            Map.Entry<Integer, Integer> entry = map.floorEntry(queries[i][0]);\n            if (entry == null || entry.getValue() < queries[i][1]) {\n                for (; (entry = map.ceilingEntry(queries[i][0])) != null && entry.getValue() <= queries[i][1]; map.remove(entry.getKey())) {\n                    k += entry.getValue() - entry.getKey() - 1;\n                }\n                map.put(queries[i][0], queries[i][1]);\n                k -= queries[i][1] - queries[i][0] - 1;\n            }\n            result[i] = k;\n        }\n        return result;\n    }\n}",
    "submit_ts": "1722742544",
    "subm_id": "1343771437"
}