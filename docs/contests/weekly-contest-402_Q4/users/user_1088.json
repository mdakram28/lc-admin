{
    "username": "hao-yue-xing-chen-e",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        dic = SortedList()\n        res = []\n        for i in range(1, n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                dic.add(i)\n        for t, l, r in queries:\n            if t == 1:\n                ll = bisect_right(dic, l)\n                rr = bisect_left(dic, r)\n                res.append(max(0, rr - ll))\n            else:\n                nums[l] = r \n                for i in (l-1, l, l+1):\n                    if 0 < i < n-1:\n                        if nums[i] > nums[i-1] and nums[i] > nums[i+1] and i not in dic:\n                            dic.add(i)\n                        elif not(nums[i] > nums[i-1] and nums[i] > nums[i+1]) and i in dic:\n                            dic.remove(i)\n        return res\n",
    "submit_ts": "1718507707",
    "subm_id": "539782974"
}