{
    "username": "GauravChauhan_11",
    "submission": "class TrieV{\npublic:\n    vector<TrieV*> children;\n    int value;\n    bool isEnd;\n\n    TrieV() : children(26, nullptr), value(INT_MAX), isEnd(false) {}\n};\n\nclass Trie {\npublic:\n    TrieV* root;\n\n    Trie() {\n        root = new TrieV();\n    }\n\n    void add(const string& word, int cost) {\n        TrieV* node = root;\n        for (char c : word) {\n            if (!node->children[c - 'a']) {\n                node->children[c - 'a'] = new TrieV();\n            }\n            node = node->children[c - 'a'];\n        }\n        node->value = min(cost, node->value);\n        node->isEnd = true;\n    }\n\n    TrieV* getR() {\n        return root;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie trie;\n        int l = target.size();\n        vector<int> mini(l + 1, INT_MAX);\n\n        for (int i = 0; i < words.size(); ++i) {\n            trie.add(words[i], costs[i]);\n        }\n\n        mini[0] = 0;\n\n        for (int i = 0; i < l; ++i) {\n            if (mini[i] == INT_MAX) continue;\n\n            TrieV* node = trie.getR();\n            for (int j = i; j < l; ++j) {\n                char c = target[j];\n                if (!node->children[c - 'a']) break;\n                node = node->children[c - 'a'];\n                if (node->isEnd) {\n                    mini[j + 1] = min(mini[j + 1], mini[i] + node->value);\n                }\n            }\n        }\n\n        return mini[l] == INT_MAX ? -1 : mini[l];\n    }\n};\n",
    "submit_ts": "1720322679",
    "subm_id": "1312356277"
}