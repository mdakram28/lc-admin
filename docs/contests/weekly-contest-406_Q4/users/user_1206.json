{
    "username": "jha_01",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        ll int cost=0;\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        int hor_idx=horizontalCut.size()-1, ver_idx=verticalCut.size()-1, hor_pieces=1, ver_pieces=1;\n        while (hor_idx>=0 && ver_idx>=0) {\n            if (horizontalCut[hor_idx]>=verticalCut[ver_idx]) {\n                hor_pieces++;\n                cost+=(ver_pieces*horizontalCut[hor_idx]);\n                hor_idx--;\n            }\n            else {\n                ver_pieces++;\n                cost+=(hor_pieces*verticalCut[ver_idx]);\n                ver_idx--;\n            }\n        }\n        while (hor_idx>=0) {\n            hor_pieces++;\n            cost+=(ver_pieces*horizontalCut[hor_idx]);\n            hor_idx--;\n        }\n        while (ver_idx>=0) {\n            ver_pieces++;\n            cost+=(hor_pieces*verticalCut[ver_idx]);\n            ver_idx--;\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926121",
    "subm_id": "1320276633"
}