{
    "username": "sakura-xwb",
    "submission": "class Solution {\nint ans[];\n    public int[] timeTaken(int[][] edges) {\n        int n = edges.length + 1;\n        List<Integer> arr[] = new List[n];\n        Arrays.setAll(arr, e->new ArrayList<>());\n        for(var i : edges) {\n            arr[i[0]].add(i[1]);\n            arr[i[1]].add(i[0]);\n        }\n        ans = new int[n];\n        f(arr);\n        return ans;\n    }\n    void f(List<Integer> arr[]) {\n        int n = arr.length;\n        PriorityQueue<int[]> q[] = new PriorityQueue[n];\n        for(int i = 0; i < n; ++i) {\n            q[i] = new PriorityQueue<>((a, b)->b[1] - a[1]);\n        }\n        dfs(0, -1, arr, q);\n        dfs1(0, -1, arr, q);\n        for(int i = 0; i < n; ++i) ans[i] = q[i].peek()[1];\n    }\n    int dfs(int i, int fu, List<Integer> arr[], PriorityQueue<int[]> q[]) {\n        int ans = 0;\n        for(int j : arr[i]) {\n            if(j != fu) {\n                int x = dfs(j, i, arr, q) + 2 - (j % 2);\n                q[i].offer(new int[]{j, x});\n                ans = Math.max(ans, x);\n            }\n        }\n        return ans;\n    }\n    void dfs1(int i, int fu, List<Integer> arr[], PriorityQueue<int[]> q[]) {\n        for(int j : arr[i]) {\n            if(j != fu) {\n                if(q[i].peek()[0] == j) {\n                    int a[] = q[i].poll();\n                    q[j].offer(new int[]{i, (q[i].isEmpty() ? 0 : q[i].peek()[1]) + 2 - (i % 2)});\n                    q[i].offer(a);\n                }\n                else {\n                    q[j].offer(new int[]{i, q[i].peek()[1] + 2 - (i % 2)});\n                }\n                dfs1(j, i, arr, q);\n            }\n        }\n    }\n}",
    "submit_ts": "1722698648",
    "subm_id": "552271812"
}