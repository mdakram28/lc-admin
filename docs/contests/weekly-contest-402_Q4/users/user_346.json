{
    "username": "hornedfoe",
    "submission": "class Solution{\n    class NumArray{\n        int nums[] , tree[] , n;\n        public NumArray(int[] nums){\n            this.nums = nums;\n            n = nums.length;\n            tree = new int[2 * (1 << Integer.toString(n , 2).length()) - 1];\n            build(0 , n - 1 , 0);\n        }\n        private int get(int x){\n            if(x == 0 || x == n - 1) return 0;\n            if(nums[x] > nums[x - 1] && nums[x] > nums[x + 1]) return 1;\n            return 0;\n        }\n        private int build(int x , int y , int i){\n            if(x > y) return 0;\n            if(x == y) return tree[i] = get(x);\n            int mid = (x + y) / 2;\n            return tree[i] = build(x , mid , i + i + 1) + build(mid + 1 , y , i + i + 2); \n        }\n        public int update(int x , int y , int i , int ind){\n            if(x > i || y < i) return tree[ind];\n            // if(x == y) System.out.println(get(i));\n            if(x == y) return tree[ind] = get(i);\n            int mid = (x + y) / 2;\n            return tree[ind] = update(x , mid , i , ind + ind + 1) + update(mid + 1 , y , i , ind + ind + 2);\n        }\n        public int sumRange(int x , int y , int i , int j , int ind){\n            if(x > j || y < i) return 0;\n            if(x >= i && y <= j) return tree[ind];\n            int mid = (x + y) / 2;\n            return sumRange(x , mid , i , j , ind + ind + 1) + sumRange(mid + 1 , y , i , j , ind + ind + 2);\n        }\n    }\n    public List<Integer> countOfPeaks(int[] nums , int[][] queries){\n        NumArray s = new NumArray(nums); \n        List<Integer> ret = new ArrayList<>();\n        for(int[] q : queries){\n            if(q[0] == 1){\n                if(q[2] - q[1] < 2) ret.add(0);\n                else ret.add(s.sumRange(0 , s.n - 1 , q[1] + 1 , q[2] - 1 , 0));\n            }else{\n                s.nums[q[1]] = q[2];\n                s.update(0 , s.n - 1 , q[1] , 0);\n                if(q[1] != 0) s.update(0 , s.n - 1 , q[1] - 1 , 0);\n                if(q[1] != s.n - 1) s.update(0 , s.n - 1 , q[1] + 1 , 0);\n                // System.out.println(Arrays.toString(s.nums));\n            }\n        }\n        return ret;\n    }\n}",
    "submit_ts": "1718507272",
    "subm_id": "1289646442"
}