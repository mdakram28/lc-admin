{
    "username": "Mradul Agrawal",
    "submission": "class Solution {\npublic:\n\n    long long ans(vector<vector<int>>& g)\n    {\n        long long n = g.size(); \n        long long m = g[0].size(); \n\n        // for(int i = 0; i< n; i++) {\n        //     for(int j = 0; j < m; j++) {\n        //         cout << g[i][j] << \" \"; \n        //     }\n        //     cout << endl; \n        // }\n        \n\n\n        vector<vector<long long>> dp1(n, vector<long long>(m, -1e15)); \n        vector<vector<long long>> dp2(n, vector<long long>(m, -1e15)); \n        vector<vector<long long>> dp3(n, vector<long long>(m, -1e15)); \n\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                dp1[i][j] = g[i][j]; \n                if(i > 0) {\n                    dp1[i][j] = max(dp1[i][j], dp1[i-1][j]); \n                }\n                if(j > 0) {\n                    dp1[i][j] = max(dp1[i][j], dp1[i][j-1]);\n                }\n            }\n        }\n\n        long long temp1[n][m];\n        long long temp2[n][m];\n\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                temp1[i][j] = g[i][j]; \n                temp2[i][j] = g[i][j]; \n                if(i > 0) {\n                    temp1[i][j] = max(temp1[i][j], temp1[i-1][j]); \n                }\n                if(j > 0) {\n                    temp2[i][j] = max(temp2[i][j], temp2[i][j-1]); \n                }\n            }\n        }\n\n        for(int i = 1; i < n; i++) {\n            for(int j = 1; j < m; j++) {\n                dp2[i][j] = dp2[i-1][j-1]; \n                dp2[i][j] = max(dp2[i][j], dp2[i][j-1]); \n                dp2[i][j] = max(dp2[i][j], dp2[i-1][j]); \n                dp2[i][j] = max(dp2[i][j], g[i][j] + dp1[i-1][j-1]);\n\n                dp2[i][j] = max(dp2[i][j], temp2[i][j-1] + temp1[i-1][j]); \n\n                // cout << dp2[i][j] << \" \"; \n            }\n            // cout << endl; \n        }\n\n        // for(int i = 0; i < n; i++) {\n        //     for(int j = 0; j < m; j++) cout << dp1[i][j] << \" \"; \n        //     cout << endl;\n        // }\n\n        // for(int i = 0; i < n; i++) {\n        //     for(int j = 0; j < m; j++) cout << dp2[i][j] << \" \"; \n        //     cout << endl;\n        // }\n\n        for(int i = 2; i < n; i++) {\n            for(int j = 2; j < m; j++) {\n                dp3[i][j] = dp3[i-1][j-1]; \n                dp3[i][j] = max(dp3[i][j], dp3[i][j-1]); \n                dp3[i][j] = max(dp3[i][j], dp3[i-1][j]); \n                dp3[i][j] = max(dp3[i][j], g[i][j] + dp2[i-1][j-1]); \n                // cout << dp3[i][j] << \" \" << dp2[i-1][j-1]; \n            }\n            // cout << endl; \n        }\n\n        //         for(int i = 0; i < n; i++) {\n        //     for(int j = 0; j < m; j++) cout << dp3[i][j] << \" \"; \n        //     cout << endl;\n        // }\n    \n        return dp3[n-1][m-1]; \n    }\n\n    long long maximumValueSum(vector<vector<int>>& g) {\n        long long ret = ans(g); \n        reverse(g.begin(), g.end()); \n        ret = max(ret, ans(g)); \n        reverse(g.begin(), g.end()); \n\n        for(auto &it: g){\n            reverse(it.begin(), it.end()); \n        }\n        ret = max(ret, ans(g)); \n\n        reverse(g.begin(), g.end()); \n        ret = max(ret, ans(g)); \n\n        return ret; \n    }\n};",
    "submit_ts": "1723909840",
    "subm_id": "1359207734"
}