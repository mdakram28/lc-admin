{
    "username": "amit_yd625",
    "submission": "\n\nclass Solution {\n    \n\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long count = 0;\n        unordered_map<int, int> prevMap;\n\n        for (int i = 0; i < nums.size(); ++i) {\n            unordered_map<int, int> currMap;\n            solver(nums[i], k, currMap, prevMap, count);\n            prevMap = currMap;\n        }\n\n        return count;\n    }\n    \n    void solver(int num, int k, unordered_map<int, int>& currMap, unordered_map<int, int>& prevMap, long long& count) {\n        if (num == k) {\n            count += 1;\n        }\n        currMap[num] = 1;\n\n        for (const auto& [key, value] : prevMap) {\n            int newKey = key & num;\n            if (newKey == k) {\n                count += value;\n            }\n            if (currMap.find(newKey) != currMap.end()) {\n                currMap[newKey] += value;\n            } else {\n                currMap[newKey] = value;\n            }\n        }\n    }\n};\n",
    "submit_ts": "1720281043",
    "subm_id": "1311811098"
}