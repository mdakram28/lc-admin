{
    "username": "neshabi096",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        unordered_map <int,int> mpp;\n        int n = nums.size();\n        int i = 0;\n        int j = n - 1;\n        int maxDiffCnt = 0;\n        while(i < j){\n            int diff = abs(nums[j] - nums[i]);\n            mpp[diff]++;\n            maxDiffCnt = max(maxDiffCnt,mpp[diff]);\n            i++;\n            j--;\n        }\n        vector<int> arr;\n        for(auto it : mpp){\n            int diff = it.first;\n            int ct = it.second;\n            if(ct >= maxDiffCnt/2 )arr.push_back(diff);\n        }\n        int ans = INT_MAX;\n        for(auto diff : arr){\n            int i = 0;\n            int j = n - 1;\n            int changes = 0;\n            while(i < j){\n                int curDiff = abs(nums[j] - nums[i]);\n                if(curDiff != diff){\n                    int first = max(nums[i], abs(nums[i] - k));\n                    int second = max(nums[j], abs(nums[j] - k));\n                    int possibleChanges = max(second, first);\n                    if(possibleChanges >= diff) changes += 1;\n                    else changes += 2;\n                }\n                i++;\n                j--;\n            }\n            ans = min(changes,ans);\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1721488709",
    "subm_id": "1327430791"
}