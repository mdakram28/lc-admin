{
    "username": "Denys Gubar",
    "submission": "static pair<int, int> F[500][500];\nstatic int A[3];\nstatic int B[3];\nstatic int Z[3];\nstatic int V[3];\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int const N = board.size(), M = board[0].size();\n        for (int i = 0; i < N; ++i)\n            for (int j = 0; j < M; ++j)\n                F[i][j] = { board[i][j], j };\n        for (int i = 0; i < N; ++i)\n            sort(&F[i][0], &F[i][0] + M, greater{});\n        long long result = 0LL + board[0][0] + board[1][1] + board[2][2];\n        vector<pair<long long, pair<int, int>>> X;\n        X.reserve(N * M);\n        auto g = [](int x, int y)\n            {\n                return x * 1000 + y;\n            };\n        for (A[0] = 0; A[0] < N; ++A[0])\n            for (B[0] = 0; B[0] < 3; ++B[0])\n            {\n                Z[0] = F[A[0]][B[0]].second;\n                V[0] = F[A[0]][B[0]].first;\n                for (A[1] = A[0] + 1; A[1] < N; ++A[1])\n                    for (B[1] = 0; B[1] < 3; ++B[1])\n                    {\n                        Z[1] = F[A[1]][B[1]].second;\n                        if (Z[1] == Z[0])\n                            continue;\n                        V[1] = F[A[1]][B[1]].first;\n                        X.push_back({ 0LL + V[0] + V[1], {g(A[0], Z[0]), g(A[1], Z[1])} });\n                    }\n            }\n        sort(X.begin(), X.end(), greater{});\n        bitset<500> FX, FY;\n        int totalX = 0, totalY = 0;\n        vector<pair<long long, pair<int, int>>> XX;\n        for (int i = 0; i < X.size(); ++i)\n        {\n            auto P = X[i];\n            A[0] = P.second.first / 1000;\n            int deltaX = FX[A[0]];\n            A[1] = P.second.second / 1000;\n            deltaX += FX[A[1]];\n            Z[0] = P.second.first % 1000;\n            int deltaY = FY[Z[0]];\n            Z[1] = P.second.second % 1000;\n            deltaY += FY[Z[1]];\n            if (deltaX + totalX > 20 || deltaY + totalY > 20)\n                continue;\n            FX[A[0]] = true;\n            FX[A[1]] = true;\n            FY[Z[0]] = true;\n            FY[Z[1]] = true;\n            totalX += deltaX;\n            totalY += deltaY;\n            XX.push_back(P);\n        }\n        for (A[2] = 0; A[2] < N; ++A[2])\n            for (B[2] = 0; B[2] < 3; ++B[2])\n            {\n                Z[2] = F[A[2]][B[2]].second;\n                V[2] = F[A[2]][B[2]].first;\n                for (int i = 0; i < XX.size(); ++i)\n                {\n                    auto P = XX[i];\n                    A[0] = P.second.first / 1000;\n                    if (A[2] == A[0])\n                        continue;\n                    A[1] = P.second.second / 1000;\n                    if (A[2] == A[1])\n                        continue;\n                    Z[0] = P.second.first % 1000;\n                    if (Z[2] == Z[0])\n                        continue;\n                    Z[1] = P.second.second % 1000;\n                    if (Z[2] == Z[1])\n                        continue;\n                    result = max(result, P.first + V[2]);\n                }\n            }\n        return result;\n    }\n};\n",
    "submit_ts": "1723910327",
    "subm_id": "1359226030"
}