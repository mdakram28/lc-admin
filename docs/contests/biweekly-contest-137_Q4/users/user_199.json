{
    "username": "CRUDking",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& b) {\n        int n = b.size(), m = b[0].size();\n        vector<vector<vector<long long>>> a(n);\n        for (int i = 0; i < n; i++) {\n            vector<vector<long long>> t;\n            for (int j = 0; j < m; j++) {\n                t.push_back({b[i][j], j});\n            }\n            sort(t.begin(), t.end());\n            for (int j = m - 3; j <= m - 1; j++) {\n                a[i].push_back(t[j]);\n            }\n        }\n        vector<vector<vector<long long>>> pre(n);\n        for (int i = 0; i < n; i++) {\n            map<long long, long long> mp;\n            if (i > 0) {\n                for (int j = 0; j < 3; j++) {\n                    long long v = pre[i - 1][j][0], idx = pre[i - 1][j][1];\n                    if (mp.count(idx) == 0) mp[idx] = -1e18;\n                    mp[idx] = max(mp[idx], v);\n                }\n            }\n            for (int j = 0; j < 3; j++) {\n                long long v = a[i][j][0], idx = a[i][j][1];\n                if (mp.count(idx) == 0) mp[idx] = -1e18;\n                mp[idx] = max(mp[idx], v);\n            }\n            vector<vector<long long>> t;\n            for (auto [x, y] : mp) {\n                t.push_back({y, x});\n            }\n            sort(t.begin(), t.end(), [](vector<long long>& x, vector<long long>& y) {\n                return x[0] > y[0];\n            });\n            while (t.size() > 3) {\n                t.pop_back();\n            }\n            pre[i] = t;\n        }\n        long long res = -1e18;\n        // cout << pre[2][0][0] << ' ' << pre[2][1][0] << ' ' << pre[2][2][0] << endl;\n        for (int j = 1; j < n; j++) {\n            for (int k = j + 1; k < n; k++) {\n                a[j - 1] = pre[j - 1];\n                for (int i1 = 0; i1 < 3; i1++) {\n                    for (int i2 = 0; i2 < 3; i2++) {\n                        for (int i3 = 0; i3 < 3; i3++) {\n                            if (a[j - 1][i1][1] != a[j][i2][1] && a[j - 1][i1][1] != a[k][i3][1] && a[j][i2][1] != a[k][i3][1]) {\n                                res = max(res, a[j - 1][i1][0] + a[j][i2][0] + a[k][i3][0]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723907727",
    "subm_id": "556327143"
}