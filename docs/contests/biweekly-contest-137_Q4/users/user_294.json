{
    "username": "Dev Sahani",
    "submission": "class Solution {\n    struct t {\n        int a, b, c;\n    };\n\n    class CMP {\n    public:\n       bool operator()(t& a, t& b){\n           return a.a > b.a;\n      }\n    };\n\n    typedef priority_queue<t, vector<t>, CMP> pvq;\n    typedef vector<t> vv;\n    \n    vv getMax(vector<vector<int>>& board, int k, int i1=-1, int j1=-1, int i2=-1, int j2=-1) {\n        pvq pq;\n        int n = board.size(), m = board[0].size();\n        \n        for(int i=0; i<n; i++) {\n            for(int j=0; j<m; j++) {\n                if(i==i1 || i==i2 ||j==j1 || j==j2) continue;\n\n                pq.push({board[i][j], i, j});\n                if(pq.size() > k) {\n                    pq.pop();\n                }\n            }\n        }       \n\n        vv res = {};\n        while(!pq.empty()) {\n            res.push_back(pq.top());\n            pq.pop();\n        }\n        return res;\n    }\n        \npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        vv max3 = getMax(board, 4);\n\n        long long ans = -1e12;\n        for(t& num: max3) {\n            long long val = num.a, i1 = num.b, j1 = num.c;\n\n            vv max32 = getMax(board, 3, i1, j1);\n            for(t& num2: max32) {\n                long long val2 = num2.a, i2 = num2.b, j2 = num2.c;\n                \n                vv pq3 = getMax(board, 1, i1, j1, i2, j2);\n\n                ans = max(ans, val + val2 + pq3[0].a);\n            }\n        }\n\n        return ans;\n    }\n\n};",
    "submit_ts": "1723909917",
    "subm_id": "1359210485"
}