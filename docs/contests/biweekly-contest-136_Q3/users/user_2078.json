{
    "username": "areebfaiz2001",
    "submission": "public class Solution {\n    public int minFlips(int[][] grid) {\n        int numRows = grid.length;\n        int numCols = grid[0].length;\n        int totalFlips = 0;\n\n        if (numRows % 2 == 1 && numCols % 2 == 1) {\n            if (grid[numRows / 2][numCols / 2] == 1) {\n                totalFlips += 1;\n            }\n        }\n\n        int[] countPairs = new int[3];\n\n        if (numRows % 2 == 1) {\n            int leftIndex = 0;\n            int rightIndex = numCols - 1;\n            while (leftIndex < rightIndex) {\n                int pairSum = grid[numRows / 2][leftIndex] + grid[numRows / 2][rightIndex];\n                countPairs[pairSum] += 1;\n                leftIndex += 1;\n                rightIndex -= 1;\n            }\n        }\n\n        if (numCols % 2 == 1) {\n            int topIndex = 0;\n            int bottomIndex = numRows - 1;\n            while (topIndex < bottomIndex) {\n                int pairSum = grid[topIndex][numCols / 2] + grid[bottomIndex][numCols / 2];\n                countPairs[pairSum] += 1;\n                topIndex += 1;\n                bottomIndex -= 1;\n            }\n        }\n\n        if (countPairs[2] % 2 == 1) {\n            if (countPairs[1] > 0) {\n                totalFlips += countPairs[1];\n            } else {\n                totalFlips += 2;\n            }\n        } else {\n            totalFlips += countPairs[1];\n        }\n\n        int halfRows = numRows / 2;\n        int halfCols = numCols / 2;\n        int rowIndex = 0;\n        while (rowIndex < halfRows) {\n            int colIndex = 0;\n            while (colIndex < halfCols) {\n                int topLeft = grid[rowIndex][colIndex];\n                int bottomLeft = grid[numRows - 1 - rowIndex][colIndex];\n                int topRight = grid[rowIndex][numCols - 1 - colIndex];\n                int bottomRight = grid[numRows - 1 - rowIndex][numCols - 1 - colIndex];\n\n                int cornerSum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (cornerSum != 0 && cornerSum != 4) {\n                    totalFlips += Math.min(cornerSum, 4 - cornerSum);\n                }\n\n                colIndex += 1;\n            }\n            rowIndex += 1;\n        }\n\n        return totalFlips;\n    }\n}\n",
    "submit_ts": "1722699894",
    "subm_id": "1343225534"
}