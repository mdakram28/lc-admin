{
    "username": "vanwisd",
    "submission": "impl Solution {\n    pub fn minimum_cost(m: i32, n: i32, mut horizontal_cut: Vec<i32>, mut vertical_cut: Vec<i32>) -> i64 {\n        horizontal_cut.sort_unstable_by_key(|&x| -x);\n        vertical_cut.sort_unstable_by_key(|&x| -x);\n        \n        let m = m as i64;\n        let n = n as i64;\n        \n        let mut i = 0;\n        let mut j = 0;\n        let mut cost = 0;\n        while i < horizontal_cut.len() && j < vertical_cut.len() {\n            if horizontal_cut[i] > vertical_cut[j] {\n                cost += horizontal_cut[i] as i64 * (j+1) as i64;\n                i += 1;\n            } else {\n                cost += vertical_cut[j] as i64 * (i+1) as i64;\n                j += 1;\n            }\n        }\n        while i < horizontal_cut.len() {\n            cost += horizontal_cut[i] as i64 * n;\n            i += 1;\n        }\n        while j < vertical_cut.len() {\n            cost += vertical_cut[j] as i64 * m;\n            j += 1;\n        }\n        cost\n    }\n}",
    "submit_ts": "1720925831",
    "subm_id": "546442242"
}