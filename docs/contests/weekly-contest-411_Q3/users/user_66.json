{
    "username": "\u4e00\u53ea\u5305zi",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if n == 1:\n            for t in range(9, -1, -1):\n                if t % k == 0:\n                    return str(t)\n        @cache\n        def dfs(i, c):\n            if i == n // 2:\n                if n & 1:\n                    for d in range(10):\n                        if (c + d * pow(10, n // 2, k)) % k == 0:\n                            return True\n                    return False\n                return c == 0\n            for d in range(10):\n                if dfs(i + 1, (c + d * (pow(10, n - i - 1, k) + pow(10, i, k))) % k):\n                    return True\n            return False\n        ans = list()\n        c = 0\n        for i in range(n // 2):\n            if i == 0:\n                for d in range(9, 0, -1):\n                    if dfs(i + 1, (c + d * (pow(10, n - i - 1, k) + pow(10, i, k))) % k):\n                        ans.append(str(d))\n                        c = (c + d * (pow(10, n - i - 1, k) + pow(10, i, k))) % k\n                        break\n            else:\n                for d in range(9, -1, -1):\n                    if dfs(i + 1, (c + d * (pow(10, n - i - 1, k) + pow(10, i, k))) % k):\n                        ans.append(str(d))\n                        c = (c + d * (pow(10, n - i - 1, k) + pow(10, i, k))) % k\n                        break\n        s = \"\".join(map(str, ans))\n        f = 0\n        if n & 1:\n            for d in range(9, -1, -1):\n                if (c + d * (pow(10, n // 2, k))) % k == 0:\n                    f = d\n                    break\n        return s + str(f) + s[::-1] if n & 1 else s + s[::-1]\n    \n",
    "submit_ts": "1723950640",
    "subm_id": "556400344"
}