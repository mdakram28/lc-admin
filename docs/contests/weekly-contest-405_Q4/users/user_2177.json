{
    "username": "SonuDutta",
    "submission": "#include <vector>\n#include <string>\n#include <climits>\n\nclass TN{\n    public:\n    unordered_map<char, TN*> ch;\n    int ct;\n    TN():ct(INT_MAX){}\n};\n\nclass Tr{\n    public:\n    TN* rt;\n    Tr(){\n        rt=new TN();\n    }\n    void ins(const string& wd, int ct){\n        TN* node=rt;\n        for(char c:wd){\n            if(!node->ch.count(c)){\n                node->ch[c]=new TN();\n            }\n            node=node->ch[c];\n        }\n        node->ct=min(node->ct,ct);\n    }\n};\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n=target.size();\n        Tr tr;\n        for (int i=0; i<words.size();++i){\n            tr.ins(words[i], costs[i]);\n        }\n        vector<int> dp(n+1, INT_MAX);\n        dp[0]=0;\n        for (int i=0;i<n; ++i){\n            if(dp[i]==INT_MAX)\n                continue;\n            TN* node=tr.rt;\n                \n            for(int j=i; j<n;++j){\n                if(!node->ch.count(target[j]))\n                    break;\n                node=node->ch[target[j]];\n                if(node->ct!=INT_MAX){\n                    dp[j+1]=min(dp[j+1], dp[i]+node->ct);\n                }\n            }\n        }\n        return dp[n]==INT_MAX?-1: dp[n];\n    }\n};",
    "submit_ts": "1720324399",
    "subm_id": "1312398565"
}