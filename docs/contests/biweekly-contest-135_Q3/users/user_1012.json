{
    "username": "Megatron_07",
    "submission": "class Solution {\npublic:\n    int solve(int c, int k, vector<int>& nums) {\n        int total = 0;\n        for (int i = 0; i < nums.size() / 2; i++) {\n            if (abs(nums[i] - nums[nums.size() - i - 1]) != c) {\n                int Min = min(nums[i], nums[nums.size() - i - 1]);\n                int Max = max(nums[i], nums[nums.size() - i - 1]);\n                if ( (k - Min >= c) || (Max >= c) )\n                    total++;\n                else\n                    total += 2;\n            }\n        } return total;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        int ans = INT_MAX;\n        unordered_map<int, int> freq;\n        vector<pair<int, int>> a;\n        for (int i = 0; i < nums.size() / 2; i++)\n            freq[abs(nums[i] - nums[nums.size() - i - 1])]++;\n        for (auto i : freq)\n            a.push_back({i.second, i.first});\n        sort(a.rbegin(), a.rend());\n        for (int i = 0; i < a.size(); i++) {\n            int ch = a[i].second;\n            ans = min(ans, solve(ch, k, nums));\n            if (solve(ch, k, nums) > ans)\n                return ans;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721489328",
    "subm_id": "1327450029"
}