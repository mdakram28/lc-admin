{
    "username": "sumitj3na",
    "submission": "#define INF INT32_MAX \n\nclass SegmentTree { \npublic: \n    vector<int> segTree; \n    int sz; \n    \n    SegmentTree(vector<int>& arr) \n    { \n        sz = arr.size(); \n        segTree.resize(4 * sz); \n        buildTree(arr, 0, 0, sz - 1); \n    } \n\n    void buildTree(vector<int>& arr, int node, int start, int end) \n    { \n        if (start == end) { \n            segTree[node] = arr[start]; \n        } \n        else { \n            int mid = (start + end) / 2; \n            buildTree(arr, 2 * node + 1, start, mid); \n            buildTree(arr, 2 * node + 2, mid + 1, end); \n            segTree[node] = segTree[2 * node + 1] & segTree[2 * node + 2]; \n        } \n    } \n\n    int query(int l, int r) \n    { \n        return query(0, 0, sz - 1, l, r); \n    } \n\n    int query(int node, int start, int end, int l, int r) \n    { \n        if (r < start || end < l) { \n            return INF; \n        } \n        if (l <= start && end <= r) { \n            return segTree[node]; \n        } \n        int mid = (start + end) / 2; \n        int p1 = query(2 * node + 1, start, mid, l, r); \n        int p2 = query(2 * node + 2, mid + 1, end, l, r); \n        return p1 & p2; \n    } \n}; \n\nint closestAND(vector<int> inputArr, int k) \n{ \n    int n = inputArr.size(); \n    SegmentTree st(inputArr); \n    int result = INF; \n    for (int i = 0; i < n; i++) { \n        int left = i - 1, right = n - 1, mid; \n        while (right - left > 1) { \n            mid = (left + right) / 2; \n            if (st.query(i, mid) >= k) \n                left = mid; \n            else \n                right = mid; \n        } \n        if (left != i - 1) \n            result = min(result, abs(st.query(i, left) - k)); \n        result = min(result, abs(k - st.query(i, right))); \n    } \n    return result; \n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& inputNumbers, int valK) {\n        return closestAND(inputNumbers, valK); \n    }\n};\n",
    "submit_ts": 1717300003.0
}