{
    "username": "quynhit",
    "submission": "void __print(int x) {cout << x;} void __print(long x) {cout << x;} void __print(long long x) {cout << x;} void __print(unsigned x) {cout << x;} void __print(unsigned long x) {cout << x;} void __print(unsigned long long x) {cout << x;} void __print(float x) {cout << x;} void __print(double x) {cout << x;} void __print(long double x) {cout << x;} void __print(char x) {cout << '\\'' << x << '\\'';} void __print(const char *x) {cout << '\\\"' << x << '\\\"';} void __print(const string &x) {cout << '\\\"' << x << '\\\"';} void __print(bool x) {cout << (x ? \"true\" : \"false\");} template<typename T, typename V> void __print(const pair<T, V> &x) {cout << '{'; __print(x.first); cout << ','; __print(x.second); cout << '}';}template<typename T> void __print(const T &x) {int f = 0; cout << '{'; for (auto &i: x) cout << (f++ ? \",\" : \"\"), __print(i); cout << \"}\";} void _print() {cout << \"]\\n\";} template <typename T, typename... V> void _print(T t, V... v) {__print(t); if (sizeof...(v)) cout << \", \"; _print(v...);}\n#define debug(x...) cout << \"[\" << #x << \"] = [\"; _print(x)\nvoid db(const vector<bool>& v) { bool first = true; string res = \"{\"; for (int i = 0; i < int(v.size()); i++) { if (!first) res += \", \"; first = false; res += to_string(v[i]); } res += \"}\"; cout<<res<<'\\n';\n}\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = a.size();\n        for(int i = 0; i < n; i++){\n            a.push_back(a[i]);\n        }\n        // debug(a);\n        vector<int> dp((int)a.size());\n        dp[0] = 1;\n        for(int i = 1; i < a.size(); i++){\n            if(a[i] != a[i - 1]){\n                dp[i] = dp[i - 1] + 1;\n            } else {\n                dp[i] = 1;\n            }\n        }\n        // debug(dp);\n        int res = 0;\n        for(int i = 0; i < n; i++){\n            // debug(\"checking\", i, i + k - 1, dp[i], dp[i + k - 1]);\n            if(dp[i + k - 1] - dp[i] + 1 == k){\n                res++;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720278779",
    "subm_id": "1311723857"
}