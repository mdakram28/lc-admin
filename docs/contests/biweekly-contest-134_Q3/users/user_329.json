{
    "username": "wkingyu",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        ans = 0\n        n = len(colors)\n        s = [0] * (2 * n + 1)\n        for i in range(1, n + 1):\n            j = i - 1\n            s[i] = colors[j] != colors[(j - 1) % n] and colors[j] != colors[(j + 1) % n]\n        for i in range(n + 1, 2 * n + 1):\n            s[i] = s[i - n]\n        for i in range(2 * n):\n            s[i] += s[i - 1]\n        ans = 0\n        for i in range(n, 2 * n):\n            if s[i] - s[i - k + 2] == k - 2:\n                ans += 1\n        return ans",
    "submit_ts": "1720278592",
    "subm_id": "544563354"
}