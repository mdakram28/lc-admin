{
    "username": "Xiao__Jun",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        const int SIZE = nums.size();\n        int res = INT_MAX, cur = nums[0];\n        vector<int> count(31,0);\n        \n        for(int left = 0, right = 0;right < SIZE;right++) {\n            for(int j = 0;j <= 30;j++)\n                if((nums[right] & (1 << j)) > 0)\n                    count[j]++;\n            cur = (cur & nums[right]);\n            res = min(res, abs(cur - k));\n            \n            while(cur < k && left < right) {\n                for(int j = 0;j <= 30;j++) {\n                    if((nums[left] & (1 << j)) > 0)\n                        count[j]--;\n                }\n                int temp = 0;\n                for(int j = 0;j < 30;j++)\n                    if(count[j] == (right - left))\n                        temp|= (1 << j);\n                left++;\n                cur = temp;\n                res = min(res, abs(cur - k));\n            }\n            // cout<<left<<\" \"<<right<<\" \"<<res<<endl;\n        }\n        \n        return res;\n    }\n};\n/*\n001\n010\n100\n101\n*/",
    "submit_ts": 1717298624.0
}