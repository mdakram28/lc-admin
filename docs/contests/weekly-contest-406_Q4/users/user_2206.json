{
    "username": "Sai_charan_19",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        for (int i = 0; i < m - 1; ++i) {\n            cuts.push_back({horizontalCut[i], 'H'});\n        }\n        for (int j = 0; j < n - 1; ++j) {\n            cuts.push_back({verticalCut[j], 'V'});\n        }\n        int horizontal_pieces = 1,vertical_pieces = 1;\n        long long tc=0;\n        sort(cuts.begin(), cuts.end());\n        for (int i=cuts.size()-1;i>=0;i--) {\n            auto cut=cuts[i];\n            int cost = cut.first;\n            char cut_type = cut.second;\n            if (cut_type == 'H') {\n                tc += cost * vertical_pieces;\n                horizontal_pieces++;\n            } else {\n                tc += cost * horizontal_pieces;\n                vertical_pieces++;\n            }\n        }\n\n        return tc;\n    }\n};",
    "submit_ts": "1720926398",
    "subm_id": "1320285088"
}