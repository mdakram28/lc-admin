{
    "username": "htedsv-i",
    "submission": "//#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n//#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\")\n//#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n//#define INF 2147483647\n#define infL (1LL<<60)\n#define inf (1<<30)\n#define inf9 (1000000000)\n#define MOD  1000000007 //998244353 //1000000007\n#define EPS 1e-9\n#define Gr 9.8\n#define PI acos(-1)\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define REQ(i,n) for(int (i)=1;(i)<=(int)(n);(i)++)\n#define lch (rt<<1)\n#define rch (rt<<1|1)\n#define readmp(n) for(int i=0,u,v;i<n;i++) {scanf(\"%d%d\",&u,&v); mp[u].push_back(v); mp[v].push_back(u);}\ntypedef  long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, vector<int>> piv;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef double ValType;\ntemplate<typename  T> void maxtt(T& t1, T t2) {\n    t1=max(t1,t2);\n}\ntemplate<typename  T> void mintt(T& t1, T t2) {\n    t1=min(t1,t2);\n}\n\n\nbool debug = 0;\nint n,m,k;\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\nstring direc=\"RDLU\";\nconst ll MOD2 = (ll)MOD * (ll)MOD;\nll ln, lk, lm;\nvoid etp(bool f = 0) {\n    puts(f ?\"YES\" : \"NO\");\n    exit(0);\n}\nvoid addmod(int &x, int y, int mod = MOD){\n    x+=y; if (x>=mod) x-=mod;\n    if(x<0) x+=mod;\n    assert(x>=0 && x<mod);\n}\nvoid et(int x=-1) {\n    printf(\"%d\\n\", x); exit(0);\n}\nll fastPow(ll x, ll y, int mod=MOD) {\n    ll ans = 1;\n    while(y>0) {\n        if(y&1) ans = (x * ans)%mod;\n        x = x*x%mod;\n        y>>=1;\n    }\n    return ans;\n}\nll gcd1(ll x, ll y) {\n    return y?gcd1(y,x%y):x;\n}\n\n//#include <atcoder/all>\n//using mint = atcoder::modint998244353;\n#define MAX (200005)\n\n\nvoid fmain(int tid) {\n    scanf(\"%d\", &n);\n}\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        ll ans=0;\n        sort(horizontalCut.rbegin(),  horizontalCut.rend());\n        sort(verticalCut.rbegin(),  verticalCut.rend());\n        ll H=0,V=0;\n        for(int c: horizontalCut) H+=c;\n        for(int c: verticalCut) V+=c;\n        int ctH=1,ctV=1;\n        for(int i=0,j=0;i<m-1 or j<n-1;) {\n            if (i==m-1) {\n                ans += (ll)verticalCut[j] * (ctH); V -= verticalCut[j];\n                j++; ctV++;  continue;\n            }\n            if (j==n-1) {\n                ans += (ll)horizontalCut[i] * ctV; H -= horizontalCut[i];\n                ctH++; i++; continue;\n            }\n            ll tmpV = -verticalCut[j];//  (ll)verticalCut[j] * (ctH) + H;\n            ll tmpH = -horizontalCut[i] ;// (ll)horizontalCut[i] * ctV + V;\n            if (tmpV < tmpH) {\n                ans += (ll)verticalCut[j] * (ctH); V -= verticalCut[j];\n                j++; ctV++;  continue;\n            } else {\n                ans += (ll)horizontalCut[i] * ctV; H -= horizontalCut[i];\n                ctH++; i++; continue;\n            }\n        }\n        return ans;\n    }\n};\nint main1() {\n    //    freopen(\"hetao.in\",\"r\",stdin);\n//    freopen(\"hetao.out\",\"w\",stdout);\n    int t=1;\n//    ios::sync_with_stdio(false);\n//    cin.tie(0); cout.tie(0);\n//    cin>>t;\n//    scanf(\"%d\", &t);\n    REQ(i,t) {\n        fmain(i);\n    }\n    return 0;\n}",
    "submit_ts": "1720926054",
    "subm_id": "546443762"
}