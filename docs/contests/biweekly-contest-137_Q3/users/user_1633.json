{
    "username": "Syed Israr Ahmed",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& grid) {\n         int rows = grid.size();\n        int cols = grid[0].size();\n        long long maxSum = LLONG_MIN;\n        vector<vector<long long>> topValues(rows, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> topColumns(rows, vector<int>(3, -1));\n\n        \n        for (int i = 0; i < rows; ++i) {\n            vector<pair<long long, int>> colValues;\n            for (int j = 0; j < cols; ++j) {\n                colValues.emplace_back(grid[i][j], j);\n            }\n            sort(colValues.rbegin(), colValues.rend());\n\n            for (int k = 0; k < 3 && k < cols; ++k) {\n                topValues[i][k] = colValues[k].first;\n                topColumns[i][k] = colValues[k].second;\n            }\n        }\n\n        \n        for (int r1 = 0; r1 < rows; ++r1) {\n            for (int r2 = r1 + 1; r2 < rows; ++r2) {\n                for (int r3 = r2 + 1; r3 < rows; ++r3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (topColumns[r2][j] == topColumns[r1][i]) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (topColumns[r3][k] == topColumns[r1][i] || topColumns[r3][k] == topColumns[r2][j]) continue;\n\n                                long long currentSum = topValues[r1][i] + topValues[r2][j] + topValues[r3][k];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723910106",
    "subm_id": "1359217618"
}