{
    "username": "adiiitya24",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n          int dp[][]; \n                   int ans ;\n        \n        dp=new int[nums.length][k + 1];\n        for (int i = 0; i< nums.length; i=i+1) {\n            \n            Arrays.fill(dp[i], 1);\n       }\n        \n        \n int n =nums.length;\n      \n\n        \n     int ab[]= new int[k + 1];\n        \n                                    ans=1;\n                                                                           Arrays.fill(ab, -1);\n        \n         List<Map<Integer, Integer>> map= new ArrayList<>();\n      \n      for (int j = 0; j<= k; j++) {\n            map.add(new HashMap<>());\n        }\n\n        for (int i = 0; i< n; i++)\n        {\n               for (int j=0; j<=k;j++) {\n             \n    for (int l = 0; l < j; l++) {\n                    dp[i][j]= Math.max(dp[i][j],1+ab[l]);\n                    }\n              \n    if (map.get(j).containsKey(nums[i])) {\n                    dp[i][j] = Math.max(dp[i][j], 1   +  map.get(j).get(nums[i]));\n                 }\n     \n                   \n                   ans = Math.max(ans, dp[i][j]);\n            }\n            \n            for (int j = 0; j <= k; j++) {\n                ab[j] = Math.max(ab[j], dp[i][j]);\n                \n                map.get(j).put(nums[i], Math.max(map.get(j).getOrDefault(nums[i], -1), dp[i][j]));\n}\n        }\n        return ans;\n    }\n}",
    "submit_ts": 1717862126.0
}