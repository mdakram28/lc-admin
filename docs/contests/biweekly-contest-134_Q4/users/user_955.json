{
    "username": "ish159",
    "submission": "class Solution {\npublic:\n    long long countcalc(const vector<int>& nums, int eind, int k, unordered_map<long long, long long>& m) {\n        long long cnt = 0;\n        unordered_map<long long, long long> nm;\n        \n        if (nums[eind] == k) ++cnt;\n        nm[nums[eind]] += 1;\n        \n        for (auto& [v, f] : m) \n        {\n            long long r = v & nums[eind];\n            if (r == k) cnt += f;\n            nm[r] += f;\n        }\n        \n        m.clear();\n        for (auto& [key, value] : nm) m[key] = value;\n\n        return cnt;\n    }\n    \n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long total = 0;\n        unordered_map<long long, long long> m;\n        \n        for (int i = 0; i < n; ++i) total += countcalc(nums, i, k, m);\n    \n        return total;\n    }\n};",
    "submit_ts": "1720280516",
    "subm_id": "1311792301"
}