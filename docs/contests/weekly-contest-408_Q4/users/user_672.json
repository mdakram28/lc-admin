{
    "username": "shubh0711",
    "submission": "import java.util.*;\n\nclass Solution {\n    public boolean bf(List<List<Integer>> g, int s, int t1, int t2, int n) {\n        Queue<Integer> q = new LinkedList<>();\n        int[] vis = new int[n + 4];\n        Arrays.fill(vis, 0);\n        q.add(s);\n        vis[s] = 1;\n\n        while (!q.isEmpty()) {\n            int u = q.poll();\n            for (int v : g.get(u)) {\n                if (vis[v] == 0) {\n                    q.add(v);\n                    vis[v] = 1;\n                }\n            }\n        }\n\n        return vis[t1] == 1 || vis[t2] == 1;\n    }\n\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int nc = circles.length;\n        List<int[]> c = new ArrayList<>();\n        List<List<Integer>> g = new ArrayList<>();\n        for (int i = 0; i < nc + 4; i++) {\n            g.add(new ArrayList<>());\n        }\n\n        for (int i = 0; i < nc; ++i) {\n            c.add(new int[]{circles[i][0], circles[i][1], circles[i][2]});\n        }\n\n        for (int i = 0; i < nc; ++i) {\n            if (c.get(i)[0] <= c.get(i)[2]) {\n                g.get(nc).add(i);\n                g.get(i).add(nc);\n            }\n            if (X - c.get(i)[0] <= c.get(i)[2]) {\n                g.get(nc + 2).add(i);\n                g.get(i).add(nc + 2);\n            }\n            if (c.get(i)[1] <= c.get(i)[2]) {\n                g.get(nc + 1).add(i);\n                g.get(i).add(nc + 1);\n            }\n            if (Y - c.get(i)[1] <= c.get(i)[2]) {\n                g.get(nc + 3).add(i);\n                g.get(i).add(nc + 3);\n            }\n        }\n\n        for (int i = 0; i < nc; ++i) {\n            for (int j = i + 1; j < nc; ++j) {\n                double d = Math.sqrt(Math.pow(c.get(i)[0] - c.get(j)[0], 2) +\n                                     Math.pow(c.get(i)[1] - c.get(j)[1], 2));\n                if (c.get(i)[2] + c.get(j)[2] >= d) {\n                    g.get(i).add(j);\n                    g.get(j).add(i);\n                }\n            }\n        }\n\n        return !(bf(g, nc, nc + 1, nc + 2, nc + 4) ||\n                 bf(g, nc + 3, nc + 2, nc + 1, nc + 4));\n    }\n}\n",
    "submit_ts": "1722138236",
    "subm_id": "1335785661"
}