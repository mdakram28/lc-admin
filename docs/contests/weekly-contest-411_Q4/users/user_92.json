{
    "username": "nnKoala",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define f first\n#define s second\n#define lc (rt<<1)\n#define rc (rt<<1|1)\n#define pb push_back\n#define cl(a, b) memset(a, b, sizeof(a))\n#define mp(a, b) make_pair((a), (b))\n#define all(x) x.begin(),x.end()\ntypedef long long ll;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pl;\ntypedef pair<pi, int> pii;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pi> vii;\ntypedef vector<pl> vll;\ntypedef vector<pii> viii;\nconst int NO_DEB = 0;\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename... Args>\nvoid logger(string vals, Args &&...values){\n    if (NO_DEB) return;\n    cout << vals << \" = \";\n    string delim = \"\";\n    (..., (cout << delim << values, delim = \", \"));\n    cout << endl;\n}\nconst int inf = 0x3F3F3F3F;\nconst ll infl = 0x3F3F3F3F3F3F3F3FLL;\nconst int mod = 1e9 + 7;\nvoid print(vector<ll> & a){\n    for(int i=0; i<a.size(); i++) cout << a[i] << \" \\n\"[i+1==a.size()];\n}\n\nconst int MM = 1e5+2;\nstruct event {\n    int x, y, id, f;\n};\nclass Solution {\npublic:\n    void upd(ll bit[], int pos, ll val) {\n        for(int i=pos; i<MM; i+=i&-i) bit[i] += val;\n    }\n    ll qry(ll bit[], int pos) {\n        ll ret = 0;\n        for(int i=pos; i; i-=i&-i) ret += bit[i];\n        return ret;\n    }\n    vector<ll> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        cl(cnt, 0); cl(bit, 0); cl(num, 0); cl(val, 0);\n        n = s.size(); int t0 = 0, t1 = 0;\n        for(int l=1, r=1; r<=n; r++) {\n            t0 += s[r-1]=='0';  t1 += s[r-1] == '1';\n            while(t0 > k && t1 > k) {\n                a[l] = r;\n                t0 -= s[l-1]=='0'; t1 -= s[l-1] == '1'; l++;\n            }\n        }\n        for(int i=1; i<=n; i++) {\n            if(a[i] == 0) a[i] = n+1;\n        }\n        vector<ll> ans(q.size());\n        for(int i=0; i<q.size(); i++) {\n            int l = q[i][0]+1, r = q[i][1]+1;\n            e.push_back({l-1, r, 0, i}); e.push_back({r, r, 1, i});\n        }\n        sort(e.begin(), e.end());\n        for(int i=1, j=0; j < e.size(); j++){\n            auto [x, y, f, id] = e[j];\n            for(; i<=n && i <= e[j][0]; i++) {\n                upd(cnt, a[i], 1); upd(bit, a[i], a[i]);\n            }\n            if(!f) {\n                num[id] -= qry(cnt, y); val[id] -= qry(bit, y);\n            }else {\n                num[id] += qry(cnt, y);  val[id] += qry(bit, y);\n            }\n        }\n        for(int i=0; i<q.size(); i++) {\n            ll x = q[i][0] + 1, y = q[i][1] + 1, len = y - x + 1;\n            ans[i] = (len+1) * len/2 - (num[i] * (y+1) - val[i]);\n        }\n        return ans;\n    }\n    int n, a[MM]; ll cnt[MM], bit[MM], num[MM], val[MM];  vector<array<int, 4>> e;\n};",
    "submit_ts": "1723953013",
    "subm_id": "556414965"
}