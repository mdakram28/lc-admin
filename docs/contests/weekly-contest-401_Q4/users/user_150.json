{
    "username": "A_Le_K",
    "submission": "static const int __ = []() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return 0; }();\n\ntypedef long long ll; typedef unsigned int ui; typedef unsigned long long ull; typedef pair<int ,int> pii; typedef pair<ll, ll> pll; typedef double rl;\ntypedef pii int2; typedef tuple<int, int, int> int3; typedef tuple<int, int, int, int> int4; typedef tuple<int, int, int, int, int> int5;\ntypedef pll ll2; typedef tuple<ll, ll, ll> ll3; typedef tuple<ll, ll, ll, ll> ll4; typedef tuple<ll, ll, ll, ll, ll> ll5;\ntypedef vector<int> vi; typedef vector<pii> vii; typedef vector<ll> vll; typedef vector<pll> vll_ll; typedef vector<vi> vvi; typedef vector<vii> vvii; typedef vector<vll> vvll; typedef vector<vll_ll> vvll_ll;\n\n#define pb push_back\n#define mp make_pair\n#define eb emplace_back\n#define xx first\n#define yy second\n#define FOR(i,N) for(int i=0; i<N; i++)\n#define g0(x) get<0>(x)\n#define g1(x) get<1>(x)\n#define g2(x) get<2>(x)\n#define g3(x) get<3>(x)\n#define g4(x) get<4>(x)\n\ntemplate<typename A> string to_string(A* ptr) { stringstream ss; ss << \"0x\" << std::setw(16) << std::setfill ('0') << std::hex << (uint64_t)(uintptr_t)ptr; return ss.str(); }\nstring to_string(char c) { return ((string)\"'\"+c)+ \"'\"; }\ntemplate <typename A, typename B> string to_string(pair<A, B> p);\ntemplate <typename A, typename B, typename C> string to_string(tuple<A, B, C> p);\ntemplate <typename A, typename B, typename C, typename D> string to_string(tuple<A, B, C, D> p);\nstring to_string(const string& s) { return '\"' + s + '\"'; }\nstring to_string(const char* s) { return to_string((string) s); }\nstring to_string(bool b) { return (b ? \"true\" : \"false\"); }\nstring to_string(vector<bool> v) {\n    bool first = true; string res = \"{\";\n\tfor (int i = 0; i < static_cast<int>(v.size()); i++) { if (!first) { res += \", \"; } first = false; res += to_string(v[i]); }\n\tres += \"}\"; return res;\n}\ntemplate <size_t N> string to_string(bitset<N> v) { string res = \"\"; for (size_t i = 0; i < N; i++) { res += static_cast<char>('0' + v[i]); } return res; }\ntemplate <typename A> string to_string(A v) {\n\tbool first = true; string res = \"{\";\n\tfor (const auto &x : v) {\n\t\tif (!first) { res += \", \"; }\n\t\tfirst = false; res += to_string(x);\n\t}\n\tres += \"}\"; return res;\n}\ntemplate <typename A, typename B> string to_string(pair<A, B> p) { return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\"; }\ntemplate <typename A, typename B, typename C> string to_string(tuple<A, B, C> p) { return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \")\"; }\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p) { return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \", \" + to_string(get<3>(p)) + \")\"; }\nvoid debug_out() { cout << endl; }\ntemplate <typename Head, typename... Tail> void debug_out(Head H, Tail... T) { cout << \" \" << to_string(H); debug_out(T...); }\n\n#define popc __builtin_popcountll\n//#define popc __builtin_popcount\n//#define clz __builtin_clzll\n//#define clz __builtin_clz\ninline int bitLength(uint32_t val) { return 32 - __builtin_clz  (val); }\ninline int bitLength(uint64_t val) { return 64 - __builtin_clzll(val); }\n\ntemplate<typename T> inline void domax(T& A, const T& B) { A=max(A, B); }\ntemplate<typename T> inline void domin(T& A, const T& B) { A=min(A, B); }\n\ntemplate<typename T>\ninline T true_mod(T A, T B)\n{\n    assert(B>=1);\n    A%=B;\n    if(A<0) A+=B;\n    return A;\n}\n\ntemplate<typename T>\ninline T div_down(T A, T B)\n{\n    return (A-true_mod(A,B))/B;\n}\n\ntemplate<typename T>\ninline T div_up(T A, T B)\n{\n    return div_down(A+B-1, B);\n}\n\n#define all(x) (x).begin(), (x).end()\n\n#if 1\n#define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n#else\n#define dbg(...) 42\n#endif\n\nconst int MX=50'000;\n\nclass Solution {\n    vector<bool> visited_sum;\n    bool result=false;\n    \n    void dfs(const int sum, const int n, const vector<int>& a, const int i) {\n        if(result) return;\n        if(sum<0) return;\n        if(sum==0) {\n            result=true;\n            return;\n        }\n        if(i<0) return;\n        \n        //if(visited_sum[sum]) return;\n        //visited_sum[sum]=true;\n        \n        if(2*a[i]>sum && a[i]<=sum) {\n            dfs(sum-a[i], n, a, i-1);\n        }\n        dfs(sum, n, a, i-1);\n        \n        \n    }\n    \npublic:\n    int maxTotalReward(vector<int>& a) {\n        dbg(\"===========\");\n        dbg(a);\n        \n        {\n            set<int> s(a.begin(), a.end());\n            a=vector<int>(s.begin(), s.end());\n        }\n        \n        const int n=a.size();\n        sort(a.begin(), a.end());\n        \n        dbg(n, a);\n    \n        //bool result=false;\n        const int MAX_RESULT=2*a[n-1]-1;\n        \n        visited_sum=vector<bool>(MAX_RESULT+1, false);\n\n        for(int val=MAX_RESULT; val>=0; val--) {\n            dbg(val);\n            dfs(val, n, a, n-1);\n            if(result) return val;\n        }\n        \n        return -42;\n    }\n    \n    int maxTotalReward3(vector<int>& a) {\n        dbg(\"===========\");\n        dbg(a);\n        \n        {\n            set<int> s(a.begin(), a.end());\n            a=vector<int>(s.begin(), s.end());\n        }\n        \n        const int n=a.size();\n        sort(a.begin(), a.end());\n        \n        dbg(n, a);\n        \n        if(n==1) return a[0];\n        if(a[n-2]+1==a[n-1]) return a[n-2]+a[n-1];\n        \n        bitset<MX> dp;\n        dp[0]=1;\n        \n        for(int ai: a) {\n            for(int j=ai-1; j>=0; j--) if(dp[j]) dp[j+ai]=1;\n        }\n        \n        for(int j=MX-1; j>=0; j--) if(dp[j]) return j;\n        return -1;\n        \n        //return -42;\n    }\n        \n    int maxTotalReward2(vector<int>& a) {\n        const int n=a.size(); \n        sort(a.begin(), a.end());\n\n    \n        vector<bool> dp(MX, false);\n        dp[0]=true;\n        \n        \n        for(int ai: a) {\n            for(int j=MX-1-ai; j>=0; j--) {\n                if(dp[j] && j<ai) dp[j+ai]=true;\n            }\n        }\n        \n        int result=0;\n        FOR(j, MX) if(dp[j]) result=j;\n        return result;\n    }\n};",
    "submit_ts": 1717905397.0
}