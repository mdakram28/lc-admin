{
    "username": "quocdatmc",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int ans = 0, n = s.length();\n        vector<int> nxt(n, n);\n        for(int i = n - 2; i >= 0; i--) {\n            if(s[i + 1] == '0') nxt[i] = i + 1;\n            else nxt[i] = nxt[i + 1];\n        }\n\n        int lim = sqrt(n) + 1;\n\n        for(int i = 0; i < n; i++) {\n            int temp = i;\n            for(int mx = 0; mx <= lim && temp < n; mx++) {\n                if(s[i] == '0' && mx == 0) continue;\n                int cnt1 = nxt[temp] - i - mx;\n                int prv = temp - i - mx + 1;\n                ans += (cnt1 >= mx * mx ? cnt1 - max(mx * mx, prv) + 1 : 0);\n                temp = nxt[temp];\n            }\n            cout << ans << endl;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722138291",
    "subm_id": "1335786948"
}