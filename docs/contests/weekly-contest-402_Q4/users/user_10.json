{
    "username": "kong-lao-da",
    "submission": "class BinIndexTree:\n    def __init__(self, size_or_nums):  # \u6811\u72b6\u6570\u7ec4\uff0c\u4e0b\u6807\u9700\u8981\u4ece1\u5f00\u59cb\n        if isinstance(size_or_nums, int):\n            self.size = size_or_nums\n            self.c = [0 for _ in range(self.size + 5)]\n        else:\n            self.size = len(size_or_nums)\n            self.c = [0 for _ in range(self.size + 5)]\n            for i, v in enumerate(size_or_nums):\n                self.add_point(i + 1, v)\n\n    def add_point(self, i, v):  # \u5355\u70b9\u589e\u52a0,\u4e0b\u6807\u4ece1\u5f00\u59cb\n        while i <= self.size:\n            self.c[i] += v\n            i += i & -i\n\n\n    def sum_interval(self, l, r):  # \u533a\u95f4\u6c42\u548c\uff0c\u4e0b\u6807\u4ece1\u5f00\u59cb,\u8ba1\u7b97\u95ed\u533a\u95f4[l,r]\u4e0a\u7684\u548c\n        return self.sum_prefix(r) - self.sum_prefix(l - 1)\n\n    def sum_prefix(self, i):  # \u524d\u7f00\u6c42\u548c\uff0c\u4e0b\u6807\u4ece1\u5f00\u59cb\n        s = 0\n        while i >= 1:\n            s += self.c[i]\n            # i -= i&-i\n            i &= i - 1\n        return s\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        bit = BinIndexTree(n)\n        for i in range(1,n-1):\n            if nums[i-1]<nums[i]>nums[i+1]:\n                bit.add_point(i+1,1)\n        ans = []\n        def set(l):\n            if 0<l<n-1:\n                cur = bit.sum_interval(l+1,l+1)\n                if nums[l-1]<nums[l]>nums[l+1] and cur == 0:\n                    bit.add_point(l+1,1)\n                elif not (nums[l-1]<nums[l]>nums[l+1]) and cur == 1:\n                    bit.add_point(l+1,-1)\n              \n                        \n        for t,l,r in queries:\n            if t == 1:\n                if r-l+1<=2:\n                    ans.append(0)\n                else:\n                    ans.append(bit.sum_interval(l+2,r))\n            else:\n                nums[l] = r \n                set(l)\n                set(l-1)\n                set(l+1)\n                    \n        return ans ",
    "submit_ts": 1718505780.0
}