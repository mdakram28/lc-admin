{
    "username": "sgs-h",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int res=INT_MAX,n=points.size();\n        int a1=INT_MIN,b1=INT_MAX,a2=INT_MIN,b2=INT_MAX,a3=INT_MIN,b3=INT_MAX,a4=INT_MIN,b4=INT_MAX;\n        int idx1,idy1,idx2,idy2,idx3,idy3,idx4,idy4;\n        for(int i=0;i<n;i++){\n            int x=points[i][0],y=points[i][1];\n            if(a1<x+y)idx1=i,a1=x+y;\n            if(b1>x+y)idy1=i,b1=x+y;\n            if(a2<-x+y)idx2=i,a2=-x+y;\n            if(b2>-x+y)idy2=i,b2=-x+y;\n            if(a3<x-y)idx3=i,a3=x-y;\n            if(b3>x-y)idy3=i,b3=x-y;\n            if(a4<-x-y)idx4=i,a4=-x-y;\n            if(b4>-x-y)idy4=i,b4=-x-y;\n        }\n        // cout<<a1-b1<<'\\n';\n        // cout<<a2-b2<<'\\n';\n        // cout<<a3-b3<<'\\n';\n        // cout<<a4-b4<<'\\n';\n        int t=max({a1-b1,a2-b2,a3-b3,a4-b4});\n        unordered_set<int>st;\n        if(t==a1-b1)st.insert(idx1),st.insert(idy1);\n        if(t==a2-b2)st.insert(idx2),st.insert(idy2);\n        if(t==a3-b3)st.insert(idx3),st.insert(idy3);\n        if(t==a4-b4)st.insert(idx4),st.insert(idy4);\n        for(auto t:st){\n            a1=INT_MIN,b1=INT_MAX,a2=INT_MIN,b2=INT_MAX,a3=INT_MIN,b3=INT_MAX,a4=INT_MIN,b4=INT_MAX;\n            for(int i=0;i<n;i++){\n                if(i==t)continue;\n                int x=points[i][0],y=points[i][1];\n                if(a1<x+y)a1=x+y;\n                if(b1>x+y)b1=x+y;\n                if(a2<-x+y)a2=-x+y;\n                if(b2>-x+y)b2=-x+y;\n                if(a3<x-y)a3=x-y;\n                if(b3>x-y)b3=x-y;\n                if(a4<-x-y)a4=-x-y;\n                if(b4>-x-y)b4=-x-y;\n            }\n            t=max({a1-b1,a2-b2,a3-b3,a4-b4});\n            res=min(res,t);\n        }\n        return res;\n    }\n};"
}