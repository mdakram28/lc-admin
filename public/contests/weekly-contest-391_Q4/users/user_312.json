{
    "username": "linhhlp",
    "submission": "class Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        res = []\n        n = len(A)\n        sum = []\n        diff = []\n        for i in range(n):\n            sum.append((A[i][0] + A[i][1], i))\n            diff.append((A[i][0] - A[i][1], i))\n        sum.sort()\n        diff.sort()\n        \n        for i in range(n):\n            if sum[-1][1] == i:\n                maxsum = sum[-2][0]\n            else:\n                maxsum = sum[-1][0]\n            \n            if sum[0][1] == i:\n                minsum = sum[1][0]\n            else:\n                minsum = sum[0][0]\n                \n            if diff[-1][1] == i:\n                maxdiff = diff[-2][0]\n            else:\n                maxdiff = diff[-1][0]\n            \n            if diff[0][1] == i:\n                mindiff = diff[1][0]\n            else:\n                mindiff = diff[0][0]\n                \n                \n            res.append(max(maxsum - minsum, maxdiff - mindiff))\n\n        return min(res)"
}