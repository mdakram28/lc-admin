{
    "username": "Manan04",
    "submission": "class SegmentTree:\n    def __init__(self, array, func=max):\n        self.n = len(array)\n        self.size = 2**(int(log2(self.n-1))+1) if self.n != 1 else 1\n        self.func = func\n        self.default = 0 if self.func != min else inf\n        self.data = [self.default] * (2 * self.size)\n        self.process(array)\n    def process(self, array):\n        self.data[self.size : self.size+self.n] = array\n        for i in range(self.size-1, -1, -1):\n            self.data[i] = self.func(self.data[2*i], self.data[2*i+1])\n    def query(self, alpha, omega):\n        if alpha == omega:\n            return self.data[alpha + self.size]\n        res = self.default\n        alpha += self.size\n        omega += self.size + 1\n        while alpha < omega:\n            if alpha & 1:\n                res = self.func(res, self.data[alpha])\n                alpha += 1\n            if omega & 1:\n                omega -= 1\n                res = self.func(res, self.data[omega])\n            alpha >>= 1\n            omega >>= 1\n        return res\n    def update(self, index, value):\n        index += self.size\n        self.data[index] = value\n        index >>= 1\n        while index:\n            self.data[index] = self.func(self.data[2*index], self.data[2*index+1])\n            index >>= 1\nclass Solution:\n    def countOfPeaks(self, a: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(a)\n        helper = [0] * n\n        s = SegmentTree(helper, lambda x, y: x + y)\n        def set(idx):\n            if(idx <= 0 or idx >= n - 1):\n                return\n            prev = a[idx - 1]\n            nex = a[idx + 1]\n            cur = a[idx]\n            if(cur > prev and cur > nex):\n                s.update(idx, 1)\n            else:\n                s.update(idx, 0)\n            return\n        for i in range(n):\n            set(i)\n        ans = []\n        for ty, aa, b in queries:\n            if(ty == 1):\n                aa += 1\n                b -= 1\n                if(aa <= b):\n                    ans.append(s.query(aa, b))\n                else:\n                    ans.append(0)\n            else:\n                a[aa] = b\n                set(aa)\n                set(aa - 1)\n                set(aa - 2)\n                set(aa + 1)\n                set(aa + 2)\n        return ans",
    "submit_ts": "1718505841",
    "subm_id": "1289597087"
}