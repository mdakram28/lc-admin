{
    "username": "chalkydoge",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        left, right = 0, 10 ** 9\n        res = right\n        \n        n = len(points)\n        s1 = SortedList([])\n        s2 = SortedList([])\n        \n        for i in range(n):\n            x, y = points[i]\n            s1.add(x + y)\n            s2.add(x - y)\n        # print(s1)\n        # print(s2)\n        \n        for i in range(n):\n            x, y = points[i]\n            r1 = x + y\n            r2 = x - y\n            \n            s1.remove(r1)\n            s2.remove(r2)\n            # print(s1)\n            # print(s2)\n        \n            res1 = s1[-1] - s1[0]\n            res2 = s2[-1] - s2[0]\n            res = min(max(res1, res2), res)\n            s1.add(r1)\n            s2.add(r2)\n        \n        return res\n        \n#         def cal(not_used):\n#             minx, miny = 10 ** 9, 10 ** 9\n#             maxx, maxy = 0, 0\n#             for i in range(n):\n#                 if i == not_used: continue\n#                 x, y = points[i]\n#                 minx = min(minx, x + y)\n#                 maxx = max(maxx, x + y)\n#                 miny = min(miny, x - y)\n#                 maxy = max(maxy, x - y)\n#             maxD = max(maxx - minx, maxy - miny)\n#             return maxD\n        "
}