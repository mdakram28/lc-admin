{
    "username": "achintya7567",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int k=sqrt(n);\n        int m=(n+k-1)/k;\n        vector<int> mxedge(m), me(n);\n        set<int> s;\n        map<int,int> m1;\n\n        for(int i=0; i<n-1; i++){\n            me[i]=n-i-1;\n            s.insert(i);\n            m1[i]=i+1;\n            mxedge[i/k]=max(mxedge[i/k], me[i]);\n        }\n        vector<int> ans;\n        int prevans=n-1;\n        for(auto q:queries){\n            int delta=-1;\n            int chk=0;\n            auto it=(s.lower_bound(q[0]));\n            while(it!=s.end()&&*it<q[1]){\n                auto tmp=it;\n                ++tmp;\n                if(m1[*it]<=q[1]){\n                    chk=1;\n                    delta++;\n                }\n                s.erase(it);\n                it=tmp;\n            }\n            if(chk)m1[q[0]]=max(m1[q[0]], q[1]);\n            if(chk)s.insert(q[0]);\n            if(chk){\n                prevans-=delta;\n            }\n            ans.push_back(prevans);\n            // int i=0; \n            // int block=q[0]/k;\n            // int maxedge=0;\n            // while(i<block){\n            //     maxedge=max(maxedge,mxedge[i++]);\n            // }\n            // i=k*block;\n            // for(;i<q[0]; i++){\n            //     maxedge=max(maxedge,me[i]);\n            // }\n            // if(maxedge>=q[1]){\n            //     ans.push_back(prevans);\n            // }\n            // else{\n            //     if(q[0]!=0){\n            //         prevans++;\n            //     }\n            //     prevans-=(q[1]-q[0]);\n            //     ans.push_back(prevans);\n            // }\n            // mxedge[q[0]/k]=max(mxedge[q[0]/k], q[1]);\n            // me[q[0]]=max(me[q[0]], q[1]);\n\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1722743874",
    "subm_id": "1343801636"
}