{
    "username": "randomVM",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        \n                \n        int m = grid.size();\n        int n = grid[0].size();\n        \n        int acc = 0;\n        int totalOnes = 0;\n        int countOnes;\n        for(int i=0; i<m/2; i++)\n        {\n            for(int j=0; j<n/2; j++)\n            {\n                countOnes = 0;\n                if(grid[i][j]) countOnes++;\n                if(grid[i][n-j-1]) countOnes++;\n                if(grid[m-i-1][j]) countOnes++;\n                if(grid[m-i-1][n-j-1]) countOnes++;\n                \n                acc = countOnes > 2 ? acc + 4 - countOnes : acc + countOnes;\n            }\n        }\n        \n        \n        int nOfChanges = 0;\n        int nOfOnes = 0;\n        if(m % 2)\n        {\n            int mId = m/2;\n            for(int j=0; j<n/2; j++)\n            {\n                if(grid[mId][j] != grid[mId][n-j-1]) \n                {\n                    acc++;\n                    nOfChanges++;\n                }\n                else\n                {\n                    if(grid[mId][j]) nOfOnes += 2;\n                }\n            }\n        }\n        \n        if(n % 2)\n        {\n            int nId = n/2;\n            for(int i=0; i<m/2; i++)\n            {\n                if(grid[i][nId] != grid[m-i-1][nId])\n                {\n                    acc++;\n                    nOfChanges++;\n                }\n                else\n                {\n                    if(grid[i][nId]) nOfOnes += 2;\n                }\n            }\n        }\n        \n        // to get number of 1's mutiple of 4\n        if(n % 2 && m % 2 && grid[m/2][n/2]) acc++;\n        if(nOfChanges == 0 && nOfOnes % 4) acc += 2;\n        \n        \n        return acc;\n    }\n};",
    "submit_ts": "1722697919",
    "subm_id": "1343163576"
}