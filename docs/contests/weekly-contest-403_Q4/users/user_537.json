{
    "username": "Abraxos",
    "submission": "class Solution {\npublic:\n    int fx(vector<vector<int>>& grid,int x1, int x2, int y1, int y2){\n        int n=grid.size();\n        int m=grid[0].size();\n        while(x1<=x2){\n            int check=0;\n            for(int j=y1;j<=y2;j++){\n                check|=grid[x1][j];\n            }\n            if(check)break;\n            else x1++;\n        }\n        while(x2>=x1){\n            int check=0;\n            for(int j=y1;j<=y2;j++){\n                check|=grid[x2][j];\n            }\n            if(check)break;\n            else x2--;\n        }\n        if(x1>x2){\n            return 0;\n        }\n        int minc=m;\n        int maxc=-1;\n        for(int i=x1;i<=x2;i++){\n                for(int j=y1;j<=y2;j++){\n                    if(grid[i][j]){\n                        minc=min(minc,j);\n                        maxc=max(maxc,j);\n                    }\n                }\n        }\n        return (x2-x1+1)*(maxc-minc+1);\n    }\n    \n    int fy(vector<vector<int>>& grid,int y1, int y2,int x1,int x2){\n        int n=grid.size();\n        int m=grid[0].size();\n        while(y1<=y2){\n            int check=0;\n            for(int j=x1;j<=x2;j++){\n                check|=grid[j][y1];\n            }\n            if(check)break;\n            else y1++;\n        }\n        while(y2>=y1){\n            int check=0;\n            for(int j=x1;j<=x2;j++){\n                check|=grid[j][y2];\n            }\n            if(check)break;\n            else y2--;\n        }\n        if(y1>y2){\n            return 0;\n        }\n        int minr=n;\n        int maxr=-1;\n        for(int j=y1;j<=y2;j++){\n                for(int i=x1;i<=x2;i++){\n                    if(grid[i][j]){\n                        minr=min(minr,i);\n                        maxr=max(maxr,i);\n                    }\n                }\n        }\n        return (y2-y1+1)*(maxr-minr+1);\n    }\n    \n    \n    int findarx(vector<vector<int>>& grid,int x1, int x2){\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=n*m;\n        \n        if(x2-x1>0){\n            \n            for(int i=x1;i<x2;i++){\n                int curr=fx(grid,x1,i,0,m-1);\n                int c2=fx(grid,i+1,x2,0,m-1);\n                if(curr==0||c2==0)continue;\n                ans=min(ans,curr+c2);\n                \n                \n            }\n        }\n        for(int j=0;j<m-1;j++){\n            int curr=fy(grid,0,j,x1,x2);\n            int c2=fy(grid,j+1,m-1,x1,x2);\n            if(curr==0||c2==0)continue;\n                ans=min(ans,curr+c2);\n        }\n        return ans;\n        \n    }\n    int findary(vector<vector<int>>& grid,int y1, int y2){\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=n*m;\n        if(y2-y1>0){\n            for(int j=y1;j<y2;j++){\n                int curr=fy(grid,y1,j,0,n-1);\n                int c2=fy(grid,j+1,y2,0,n-1);\n                if(curr==0||c2==0)continue;\n                ans=min(ans,curr+c2);\n            }\n        }\n        for(int i=0;i<n-1;i++){\n            int curr=fx(grid,0,i,y1,y2);\n            int c2=fx(grid,i+1,n-1,y1,y2);\n            if(curr==0||c2==0)continue;\n            ans=min(ans,curr+c2);\n        }\n        return ans;\n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        \n        int ans=n*m;\n       \n        for(int i=0;i<n-1;i++){\n            int curr=findarx(grid,i+1,n-1);\n            int c2=fx(grid,0,i,0,m-1);\n            if(curr==0 || c2==0)continue;\n            curr+=c2;\n            ans=min(ans,curr);\n        }\n       \n        for(int i=n-1;i>=1;i--){\n            int curr=findarx(grid,0,i-1);\n            int c2=fx(grid,i,n-1,0,m-1);\n            if(curr==0 || c2==0)continue;\n            curr+=c2;\n            ans=min(ans,curr);\n        }\n        \n        for(int j=0;j<m-1;j++){\n            int curr=findary(grid,j+1,m-1);\n            int c2=1;\n            c2=fy(grid,0,j,0,n-1);\n            \n            if(curr==0 || c2==0)continue;\n            curr+=c2;\n            ans=min(ans,curr);\n        }\n        \n        for(int j=m-1;j>0;j--){\n            int curr=findary(grid,0,j-1);\n            int c2=1;\n            c2=fy(grid,j,m-1,0,n-1);\n            if(curr==0 || c2==0)continue;\n            curr+=c2;\n            ans=min(ans,curr);\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1719115027",
    "subm_id": "1297358887"
}