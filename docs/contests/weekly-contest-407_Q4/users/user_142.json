{
    "username": "scanhex",
    "submission": "\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        using nagai = long long;\n        int n = nums.size();\n        nagai cur = 0;\n        vector<nagai> pos, neg;\n        for (int i = 0; i < n; i++) {\n\t\t\tnagai prevn = i == 0 ? 0 : nums[i - 1];\n\t\t\tnagai prevt = i == 0 ? 0 : target[i - 1];\n\t\t\tcur = (nums[i] - prevn) - (target[i] - prevt);\n            if (cur > 0) {\n                pos.push_back(cur);\n            } else if (cur < 0) {\n                neg.push_back(-cur);\n            }\n        }\n        pos.push_back(0);\n        neg.push_back(0);\n        sort(pos.rbegin(), pos.rend());\n        sort(neg.rbegin(), neg.rend());\n        nagai ap = pos[0], an = neg[0];\n        nagai sump = std::accumulate(pos.begin() + 1, pos.end(), 0LL);\n        nagai sumn = std::accumulate(neg.begin() + 1, neg.end(), 0LL);\n\t\treturn max(ap+ sump, an + sumn);\n    }\n};\n",
    "submit_ts": "1721529697",
    "subm_id": "1327909955"
}