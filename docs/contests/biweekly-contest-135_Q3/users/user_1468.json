{
    "username": "lost-temple-2",
    "submission": "public class Solution {\n    \n    private int n;\n    private int[] tree;\n    \n    private int Lowbit(int x) {\n        return x&-x;\n    }\n    \n    private void Update(int x,int v) {\n        while (x <= n) {\n            tree[x] += v;\n            x += Lowbit(x);\n        }\n    }\n    \n    private int Query(int x) {\n        int res = 0;\n        while (x > 0) {\n            res += tree[x];\n            x -=Lowbit(x);\n        }\n        return res;\n    }\n    \n    private int Query(int l,int r) {\n        return Query(r) - Query(l-1);\n    }\n    \n    \n    public int MinChanges(int[] nums, int k) {\n        int max = 0;\n        foreach (var num in nums) {\n            max = Math.Max(max,num);\n        }\n        n = max+1;\n        tree = new int[n+1];\n        Dictionary<int,int> dic = new Dictionary<int,int>();\n        int len = nums.Length;\n        List<Tuple<int,int>> list = new List<Tuple<int,int>>();\n        for (int i=0;i<len/2;i++) {\n            int j = len-i-1;\n            int minNum = Math.Min(nums[i],nums[j]);\n            int maxNum = Math.Max(nums[i],nums[j]);\n            int d = maxNum - minNum;\n            //Console.WriteLine(\"i = {0},d = {1}\",i,d);\n            if (!dic.ContainsKey(d)) {\n                dic.Add(d,0);\n            }\n            ++dic[d];\n            list.Add(Tuple.Create(minNum+1,maxNum+1));\n            //Update(maxNum+1,1);\n        }\n        list.Sort((a,b) => {\n           return a.Item1 - b.Item1; \n        });\n        List<int> dList = new List<int>();\n        foreach (var kv in dic) {\n            dList.Add(kv.Key);\n        }\n        dList.Sort();\n        int tot = len / 2;\n        int ans = len / 2;\n        int idx = list.Count-1;\n        k++;\n        foreach (var d in dList) {\n            // min+d > k+1\n            while (idx >= 0 && list[idx].Item1+d > k) {\n                //Console.WriteLine(idx);\n                Update(list[idx].Item2,1);\n                idx--;\n            }\n            int cnt = Query(d);\n            //Console.WriteLine(\"d = {0},cnt = {1}\",d,cnt);\n            int res = tot - dic[d] + cnt;\n            ans = Math.Min(ans,res);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721489214",
    "subm_id": "548317816"
}