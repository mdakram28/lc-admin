{
    "username": "running_man221",
    "submission": "\n#define vi vector<int>\n#define rep(i,a,b) for(int i=a;i<b;i++)\n\nvector<vi> graph;\nvi depth;\n\nvoid dfs(int node,int par){\n    for(auto x:graph[node]){\n        if(x==par)continue;\n        if(x%2)depth[x]=depth[node]+1;\n        else depth[x]=depth[node]+2;\n        dfs(x,node);\n    }\n}\n\nvoid dfs2(int node,int par){\n   // cout<<\"dfs \"<<node<<\"\\n\";\n   // cout<<\"depth is \"<<depth[node]<<\"\\n\";\n        for(auto x:graph[node]){\n        if(x==par)continue;\n      //  cout<<\"child \"<<x<<\"\\n\";\n        if(node%2==1)depth[x]=depth[node]+1;\n        else depth[x]=depth[node]+2;\n        // cout<<\"depth child is \"<<depth[x]<<\"\\n\";\n        dfs2(x,node);\n    }\n}\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1;\n        graph.clear();\n        graph.resize(n,vi(0));\n        for(auto x:edges){\n            int a=x[0],b=x[1];\n            graph[a].push_back(b);\n            graph[b].push_back(a);\n        }\n        depth.clear();\n        depth.resize(n,0);\n        dfs(0,-1);\n        int mxind=0;\n        rep(i,0,n){\n            if(depth[i]>=depth[mxind])mxind=i;\n        }\n        depth.clear();depth.resize(n+1,0);\n        dfs(mxind,-1);\n        int mxind2=0;\n        rep(i,0,n){\n            if(depth[i]>=depth[mxind2])mxind2=i;\n        }\n        depth.clear();depth.resize(n,0);\n       // cout<<\"end points are \"<<mxind<<\" \"<<mxind2<<\"\\n\";\n        vi ans(n,0);\n        //cout<<\"\\nstart dfs2 on \"<<mxind<<\"\\n\";\n        dfs2(mxind,-1);\n        \n        rep(i,0,n){\n            ans[i]=max(ans[i],depth[i]);\n          //  cout<<\"depth \"<<i<<\" is \"<<depth[i]<<\"\\n\";\n        }\n        depth.clear();depth.resize(n,0);\n       // cout<<\" \\n\\nstart dfs2 on \"<<mxind2<<\"\\n\";\n        dfs2(mxind2,-1);\n        \n        rep(i,0,n){\n            ans[i]=max(ans[i],depth[i]);\n          //  cout<<\"depth \"<<i<<\" is \"<<depth[i]<<\"\\n\";\n        }\n       return ans;\n\n    }\n};",
    "submit_ts": "1722700355",
    "subm_id": "1343239336"
}