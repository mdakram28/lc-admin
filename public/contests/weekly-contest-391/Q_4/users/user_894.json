{
    "username": "imsolty",
    "submission": "class Solution(object):\n    def minimumDistance(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: int\n        \"\"\"\n\n        def find_max_distance(arr):\n            sums = []\n            diffs = []\n            for i in range(len(arr)):\n                sums.append((arr[i][0] + arr[i][1], i))\n                diffs.append((arr[i][0] - arr[i][1], i))\n            sums.sort(key=lambda x: x[0])\n            diffs.sort(key=lambda x: x[0])\n            if sums[-1][0] - sums[0][0] > diffs[-1][0] - diffs[0][0]:\n                return sums[-1][1], sums[0][1], sums[-1][0] - sums[0][0]\n            else:\n                return diffs[-1][1], diffs[0][1], diffs[-1][0] - diffs[0][0]\n\n        x, y, lgth = find_max_distance(points)\n        _, _, without_x = find_max_distance(points[:x] + points[x + 1:])\n        _, _, without_y = find_max_distance(points[:y] + points[y + 1:])\n        return min(lgth, without_x, without_y)"
}