{
    "username": "adhishkancharla",
    "submission": "using ll = long long;\nusing vi = vector<int>;\nusing vvi = vector<vi>;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nconst ll mod = 1e9 + 7;\n\nclass Solution {\npublic:\n    \n    int inversions(int i, int k, vvi&dp, vi&vals)\n    {\n        if (dp[i][k] != -1) return dp[i][k];\n        if (vals[i] != -1 and k != vals[i])return dp[i][k] = 0;\n        if (k == 0 and i == 0) return dp[i][k] = 1;\n        if (i == 0) return dp[i][k] = 0;\n        \n        int j = 0;\n        ll ans = 0;\n        \n        for (j = 0; j < i && k - j >= 0; j++)\n            ans = (ans + inversions(i - 1, k - j,dp,vals))%mod;\n        \n        return dp[i][k] = ans;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        \n        sort(req.begin(),req.end());\n        vi vals(n + 1,-1);\n        vvi dp(n + 1,vi(401,-1));\n        \n        for (auto it:req)\n            vals[it[0] + 1] = it[1];\n        \n        return inversions(n, vals[n], dp, vals);\n    }\n};",
    "submit_ts": "1719069163",
    "subm_id": "1296788448"
}