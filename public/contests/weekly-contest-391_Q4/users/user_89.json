{
    "username": "theoden42",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        multiset<int> sum, dif;\n        for(int i = 0; i < n; i++){\n            int s = p[i][0] + p[i][1];\n            int d = p[i][0] - p[i][1];\n            sum.insert(s);\n            dif.insert(d);\n        }\n        \n        \n        int mxans = 1e9 + 5;\n        for(int i = 0; i < n; i++){\n            int s = p[i][0] + p[i][1];\n            int d = p[i][0] - p[i][1];\n            sum.erase(sum.find(s));\n            dif.erase(dif.find(d));\n            \n            int mx1 = *(--sum.end()) - *(sum.begin());\n            int mx2 = *(--dif.end()) - *(dif.begin());\n            \n            int mx = max(mx1, mx2);\n            \n            mxans = min(mxans, mx);\n            \n            sum.insert(s);\n            dif.insert(d);\n        }\n        \n        return mxans;\n    }   \n};"
}