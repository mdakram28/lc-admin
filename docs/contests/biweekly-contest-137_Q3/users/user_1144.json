{
    "username": "Swasthik Mohanty",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& b) {\n        int m = b.size();\n        int n = b[0].size();\n        long long maxSum = LLONG_MIN;\n        vector<vector<long long>> vals(m, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> cols(m, vector<int>(3, -1));\n\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> cVals;\n            for (int j = 0; j < n; ++j) {\n                cVals.emplace_back(b[i][j], j);\n            }\n            sort(cVals.rbegin(), cVals.rend());\n\n            for (int k = 0; k < 3 && k < n; ++k) {\n                vals[i][k] = cVals[k].first;\n                cols[i][k] = cVals[k].second;\n            }\n        }\n\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (cols[r2][j] == cols[r1][i]) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (cols[r3][k] == cols[r1][i] || cols[r3][k] == cols[r2][j]) continue;\n\n                                long long currSum = vals[r1][i] + vals[r2][j] + vals[r3][k];\n                                maxSum = max(maxSum, currSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723909962",
    "subm_id": "1359212193"
}