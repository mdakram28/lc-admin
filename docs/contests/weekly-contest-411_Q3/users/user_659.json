{
    "username": "Assassin-Killer",
    "submission": "import java.util.*;\n\nclass Solution {\n    public String largestPalindrome(int n, int k) {\n        TreeSet<Integer> set = new TreeSet<>();\n        for (int i = 1; i < 10; i++) {\n            set.add(i * k % 10);\n        }\n        List<Integer> list = new ArrayList<>(set);\n        list.sort((a, b) -> b - a);\n        char[] ch = new char[n];\n        Arrays.fill(ch, '9');\n        ch[0] = (char) ('0' + list.get(0));\n        ch[n - 1] = ch[0];\n        if (k <= 2 || k == 5) return new String(ch);\n        if (k == 8 && n >= 6) {\n            ch[0] = '8';\n            ch[1] = '8';\n            ch[2] = '8';\n            ch[n - 1] = '8';\n            ch[n - 2] = '8';\n            ch[n - 3] = '8';\n            return new String(ch);\n        }\n        if (k == 4 && n >= 4) {\n            ch[0] = '8';\n            ch[1] = '8';\n            ch[n - 1] = '8';\n            ch[n - 2] = '8';\n            return new String(ch);\n        }\n\n        int id = 0;\n        while (true) {\n            if (ch[0] - '0' != list.get(id)) {\n                id++;\n                if (id >= list.size()) return \"\";\n                Arrays.fill(ch, '9');\n                ch[0] = (char) ('0' + list.get(id));\n                ch[n - 1] = ch[0];\n            }\n            if (check(ch, k)) return new String(ch);\n            else mi(ch);\n        }\n\n    }\n\n    private void mi(char[] ch) {\n        int i = (ch.length - 1) / 2;\n        int n = ch.length;\n        while (true) {\n            if (ch[i] == '0') {\n                ch[i] = '9';\n                ch[n - i - 1] = ch[i];\n                i--;\n            } else {\n                ch[i] = (char) (ch[i] - 1);\n                ch[n - i - 1] = ch[i];\n                break;\n            }\n        }\n    }\n\n    private boolean check(char[] ch, int k) {\n        int pre = 0;\n        for (int i = 0; i < ch.length; i++) {\n            int cur = pre * 10 + ch[i] - '0';\n            pre = cur % k;\n        }\n        return pre == 0;\n    }\n}",
    "submit_ts": "1723952447",
    "subm_id": "556411672"
}