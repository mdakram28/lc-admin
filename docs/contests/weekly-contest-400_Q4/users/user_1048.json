{
    "username": "redhair_rs",
    "submission": "class Solution {\n    static void decrementZeroCount(long number,long[] zeroCount) {\n        for (int i = 0; i < 32; ++i) {\n            if(((number >> i) & 1) != 0){\n                continue;\n            }\n            if (((number >> i) & 1) == 0) {\n                zeroCount[i] -= 1;\n            }\n        }\n    }\n    static void incrementZeroCount(long number,long[] zeroCount) {\n        for (int i = 0; i < 32; ++i) {\n            if(((number >> i) & 1) != 0){\n                continue;\n            }\n            if (((number >> i) & 1) == 0) {\n                zeroCount[i] += 1;\n            }\n        }\n    }\n    static int evaluateXOR(long[] zeroCount) {\n        int res = 0;\n        for (int i = 0; i < 32; ++i) {\n            if(zeroCount[i] != 0){\n                continue;\n            }\n            if (zeroCount[i] == 0) {\n                res ^= (1 << i);\n            }\n        }\n        return res;\n    }\n\n    public int minimumDifference(int[] nums, int k1) {\n        long res = Long.MAX_VALUE;\n        int ii = 0;\n        int n1 = nums.length;\n        long[] zerocount = new long[33];\n        for (int j1 = 0; j1 < n1; ++j1) {\n            incrementZeroCount(nums[j1], zerocount);\n            long xx = evaluateXOR(zerocount);\n            res = Math.min(res, Math.abs(xx - k1));\n            while (j1 < n1 && ii < j1 && xx < k1) {\n                decrementZeroCount(nums[ii],zerocount);\n                xx = evaluateXOR(zerocount);\n                res = Math.min(res, Math.abs(xx - k1));\n                ++ii;\n            }\n        }\n        return (int)res;\n    }\n}",
    "submit_ts": "1717300687",
    "subm_id": "1274851870"
}