{
    "username": "szp14",
    "submission": "class Solution {\npublic:\n    typedef long long LL;\nstruct NumList\n{\n    int a;\n    list<int>::iterator p;\n    NumList(int a, list<int>::iterator p) : a(a), p(p) {}\n    bool operator < (const NumList& x) const\n    {\n        return a < x.a;\n    }\n};\nLL getMinOp(vector<int>& A)\n{\n    int n = (int)A.size();\n    LL ans = 0;\n    list<int> L;\n    vector<NumList> B;\n    L.push_back(0);\n    B.push_back(NumList(0, prev(L.end())));\n    for(int i = 0; i < n; i++)\n    {\n        if(i && A[i] == A[i - 1]) continue;\n        L.push_back(A[i]);\n        B.push_back(NumList(A[i], prev(L.end())));\n    }\n    L.push_back(0);\n    B.push_back(NumList(0, prev(L.end())));\n    sort(B.begin(), B.end());\n    n = (int)B.size();\n    for(int i = n - 1; i >= 2; i--)\n    {\n        auto p = B[i].p;\n        int l = B[i].a - *(prev(p));\n        int r = B[i].a - *(next(p));\n        ans += min(l, r);\n        L.erase(p);\n    }\n    return ans;\n}\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = (int)nums.size();\n    LL ans = 0;\n    vector<int> A;\n    int lastSgn = 0;\n    nums.push_back(0); target.push_back(0);\n    for(int i = 0; i <= n; i++)\n    {\n        int diff = nums[i] - target[i];\n        int sgn = diff == 0 ? 0 : (diff > 0 ? 1 : -1);\n        if(i == n || sgn == 0 || sgn != lastSgn)\n        {\n            if(!A.empty()) ans += getMinOp(A);\n            A.clear();\n        }\n        if(sgn) A.push_back(abs(diff));\n        lastSgn = sgn;\n    }\n    return ans;\n    }\n};",
    "submit_ts": "1721531534",
    "subm_id": "1327963408"
}