{
    "username": "shenderian69420",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        N = len(nums)\n        diff = [0] * len(nums)\n\n        for i in range(N):\n            diff[i] = target[i] - nums[i]\n\n        stack = []\n        res = 0\n        for n in diff: # pos\n            n = max(0, n)\n            if stack and stack[-1] > n:\n                res += stack[-1] - n\n            while stack and stack[-1] > n:\n                stack.pop()\n            stack.append(n)\n        res += stack[-1]\n        stack = []\n        for n in diff: # neg\n            n = -n\n            n = max(0, n)\n            if stack and stack[-1] > n:\n                res += stack[-1] - n\n            while stack and stack[-1] > n:\n                stack.pop()\n            stack.append(n)\n        res += stack[-1]\n        return res",
    "submit_ts": "1721531557",
    "subm_id": "1327963957"
}