{
    "username": "shubhroses",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \"\"\"\n        Keep a count of hCuts and vCuts\n\n        order list (cost, dir) from max to min\n\n        iterate through list\n\n        if dir = horizontal:\n            res += vCuts + 1 * cost\n\n        \"\"\"\n        res = 0\n\n        cuts = []\n        for h in horizontalCut:\n            cuts.append((h, 'h'))\n        for v in verticalCut:\n            cuts.append((v, 'v'))\n        \n        cuts.sort(key = lambda x:x[0], reverse=True)\n\n        vCuts, hCuts = 1, 1\n        for cost, dir in cuts:\n            if dir == 'h':\n                res += vCuts * cost\n                hCuts += 1\n            else:\n                res += hCuts * cost\n                vCuts += 1\n        return res",
    "submit_ts": "1720925765",
    "subm_id": "1320265489"
}