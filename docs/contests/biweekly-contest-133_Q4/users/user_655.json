{
    "username": "AshishPatel17",
    "submission": "class Solution {\npublic:\n    const int mod = 1e9  +7 ; \n    void solve(vector<vector<long>>&dp , vector<vector<int>>&r , map<int,int>&mp , int n )\n    {\n        dp[0][0] = 1;\n        for(int i = 1 ; i<= n ; i++)\n        {\n            for(int j = 0 ; j < 401 ; j++)\n            {\n                for(int k = 0 ;k < i ; k++)\n                {\n                    int tempans = j - k;\n                    if(tempans >=0 )\n                    {\n                        dp[i][j] = (dp[i][j] + dp[i-1][tempans])%mod;\n                    }\n                    else continue;\n                }\n            }\n            if(mp.count(i))\n            {\n                int tempcount = mp[i];\n                for(int j = 0; j<= 400 ; j++)\n                {\n                    if(j!=tempcount)\n                    {\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        map<int,int>mp;\n        for(auto i :r)\n        {\n            mp[i[0] + 1] = i[1];\n        }\n        vector<vector<long>>dp(n+1 ,vector<long>(401 , 0));\n        solve(dp , r , mp , n);\n        long long int ans =0 ;\n        for(auto i : dp[n])\n        {\n            ans = (ans + i)%mod;\n        }\n        return (int)ans;\n    }\n};",
    "submit_ts": 1719070914.0
}