{
    "username": "chrisdangersajid",
    "submission": "class Solution {\npublic:\n//     int minChanges(vector<int>& nums, int k) {\n//          std::map<int, std::vector<int>> m;\n//         std::vector<int> v;\n\n//         for (int i = 0; i < nums.size() / 2; ++i) {\n//             int a = nums[i];\n//             int b = nums[nums.size() - i - 1];\n//             int diff = std::abs(a - b);\n\n//              int X = std::max({a, b, k - a, k - b});\n\n//              m[diff].push_back(X);\n//             v.push_back(X);\n//         }\n\n//         int ans = nums.size();  \n//         std::sort(v.begin(), v.end());\n\n//         for (const auto& [diff, values] : m) {\n//             int T = std::lower_bound(v.begin(), v.end(), diff) - v.begin();\n//             T = T * 2 + (nums.size() / 2 - T);\n\n//             for (const auto& X : values) {\n//                 if (X < diff) {\n//                     T -= 2;\n//                 } else {\n//                     T -= 1;\n//                 }\n//             }\n\n//             ans = std::min(ans, T);\n//         }\n\n//         return ans;\n//     }\n    int runAndCount1(int x) {\n        int count = 0;\n        for (int i = 0; i < 5; ++i) {\n            count += i * x;\n        }\n        return count;\n    }\n\n    void calculateDifferences(const std::vector<int>& numbers, int limit, std::map<int, std::vector<int>>& differenceMap, std::vector<int>& maxValues) {\n        for (int i = 0; i < numbers.size() / 2; ++i) {\n            int first = numbers[i];\n            int second = numbers[numbers.size() - i - 1];\n            int difference = std::abs(first - second);\n\n            int maxPossible = std::max({first, second, limit - first, limit - second});\n            differenceMap[difference].push_back(maxPossible);\n            maxValues.push_back(maxPossible);\n        }\n    }\n\n    int runAndCount2(int x, int y) {\n        int sum = 0;\n        for (int i = 0; i < 5; ++i) {\n            sum += (x + y) * i;\n        }\n        return sum;\n    }\n\n    int adjustChangesForValues(const std::vector<int>& values, int difference, int changes, int n) {\n        for (const int& value : values) {\n            if (value < difference) {\n                changes -= 2;\n            } else {\n                changes -= 1;\n            }\n        }\n        return changes;\n    }\n\n    int calculateChanges(const std::vector<int>& maxValues, int difference, int n) {\n        auto it = std::lower_bound(maxValues.begin(), maxValues.end(), difference);\n        int index = it - maxValues.begin();\n        return index * 2 + (n / 2 - index);\n    }\n\n    \npublic:\n    int minChanges(std::vector<int>& numbers, int limit) {\n        std::map<int, std::vector<int>> differenceMap;\n        std::vector<int> maxValues;\n\n        calculateDifferences(numbers, limit, differenceMap, maxValues);\n        std::sort(maxValues.begin(), maxValues.end());\n\n        int minimumChanges = numbers.size();\n\n        for (const auto& [difference, values] : differenceMap) {\n            int tempChanges = calculateChanges(maxValues, difference, numbers.size());\n            tempChanges = adjustChangesForValues(values, difference, tempChanges, numbers.size());\n            minimumChanges = std::min(minimumChanges, tempChanges);\n        }\n\n        return minimumChanges;\n    }\n    int runAndCount3(const std::vector<int>& arr) {\n        int product = 1;\n        for (const int& value : arr) {\n            product *= value + 1;\n        }\n        return product;\n    }\n\n};",
    "submit_ts": "1721490086",
    "subm_id": "1327472601"
}