{
    "username": "maybk",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    int numberOfPermutations(int n, vector<vector<int>>& a) {\n        int m=a.size();\n        vector<int>can(n+1,-1);\n        for(auto &x:a){\n            can[x[0]+1]=x[1];\n        }\n        int mx=can[n];\n        vector<vector<int>>dp(n+1,vector<int>(mx+1));\n        dp[0][0]=1;\n        for (int i=1;i<=n;++i) {\n            vector<int> ndp(mx+1);\n            ndp[0] = dp[i - 1][0];\n            for (int j = 1; j <= mx; ++j) {\n                ndp[j] = (ndp[j - 1] + dp[i - 1][j]) % MOD;\n            }\n            for (int j = 0; j <= mx; ++j) {\n                dp[i][j] = ndp[j];\n                if (j >= i) {\n                    dp[i][j] = (dp[i][j] - ndp[j - i] + MOD) % MOD;\n                }\n            }\n            if(can[i]!=-1){\n                for(int j=0;j<=mx;j++){\n                    if(j==can[i])continue;\n                    dp[i][j]=0;\n                }\n            }\n        }\n        return dp[n][mx];\n    }\n};",
    "submit_ts": 1719068670.0
}