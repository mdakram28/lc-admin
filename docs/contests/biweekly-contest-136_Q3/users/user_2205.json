{
    "username": "peng-qiao-e-liao",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n   int n = grid.length;\n        int m = grid[0].length;\n        int ans = 0;\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int count1 = 0;\n                if (grid[i][j] == 1) count1++;\n                if (grid[n - i - 1][m - j - 1] == 1) count1++;\n                if (grid[n - i - 1][j] == 1) count1++;\n                if (grid[i][m - j - 1] == 1) count1++;\n                ans += Math.min(count1, 4 - count1);\n            }\n        }\n\n        int count1 = 0;\n        int count0 = 0;\n        int count = 0;\n        if (n % 2 == 1) {\n            int i = n / 2;\n            for (int j = 0; j < m / 2; j++) {\n                if ((grid[i][j] ^ grid[i][m - j - 1]) == 1) count++;\n                if (grid[i][j] == 1 && grid[i][m - j - 1] == 1) count1++;\n                if (grid[i][j] == 0 && grid[i][m - j - 1] == 0) count0++;\n            }\n        }\n        if (m % 2 == 1) {\n            int j = m / 2;\n            for (int i = 0; i < n / 2; i++) {\n                if ((grid[i][j] ^ grid[n - i - 1][j]) == 1) count++;\n                if (grid[i][j] == 1 && grid[n - i - 1][j] == 1) count1++;\n                if (grid[i][j] == 0 && grid[n - i - 1][j] == 0) count0++;\n            }\n        }\n        ans += count;\n        \n        if (count1 % 2 == 1 && count == 0) {\n            ans += 2;\n        }\n        \n        if (n % 2 == 1 && m % 2 == 1 && grid[n / 2][m / 2] == 1) ans++;\n        return ans;\n    }\n}",
    "submit_ts": "1722699720",
    "subm_id": "552276880"
}