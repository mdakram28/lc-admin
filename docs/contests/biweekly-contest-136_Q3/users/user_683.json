{
    "username": "550403401",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n\n        ans = 0\n        for i in range(m>>1):\n            for j in range(n>>1):\n                ans += 2-abs(grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j] - 2)\n        \n        neg_pair = count1  = 0\n        if m & 1 is 1:\n            I = m >> 1\n            for j in range(n>>1):\n                if grid[I][j] != grid[I][n-1-j]:\n                    neg_pair += 1\n                else:\n                    if grid[I][j] == 1:\n                        count1 += 2\n\n        if n & 1 is 1:\n            J = n >> 1\n            for i in range(m>>1):\n                if grid[i][J] != grid[m-1-i][J]:\n                    neg_pair += 1\n                else:\n                    if grid[i][J] == 1:\n                        count1 += 2\n\n        ans += neg_pair\n        if count1 % 4 != 0 and neg_pair == 0:\n            ans += 2\n        \n        if m & 1 == n & 1 == grid[m>>1][n>>1] == 1:\n            ans += 1\n        return ans\n\n\n        ",
    "submit_ts": "1722697862",
    "subm_id": "552268161"
}