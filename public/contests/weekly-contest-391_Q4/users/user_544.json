{
    "username": "SkinnySnakeLimb",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort(key = lambda x: x[0])\n        \n        def dist(a, b):\n            return abs(a[0] - b[0]) + abs(a[1] - b[1])\n        \n        def maxDist(points):\n            n = len(points)\n            v = [0 for i in range(n)]\n            v1 = [0 for i in range(n)]\n\n            for i in range(n):\n                v[i] = (points[i][0] + points[i][1], i)\n                v1[i] = (points[i][0] - points[i][1], i)\n                \n                \n            v.sort(key = lambda x: x[0])\n            v1.sort(key = lambda x: x[0])\n\n            if v[-1][0] - v[0][0] > v1[-1][0] - v1[0][0]:\n                return (v[-1][1], v[0][1])\n            else:\n                return (v1[-1][1], v1[0][1])\n            \n        thePs = maxDist(points)\n        points1 = [p for i, p in enumerate(points) if i != thePs[0]]\n        points2 = [p for i, p in enumerate(points) if i != thePs[1]]\n        p1 = maxDist(points1)\n        p2 = maxDist(points2)\n        \n        return min(dist(points1[p1[0]], points1[p1[1]]), dist(points2[p2[0]], points2[p2[1]]))"
}