{
    "username": "niganma",
    "submission": "class Solution {\n    public:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap;\n        vector<int> possibleX;\n        int n = nums.size();\n        for (int i = 0; i < n / 2; ++i) {\n            int a = nums[i], b = nums[n - i - 1];\n            int diff = abs(a - b);\n            int X = max({a, b, k - a, k - b});\n            diffMap[diff].push_back(X);\n            possibleX.push_back(X);\n        }\n        int ans = n;\n        sort(possibleX.begin(), possibleX.end());\n\n        for (auto& entry : diffMap) {\n            int diff = entry.first;\n            int changes = lower_bound(possibleX.begin(), possibleX.end(), diff) - possibleX.begin();\n            changes = changes * 2 + (n / 2 - changes);\n\n            for (auto& X : entry.second) {\n                if (X < diff) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n            ans = min(ans, changes);\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1721488859",
    "subm_id": "548316293"
}