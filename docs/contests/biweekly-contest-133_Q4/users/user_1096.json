{
    "username": "_global",
    "submission": "class Solution {\n    int map[];\n    int mod;\n    Long dp[][];\n    public int numberOfPermutations(int n, int[][] arr) {\n        mod = (int)1e9+7;\n        map = new int[n];\n        Arrays.fill(map,-1);\n        for(int a[] : arr) map[a[0]]=a[1];\n        dp = new Long[n+1][map[n-1]+1];\n        return (int)find(n,map[n-1]);\n     \n        \n    }\n    public long find(int n,int k){\n        if(k < 0) return 0;\n        if(n==0) return (k==0 ? 1 : 0);\n        if(dp[n][k] != null) return dp[n][k];\n        long ans = 0;\n        if(map[n-1] != -1 && k != map[n-1]) ans = 0;\n        else {\n            for(int i=1;i<=n;i++){\n                ans = (ans + find(n-1,k-(n-i)))%mod;\n            }\n        }\n        \n        return dp[n][k]=ans;\n    }\n}",
    "submit_ts": "1719071711",
    "subm_id": "1296852513"
}