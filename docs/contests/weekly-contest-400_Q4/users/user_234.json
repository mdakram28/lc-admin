{
    "username": "SirTechnical",
    "submission": "const int MAXN = 1e5+5;\nconst int MAXK = 20;\n\nint st[MAXK+1][MAXN];\nint lg[MAXN+1];\nbool lgd = false;\n\ninline int get_and(int l, int r) { // [l, r]\n    int i = lg[r-l+1];\n    return st[i][l] & st[i][r-(1<<i)+1];\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        if (!lgd) {\n            lgd = true;\n            lg[1] = 0;\n            for (int i = 2; i <= MAXN; i++)\n                lg[i] = lg[i/2] + 1;\n        }\n        \n        int N = nums.size();\n        int K = lg[N];\n        \n        for (int i = 0; i < N; ++i) {\n            st[0][i] = nums[i];\n        }\n        \n        for (int i = 1; i <= K; ++i) {\n            for (int j = 0; j+(1<<i) <= N; ++j) {\n                st[i][j] = st[i-1][j] & st[i-1][j+(1<<(i-1))];\n            }\n        }\n        \n        int ans = abs(k-nums[0]);\n        int r = 0;\n        for (int l = 0; l < N; ++l) {\n            r = max(l,r);\n            ans = min(ans, abs(k-get_and(l,r)));\n            while (get_and(l,r) > k && r+1 < N) {\n                ++r;\n                ans = min(ans, abs(k-get_and(l,r)));\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717297926.0
}