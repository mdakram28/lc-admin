{
    "username": "hrishavkmr",
    "submission": "class Solution {\npublic:\n    int maxDiffThatCanBeAttained(int a, int b, int k){\n        int v1 = k - a;\n        int v2 = k - b;\n        int v3 = a;\n        int v4 = b;\n        return max(v1, max(v2, max(v3, v4)));\n    }\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int,int> diffCount;\n        vector<int> v;\n        for(int i = 0;i<n/2;i++){\n            int maxDiff = maxDiffThatCanBeAttained(nums[i], nums[n-i-1], k);\n            v.push_back(maxDiff);\n            diffCount[abs(nums[i]-nums[n-i-1])]++;\n        }\n        int N = n/2;\n        int ans = n/2;\n        sort(v.begin(), v.end());\n        for(auto p: diffCount){\n            int curr = p.first;\n            int idx = lower_bound(v.begin(), v.end(), curr) - v.begin();\n            int curr_ans = 1*(N - idx) + idx*2 - p.second;\n            ans = min(ans, curr_ans);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488511",
    "subm_id": "1327424608"
}