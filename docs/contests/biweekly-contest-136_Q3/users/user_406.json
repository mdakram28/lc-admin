{
    "username": "leaf_node_",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        int n = grid.size();\n        int m = grid[0].size();\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n            int ctr = 0;\n                ctr += grid[i][j];\n                ctr += grid[i][m - j - 1];\n                ctr += grid[n - i - 1][j];\n                ctr += grid[n - i - 1][m - j - 1];\n\n                ans += std::min(ctr, 4 - ctr);\n                // std::cout << ctr << ' ';\n            }\n        }\n        int ctr = 0, kk = 0;\n        bool all1 = true, all2 = true;\n        if (n & 1) {\n            // int kk = 0;\n            for (int j = 0; j < m / 2; j++) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) {\n                    ctr++;\n                    all1 = false;\n                }\n                else kk+=grid[n / 2][j] * 2;\n            }\n            if (!all1) kk = 0;\n        }\n\n        if (m & 1) {\n            // int kk = 0;\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) {\n                    ctr++;\n                    all2 = false;\n                }\n                else kk+=grid[i][m / 2] * 2;\n            }\n            if (!all2) kk = 0;\n        }\n        if (all1 && all2)\n        ans += (kk % 4);\n\n        if ((n & 1) && (m & 1)) {\n            ctr += grid[n / 2][m / 2];\n        }\n\n        ans += ctr;\n        return ans;\n    }\n};",
    "submit_ts": "1722698514",
    "subm_id": "1343183084"
}