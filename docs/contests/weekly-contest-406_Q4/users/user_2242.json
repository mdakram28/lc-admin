{
    "username": "devansh151005",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, int>> pq;\n        for(int &i : horizontalCut){\n            pq.push({i, 0});\n        }\n        for(int &i : verticalCut){\n            pq.push({i, 1});\n        }\n        long long ans =0;\n        int numvert = 1;\n        int numHort = 1;\n        while(!pq.empty()){\n            pair<int, int> some = pq.top();\n            pq.pop();\n            if(some.second == 0){\n                numHort++;\n                ans += some.first*numvert;\n            }\n            else{\n                numvert++;\n                ans+= some.first * numHort;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926418",
    "subm_id": "1320285667"
}