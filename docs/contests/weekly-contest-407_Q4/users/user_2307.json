{
    "username": "thesept_kid",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<long long> diffArray = calculateDifferences(nums, target);\n        return computeTotalOperations(diffArray);\n    }\n\nprivate:\n    vector<long long> calculateDifferences(const vector<int>& nums, const vector<int>& target) {\n        int length = nums.size();\n        vector<long long> diffArray(length);\n        \n        for (int i = 0; i < length; ++i) {\n            diffArray[i] = static_cast<long long>(target[i]) - nums[i];\n        }\n        \n        return diffArray;\n    }\n\n    long long computeTotalOperations(const vector<long long>& diffArray) {\n        int length = diffArray.size();\n        long long totalOperations = 0;\n        long long cumulativeDifference = 0;\n        \n        for (int i = 0; i < length; ++i) {\n            totalOperations += processDifference(cumulativeDifference, diffArray[i]);\n        }\n        \n        return totalOperations;\n    }\n\n    long long processDifference(long long& cumulativeDifference, long long currentDifference) {\n        if (shouldMergeDifferences(cumulativeDifference, currentDifference)) {\n            return updateRequiredOperations(cumulativeDifference, currentDifference);\n        } else {\n            long long requiredOperations = abs(currentDifference);\n            cumulativeDifference = currentDifference;\n            return requiredOperations;\n        }\n    }\n\n    bool shouldMergeDifferences(long long cumulativeDifference, long long currentDifference) {\n        return cumulativeDifference == 0 || \n               (cumulativeDifference > 0 && currentDifference > 0) || \n               (cumulativeDifference < 0 && currentDifference < 0);\n    }\n\n    long long updateRequiredOperations(long long& cumulativeDifference, long long currentDifference) {\n        long long diffAbs = abs(currentDifference) - abs(cumulativeDifference);\n        if (diffAbs > 0) {\n            cumulativeDifference = currentDifference;\n            return diffAbs;\n        }\n        cumulativeDifference = currentDifference;\n        return 0;\n    }\n};",
    "submit_ts": "1721534226",
    "subm_id": "1328026221"
}