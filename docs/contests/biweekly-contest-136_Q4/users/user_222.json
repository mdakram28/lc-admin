{
    "username": "jushuai_lfx",
    "submission": "class Solution {\npublic:\n    \n    vector<int> value;\n    vector<vector<int>> adj;\n    \n    int dfs(int root, vector<int>& log) {\n        log[root] = 1;\n        int rtn = 0;\n        for (int next : adj[root]) {\n            if (log[next]) continue;\n            if (next & 1) {\n                rtn = max(rtn, 1 + dfs(next, log));\n            } else {\n                rtn = max(rtn, 2 + dfs(next, log));\n            }\n        }\n        value[root] = rtn;\n        return rtn;\n    }\n    \n    \n    void dfs1(int root, vector<int>& log, int last, int num, vector<int>& ans) {\n        log[root] = 1;\n        if (last == -1) {\n            ans[root] = value[root];\n        } else {\n            if (last & 1) {\n                num += 1;\n                ans[root] = max(value[root], num);\n            } else {\n                num += 2;\n                ans[root] = max(value[root], num);\n            }\n        }\n        \n        pair<int, int> pa = {0, 0};\n        for (int next : adj[root]) {\n            if (log[next]) {\n                continue;\n            }\n            int tmp = (next & 1) ? 1 : 2;\n            tmp += value[next];\n            if (tmp > pa.first) {\n                pa.second = pa.first;\n                pa.first = tmp;\n            } else {\n                pa.second = max(pa.second, tmp);\n            }\n        }\n        \n        for (int next : adj[root]) {\n            if (log[next]) {\n                continue;\n            }\n            int tmp = (next & 1) ? 1 : 2;\n            tmp += value[next];\n            if (tmp == pa.first) {\n                tmp = pa.second;\n            } else {\n                tmp = pa.first;\n            }\n            dfs1(next, log, root, max(num, tmp), ans);\n        }\n    }\n    \n    \n    vector<int> timeTaken(vector<vector<int>>& e) {\n        int n = e.size() + 1;\n        adj.resize(n);\n        for (vector<int>& v : e) {\n            adj[v[0]].push_back(v[1]);\n            adj[v[1]].push_back(v[0]);\n        }\n        value.resize(n, 0);\n        {\n            vector<int> log(n, 0);\n            dfs(0, log);\n            \n            // for (int i = 0; i < n; ++i) {\n            //     cout << i << \" \" << value[i] << endl;\n            // }\n        }\n        \n        vector<int> ans(n, 0);\n        \n        {\n            vector<int> log(n, 0);\n            dfs1(0, log, -1, 0, ans);\n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1722699654",
    "subm_id": "552276584"
}