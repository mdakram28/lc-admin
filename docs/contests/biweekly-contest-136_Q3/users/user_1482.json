{
    "username": "Php_developer_lcby",
    "submission": "<?php\n\nclass Solution {\n    public function minFlips($grid) {\n        $n = count($grid);\n        $m = count($grid[0]);\n\n        $ans = 0;\n\n        // Loop through the 2x2 sub-grids\n        for ($i = 0; $i < intdiv($n, 2); ++$i) {\n            for ($j = 0; $j < intdiv($m, 2); ++$j) {\n                $elements = [\n                    $grid[$i][$j],\n                    $grid[$n - $i - 1][$j],\n                    $grid[$i][$m - $j - 1],\n                    $grid[$n - $i - 1][$m - $j - 1]\n                ];\n\n                $ones = array_sum($elements);\n\n                $ans += min($ones, 4 - $ones);\n            }\n        }\n\n        $possible = 0;\n        $count = 0;\n\n        // Handle the middle row if n is odd\n        if ($n % 2 != 0) {\n            for ($j = 0; $j < intdiv($m, 2); ++$j) {\n                if ($grid[intdiv($n, 2)][$j] != $grid[intdiv($n, 2)][$m - $j - 1]) {\n                    $ans += 1;\n                    $possible += 1;\n                } else {\n                    if ($grid[intdiv($n, 2)][$j] == 1) {\n                        $count += 1;\n                    }\n                }\n            }\n        }\n\n        // Handle the middle column if m is odd\n        if ($m % 2 != 0) {\n            for ($i = 0; $i < intdiv($n, 2); ++$i) {\n                if ($grid[$i][intdiv($m, 2)] != $grid[$n - $i - 1][intdiv($m, 2)]) {\n                    $ans += 1;\n                    $possible += 1;\n                } else {\n                    if ($grid[$i][intdiv($m, 2)] == 1) {\n                        $count += 1;\n                    }\n                }\n            }\n        }\n\n        // Handle the central element if both n and m are odd\n        if ($n % 2 != 0 && $m % 2 != 0 && $grid[intdiv($n, 2)][intdiv($m, 2)] == 1) {\n            $ans += 1;\n        }\n\n        if ($possible == 0 && $count % 2 != 0) {\n            $ans += 2;\n        }\n\n        return $ans;\n    }\n}\n\n// Example usage\n$solution = new Solution();\n$grid = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n];\necho $solution->minFlips($grid); // Output will depend on the input values\n\n?>\n\n",
    "submit_ts": "1722699351",
    "subm_id": "1343209012"
}