{
    "username": "tonyli00000",
    "submission": "class segTree {\npublic:\n\tvector<int>t;\n\tint n;\n\tsegTree(int n) {\n\t\tt.resize(n * 2 + 5, 0);\n\t\tthis->n = n;\n\t}\n\tvoid build() {  // build the tree\n\t\tfor (int i = n - 1; i > 0; --i) t[i] = t[i << 1] + t[i << 1 | 1];\n\t}\n\n\tvoid update(int p, int value) {  // set value at position p\n\t\tfor (t[p += n] = value; p > 1; p >>= 1) t[p >> 1] = t[p]+ t[p ^ 1];\n\t}\n\n\tint query(int l, int r) {  // sum on interval [l, r)\n\t\tint ret = 0;\n\t\tr++;\n\t\tfor (l += n, r += n; l < r; l >>= 1, r >>= 1) {\n\t\t\tif (l & 1) ret += t[l++];\n\t\t\tif (r & 1) ret += t[--r];\n\t\t}\n\t\treturn ret;\n\t}\n\n};\nclass Solution {\npublic:\n\tvector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n\t\tint n = nums.size(), m = queries.size();\n\t\tint ct = 0;\n\t\tsegTree* T = new segTree(n+5);\n\t\tfor (int i = 1; i < n - 1; i++) {\n\t\t\tif (nums[i] > nums[i - 1] && nums[i] > nums[i + 1])T->update(i, 1);\n\t\t}\n\t\tvector<int>ret;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (queries[i][0] == 1) {\n\tif (queries[i][1] == queries[i][2])ret.push_back(0);\n\telse ret.push_back(T->query(queries[i][1], queries[i][2]) - T->query(queries[i][1], queries[i][1]) - T->query(queries[i][2], queries[i][2]));\n}\n\t\t\telse {\n\t\t\t\tint pos = queries[i][1];\n\t\t\t\tnums[pos] = queries[i][2];\n\t\t\t\tfor (int j = -1; j <= 1; j++) {\n\t\t\t\t\tint p = pos + j;\n\t\t\t\t\tif (p <= 0 || p >= n-1)continue;\n\t\t\t\t\t//if (p == 0 || p == n - 1)T->update(p, 0);\n\t\t\t\t\tif (nums[p] > nums[p - 1] && nums[p] > nums[p + 1])T->update(p, 1);\n\t\t\t\t\telse T->update(p, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n};\n",
    "submit_ts": "1718506500",
    "subm_id": "1289621190"
}