{
    "username": "qb_2008",
    "submission": "class Solution {\npublic:\n    vector<int> s;\n    vector<int> dp;\n    \n    int dfs(int v) {\n        if (dp[v] != 0) {\n            return dp[v];\n        }\n        auto it = upper_bound(s.begin(), s.end(), v);\n        --it;\n        while (*it > v / 2) {\n            if (dfs(v - *it) == 1) {\n                dp[v] = 1;\n                return 1;\n            }\n            if (it == s.begin()) {\n                break;\n            }\n            --it;\n        }\n        dp[v] = -1;\n        return -1;\n    }\n    \n    int maxTotalReward(vector<int>& rewardValues) {\n        s.clear();\n        sort(rewardValues.begin(), rewardValues.end());\n        for (int r : rewardValues) {\n            if (s.empty() || r != s.back()) {\n                s.push_back(r);\n            }\n        }\n        dp = vector<int>(s.back() * 2, 0);\n        dp[0] = 1;\n        for (int i = 1; i < s[0]; i++) {\n            dp[i] = -1;\n        }\n        for (int v : s) {\n            dp[v] = 1;\n        }\n        for (int i = s.back() * 2 - 1; i > s.back(); i--) {\n            if (dfs(i) == 1) {\n                return i;\n            }\n        }\n        return s.back();\n    }\n    \n    int maxTotalRewardSlow(vector<int>& rewardValues) {\n        vector<bool> hit(100000, false);\n        hit[0] = true;\n        sort(rewardValues.begin(), rewardValues.end());\n        int prev_v = 0;\n        for (int v : rewardValues) {\n            if (v == prev_v) {\n                continue;\n            }\n            prev_v = v;\n            for (int i = 0; i < v; i++) {\n                if (hit[i]) {\n                    hit[i + v] = true;\n                }\n            }\n        }\n        for (int i = hit.size() - 1; i >= 0; i--) {\n            if (hit[i]) {\n                return i;\n            }\n        }\n        return 0;\n    }\n};",
    "submit_ts": "1717903146",
    "subm_id": "1282325529"
}