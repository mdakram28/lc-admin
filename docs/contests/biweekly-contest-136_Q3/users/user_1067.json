{
    "username": "cheehongw",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        N_ROWS = len(grid)\n        N_COLS = len(grid[0])\n\n        min_flips = 0\n        for r in range(N_ROWS // 2):\n            for c in range(N_COLS // 2):\n                top_left = grid[r][c]\n                top_right = grid[r][N_COLS - 1 - c]\n                bot_left = grid[N_ROWS - 1 - r][c]\n                bot_right = grid[N_ROWS - 1 - r][N_COLS - 1 - c]\n\n                sum = top_left + top_right + bot_left + bot_right\n                \n                flips = 0\n                if (sum == 2):\n                    flips = 2\n                elif (sum == 3 or sum == 1):\n                    flips = 1\n                \n                min_flips += flips\n\n        flips = 0\n        ones = 0\n\n        if (N_ROWS % 2 == 1):\n            odd_row = grid[N_ROWS // 2]\n            l_ptr, r_ptr = 0, len(odd_row) - 1\n            while (l_ptr < r_ptr):\n                first = odd_row[l_ptr]\n                last = odd_row[r_ptr]\n                l_ptr += 1\n                r_ptr -= 1\n                \n                if (first != last):\n                    flips += 1\n                else:\n                    if (first == 1):\n                        ones += 2\n                \n        if (N_COLS % 2 == 1):\n            col_idx = N_COLS // 2\n            l_ptr, r_ptr = 0, len(grid) - 1\n            while (l_ptr < r_ptr):\n                first = grid[l_ptr][col_idx]\n                last = grid[r_ptr][col_idx]\n                l_ptr += 1\n                r_ptr -= 1\n\n                if (first != last):\n                    flips += 1\n                else:\n                    if (first == 1):\n                        ones += 2\n        \n        central_flip = 0\n        if (N_COLS % 2 == 1 and N_ROWS % 2 == 1):\n            val = grid[N_ROWS // 2][N_COLS // 2]\n            if val == 1:\n                central_flip += 1\n\n        if ones % 4 == 0:\n            return min_flips + flips + central_flip\n        elif ones % 4 == 2:\n            if (flips >= 1):\n                return min_flips + flips + central_flip\n            else:\n                return min_flips + 2 + central_flip\n\n\n            \n        ",
    "submit_ts": "1722699009",
    "subm_id": "1343198724"
}