{
    "username": "K_for_Kartikey",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& ht, vector<int>& vt) {\n        sort(ht.begin(),ht.end(),greater<int>());\n        sort(vt.begin(),vt.end(),greater<int>());\n\n        int h=0;\n        int v=0;\n\n        set<int>hh,vv;\n        for(int i=0;i<n;i++){\n            vv.insert(i);\n        }\n        for(int i=0;i<m;i++){\n            hh.insert(i);\n        }\n        int vs = vv.size();\n        int hs = hh.size();\n        long long ans = 0;\n        while(v<n-1 && h<m-1){\n            int valv = vs - vv.size() +1;\n            int valh = hs - hh.size() +1;\n            if(vt[v]<ht[h]){\n                hh.erase(h);\n                ans+=(valv*1LL*ht[h]);\n                h++;\n            }\n            else{\n                vv.erase(v);\n                ans+=(valh*1LL*vt[v]);\n                v++;\n            }\n        }\n        while(v<n-1){\n            int valh = hs - hh.size() +1;\n            ans+=(valh*1LL*vt[v]);\n            vv.erase(v);\n            v++;\n        }\n        while(h<m-1){\n            int valv = vs - vv.size() +1;\n            ans+=(valv*1LL*ht[h]);\n            hh.erase(h);\n            h++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926064",
    "subm_id": "1320274855"
}