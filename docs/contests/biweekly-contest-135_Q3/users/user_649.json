{
    "username": "nikhil_7119",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int f[][]=new int[k+1][2];\n        int l=nums.length;\n        for(int i=0;i<l/2;i++)\n        {\n            f[Math.abs(nums[i]-nums[l-i-1])][0]++;\n            f[Math.abs(nums[i]-nums[l-i-1])][1]=Math.abs(nums[i]-nums[l-i-1]);\n        }\n\n        Arrays.sort(f,(a,b)->b[0]-a[0]);\n        int m=1000000000;\n        for(int i=0;i<=k;i++)\n        {\n            if(f[i][0]==0)\n            break;\n            int c=min(nums,f[i][1],l,k);\n            m=Math.min(m,c);\n            if(m*6<c*5)\n            break;\n        }\n        return m;\n    }\n    int min(int[]nums,int diff,int l,int k)\n    {\n        int c=0;\n        for(int i=0;i<l/2;i++)\n        {\n            if(Math.abs(nums[i]-nums[l-i-1])!=diff)\n            {\n                int d=Math.abs(nums[i]-nums[l-i-1]);\n                if(nums[l-i-1]>=diff || nums[i]>=diff)\n                c++;\n                else if(k-nums[l-i-1]>=diff || k-nums[i]>=diff)\n                c++;\n                else \n                c+=2;\n            }\n        }\n        return c;\n    }\n}",
    "submit_ts": "1721487934",
    "subm_id": "1327406041"
}