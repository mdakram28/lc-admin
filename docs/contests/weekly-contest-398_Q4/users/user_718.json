{
    "username": "aryan_pundir",
    "submission": "class Solution {\n    unordered_map<int, vector<vector<int>>> dp;\n    int f(int i, int jump, int prev,int k) {\n        if (i >=k+2)return 0;\n        if(jump>31)return 0;\n        if(dp.count(i) && dp[i][jump][prev] != -1)return dp[i][jump][prev];\n        int ans=0;\n        if(i==k)ans++;\n        if (prev)ans += f(i - 1, jump, 0,k);\n        long long val=i+(1<<jump);\n        if (val<=k+1)ans += f(i + (1 << jump), jump + 1, 1,k);\n        dp[i].resize(32, vector<int>(2, -1));\n        return dp[i][jump][prev] = ans;\n    }\npublic:\n    int waysToReachStair(int k) {\n        return f(1, 0, 1,k);\n    } \n};",
    "submit_ts": "1716089370",
    "subm_id": "1261840414"
}