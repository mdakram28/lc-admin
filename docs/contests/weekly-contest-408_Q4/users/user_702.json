{
    "username": "SyedHamidHasan",
    "submission": "class Solution {\npublic:\n     int func(vector<vector<int>> &g, int i, int t1, int t2, int n) {\n    queue<int> q3;\n    vector<int> v(n + 4, 0);\n    q3.push(i);\n    v[i] = 1;\n    \n    while (!q3.empty()) {\n        int u = q3.front();\n        q3.pop();\n        for (int it : g[u]) {\n            if (!v[it]) {\n                q3.push(it);\n                v[it] = 1;\n            }\n        }\n    }\n    return v[t1] || v[t2];\n}\n    bool canReachCorner(int X, int Y, vector<vector<int>>& cir) {\n         vector<pair<pair<int, int>, int>> ci(cir.size());\n\n         \n         vector<vector<int>> g(cir.size() + 4);\n        int p=cir.size();\n        \n        for (int i = 0; i < p; ++i) {\n            ci[i].first.first=cir[i][0];\n            ci[i].first.second=cir[i][1];\n            ci[i].second=cir[i][2];\n        }\n        \n        \n        \n         for (int i = 0; i < p; ++i) {\n             \n            if (ci[i].first.first <= ci[i].second) {\n                g[p].push_back(i);\n                g[i].push_back(p);\n            }\n            if (X - ci[i].first.first <= ci[i].second) {\n                g[p + 2].push_back(i);\n                g[i].push_back(p + 2);\n            }\n\n\n\n\n            // getting to close \n            if (ci[i].first.second <= ci[i].second) {\n                g[p + 1].push_back(i);\n                g[i].push_back(p + 1);\n            }\n            if (Y - ci[i].first.second <= ci[i].second) {\n                g[p + 3].push_back(i);\n                g[i].push_back(p + 3);\n            }\n\n\n\n\n            for (int j = i + 1; j < p; ++j) {\n                double d = sqrt(pow(ci[i].first.first - ci[j].first.first, 2) +\n                                       pow(ci[i].first.second - ci[j].first.second, 2));\n                int r = ci[i].second + ci[j].second;\n                if (r >= d) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n        \n        int ans = 0;\nans = max(ans, func(g, p, p + 1, p + 2, p + 4)); \n    ans = max(ans, func(g, p + 3, p + 2, p + 1, p + 4)); \n        if (ans){\n            return false;\n            }\n        return true;\n    }\n};",
    "submit_ts": "1722138375",
    "subm_id": "1335789177"
}