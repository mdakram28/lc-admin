{
    "username": "great-johnsonyen",
    "submission": "import inspect\nimport sys\nfrom bisect import bisect_left, bisect_right\nfrom collections import Counter, defaultdict, deque\nfrom functools import cache, cmp_to_key, lru_cache, reduce\nfrom heapq import heapify, heappop, heappush, heappushpop, nlargest, nsmallest\nfrom itertools import accumulate, count, pairwise, permutations\nfrom math import comb, gcd, inf, lcm, log2, perm\nfrom operator import add, iand, ior, itemgetter, mul, xor\nfrom string import ascii_letters, ascii_lowercase, ascii_uppercase\nfrom typing import List\n\nfrom sortedcontainers import SortedDict, SortedList, SortedSet\n\ninput = lambda: sys.stdin.readline().strip()\nMOD = int(1e9 + 7)\ndx = [0, 1, 0, -1]\ndy = [1, 0, -1, 0]\n\n\nDEBUG_WITH_COLOR = 1\ndef debug(*args, **kwargs):\n    stack_info = inspect.stack()[1]  # [1] \u8868\u793a\u83b7\u53d6\u8c03\u7528\u6808\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5e27\uff08\u7b2c\u4e00\u4e2a\u5e27\u662f\u5f53\u524d\u51fd\u6570\uff09\n    line_number = stack_info.lineno\n    # \u5b9a\u4e49ANSI\u989c\u8272\u4ee3\u7801\n    COLOR = '\\033[95m'\n    RESET = '\\033[0m'\n    # \u6253\u5370\u8c03\u8bd5\u4fe1\u606f\n    if DEBUG_WITH_COLOR:\n        print(f\"{COLOR}Line {line_number}{RESET}: \", *args, **kwargs)\n    else:\n        print(f\"Line {line_number}: \", *args, **kwargs)\n\n\n\nclass Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        v = colors + colors[:k - 1]\n        ans = 0\n        n = len(v)\n        j = 0\n        for i in range(n):\n            if j <= i:\n                j = i + 1\n            while j < n and v[j - 1] != v[j]:\n                j += 1\n            if j - i >= k:\n                ans += 1\n        return ans",
    "submit_ts": "1720277047",
    "subm_id": "544554105"
}