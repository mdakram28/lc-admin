{
    "username": "mrpurvesh",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int target) {\n        int n = nums.length;\n        long count = 0;\n        \n        Map<Long, Long> previousResults = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> currentResults = new HashMap<>();\n\n            if (nums[i] == target) {\n                ++count;\n            }\n            currentResults.put((long) nums[i], 1L);\n\n            for (Map.Entry<Long, Long> entry : previousResults.entrySet()) {\n                long value = entry.getKey();\n                long frequency = entry.getValue();\n                \n                long newAndResult = value & nums[i];\n                if (newAndResult == target) {\n                    count += frequency;\n                }\n                \n                currentResults.put(newAndResult, currentResults.getOrDefault(newAndResult, 0L) + frequency);\n            }\n            \n            previousResults = currentResults;\n        }\n        \n        return count;\n        \n    }\n}",
    "submit_ts": "1720279196",
    "subm_id": "1311741529"
}