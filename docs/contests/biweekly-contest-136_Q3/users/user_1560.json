{
    "username": "jason7708",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        // 4\u683c\u9078\u5c0f\u7684\n        int ans = 0;\n        for(int i=0; i<m/2; i++) {\n            for(int j=0; j<n/2; j++) {\n                int cnt = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                ans += min(cnt, 4 - cnt);\n            }\n        }\n        // \u4e2d\u9593\n        if(m % 2 && n % 2 && grid[m/2][n/2] == 1) {\n            ans++;\n        }\n\n        // 2\u683c\n        vector<int> cnt(3, 0);\n        if(m % 2 == 1) {\n            for(int j=0; j<n/2; j++) {\n                int cur = grid[m/2][j] + grid[m/2][n-1-j];\n                cnt[cur]++;\n            }\n        }\n        if(n % 2 == 1) {\n            for(int i=0; i<m/2; i++) {\n                int cur = grid[i][n/2] + grid[m-1-i][n/2];\n                cnt[cur]++;\n            }\n        }\n        if(cnt[2] % 2 == 0) {\n            return ans + cnt[1];\n        }\n        if(cnt[1] == 0) {\n            return ans + cnt[1] + 2;\n        }\n        return ans + cnt[1];\n    }\n};",
    "submit_ts": "1722699138",
    "subm_id": "1343202582"
}