{
    "username": "qqwrv",
    "submission": "class Solution {\npublic:\n    struct Rect {\n        int x1, y1, x2, y2;\n\n        friend std::ostream& operator<<(std::ostream& os, Rect r) {\n            return os << \"[\" << r.x1 << \",\" << r.y1 << \",\" << r.x2 << \",\" << r.y2 << \"]\";\n        }\n    };\n\n    std::pair<Rect, Rect> VS(Rect r, int vs) {\n        Rect r1{r.x1, r.y1, vs, r.y2};\n        Rect r2{vs + 1, r.y1, r.x2, r.y2};\n        return {r1, r2};\n    }\n\n    std::pair<Rect, Rect> HS(Rect r, int hs) {\n        Rect r1{r.x1, r.y1, r.x2, hs};\n        Rect r2{r.x1, hs + 1, r.x2, r.y2};\n        return {r1, r2};\n    }\n\n    int minimumSum(vector<vector<int>>& a) {\n        int n = a.size();\n        int m = a[0].size();\n\n        int ans = INT_MAX;\n\n        auto calc_one = [&](Rect r) {\n            int x1 = INT_MAX, x2 = INT_MIN, y1 = INT_MAX, y2 = INT_MIN;\n            for (int i = r.x1; i <= r.x2; ++i) {\n                for (int j = r.y1; j <= r.y2; ++j) {\n                    if (a[i][j] == 1) {\n                        x1 = std::min(x1, i);\n                        x2 = std::max(x2, i);\n                        y1 = std::min(y1, j);\n                        y2 = std::max(y2, j);\n                    }\n                }\n            }\n            if (x1 == INT_MAX) return 1;\n            return (x2 - x1 + 1) * (y2 - y1 + 1);\n        };\n\n        auto calc = [&](Rect r1, Rect r2, Rect r3) {\n            // std::cout << r1 << \", \" << r2 << \", \" << r3 << \", \" << std::endl;\n            int sum = 0;\n            sum += calc_one(r1);\n            sum += calc_one(r2);\n            sum += calc_one(r3);\n            // std::cout << sum << std::endl;\n            return sum;\n        };\n\n        auto solve = [&]() {\n            for (int vs = 0; vs + 1 < n; ++vs) {\n                auto [r1, r2] = VS(Rect{0, 0, n - 1, m - 1}, vs);\n\n                for (int vs2 = r2.y1; vs2 + 1 < n; ++vs2) {\n                    auto [r3, r4] = VS(r2, vs2);\n                    ans = std::min(ans, calc(r1, r3, r4));\n                }\n\n                for (int hs = 0; hs + 1 < m; ++hs) {\n                    {\n                        auto [r3, r4] = HS(r1, hs);\n                        ans = std::min(ans, calc(r2, r3, r4));\n                    }\n\n                    {\n                        auto [r3, r4] = HS(r2, hs);\n                        ans = std::min(ans, calc(r1, r3, r4));\n                    }\n                }\n            }\n        };\n\n        solve();\n        {\n            std::vector<std::vector<int>> b(m, std::vector<int>(n));\n            for (int i = 0; i < m; ++i) {\n                for (int j = 0; j < n; ++j) {\n                    b[i][j] = a[j][i];\n                }\n            }\n            std::swap(a, b);\n            std::swap(n, m);\n        }\n        solve();\n\n        return ans;\n    }\n};",
    "submit_ts": 1719113170.0
}