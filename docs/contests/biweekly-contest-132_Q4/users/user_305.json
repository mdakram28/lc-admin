{
    "username": "openai_is_closed",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int, vector<int>> st;\n        vector<int> mx(k + 5);\n        \n        vector<vector<int>> dp(n + 5, vector<int>(k + 5, 1));\n        \n        // dp[i][j] - len max termina in i cu j indici rai\n        for (int i = 0; i <= k; i++) {\n            dp[0][i] = 1;\n            mx[i] = 1;\n        }\n        st[nums[0]].push_back(0);\n        \n        for (int i = 1; i < n; i++) {\n            vector<int> newmx(k + 5);\n            for (int j = 0; j <= k; j++) {\n                newmx[j] = mx[j];\n            }\n            \n            for (int j = 0; j <= k; j++) {\n                if (!st[nums[i]].empty()) {\n                    dp[i][j] = dp[st[nums[i]].back()][j] + 1;\n                }\n                \n                if (j > 0) {\n                    dp[i][j] = max(dp[i][j], mx[j - 1] + 1);\n                }\n                \n                newmx[j] = max(newmx[j], dp[i][j]);\n            }\n            \n            st[nums[i]].push_back(i);\n            mx = newmx;\n        }\n        \n        int ans = 1;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= k; j++) {\n                ans = max(ans, dp[i][j]);\n            }\n        }\n        \n        return ans;\n    };\n};",
    "submit_ts": 1717861293.0
}