{
    "username": "Googlehsieh",
    "submission": "class Solution {\n    int[] nums;\n    Long[][] dp;\n    int mod = 1000000007;\n    public int countOfPairs(int[] nums) {\n        this.nums = nums;\n        int m = nums.length;\n        dp = new Long[m][51];\n        long res = dfs(0, 0);\n        return (int)res;\n    }\n    \n    private long dfs(int index, int prev) {\n        if (index == nums.length) {\n            return 1;\n        }\n        if (dp[index][prev] != null) {\n            return dp[index][prev];\n        }\n        int max = nums[index];\n        long res = 0;\n        for (int i = prev; i <= max; i++) {\n            if (index > 0 && (max - i > nums[index - 1] - prev)) {\n                continue;\n            }\n            res = (res + dfs(index + 1, i)) % mod;\n        }\n                //System.out.println(index + \" \" + prev + \" \" + res);\n        return dp[index][prev] = res;\n    }\n}",
    "submit_ts": "1723344702",
    "subm_id": "1351540206"
}