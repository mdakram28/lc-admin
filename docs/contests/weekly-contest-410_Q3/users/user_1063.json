{
    "username": "xmky2",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        \n        MM = 10**9+7\n        \n        N = len(nums)\n        \n        res = 0\n        \n        #for i in range(N):\n            \n        @cache\n        def dp(i,prevS):\n            \n            if i == N:\n                return 1\n            \n            if i == 0:\n                prevB = nums[0] \n            else:\n                prevB = nums[i-1] - prevS\n\n            #v1 = nums[i] - prevS + 1\n            #v2 = prevB - nums[i] + 1\n            \n            res = 0\n            for k in range(prevS,nums[i]+1):\n                rest = nums[i] - k\n                \n                if rest <= prevB:\n                    res = (res +  dp(i+1, k ) ) % MM \n            \n            \n            return res\n\n        \n        return dp(0,0) % MM \n\n        '''\n        MM = 10**9+7\n        \n        N = len(nums)\n        \n        \n        @cache\n        def dp(i,prevS, prevB):\n            \n            if i == N:\n                return 1\n            \n            #v1 = nums[i] - prevS + 1\n            #v2 = prevB - nums[i] + 1\n            \n            res = 0\n            for k in range(prevS,nums[i]+1):\n                rest = nums[i] - k\n                \n                if rest <= prevB:\n                    res = (res +  dp(i+1, k, rest ) ) % MM \n            \n            \n            return res\n\n        \n        return dp(0,0, nums[-1]) % MM \n        '''",
    "submit_ts": "1723345436",
    "subm_id": "1351555723"
}