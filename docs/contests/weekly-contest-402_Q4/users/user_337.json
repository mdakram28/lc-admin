{
    "username": "8symbols",
    "submission": "from sortedcontainers import SortedList\n\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        nums = nums[:]\n        peaks = SortedList()\n\n        for i in range(1, len(nums) - 1):\n            if nums[i - 1] < nums[i] > nums[i + 1]:\n                peaks.add(i)\n\n        answer = []\n\n        for query in queries:\n            if query[0] == 1:\n                l, r = query[1], query[2]\n                answer.append(max(peaks.bisect_right(r - 1) - peaks.bisect_left(l + 1), 0))\n            else:\n                index, val = query[1], query[2]\n                nums[index] = val\n                for i in range(max(index - 1, 1), min(index + 2, len(nums) - 1)):\n                    is_peak = nums[i - 1] < nums[i] > nums[i + 1]\n                    was_peak = i in peaks\n                    if is_peak:\n                        if not was_peak:\n                            peaks.add(i)\n                    else:\n                        if was_peak:\n                            peaks.remove(i)\n\n        return answer",
    "submit_ts": "1718506944",
    "subm_id": "1289636120"
}