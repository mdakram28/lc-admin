{
    "username": "Krish_Poptani",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        unordered_map<int,int>mp;\n        for(int i=0;i<12;i++){\n            cout<<i;\n        }\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ans += 1;\n            }\n        }\n\n        vector<int> shiift(3, 0);\n        if (n % 2 == 1) {\n            int a = 0, b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                shiift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int a = 0, b = n - 1;\n            while (a < b) {\n                int sm = grid[a][m / 2] + grid[b][m / 2];\n                shiift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (shiift[2] % 2 == 1) {\n            if (shiift[1] > 0) {\n                ans += shiift[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += shiift[1];\n        }\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n\n                int sm = a + b + c + d;\n\n                if (sm != 0 && sm != 4) {\n                    ans += min(sm, 4 - sm);\n                }\n            }\n        }\n\n        return ans;\n    }\n\n};",
    "submit_ts": "1722699339",
    "subm_id": "1343208639"
}