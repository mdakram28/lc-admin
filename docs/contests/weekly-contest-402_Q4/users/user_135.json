{
    "username": "XKTZ",
    "submission": "typedef long long ll;\n\nconstexpr ll MAXN = 1e5 + 5;\n\nll N;\nll vals[MAXN];\nll BIT[MAXN];\n\nll query(ll x) {\n    ll ans = 0;\n    for (; x; x -= (x & -x)) {\n        ans += BIT[x];\n    }\n    return ans;\n}\n\nll query(ll l, ll r) {\n    return query(r) - query(l - 1);\n}\n\nvoid upd(ll x, ll v) {\n    for (; x <= N; x += (x & -x)) {\n        BIT[x] += v;\n    }\n}\n\nbool ispeak(ll x) {\n    if (x == 0 || x == N + 1) {\n        return true;\n    }\n    return vals[x] > vals[x - 1] && vals[x] > vals[x + 1];\n}\n\nbool inrng(ll x) {\n    return 1 <= x && x <= N;\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        N = nums.size();\n        for (ll i = 1; i <= N; i ++) {\n            vals[i] = nums[i - 1];\n            BIT[i] = 0;\n        }\n        vals[0] = vals[N + 1] = 0x3f3f3f3f3f3f3f3f;\n        for (ll i = 1; i <= N; i ++) {\n            if (ispeak(i)) {\n                upd(i, 1);\n            }\n        }\n        vector<int> result;\n        for(auto &v: queries) {\n            ll tp = v[0];\n            if (tp == 1) {\n                v[1] ++, v[2] ++;\n                ll l = v[1], r = v[2];\n                result.push_back(query(v[1], v[2]) - (ispeak(l)) - (ispeak(r)) + (ispeak(l) && (l == r)));\n            } else {\n                v[1] ++;\n                ll orig = ispeak(v[1]);\n                ll origl = ispeak(v[1] - 1);\n                ll origr = ispeak(v[1] + 1);\n                vals[v[1]] = v[2];\n                ll now = ispeak(v[1]);\n                ll nowl = ispeak(v[1] - 1);\n                ll nowr = ispeak(v[1] + 1);\n                upd(v[1], now - orig);\n                if (inrng(v[1] - 1))\n                    upd(v[1] - 1, nowl - origl);\n                if (inrng(v[1] + 1))\n                    upd(v[1] + 1, nowr - origr);\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": 1718506480.0
}