{
    "username": "Aniket_Bose2000",
    "submission": "class Solution {\npublic:\n   #define ll long long int\n   ll mod = 1000000007;\n    map<ll,ll>mp;\n    ll fxn(int n, vector<vector<int>> &reqs , vector<vector<ll>>& dp , int idx , int inv){\n        if (idx == 0 && inv == 0)\n        {\n            return 1;\n        }\n        if (idx == 0)\n        {\n            return 0;\n        }\n        if (dp[idx][inv] != -1)\n        {\n            return dp[idx][inv];\n        }\n        ll ans = 0;\n        for (int i = 0; i < idx; i++)\n        {\n            int prevInv = inv - i;\n            if (prevInv >= 0)\n            {\n                ans = (ans + fxn(n, reqs, dp, idx - 1, prevInv)) % mod;\n            }\n        }\n        if (mp.count(idx))\n        {\n            int trgt_inv = mp[idx];\n            if (inv != trgt_inv)\n            {\n                ans = 0;\n            }\n        }\n        return dp[idx][inv] = ans;\n    }\n    int numberOfPermutations(int n, vector<vector<int>> &reqs){\n        mp.clear();\n        for (auto &x : reqs)\n        {\n            mp[x[0] + 1] = x[1];\n        }\n        vector<vector<ll>>dp(n + 1, vector<ll>(401, -1));\n        ll res = 0;\n        for (int i = 0; i <= 400; i++)\n        {\n            res = (res + fxn(n,reqs,dp, n, i)) % mod;\n        }\n        return res%mod;\n    }\n};",
    "submit_ts": 1719071906.0
}