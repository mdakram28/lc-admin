{
    "username": "eeeptr",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        int boundaryFlips = 0;\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int ones = grid[i][j] +\n                    grid[i][m - 1 - j] +\n                    grid[n - 1 - i][j] +\n                    grid[n - 1 - i][m - 1 - j];\n                \n                if (ones == 1 || ones == 3) \n                    boundaryFlips++;\n                if (ones == 2)\n                    boundaryFlips += 2;\n            }\n        }\n        \n        int horizontalFlips = 0;\n        int horizontalOnes = 0;\n        if (n % 2 == 1) {\n            int i = n / 2;\n            for (int j = 0; j < m / 2; j++) {\n                if (grid[i][j] != grid[i][m - 1 - j]) {\n                    horizontalFlips++;\n                }\n                horizontalOnes += grid[i][j] + grid[i][m - 1 - j];\n            }\n        }\n        \n        int verticalFlips = 0;\n        int verticalOnes = 0;\n        if (m % 2 == 1) {\n            int j = m / 2;\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[i][j] != grid[n - 1 - i][j]) {\n                    verticalFlips++;\n                }\n                verticalOnes += grid[i][j] + grid[n - 1 - i][j];\n            }\n        }\n        \n        if (horizontalFlips == 0 && verticalFlips == 0) {\n            horizontalFlips += (horizontalOnes + verticalOnes) % 4;\n        }\n        \n        int middleFlip = (n % 2 == 1 && m % 2 == 1 && grid[n / 2][m / 2] == 1) ? 1 : 0;\n        \n        return boundaryFlips + horizontalFlips + verticalFlips + middleFlip;\n    }\n};",
    "submit_ts": "1722697741",
    "subm_id": "1343157244"
}