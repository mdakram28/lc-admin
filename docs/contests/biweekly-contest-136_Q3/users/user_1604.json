{
    "username": "Abhiiscoding",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& mat) {\n          int rows = mat.size(), columns = mat[0].size();\n        int flipCount = 0;\n        \n        if (rows % 2 != 0 && columns % 2 != 0 && mat[rows / 2][columns / 2] == 1) {\n            flipCount++;\n        }\n\n        vector<int> centerFlips(3, 0);\n        \n        if (rows % 2 != 0) {\n            for (int left = 0, right = columns - 1; left < right; left++, right--) {\n                int symmetrySum = mat[rows / 2][left] + mat[rows / 2][right];\n                centerFlips[symmetrySum]++;\n            }\n        }\n\n        if (columns % 2 != 0) {\n            for (int top = 0, bottom = rows - 1; top < bottom; top++, bottom--) {\n                int verticalSum = mat[top][columns / 2] + mat[bottom][columns / 2];\n                centerFlips[verticalSum]++;\n            }\n        }\n\n        if (centerFlips[2] % 2 != 0) {\n            flipCount += centerFlips[1] ? centerFlips[1] : 2;\n        } else {\n            flipCount += centerFlips[1];\n        }\n        for (int i = 0; i < rows / 2; i++) {\n            for (int j = 0; j < columns / 2; j++) {\n                int top_left = mat[i][j];\n                int bottom_left = mat[rows - 1 - i][j];\n                int top_right = mat[i][columns - 1 - j];\n                int bottom_right = mat[rows - 1 - i][columns - 1 - j];\n\n                int quadrantSum = top_left + bottom_left + top_right + bottom_right;\n\n                if (quadrantSum != 0 && quadrantSum != 4) {\n                    flipCount += min(quadrantSum, 4 - quadrantSum);\n                }\n            }\n        }\n\n        return flipCount;\n    \n    }\n};",
    "submit_ts": "1722699792",
    "subm_id": "1343222491"
}