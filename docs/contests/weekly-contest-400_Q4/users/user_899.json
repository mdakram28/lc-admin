{
    "username": "lakshyathakur",
    "submission": "class Solution {\n    public int minimumDifference(int[] arr, int k) {\n        int[] freq = new int[32];\n        int curr = 0;\n        int last = 0;\n        int ans = Integer.MAX_VALUE;\n        for(int i = 0; i < arr.length ; i++){\n            if(curr == 0 ) curr = arr[i];\n            else curr = (curr&arr[i]);\n          \n            ans = Math.min(ans , Math.abs(k-curr));\n            for(int j = 30 ; j  >=  0 ; j--){\n                if((arr[i]&(1<<j)) != 0){\n                    freq[j]++;\n                 }\n            }\n            \n            while(curr < k && last <= i){\n                for(int j = 30 ; j >= 0 ; j--){\n                    if((arr[last]&(1<<j)) != 0){\n                    freq[j]--;\n                 }\n                }\n                \n                 int l = 0;\n                 for(int j = 30 ; j >= 0 ; j--){\n                    if(freq[j] == (i-last) && freq[j] != 0){\n                        l += (1<<j);\n                      }\n                 }\n              \n                   last++;\n                   curr = l;\n                   ans = Math.min(ans , Math.abs(k-curr));\n                }\n            ans = Math.min(ans , Math.abs(k-curr));\n            }\n            return ans;\n        }\n    }\n",
    "submit_ts": "1717299967",
    "subm_id": "1274829637"
}