{
    "username": "Snorch",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int count = 0;\n        \n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int cnt = 0;\n\n                if (grid[i][j] == 1)\n                    cnt++;\n                if (grid[i][n - 1 - j] == 1)\n                    cnt++;\n                if (grid[m - 1 - i][j] == 1)\n                    cnt++;\n                if (grid[m - 1 - i][n - 1 - j] == 1)\n                    cnt++;\n\n                count += min(4 - cnt, cnt);\n            }\n        }\n\n        if (m % 2 && n % 2 && grid[m / 2][n / 2])\n            count++;\n\n        int y = 0;\n        int x = 0;\n\n        if (m % 2) {\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[m / 2][j] != grid[m / 2][n - 1 - j])\n                    y++;\n                else if (grid[m / 2][j] == 1)\n                    x++;\n            }\n        }\n\n        if (n % 2) {\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][n / 2] != grid[m - 1 - i][n / 2])\n                    y++;\n                else if (grid[i][n / 2] == 1)\n                    x++;\n            }\n        }\n\n        if (y > 0) {\n            count += y;\n        } else if (x % 2) {\n            count += 2;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1722697685",
    "subm_id": "1343155230"
}