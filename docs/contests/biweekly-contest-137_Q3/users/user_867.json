{
    "username": "yonasadiel",
    "submission": "#define IMPOSSIBLE -1000000000000LL\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n=board.size(), m=board[0].size();\n        vector<pair<int,pair<int,int>>> mm;\n        for (int i=0; i<n; i++) {\n            for (int j=0; j<m; j++) {\n                mm.push_back(make_pair(board[i][j], make_pair(i, j)));\n            }\n        }\n        sort(mm.begin(), mm.end());\n        vector<int> i(3, 0), j(3, 0);\n        long long ans = -1000000000000LL;\n        for (int k=mm.size()-1; k>=max(0,(int) mm.size()-100); k--) {\n            i[0] = mm[k].second.first;\n            j[0] = mm[k].second.second;\n            for (int l=k-1; l>=0; l--) {\n                i[1] = mm[l].second.first;\n                j[1] = mm[l].second.second;\n                if (i[0] == i[1] || j[0] == j[1]) continue;\n                for (int o=l-1; o>=0; o--) {\n                    i[2] = mm[o].second.first;\n                    j[2] = mm[o].second.second;\n                    if (i[2] != i[1] && i[2] != i[0] && j[2] != j[1] && j[2] != j[0]) {\n                        ans = max(ans, (long long) board[i[0]][j[0]] + board[i[1]][j[1]] + board[i[2]][j[2]]);\n                        break;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908710",
    "subm_id": "1359164003"
}