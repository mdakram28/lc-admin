{
    "username": "rohit_21_",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n      int ans = 0;\n        int r = grid.size(), c = grid[0].size();\n\n        if (r == 1 && c == 1) {\n            return grid[0][0];\n        }\n\n        // Check 2x2 block symmetry\n        for (int i = 0; i < r / 2; i++) {\n            for (int j = 0; j < c / 2; j++) {\n                int ones = 0, zeros = 0;\n\n                if (grid[i][j] == 1) ones++;\n                else zeros++;\n\n                if (grid[i][c - j - 1] == 1) ones++;\n                else zeros++;\n\n                if (grid[r - i - 1][j] == 1) ones++;\n                else zeros++;\n\n                if (grid[r - i - 1][c - j - 1] == 1) ones++;\n                else zeros++;\n\n                ans += min(zeros, ones);\n            }\n        }\n          int mod=0,pair=0;\n        if (r % 2 != 0) {\n            int middleRow = r / 2;\n            for (int j = 0; j < c / 2; j++) {\n                if (grid[middleRow][j] != grid[middleRow][c - j - 1]) {\n                    ans++;\n                    mod = 1;\n                }\n                if (grid[middleRow][j] == grid[middleRow][c - j - 1] && grid[middleRow][j] == 1) {\n                    pair++;\n                }\n            }\n        }\n      \n        if (c % 2 != 0) {\n            int middleCol = c / 2;\n            for (int i = 0; i < r / 2; i++) {\n                if (grid[i][middleCol] != grid[r - i - 1][middleCol]) {\n                    ans++;\n                    mod = 1;\n                }\n                if (grid[i][middleCol] == grid[r - i - 1][middleCol] && grid[i][middleCol] == 1) {\n                    pair++;\n                }\n            }\n           \n        }\n         if (mod == 0 && pair % 2 != 0) {\n                ans += 2;\n            }\n    if (r % 2 != 0 && c % 2 != 0) {\n            int middleRow = r / 2;\n            int middleCol = c / 2;\n            if (grid[middleRow][middleCol] == 1) ans++;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699318",
    "subm_id": "1343207999"
}