{
    "username": "htedsv-i",
    "submission": "//#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n//#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\")\n//#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n//#define INF 2147483647\n#define infL (1LL<<60)\n#define inf (1<<30)\n#define inf9 (1000000000)\n#define MOD  998244353 //1000000007\n#define EPS 1e-9\n#define Gr 9.8\n#define PI acos(-1)\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define REQ(i,n) for(int (i)=1;(i)<=(int)(n);(i)++)\n#define lch (rt<<1)\n#define rch (rt<<1|1)\n#define readmp(n) for(int i=0,u,v;i<n;i++) {scanf(\"%d%d\",&u,&v); mp[u].push_back(v); mp[v].push_back(u);}\ntypedef  long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, vector<int>> piv;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef ld ValType;\ntemplate<typename  T> void maxtt(T& t1, T t2) {\n    t1=max(t1,t2);\n}\ntemplate<typename  T> void mintt(T& t1, T t2) {\n    t1=min(t1,t2);\n}\n\n\nbool debug = 0;\nint n,m,k;\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\nstring direc=\"RDLU\";\nconst ll MOD2 = (ll)MOD * (ll)MOD;\nll ln, lk, lm;\nvoid etp(bool f = 0) {\n    puts(f ?\"YES\" : \"NO\");\n    exit(0);\n}\nvoid addmod(int &x, int y, int mod = MOD){\n    x+=y; if (x>=mod) x-=mod;\n    if(x<0) x+=mod;\n    assert(x>=0 && x<mod);\n}\nvoid et(int x=-1) {\n    printf(\"%d\\n\", x); exit(0);\n}\nll fastPow(ll x, ll y, int mod=MOD) {\n    ll ans = 1;\n    while(y>0) {\n        if(y&1) ans = (x * ans)%mod;\n        x = x*x%mod;\n        y>>=1;\n    }\n    return ans;\n}\nll gcd1(ll x, ll y) {\n    return y?gcd1(y,x%y):x;\n}\n\n//#include <atcoder/all>\n//using mint = atcoder::modint998244353;\n#define MAX (500005)\n\n\n\nvoid fmain(int tid) {\n//    scanf(\"%d\", &n);\n    cin>>n;\n\n}\nconst int MN=(1<<20)+4;\nstruct mb {\n    int M,T[MN];\n    void init(int sz, int val) {\n        for(M=1;sz+2>M;M<<=1);\n        REP(i,M+M+5) T[i]=val;\n    }\n    void upt(int l, int val) {\n        l+=M; T[l]=max(T[l], val);\n        while(l>1) {\n            T[l>>1] = max(T[l],T[l^1]); l>>=1;\n        }\n    }\n    int qy(int l, int r) {\n        if (l>r) return 0;\n        int ans = 0;\n        for(l=l+M-1,r=r+M+1;l^r^1;l>>=1,r>>=1){\n            if(~l&1) ans = max(ans, T[l^1]);\n            if(r&1) ans = max(ans, T[r^1]);\n        }\n        return ans;\n    }\n}T;\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int n = queries.size();\n        int X=50001;\n        set<int> sp;\n        sp.insert(0);\n        sp.insert(X);\n        REP(i,n) {\n            int x=queries[i][1];\n            if (queries[i][0] == 1) {\n                sp.insert(x);\n            }\n        }\n        T.init(X, 0);\n        int pre=-1;\n        for(int c: sp) {\n            if (pre!=-1) T.upt(c, c-pre);\n            pre=c;\n        }\n        vector<bool> ans;\n        for(int i=n-1;i>=0;i--) {\n            int x=queries[i][1];\n            if (queries[i][0] == 1) {\n                auto it = sp.find(x);\n                int l = *prev(it);\n                int r = *next(it);\n                T.upt(r, r-l);\n                sp.erase(it);\n            } else {\n                auto it =  sp.lower_bound(x);\n                int l = * prev(it);\n                const int sz=queries[i][2];\n                if (x-l >= sz) ans.push_back(true);\n                else {\n                    if (T.qy(1, l) >= sz) ans.push_back(true);\n                    else ans.push_back(false);\n                }\n            }\n        }\n        reverse(ans.begin(),  ans.end());\n        return ans;\n    }\n};\n",
    "submit_ts": 1716648721.0
}