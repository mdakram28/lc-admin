{
    "username": "deepanshu03",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        unordered_set<int> s;\n        unordered_map<int,int> mp;\n        int n = nums.size();\n        vector<int> maxGap(k+1,0);\n        for(int i=0;i<n/2;i++){\n            int diff = abs(nums[i]-nums[n-i-1]);\n            s.insert(diff);\n            mp[diff]++;\n            int gap1 = k-min(nums[i],nums[n-i-1]);\n            int gap2 = max(nums[i],nums[n-i-1])-0;\n            int gap = max(gap1,gap2);\n            maxGap[gap]++;\n        }\n        for(int i=k-1;i>=0;i--){\n            maxGap[i] = maxGap[i]+maxGap[i+1];\n        }\n        int ans = INT_MAX;\n        for(auto &a: s){\n            if(maxGap[a]==n/2){\n                int temp = n/2 - mp[a];\n                ans = min(ans,temp);\n            }\n            else{\n                int already = mp[a];\n                int changeable = maxGap[a]-mp[a];\n                int tochange = (n/2-maxGap[a])*2;\n                int temp = changeable+tochange;\n                ans = min(ans,temp);\n            }\n            \n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1721489515",
    "subm_id": "1327455592"
}