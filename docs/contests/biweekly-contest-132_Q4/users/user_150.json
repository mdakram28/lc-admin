{
    "username": "alexlin87",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int maximumLength(int[] a, int k) {\n        int n = a.length;\n        a = compress(a);\n        int[][] dp = new int[n][k + 1];\n        int[][] f = new int[n][k + 1];\n        int[] best = new int[k + 1], secondBest = new int[k + 1];\n        Arrays.fill(best, Integer.MIN_VALUE / 100000);\n        Arrays.fill(secondBest, Integer.MIN_VALUE / 100000);\n        for(int i = 0; i < dp.length; i++) {\n            Arrays.fill(dp[i], Integer.MIN_VALUE / 100000);\n            Arrays.fill(f[i], Integer.MIN_VALUE / 100000);\n        }\n        int ans = 1;\n        dp[0][0] = 1;\n        f[a[0]][0] = 1;\n        best[0] = 1;\n        secondBest[0] = 0;\n        for(int i = 1; i < n; i++) {\n            dp[i][0] = 1;\n            for(int j = 0; j <= Math.min(k, i); j++) {\n//                for(int i1 = i - 1; i1 >= 0; i1--) {\n//                    if(a[i] == a[i1]) {\n//                        dp[i][j] = Math.max(dp[i1][j] + 1, dp[i][j]);\n//                    }\n//                    else {\n//                        dp[i][j] = Math.max((j > 0 ? dp[i1][j - 1] : 0) + 1, dp[i][j]);\n//                    }\n//                }\n                dp[i][j] = Math.max(dp[i][j], f[a[i]][j] + 1);\n                if(j > 0) {\n                    if(best[j - 1] == f[a[i]][j - 1]) {\n                        dp[i][j] = Math.max(dp[i][j], secondBest[j - 1] + 1);\n                    }\n                    else {\n                        dp[i][j] = Math.max(dp[i][j], best[j - 1] + 1);\n                    }\n                }\n                else {\n                    dp[i][j] = Math.max(dp[i][j], 1);\n                }\n                ans = Math.max(ans, dp[i][j]);\n            }\n            for(int j = 0; j <= Math.min(k, i); j++) {\n                f[a[i]][j] = Math.max(f[a[i]][j], dp[i][j]);\n            }\n            for(int j = 0; j <= k; j++) {\n                if(dp[i][j] > best[j]) {\n                    secondBest[j] = best[j];\n                    best[j] = dp[i][j];\n                }\n                else if(dp[i][j] > secondBest[j]) {\n                    secondBest[j] = dp[i][j];\n                }\n            }\n        }\n        return ans;\n    }\n    private int[] compress(int[] a) {\n        int[] b = Arrays.copyOf(a, a.length);\n        Arrays.sort(b);\n        int v = 0;\n        Map<Integer, Integer> m = new HashMap<>();\n        for(int i = 0; i < b.length; i++) {\n            if(i == 0 || b[i] != b[i - 1]) {\n                m.put(b[i], v);\n                v++;\n            }\n        }\n        int[] c = new int[a.length];\n        for(int i = 0; i < c.length; i++) {\n            c[i] = m.get(a[i]);\n        }\n        return c;\n    }\n}",
    "submit_ts": 1717860804.0
}