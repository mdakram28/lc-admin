{
    "username": "aishik2002a",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nconst int MOD = 1e9 + 7;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> count(n, -1);\n        for (const auto& req : requirements) {\n            count[req[0]] = req[1];\n        }\n\n        vector<int> dp(n * (n - 1) / 2 + 1, 0);\n        dp[0] = 1;\n\n        for (int len = 1; len <= n; ++len) {\n            vector<int> newDp(n * (n - 1) / 2 + 1, 0);\n            vector<int> prefixSum(n * (n - 1) / 2 + 2, 0);\n\n            for (int i = 0; i <= n * (n - 1) / 2; ++i) {\n                prefixSum[i + 1] = (prefixSum[i] + dp[i]) % MOD;\n            }\n\n            for (int inv = 0; inv <= len * (len - 1) / 2; ++inv) {\n                if (count[len - 1] == -1 || inv == count[len - 1]) {\n                    newDp[inv] = (prefixSum[inv + 1] - prefixSum[max(0, inv - len + 1)] + MOD) % MOD;\n                }\n            }\n\n            swap(dp, newDp);\n        }\n\n        int result = 0;\n        for (int inv = 0; inv <= n * (n - 1) / 2; ++inv) {\n            result = (result + dp[inv]) % MOD;\n        }\n        return result;\n    }\n};",
    "submit_ts": "1719069979",
    "subm_id": "1296811415"
}