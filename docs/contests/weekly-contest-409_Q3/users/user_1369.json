{
    "username": "yuvall_b",
    "submission": "class Solution {\npublic:\n    // int pat(vector<int>&dp,vector<vector<int>>&v,int i,int n){\n    //     if(i>=n-1){\n    //         return 0;\n    //     }\n    //     if(dp[i]!=-1) return dp[i];\n    //     int x=INT_MAX;\n    //     for(auto it:v[i]){\n    //         x=min(x,1+pat(dp,v,it,n));\n    //     }\n    //     return dp[i]=x;\n    // }\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n         vector<int>ans;\n       set<int>s;\n        vector<int>maxi(n,0);\n        for(int i=0;i<n;i++){\n            //maxi[i]=i+1;\n            s.insert(i);\n        }\n        for(int i=0;i<queries.size();i++){\n            //auto it=s.lower_bound(queries[i][0]);\n            if(s.find(queries[i][0])!=s.end()){\n                auto x=s.upper_bound(queries[i][0]);\n            for(int j=*x;j<queries[i][1];j++){\n                s.erase(j);\n            }\n        }\n            ans.push_back(s.size()-1);\n        }\n        return ans;\n        \n        // for(int i=0;i<queries.size();i++){\n        //     vector<int>dp(n,-1);\n        //     int x=maxi[queries[i][0]];\n        //   //  cout<<queries[i][0]<<\" \"<<queries[i][1]<<\" \"<<x<<endl;\n        //     x=max(x,queries[i][1]);\n        //     maxi[queries[i][0]]=x;\n        //     v[queries[i][0]].pop_back();\n        //     v[queries[i][0]].push_back(x);\n        //    ans.push_back( pat(dp,v,0,n));\n        // }\n        // return ans;\n    }\n};",
    "submit_ts": "1722743291",
    "subm_id": "1343788649"
}