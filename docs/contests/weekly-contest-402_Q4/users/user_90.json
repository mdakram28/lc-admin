{
    "username": "wutwere",
    "submission": "// seg_tree<int> st([](int a, int b) { return a + b; });\n// vector<int> a(100, 5);\n// st.build(a);\n// st.upd(0, 10);\n// st.query(0, 99);\ntemplate <class T>\nstruct seg_tree {\n  const static int MAXN = 100000;\n  function<T(T, T)> combine;\n  T t[2 * MAXN];\n  int n = MAXN;\n  seg_tree(function<T(T, T)> f) { combine = f; }\n  void build(vector<T>& a) {\n    n = a.size();\n    for (int i = 0; i < n; i++)\n      t[i + n] = a[i];\n    for (int i = n - 1; i > 0; --i)\n      t[i] = combine(t[i << 1], t[i << 1 | 1]);\n  }\n  void upd(int p, T v) {\n    for (t[p += n] = v; p >>= 1; )\n      t[p] = combine(t[p << 1], t[p << 1 | 1]);\n  }\n  T query(int l, int r) {\n    T resl = 0, resr = 0;\n    for (++r, l += n, r += n; l < r; l >>= 1, r >>= 1) {\n      if (l & 1) resl = combine(resl, t[l++]);\n      if (r & 1) resr = combine(t[--r], resr);\n    }\n    return combine(resl, resr);\n  }\n};\nseg_tree<int> st([](int a, int b) { return a + b; });\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> pref(n);\n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                pref[i]++;\n            }\n        }\n        st.build(pref);\n        vector<int> ans;\n        for (auto qry : queries) {\n            int a = qry[1], b = qry[2];\n            if (qry[0] == 1) {\n                // int res = pref[b] - (a ? pref[a - 1] : 0);\n                // if (a && a < n - 1 && nums[a] > nums[a - 1] && nums[a] > nums[a + 1]) {\n                //     res--;\n                // }\n                // if (b != a && b && b < n - 1 && nums[b] > nums[b - 1] && nums[b] > nums[b + 1]) {\n                //     res--;\n                // }\n                ans.push_back(st.query(a + 1, b - 1));\n            } else {\n                if (a >= 2) {\n                    if (b >= nums[a - 1]) {\n                        st.upd(a - 1, 0);\n                    }\n                }\n                if (a + 2 <= n - 1) {\n                    if (b >= nums[a + 1]) {\n                        st.upd(a + 1, 0);\n                    }\n                }\n                if (a && a < n - 1 && b > nums[a - 1] && b > nums[a + 1]) {\n                    st.upd(a, 1);\n                }\n                if (a && a < n - 1 && (b <= nums[a - 1] || b <= nums[a + 1])) {\n                    st.upd(a, 0);\n                }\n                nums[a] = b;\n                if (a >= 2) {\n                    if (nums[a - 1] > nums[a] && nums[a - 1] > nums[a - 2]) {\n                        st.upd(a - 1, 1);\n                    }\n                }\n                if (a + 2 <= n - 1) {\n                    if (nums[a + 1] > nums[a] && nums[a + 1] > nums[a + 2]) {\n                        st.upd(a + 1, 1);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506249.0
}