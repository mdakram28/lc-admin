{
    "username": "octaneal",
    "submission": "class Solution:\n    def canReachCorner(self, X, Y, circles):\n        def bfs(graph, start, target1, target2, num_nodes):\n            queue = deque([start])\n            visited = [False] * num_nodes\n            visited[start] = True\n\n            while queue:\n                current = queue.popleft()\n                for neighbor in graph[current]:\n                    if not visited[neighbor]:\n                        queue.append(neighbor)\n                        visited[neighbor] = True\n            return visited[target1] or visited[target2]\n\n        num_circles = len(circles)\n        graph = [[] for _ in range(num_circles + 4)]\n\n        for i in range(num_circles):\n            cx, cy, radius = circles[i]\n\n            if cx <= radius:\n                graph[num_circles].append(i)\n                graph[i].append(num_circles)\n\n            if X - cx <= radius:\n                graph[num_circles + 2].append(i)\n                graph[i].append(num_circles + 2)\n\n            if cy <= radius:\n                graph[num_circles + 1].append(i)\n                graph[i].append(num_circles + 1)\n\n            if Y - cy <= radius:\n                graph[num_circles + 3].append(i)\n                graph[i].append(num_circles + 3)\n\n            for j in range(i + 1, num_circles):\n                cx2, cy2, radius2 = circles[j]\n                dist = math.sqrt((cx - cx2) ** 2 + (cy - cy2) ** 2)\n                total_radius = radius + radius2\n\n                if total_radius >= dist: \n                    graph[i].append(j)\n                    graph[j].append(i)\n\n\n        blocked = bfs(\n            graph,\n            num_circles,\n            num_circles + 1,\n            num_circles + 2,\n            num_circles + 4\n        )\n        blocked = max(\n            blocked,\n            bfs(graph,\n            num_circles + 3,\n            num_circles + 2,\n            num_circles + 1,\n            num_circles + 4\n        ))\n\n        return not blocked\n",
    "submit_ts": "1722139193",
    "subm_id": "1335810677"
}