{
    "username": "astra_starix",
    "submission": "class Solution { \npublic: \n    int minFlips(vector<vector<int>>& grid) { \n        int row = grid.size(), col = grid[0].size();\n        vector<int> arr(3, 0);\n        int no_of_flips = 0; \n         \n        if (row % 2 == 1 && col % 2 == 1) { \n            if (grid[row / 2][col / 2] == 1) { \n                no_of_flips++; \n            } \n        } \n        \n        if (col % 2 == 1) { \n            int alpha = 0, beta = row - 1; \n            while (alpha < beta) { \n                int total_sum = grid[alpha][col / 2] + grid[beta][col / 2]; \n                arr[total_sum]++; \n                alpha++; \n                beta--; \n            } \n        }\n \n        if (row % 2 == 1) { \n            int alpha = 0, beta = col - 1; \n            while (alpha < beta) { \n                int total_sum = grid[row / 2][alpha] + grid[row / 2][beta]; \n                arr[total_sum]++; \n                alpha++; \n                beta--; \n            } \n        } \n  \n \n        if (arr[2] % 2 == 1) { \n            if (arr[1] > 0) { \n                no_of_flips += arr[1]; \n            } else { \n                no_of_flips += 2; \n            } \n        } else { \n            no_of_flips += arr[1]; \n        } \n \n        for (int i = 0; i < row / 2; ++i) { \n            for (int j = 0; j < col / 2; ++j) { \n                int option1 = grid[i][j]; \n                int option2 = grid[row - 1 - i][j]; \n                int option3 = grid[i][col - 1 - j]; \n                int option4 = grid[row - 1 - i][col - 1 - j]; \n \n                int total_sum = option1 + option2 + option3 + option4; \n \n                if (total_sum != 0 && total_sum != 4) { \n                    no_of_flips += min(total_sum, 4 - total_sum); \n                } \n            } \n        } \n \n        return no_of_flips; \n    } \n};",
    "submit_ts": "1722700015",
    "subm_id": "1343229146"
}