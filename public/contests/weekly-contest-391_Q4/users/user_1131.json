{
    "username": "stocfocs",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> left_max_plus;\n        vector<int> left_min_plus;\n        vector<int> left_max_minus;\n        vector<int> left_min_minus;\n        int plus = points[0][0] + points[0][1];\n        int minus = points[0][0] - points[0][1];\n        left_max_plus.push_back(plus);\n        left_min_plus.push_back(plus);\n        left_max_minus.push_back(minus);\n        left_min_minus.push_back(minus);\n        for (int i = 1; i < points.size(); i++) {\n            int plus = points[i][0] + points[i][1];\n            int minus = points[i][0] - points[i][1];\n            if (plus > left_max_plus[i-1]) {\n                left_max_plus.push_back(plus);\n            } else {\n                left_max_plus.push_back(left_max_plus[i-1]);\n            }\n            if (plus < left_min_plus[i-1]) {\n                left_min_plus.push_back(plus);\n            } else {\n                left_min_plus.push_back(left_min_plus[i-1]);\n            }\n            if (minus > left_max_minus[i-1]) {\n                left_max_minus.push_back(minus);\n            } else {\n                left_max_minus.push_back(left_max_minus[i-1]);\n            }\n            if (minus < left_min_minus[i-1]) {\n                left_min_minus.push_back(minus);\n            } else {\n                left_min_minus.push_back(left_min_minus[i-1]);\n            }\n        }\n        vector<int> right_max_plus(points.size());\n        vector<int> right_min_plus(points.size());\n        vector<int> right_max_minus(points.size());\n        vector<int> right_min_minus(points.size());\n        int last_point = points.size() - 1;\n        right_max_plus[points.size()-1] = points[last_point][0] + points[last_point][1];\n        right_min_plus[points.size()-1] = points[last_point][0] + points[last_point][1];\n        right_max_minus[points.size()-1] = points[last_point][0] - points[last_point][1];\n        right_min_minus[points.size()-1] = points[last_point][0] - points[last_point][1];\n        for (int i = points.size() - 2; i >= 0; i--) {\n            int plus = points[i][0] + points[i][1];\n            int minus = points[i][0] - points[i][1];\n            if (plus > right_max_plus[i+1]) {\n                right_max_plus[i] = plus;\n            } else {\n                right_max_plus[i] = right_max_plus[i+1];\n            }\n            if (plus < right_min_plus[i+1]) {\n                right_min_plus[i] = plus;\n            } else {\n                right_min_plus[i] = right_min_plus[i+1];\n            }\n            if (minus > right_max_minus[i+1]) {\n                right_max_minus[i] = minus;\n            } else {\n                right_max_minus[i] = right_max_minus[i+1];\n            }\n            if (minus < right_min_minus[i+1]) {\n                right_min_minus[i] = minus;\n            } else {\n                right_min_minus[i] = right_min_minus[i+1];\n            }\n        }\n        int right_maxp = right_max_plus[1];\n        int right_minp = right_min_plus[1];\n        int right_maxm = right_max_minus[1];\n        int right_minm = right_min_minus[1];\n        int answer = max(right_maxp - right_minp, right_maxm - right_minm);\n        for (int i = 2; i < points.size(); i++) {\n            int right_maxp = right_max_plus[i];\n            int right_minp = right_min_plus[i];\n            int right_maxm = right_max_minus[i];\n            int right_minm = right_min_minus[i];\n            int left_maxp = left_max_plus[i-2];\n            int left_minp = left_min_plus[i-2];\n            int left_maxm = left_max_minus[i-2];\n            int left_minm = left_min_minus[i-2];\n            int maxp = max(right_maxp, left_maxp) - min(right_minp, left_minp);\n            int maxm = max(right_maxm, left_maxm) - min(right_minm, left_minm);\n            int current_answer = max(maxp, maxm);\n            if (current_answer < answer) {\n                answer = current_answer;\n            }\n        }\n        int lanswer = max(left_max_plus[points.size() - 2] - left_min_plus[points.size() - 2], left_max_minus[points.size() - 2] - left_min_minus[points.size() - 2]);\n        if (lanswer< answer) {\n            answer = lanswer;\n        }\n        return answer;\n    }\n};"
}