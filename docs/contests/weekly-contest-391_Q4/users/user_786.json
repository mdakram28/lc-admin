{
    "username": "sxauwzz",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        a = [[] for _ in range(4)]\n        for i, (x, y) in enumerate(points):\n            a[0].append((x - y, i))\n            a[1].append((x + y, i))\n            a[2].append((-x - y, i))\n            a[3].append((-x + y, i))\n        a[0].sort()\n        a[1].sort()\n        a[2].sort()\n        a[3].sort()\n        ma, mi = -1, []\n        for i in a:\n            na = i[-1][0] - i[0][0]\n            if na > ma:\n                mi = [i[-1][1], i[0][1]]\n                ma = na\n        ans1 = -1\n        for i in a:\n            if i[-1][1] == mi[0]:\n                na = i[-2][0]\n            else:\n                na = i[-1][0]\n            if i[0][1] == mi[0]:\n                na -= i[1][0]\n            else:\n                na -= i[0][0]\n            ans1 = max(ans1, na)\n            \n        ans2 = -1\n        for i in a:\n            if i[-1][1] == mi[1]:\n                na = i[-2][0]\n            else:\n                na = i[-1][0]\n            if i[0][1] == mi[1]:\n                na -= i[1][0]\n            else:\n                na -= i[0][0]\n            ans2 = max(ans2, na)\n        \n        return min(ans1, ans2)"
}