{
    "username": "jfy-1",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        t=[]\n        p=[]\n        n=len(points)\n        for i in range(n):\n            a,b=points[i]\n            t.append((a+b,i))\n            p.append((a-b,i))\n        t.sort()\n        p.sort()\n        u=t[-1][0]-t[0][0]\n        v=p[-1][0]-p[0][0]\n        if u>=v:\n            r,s=t[0][1],t[-1][1]\n        else:\n            r,s=p[0][1],p[-1][1]\n        t=[]\n        p=[]\n        for i in range(n):\n            if i!=r:\n                a,b=points[i]\n                t.append(a+b)\n                p.append(a-b)\n        t.sort()\n        p.sort()\n        u=t[-1]-t[0]\n        v=p[-1]-p[0]\n        res1=max(u,v)\n        t=[]\n        p=[]\n        for i in range(n):\n            if i!=s:\n                a,b=points[i]\n                t.append(a+b)\n                p.append(a-b)\n        t.sort()\n        p.sort()\n        u=t[-1]-t[0]\n        v=p[-1]-p[0]\n        res1=min(res1,max(u,v))\n        return res1"
}