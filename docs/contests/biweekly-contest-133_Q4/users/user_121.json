{
    "username": "pcwuu",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        sort(requirements.begin(), requirements.end());\n\n        int mod = 1e9 + 7; \n        // length, inv cnt\n        int dp[301][401] = {};\n        dp[0][0] = 1;\n        \n        \n        int idx = 0, sz = requirements.size();\n        for(int i = 1; i <= n; i++) {\n            if(idx < sz && requirements[idx][0] == i - 1) {\n                int invCnt = requirements[idx][1];\n                for(int j = 0; j < i; j++) {\n                    if(invCnt - (i - 1 - j) < 0)\n                        continue;\n                    dp[i][invCnt] = (dp[i][invCnt] + dp[i - 1][invCnt - (i - 1 - j)]) % mod;\n                }\n                idx++;\n            }\n            else {\n                for(int j = 0; j <= 400; j++)\n                    for(int k = 0; k < i; k++) {\n                        if(j - (i - 1 - k) < 0)\n                            continue;\n                        dp[i][j] = (dp[i][j] + dp[i - 1][j - (i - 1 - k)]) % mod;\n                    }\n            }\n        }\n        return dp[n][requirements[sz - 1][1]];\n        \n    }\n};\n\n/*\ndp[n]\n\n[i, 100]\nxxx i\nxxx 0 => xxx (100 - i)\n*/",
    "submit_ts": 1719068848.0
}