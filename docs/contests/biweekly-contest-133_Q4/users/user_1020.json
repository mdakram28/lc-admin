{
    "username": "sushree008",
    "submission": "#include <iostream>\n#include <vector>\n#include <unordered_map>\n\nusing namespace std;\n\nclass Solution {\nprivate:\n    const int MOD = 1'000'000'007;\n    const int MAX_INVERSIONS = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        // Create a map for inversion requirements\n        unordered_map<int, int> reqMap;\n        for (auto& req : requirements) {\n            reqMap[req[0] + 1] = req[1];\n        }\n\n        // Initialize a 2D vector to store permutation counts\n        vector<vector<long long>> permCounts(n + 1, vector<long long>(MAX_INVERSIONS + 1, 0));\n        permCounts[0][0] = 1;\n\n        // Compute permutation counts dynamically\n        for (int length = 1; length <= n; ++length) {\n            for (int inv = 0; inv <= MAX_INVERSIONS; ++inv) {\n                for (int newPos = 0; newPos < length; ++newPos) {\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        permCounts[length][inv] += permCounts[length - 1][prevInv];\n                        permCounts[length][inv] %= MOD;\n                    }\n                }\n            }\n\n            // Apply inversion requirements if present\n            if (reqMap.count(length) > 0) {\n                int targetInv = reqMap[length];\n                for (int inv = 0; inv <= MAX_INVERSIONS; ++inv) {\n                    if (inv != targetInv) {\n                        permCounts[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        // Sum up all valid permutations counts for length n\n        long long result = 0;\n        for (int inv = 0; inv <= MAX_INVERSIONS; ++inv) {\n            result = (result + permCounts[n][inv]) % MOD;\n        }\n\n        return static_cast<int>(result);\n    }\n\n    // Example usage inside Solution class\n    void exampleUsage() {\n        int n = 3;\n        vector<vector<int>> requirements = {{1, 1}, {2, 2}};\n        cout << numberOfPermutations(n, requirements) << endl;\n    }\n};\n\n// Example standalone main function (commented out)\n/*\nint main() {\n    Solution solution;\n    solution.exampleUsage();\n    return 0;\n}\n*/\n",
    "submit_ts": 1719071510.0
}