{
    "username": "wddd",
    "submission": "class Solution {\n    private final static int MOD = (int) (1e9 + 7);\n\n    public int countOfPairs(int[] nums) {\n\n        int[] base1 = new int[nums.length];\n        for (int i = 1; i < nums.length; i++) {\n            base1[i] = base1[i - 1];\n            if (nums[i] - nums[i - 1] > 0) {\n                base1[i] += nums[i] - nums[i - 1];\n            }\n        }\n\n        int[] base2 = new int[nums.length];\n        for (int i = nums.length - 2; i >= 0; i--) {\n            base2[i] = base2[i + 1];\n            if (nums[i] > nums[i + 1]) {\n                base2[i] += nums[i] - nums[i + 1];\n            }\n        }\n\n        for (int i = 0; i < nums.length; i++) {\n            nums[i] -= base1[i];\n            nums[i] -= base2[i];\n        }\n\n        if (nums[0] < 0) {\n            return 0;\n        }\n\n        // long[][] cache = new long[nums[0] + 1][nums.length + 1];\n        // return (int) (count(nums[0], nums.length, cache) % MOD);\n//        long[][] dp = new long[nums[0] + 1][nums.length + 1];\n//        Arrays.fill(dp[0], 1);\n//        Arrays.fill(dp[1], 1);\n\n        if (nums[0] == 0) {\n            return 1;\n        }\n//        if (nums[0] == 1) {\n//            return 2;\n//        }\n\n        long[] dp1 = new long[nums.length];\n        Arrays.fill(dp1, 1);\n\n        for (int i = 1; i <= nums[0]; i++) {\n            long[] temp = new long[nums.length];\n            temp[temp.length - 1] = i + 1;\n\n            for (int j = temp.length - 2; j >= 0; j--) {\n                temp[j] = temp[j + 1] + dp1[j + 1];\n                temp[j] %= MOD;\n            }\n\n            for (int j = 0; j < dp1.length; j++) {\n                if (i < nums[0]) {\n                    dp1[j] += temp[j];\n                } else {\n                    dp1[j] = temp[j];\n                }\n                dp1[j] %= MOD;\n            }\n            \n        }\n\n        return (int) dp1[0];\n    }\n}",
    "submit_ts": "1723346684",
    "subm_id": "1351582954"
}