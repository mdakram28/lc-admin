{
    "username": "adityavkrm",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        int i = 0, j = 0;\n        long long ans = 0, prevHor = 1, prevVert = 1;\n        --m;\n        --n;\n        while (i < m && j < n) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                ans += horizontalCut[i] * prevVert;\n                ++prevHor;\n                ++i;\n            } else {\n                ans += verticalCut[j] * prevHor;\n                ++prevVert;\n                ++j;\n            }\n        }\n        while (i < m) {\n            ans += horizontalCut[i] * prevVert;\n            ++i;\n        }\n        while (j < n) {\n            ans += verticalCut[j] * prevHor;\n            ++j;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925412",
    "subm_id": "1320253890"
}