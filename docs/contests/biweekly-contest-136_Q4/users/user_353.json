{
    "username": "ForgottenSemicolon",
    "submission": "class Solution {\n    public int[] timeTaken(int[][] edges) {\n        List<List<Integer>> adj = new ArrayList<>();\n        int n = edges.length+1;\n        for(int i = 0; i<n; i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int [] edge : edges){\n            adj.get(edge[0]).add(edge[1]);\n            adj.get(edge[1]).add(edge[0]);\n        }\n        int [] dis = new int[n];\n        dfs(adj, 0, -1, dis);\n        int [] time = new int[n];\n        dfs2(adj, 0, -1, dis, time, 0);\n        return time;\n    }\n    \n    public int dfs(List<List<Integer>> adj, int vertex, int parent, int [] dis){\n        int max = 0;\n        for(int v : adj.get(vertex)){\n            if(v==parent)   continue;\n            if(v%2==0){\n                max = Math.max(max, 2+dfs(adj, v, vertex, dis));\n            }\n            else{\n                max = Math.max(max, 1+dfs(adj, v, vertex, dis));\n            }\n        }\n        dis[vertex] = max;\n        return max;\n    }\n    \n    public void dfs2(List<List<Integer>> adj, int vertex, int parent, int [] dis, int [] time, int upper){\n        int max = 0, max2 = 0;\n        for(int v : adj.get(vertex)){\n            if(v==parent)   continue;\n            int curr = dis[v];\n            if(v%2==0)  curr +=2;\n            else curr++;\n            if(curr>=max){\n                max2 = max;\n                max = curr;\n            }\n            else if(curr>=max2){\n                max2 = curr;\n            }\n        }\n        time[vertex] = Math.max(dis[vertex], upper);\n        for(int v : adj.get(vertex)){\n            if(v==parent)   continue;\n            int curr = dis[v];\n            if(v%2==0)  curr +=2;\n            else curr++;\n            if(curr==max){\n                if(vertex%2==0){\n                    dfs2(adj, v, vertex, dis, time, Math.max(max2, upper)+2);\n                }\n                else{\n                    dfs2(adj, v, vertex, dis, time, Math.max(max2, upper)+1);\n                }\n            }\n            else{\n                if(vertex%2==0){\n                    dfs2(adj, v, vertex, dis, time, Math.max(max, upper)+2);\n                }\n                else{\n                    dfs2(adj, v, vertex, dis, time, Math.max(max, upper)+1);\n                }\n            }\n        }\n    }\n}",
    "submit_ts": "1722700751",
    "subm_id": "1343251701"
}