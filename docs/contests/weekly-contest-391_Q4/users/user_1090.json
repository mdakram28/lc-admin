{
    "username": "zhouchgh",
    "submission": "class Solution {\npublic:\n    vector<int> helper(vector<vector<int>>& points, int ri){\n        int n = points.size();\n        int min_x = 100000001, max_x = 0, min_y = 100000001, max_y = 0;\n        for(int i = 0; i < n; i++){\n            if(i != ri){\n                min_x = min(min_x, points[i][0]);\n                max_x = max(max_x, points[i][0]);\n                min_y = min(min_y, points[i][1]);\n                max_y = max(max_y, points[i][1]);\n            }\n        }\n        vector<vector<int>> mp = {{min_x, min_y}, {max_x, max_y}, {min_x, max_y}, {max_x, min_y}};\n        vector<int> md(4, 100000001);\n        vector<int> mi(4, -1);\n        for(int i = 0; i < n; i++){\n            if(i != ri){\n                for(int k = 0; k < 4; k++){\n                    int c = abs(points[i][0] - mp[k][0]) + abs(points[i][1] - mp[k][1]);\n                    if(c < md[k]){\n                        md[k] = c;\n                        mi[k] = i;\n                    }\n                }\n            }\n        }\n        int d1 = abs(points[mi[0]][0] - points[mi[1]][0]) + abs(points[mi[0]][1] - points[mi[1]][1]);\n        int d2 = abs(points[mi[2]][0] - points[mi[3]][0]) + abs(points[mi[2]][1] - points[mi[3]][1]);\n        if(d1 > d2) return {d1, mi[0], mi[1]};\n        return {d2, mi[2], mi[3]};\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> res = helper(points, -1);\n        vector<int> r1 = helper(points, res[1]);\n        vector<int> r2 = helper(points, res[2]);\n        return min(r1[0], r2[0]);\n    }\n};"
}