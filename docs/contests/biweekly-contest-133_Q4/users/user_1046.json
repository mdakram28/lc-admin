{
    "username": "kushaagr__11",
    "submission": "class Solution {\npublic:\n    int mod = 1e9+7, MAX_INV = 450;    \n    int numberOfPermutations(int n, vector<vector<int>>& constraints) {\n        unordered_map<int, int> constraintMap;\n        for (const auto& constraint : constraints) {\n            constraintMap[constraint[0] + 1] = constraint[1];\n        }\n\n        vector<vector<long long>> permCount(n + 1, vector<long long>(MAX_INV + 1, 0));\n        generatePermutations(n, permCount, constraintMap);\n\n        return computeFinalResult(n, permCount);\n    }\n\nprivate:\n    void generatePermutations(int n, vector<vector<long long>>& permCount, unordered_map<int, int>& constraintMap) {\n        permCount[0][0] = 1;\n\n        for (int len = 1; len <= n; len++) {\n            for (int inv = 0; inv <= MAX_INV; inv++) {\n                for (int pos = 0; pos < len; pos++) {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0) {\n                        permCount[len][inv] = (permCount[len][inv] + permCount[len - 1][prevInv]) % mod;\n                    }\n                }\n            }\n\n            applyConstraints(len, permCount, constraintMap);\n        }\n    }\n\n    void applyConstraints(int len, vector<vector<long long>>& permCount, unordered_map<int, int>& constraintMap) {\n        if (constraintMap.count(len)) {\n            int requiredInv = constraintMap[len];\n            for (int inv = 0; inv <= MAX_INV; inv++) {\n                if (inv != requiredInv) {\n                    permCount[len][inv] = 0;\n                }\n            }\n        }\n    }\n\n    int computeFinalResult(int n, vector<vector<long long>>& permCount) {\n        long long result = 0;\n        for (int inv = 0; inv <= MAX_INV; inv++) {\n            result = (result + permCount[n][inv]) % mod;\n        }\n        return int(result);\n    }\n};\n",
    "submit_ts": 1719071883.0
}