{
    "username": "gooday",
    "submission": "const int MAXN = 100'100;\nconst int MAXM = 10;\n\nint dp[MAXN][MAXM];\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int K) {\n        vector<int> pows(n + 1, 0);\n        {\n            long long x = 1;\n            for (int i = 0; i <= n; ++i) {\n                pows[i] = x % K;\n                (x *= 10) %= K;\n            }\n        }\n        \n        string res(n, '?');\n        \n        function<void(int,int)> dfs = [&](int l, int r) {\n            for (int i = 0; i < K; ++i) {\n                dp[l][i] = -1;\n            }\n            \n            if (l > r) {\n                dp[l][0] = 0;    \n                return;\n            }\n            int ll = l > 4 && l < (n + 1) / 2 - 4 ? 9 : (l == 0 ? 1 : 0);\n            int rr = 9;\n            if (l == r) {\n                for (int i = ll; i <= rr; ++i) {\n                    long long x = i * pows[l] % K;\n                    dp[l][x] = max(dp[l][x], i);\n                }\n            } else {\n                dfs(l + 1, r - 1);\n                for (int k = 0; k < K; ++k) {\n                    if (dp[l + 1][k] < 0) {\n                        continue;\n                    }\n                    for (int i = ll; i <= rr; ++i) {\n                        long long x = i * (pows[l] + pows[r]) % K;\n                        x += k;\n                        if (x >= K) {\n                            x -= K;\n                        }\n                        // cout << \"DFS \" << l << \"-\" << r << \" ::: \" << x << endl;\n                        dp[l][x] = max(dp[l][x], i);\n                    }\n                }\n            }\n        };\n        dfs(0, n - 1);\n        \n        long long x = 0;\n        for (int i = 0, j = n - 1; i <= j; ++i, --j) {\n            int d = dp[i][x];\n            res[i] = res[j] = (char)('0' + d);\n            // cout << i << \": \" << j << \" ::: \" << d << endl;\n            long long y = d;\n            if (i == j) {\n                (y *= pows[i]) %= K;\n            } else {\n                (y *= pows[i] + pows[j]) %= K;\n            }\n            long long nx = x - y;\n            if (nx < 0) {\n                nx += K;\n            }\n            x = nx;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1723951042",
    "subm_id": "556402883"
}