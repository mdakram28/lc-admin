{
    "username": "aloo08051999",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int N = grid.size();\n        int M = grid[0].size();\n        int ans = 0;\n        \n        // N == 1 or M == 1\n        if(N == 1 && (M%2)){\n            if(grid[0][(M/2)]){ans++;}\n            \n            int i = 0,j = M-1;\n            int A[3] = {0};\n\n            while(i<j){\n                A[grid[(N/2)][i] + grid[(N/2)][j]]++;\n                i++; j--;\n            }\n            \n            ans+= A[1];\n            int temp = 0;\n            A[2] = A[2]%2;\n            if(A[2]){\n                if(A[1] == 0){ans+=2;}\n            }\n            \n            return ans;\n        }else if(M == 1 && (N%2)){\n            if(grid[(N/2)][0]){ans++;}\n            \n            int i = 0,j = N-1;\n                int A[3] = {0};\n                \n                while(i<j){\n                    A[grid[i][(M/2)] + grid[j][(M/2)]]++;\n                    i++; j--;\n                }\n                ans+= A[1];\n                int temp = 0;\n                A[2] = A[2]%2;\n                if(A[2]){\n                    if(A[1] == 0){ans+=2;}\n                }\n            return ans;\n        }\n        \n        \n        \n        for(int i=0;i<(N/2);i++){\n            for(int j=0;j<(M/2);j++){\n                int a = i,b = j;\n                int count = grid[i][j] + grid[N-i-1][M-j-1] + grid[N-i-1][j] + grid[i][M-j-1];\n                ans+= min(count,4-count);\n            }\n        }\n        \n        if((N%2) && (M%2)){\n            if(grid[(N/2)][(M/2)]){ans++; grid[(N/2)][(M/2)] = 0;}\n            \n            int i = 0,j = N-1;\n            int A[3] = {0};\n            \n            while(i<j){\n                    A[grid[i][(M/2)] + grid[j][(M/2)]]++;\n                    i++; j--;\n            }\n            \n            i = 0;\n            j = M-1;\n            \n            while(i<j){\n                    A[grid[(N/2)][i] + grid[(N/2)][j]]++;\n                    i++; j--;\n            }\n            \n            ans+= A[1];\n            int temp = 0;\n            A[2] = A[2]%2;\n            if(A[2]){\n                if(A[1] == 0){ans+=2;}\n            } \n            \n        }else if(N%2){\n            //even number of elements - count is M ---\n            if(M < 4){\n                for(int i=0;i<M;i++){\n                    if(grid[(N/2)][i]){ans++;}\n                }\n            }else{\n                int i = 0,j = M-1;\n                int A[3] = {0};\n                \n                while(i<j){\n                    A[grid[(N/2)][i] + grid[(N/2)][j]]++;\n                    i++; j--;\n                }\n                ans+= A[1];\n                int temp = 0;\n                A[2] = A[2]%2;\n                if(A[2]){\n                    if(A[1] == 0){ans+=2;}\n                }\n            }\n            \n        }else if(M%2){\n            \n            if(N < 4){\n                for(int i=0;i<N;i++){\n                    if(grid[i][(M/2)]){ans++;}\n                }\n            }else{\n                int i = 0,j = N-1;\n                int A[3] = {0};\n                \n                while(i<j){\n                    A[grid[i][(M/2)] + grid[j][(M/2)]]++;\n                    i++; j--;\n                }\n                ans+= A[1];\n                int temp = 0;\n                A[2] = A[2]%2;\n                if(A[2]){\n                    if(A[1] == 0){ans+=2;}\n                }\n            }\n        }\n        \n        return ans;\n        \n        \n        \n        \n        \n    }\n};",
    "submit_ts": "1722698740",
    "subm_id": "1343190232"
}