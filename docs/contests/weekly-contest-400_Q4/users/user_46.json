{
    "username": "Abhi_Srivastava",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size(), res = INT_MAX;\n        vector<vector<int>> bits(30, vector<int>(n, 0));\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 30; j++)\n                if (nums[i] & (1 << j))\n                    bits[j][i] = 1;\n            if (i)\n                for (int j = 0; j < 30; j++)\n                    bits[j][i] += bits[j][i - 1];\n        }\n        for (int i = 0; i < n; i++) {\n            int l = i, r = n - 1, num = -1;\n            while (l <= r) {\n                int mid = (l + r) / 2, curr = 0;\n                for (int j = 0; j < 30; j++)\n                    if (bits[j][mid] - (i ? bits[j][i - 1] : 0) == mid - i + 1)\n                        curr += (1 << j);\n                if (curr >= k) {\n                    num = curr;\n                    l = mid + 1;\n                }\n                else\n                    r = mid - 1;\n            }\n            if (num != -1)\n                res = min(res, num - k);\n        }\n        for (int i = 0; i < n; i++) {\n            int l = i, r = n - 1, num = -1;\n            while (l <= r) {\n                int mid = (l + r) / 2, curr = 0;\n                for (int j = 0; j < 30; j++)\n                    if (bits[j][mid] - (i ? bits[j][i - 1] : 0) == mid - i + 1)\n                        curr += (1 << j);\n                if (curr <= k) {\n                    num = curr;\n                    r = mid - 1;\n                }\n                else\n                    l = mid + 1;\n            }\n            if (num != -1)\n                res = min(res, k - num);\n        }\n        return res;\n    }\n};",
    "submit_ts": 1717296054.0
}