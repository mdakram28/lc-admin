{
    "username": "AdityaRaj_cpp",
    "submission": "class Solution\n{\n    vector<vector<int>> countBits;\n    long long helper(int i, int j)\n    {\n        long long result = 0;\n        for (int k = 0; k < 32; k++)\n        {\n            int c1 = countBits[j][k] - (i > 0 ? countBits[i - 1][k] : 0);\n            if (c1 == j - i + 1)\n                result += (1LL << k);\n        }\n        return result;\n    }\n\n    int solve1(vector<int> &nums, int i, int k)\n    {\n        int l = i, r = nums.size() - 1, result = -1;\n        while (l <= r)\n        {\n            int m = (l + r) / 2;\n            int res = helper(i, m);\n            if (res == k)\n                result = m;\n            if (res <= k)\n                r = m - 1;\n            else\n                l = m + 1;\n        }\n        return result;\n    }\n\n    int solve2(vector<int> &nums, int i, int k)\n    {\n        int l = i, r = nums.size() - 1, result = -1;\n        while (l <= r)\n        {\n            int m = (l + r) / 2;\n            int res = helper(i, m);\n            if (res == k)\n                result = m;\n            if (res < k)\n                r = m - 1;\n            else\n                l = m + 1;\n        }\n        return result;\n    }\n\npublic:\n    long long countSubarrays(vector<int> &nums, int k)\n    {\n        int n = nums.size();\n        countBits.resize(n, vector<int>(32, 0));\n        for (int i = 0; i < nums.size(); i++)\n        {\n            for (int j = 0; j < 32; j++)\n            {\n                countBits[i][j] = (nums[i] >> j) & 1;\n                if (i > 0)\n                    countBits[i][j] += countBits[i - 1][j];\n            }\n        }\n        long long result = 0;\n        for (int i = 0; i < n; i++)\n        {\n            int c1 = solve1(nums, i, k);\n            int c2 = solve2(nums, i, k);\n            if (c1 == -1 || c2 == -1)\n                continue;\n            result += abs(c1 - c2) + 1;\n        }\n        return result;\n    }\n};",
    "submit_ts": "1720278835",
    "subm_id": "1311726308"
}