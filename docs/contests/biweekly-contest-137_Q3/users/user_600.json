{
    "username": "dinospecs",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n\n    long long maximumValueSum(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        long long maxSum = LLONG_MIN;\n\n        vector<vector<pair<int, int>>> rowMax(m);\n\n        for (int i = 0; i < m; i++) {\n            vector<pair<int, int>> row;\n            for (int j = 0; j < n; j++) {\n                row.push_back({grid[i][j], j});\n            }\n            sort(row.rbegin(), row.rend());\n            rowMax[i] = row;\n        }\n\n        for (int i = 0; i < m; i++) {\n            for (int j = i + 1; j < m; j++) {\n                for (int k = j + 1; k < m; k++) {\n                    for (int x = 0; x < min(3, n); x++) {\n                        for (int y = 0; y < min(3, n); y++) {\n                            for (int z = 0; z < min(3, n); z++) {\n                                if (rowMax[i][x].second !=\n                                        rowMax[j][y].second &&\n                                    rowMax[i][x].second !=\n                                        rowMax[k][z].second &&\n                                    rowMax[j][y].second !=\n                                        rowMax[k][z].second) {\n                                    long long currentSum =\n                                        ll(rowMax[i][x].first) +\n                                        ll(rowMax[j][y].first) +\n                                        ll(rowMax[k][z].first);\n                                    maxSum = max(maxSum, currentSum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723908832",
    "subm_id": "1359168985"
}