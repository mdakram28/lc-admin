{
    "username": "thundersmoker",
    "submission": "class Solution {\npublic:\n    int solve(vector<int>& nums, int k){\n        int n=nums.size(); \n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        int res=0; \n        vector<int>dp2(k+1,-1); \n        vector<map<int,int>>mp(k+1); \n        for(int i=0;i<n;i++){ \n            if(i==0){\n                res++;\n            }\n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    if(dp[i][j]<1+dp2[l]){\n                        dp[i][j]=1+dp2[l];\n                    }\n                   \n                } \n                if(mp[j].count(nums[i])){ \n                   \n                    if(dp[i][j]<1+mp[j][nums[i]]){\n                        dp[i][j]=1+mp[j][nums[i]];\n                    }\n                } \n                res=max(res,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                dp2[j]=max(dp2[j],dp[i][j]); \n                mp[j][nums[i]]=max(mp[j][nums[i]],dp[i][j]); \n            } \n        } \n        return res; \n    }\n    int maximumLength(vector<int>& nums, int k) {\n      return solve(nums,k);\n    }\n};",
    "submit_ts": 1717861825.0
}