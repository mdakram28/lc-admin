{
    "username": "Akshat Tiwari",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<int> zsum(n+1), osum(n+1);\n        for(int i=1; i<=n; i++){\n            zsum[i] = zsum[i-1] + (s[i-1]=='0');\n            osum[i] = i - zsum[i];\n        }\n\n        vector<int> upto(n+1), psum(n+1);\n        for(int i=1; i<=n; i++){\n            long long tr=i, fa=0;\n            while(fa+1<tr){\n                long long mid = (tr+fa)/2;\n                if(min(zsum[i]-zsum[mid-1], osum[i]-osum[mid-1]) <= k)  tr=mid;\n                else    fa = mid;\n            }\n            upto[i] = tr;\n            psum[i] = psum[i-1] + (i-tr+1);\n        }\n\n        vector<long long> out(queries.size());\n        for(int i=0; i<queries.size(); i++){\n            long long l = queries[i][0] + 1, r = queries[i][1] + 1;\n            if(upto[r]<=l){\n                out[i] = (r-l+1) * (r-l+2) / 2;\n            }\n            else{\n                long long tr = l, fa = r;\n                while(tr+1 < fa){\n                    long long mid = (tr+fa)/2;\n                    if(upto[mid]>l) fa=mid;\n                    else    tr=mid;\n                }\n                out[i] = (tr-l+1) * (tr-l+2) / 2;\n                out[i] += psum[r] - psum[fa-1];\n            }\n        }\n        return out;\n    }\n};",
    "submit_ts": "1723953116",
    "subm_id": "1359812777"
}