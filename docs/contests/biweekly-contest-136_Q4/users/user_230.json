{
    "username": "affectionate-galileo7vy",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        road = defaultdict(list)\n        for x,y in edges:\n            road[x].append(y)\n            road[y].append(x)\n\n        n = len(edges) + 1\n\n        # \u6362\u6839dp\n        # init \u4ee5\u521d\u59cb\u8282\u70b9\u4e3a\u8d77\u59cb\u70b9\uff0c\u6c42\u7ed3\u679c\u503c\n        cnt = Counter()\n        # flag\u5f53\u524d\u8282\u70b9\u65f6\u95f4\n        # \u8fd4\u56de\uff0c\u5f53\u524d\u8282\u70b9\u6240\u5728\u5b50\u6811\u9700\u8981\u5168\u6807\u8bb0\u6240\u9700\u65f6\u95f4\n        def dfs(node,last):\n            t = 0\n            for nxt in road[node]:\n                if nxt == last:\n                    continue\n                \n                lt = dfs(nxt,node)\n                # \u5947\u6570\n                if nxt & 1:\n                    t = max(t,lt+1)\n                else:\n                    t = max(t,lt+2)\n            cnt[node] = t\n            return t\n        \n        dfs(0,-1)\n\n        res = [-1] * n\n        # \u5f00\u59cb\u6362\u6839dp\n        def dp(node,last):\n            # \u524d\u4e24\u5927\n            a,b = 0,0\n            for nxt in road[node]:\n                if nxt & 1:\n                    lt = cnt[nxt]+1\n                else:\n                    lt = cnt[nxt]+2\n\n                if lt >= b:\n                    a,b = b,lt\n                elif lt > a:\n                    a = lt\n                    \n            res[node] = b\n            cnt[node] = b\n\n            # \u6362\u6839\n            for nxt in road[node]:\n                if nxt == last:\n                    continue\n                \n                if nxt & 1:\n                    lt = cnt[nxt] + 1\n                else:\n                    lt = cnt[nxt] + 2\n                \n                # node\u8282\u70b9\u503c\u53d8,\u518d\u6362\u6839\n                if lt == b:\n                    tmp = cnt[node]\n                    cnt[node] = a\n                    dp(nxt,node)\n                    # \u56de\u6eaf\n                    cnt[node] = tmp\n                # node\u8282\u70b9\u503c\u4e0d\u53d8,\u76f4\u63a5\u6362\u6839\n                else:\n                    # cnt[node] = b\n                    dp(nxt,node)\n\n\n        dp(0,-1)\n        # res = []\n        # for node in range(n):\n        #     res.append(dfs(node,-1))\n        \n        return res\n                    \n                \n            ",
    "submit_ts": "1722699162",
    "subm_id": "552274383"
}