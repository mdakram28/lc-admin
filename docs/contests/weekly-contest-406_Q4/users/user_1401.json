{
    "username": "itsyashkumar23",
    "submission": "class Solution {\npublic:\n    #define pic pair<int, char>\n    #define ll long long\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        ll x = horizontalCut.size();\n        ll y = verticalCut.size();\n        \n        priority_queue<pic> pq;\n        for (int i = 0; i < y; i++) pq.push({verticalCut[i], 'v'});\n        for (int i = 0; i < x; i++) pq.push({horizontalCut[i], 'h'});\n        \n        long long cnt = 1, cnt2 = 1;  \n        long long ans = 0;\n        \n        while (!pq.empty()) {\n            ll c = pq.top().first;\n            char ch = pq.top().second;\n            pq.pop();\n            \n            if (ch == 'v') {\n                ans += (ll)(c * cnt);\n                cnt2++;\n            } else if(ch == 'h') {\n                ans += (ll)(c * cnt2);\n                cnt++;\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720925932",
    "subm_id": "1320270766"
}