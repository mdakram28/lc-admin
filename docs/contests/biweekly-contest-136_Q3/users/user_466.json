{
    "username": "ho_chung",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ret = 0\n        n_ones_2_guys = 0\n\n        # the 4-guys\n        for r in range(m // 2):\n            for c in range(n // 2):\n                s = grid[r][c] + grid[r][n-1-c] + grid[m-1-r][c] + grid[m-1-r][n-1-c]\n                ret += min(s, 4-s)\n\n        # the 2-guys\n        has_2_guy = False\n        if m % 2 == 1:\n            r = m // 2\n            for c in range(n // 2):\n                s = grid[r][c] + grid[r][n-1-c]\n                candidate = min(s, 2-s)\n                if candidate != 0:\n                    has_2_guy = True\n                ret += candidate\n                n_ones_2_guys += s\n        if n % 2 == 1:\n            c = n // 2\n            for r in range(m // 2):\n                s = grid[r][c] + grid[m-1-r][c]\n                candidate = min(s, 2-s)\n                if candidate != 0:\n                    has_2_guy = True\n                ret += candidate\n                n_ones_2_guys += s\n        # the center guy\n        has_center_guy = False\n        if m % 2 == 1 and n % 2 == 1 and grid[m // 2][n // 2] == 1:\n            has_center_guy = True\n\n        if has_center_guy:\n            ret += 1 # flip center bit\n        if not has_2_guy:\n            # can't adjust the 2 guys, so may need to fix things 2 mod 4\n            if n_ones_2_guys % 4 == 2:\n                ret += 2\n\n        return ret\n        ",
    "submit_ts": "1722697024",
    "subm_id": "1343131295"
}