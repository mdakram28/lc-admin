{
    "username": "hotaery",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> sum(n), diff(n);\n        for (int i = 0; i < n; i++) {\n            sum[i] = (points[i][0] + points[i][1]);\n            diff[i] = (points[i][0] - points[i][1]);\n        }\n            \n        vector<int> sum_idx(n), diff_idx(n);\n        for (int i = 0; i < n; i++) {\n            sum_idx[i] = i;\n            diff_idx[i] = i;\n        }\n        sort(sum_idx.begin(), sum_idx.end(), [&](int i, int j) {\n            if (sum[i] == sum[j]) {\n                return i < j;\n            } \n            return sum[i] < sum[j];\n        });\n        sort(diff_idx.begin(), diff_idx.end(), [&](int i, int j) {\n            if (diff[i] == diff[j]) {\n                return i < j;\n            }\n            return diff[i] < diff[j];\n        });\n        \n        // for (int i = 0; i < n; i++) {\n        //     cout << sum[i] << \", \" << diff[i] << endl;\n        // }\n        // for (int i = 0; i < n; i++) {\n        //     cout << sum_idx[i] << \" \";\n        // }\n        // cout << endl;\n        // for (int i = 0; i < n; i++) {\n        //     cout << diff_idx[i] << \" \";\n        // }\n        // cout << endl;\n        \n        int ans = max(sum[sum_idx.back()] - sum[sum_idx[0]], diff[diff_idx.back()] - diff[diff_idx[0]]);\n        // cout << ans << endl;\n        auto cal = [&](int i) {\n            int left, right;\n            if (sum_idx[0] == i) {\n                left = sum_idx[1];\n            } else {\n                left = sum_idx[0];\n            }\n            if (sum_idx[n - 1] == i) {\n                right = sum_idx[n - 2];\n            } else {\n                right = sum_idx[n - 1];\n            }\n            int ans = sum[right] - sum[left];\n            if (diff_idx[0] == i) {\n                left = diff_idx[1];\n            } else {\n                left = diff_idx[0];\n            }\n            if (diff_idx[n - 1] == i) {\n                right = diff_idx[n - 2];\n            } else {\n                right = diff_idx[n - 1];\n            }\n            ans = max(ans, diff[right] - diff[left]);\n            return ans;\n        };\n        \n        ans = min(ans, cal(sum_idx[0]));\n        ans = min(ans, cal(sum_idx[n - 1]));\n        ans = min(ans, cal(diff_idx[0]));\n        ans = min(ans, cal(diff_idx[n - 1]));\n        return ans;\n    }\n};"
}