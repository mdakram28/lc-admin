{
    "username": "inversionpeter",
    "submission": "//int prefixSums[100001][30];\nint minimum = 2147483647, buffer[100001];\n\nvoid DivideNConquer(vector <int> &numbers, int left, int right, int k) {\n    //cout << left << ' ' << right << '\\n';\n    if (left == right) {\n        minimum = min(minimum, abs(numbers[left] - k));\n        buffer[left] = numbers[left];\n        return;\n    }\n    int middle = (left + right) >> 1, AND = numbers[middle], lower, upper;\n    DivideNConquer(numbers, left, middle, k);\n    DivideNConquer(numbers, middle + 1, right, k);\n    //cout << \"test1\\n\";\n    for (int i = middle; i >= left; --i) {\n        AND &= numbers[i];\n        lower = middle + 1;\n        upper = right;\n        minimum = min(minimum, abs(AND - k));\n        int m;\n        while (lower < upper) {\n            m = (lower + upper) >> 1;\n            minimum = min(minimum, abs((AND & buffer[m]) - k));\n            if ((AND & buffer[m]) > k) {\n                lower = m + 1;\n            }\n            else {\n                upper = m;\n            }\n        }\n        minimum = min(minimum, abs((AND & buffer[lower]) - k));\n    }\n    //cout << \"test2\\n\";\n    AND = numbers[left];\n    for (int i = left; i <= right; ++i) {\n        AND &= numbers[i];\n        minimum = min(minimum, abs(AND - k));\n        buffer[i] = AND;\n    }\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        /*int minimum = 2147483647, AND = nums.back();\n        for (int i = nums.size() - 1; i >= 0; --i) {\n            AND &= nums[i];\n            minimum = min({ minimum, abs(k - AND), abs(k - nums[i]) });\n        }*/\n        minimum = 2147483647;\n        DivideNConquer(nums, 0, nums.size() - 1, k);\n        /*for (int i = 0; i != nums.size(); ++i) {\n            for (int j = 0; j < 30; ++j) {\n                prefixSums[i + 1][j] = prefiSums[i][j] + ((nums[i] & (1 << j)) ? 1 : 0);\n            }\n        }*/\n        return minimum;\n    }\n};\n\n/*\n[1,2,4,5]\n3\n[1,2,1,2]\n2\n[1]\n10\n[5,13,90,92,49]\n10\n[83,73,81,92,35]\n54\n[35,28,86,54,49,72,46]\n13\n*/",
    "submit_ts": "1717300071",
    "subm_id": "1274832917"
}