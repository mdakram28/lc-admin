{
    "username": "lee0560",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        \n        def solve():\n            res = 0\n            mid1, mid2 = n >> 1, m >> 1\n            for i in range(mid1):\n                for j in range(mid2):\n                    c = [0, 0]\n                    c[grid[i][j]] += 1\n                    c[grid[i][m-1-j]] += 1\n                    c[grid[n-1-i][j]] += 1\n                    c[grid[n-1-i][m-1-j]] += 1\n                    res += min(c)\n            odd, even = inf, 0\n            if n & 1:\n                for j in range(mid2):\n                    if grid[mid1][j] != grid[mid1][m-1-j]:\n                        odd = even = min(odd, even) + 1\n                    elif grid[mid1][j]:\n                        odd, even = min(odd + 2, even), min(even + 2, odd)\n                    else:\n                        odd, even = min(odd, even + 2), min(even, odd + 2)\n            if m & 1:\n                for i in range(mid1):\n                    if grid[i][mid2] != grid[n-1-i][mid2]:\n                        odd = even = min(odd, even) + 1\n                    elif grid[i][mid2]:\n                        odd, even = min(odd + 2, even), min(even + 2, odd)\n                    else:\n                        odd, even = min(odd, even + 2), min(even, odd + 2)\n            res += even\n            if (n & 1) and (m & 1):\n                res += grid[mid1][mid2]\n            return res\n        \n        n, m = len(grid), len(grid[0])\n        return solve()",
    "submit_ts": "1722698156",
    "subm_id": "552269606"
}