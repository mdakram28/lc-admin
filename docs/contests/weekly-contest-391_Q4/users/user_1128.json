{
    "username": "ctnya_8135",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<pair<int, int>> s1, s2;\n        int sd, dd, ans = 3e8;\n        for (int i = 0; i < n; i++) {\n            sd = points[i][0] + points[i][1];\n            dd = points[i][0] - points[i][1];\n            s1.insert({sd, dd});\n            s2.insert({dd, sd});\n        }\n        function<void(pair<int, int>)> rc = [&](pair<int, int> cur) {\n            s1.erase(s1.find(cur));\n            s2.erase(s2.find({cur.second, cur.first}));\n            ans = min(ans, max(s1.rbegin()->first - s1.begin()->first, s2.rbegin()->first - s2.begin()->first));\n            s1.insert(cur); s2.insert({cur.second, cur.first});\n        };\n        rc(*s1.begin());\n        rc(*s1.rbegin());\n        rc({s2.begin()->second, s2.begin()->first});\n        rc({s2.rbegin()->second, s2.rbegin()->first});\n        return ans;\n    }\n};"
}