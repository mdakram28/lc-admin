{
    "username": "sidhigrover",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n\n\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        long long height = 0, vertex = 0;\n        long long horizontalPieces = 1, verticalPieces = 1;\n        long long totalCost = 0;\n        \n        while (height < horizontalCut.size() && vertex < verticalCut.size()) {\n            if (horizontalCut[height] > verticalCut[vertex]) {\n                totalCost += (long long)horizontalCut[height] * verticalPieces;\n                horizontalPieces++;\n                height++;\n            } else {\n                totalCost += (long long)verticalCut[vertex] * horizontalPieces;\n                verticalPieces++;\n                vertex++;\n            }\n        }\n        \n      \n        while (vertex < verticalCut.size()) {\n            totalCost += (long long)verticalCut[vertex] * horizontalPieces;\n            vertex++;\n        }\n        while (height < horizontalCut.size()) {\n            totalCost += (long long)horizontalCut[height] * verticalPieces;\n            height++;\n        }\n        \n       \n        return totalCost;\n    }\n};",
    "submit_ts": "1720926117",
    "subm_id": "1320276499"
}