{
    "username": "user9104rY",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        differences = defaultdict(int)\n\n        for i in range(len(nums) // 2):\n            differences[abs(nums[i] - nums[-i - 1])] += 1\n\n        res = float(\"inf\")\n\n        pairs = len(nums) // 2\n\n        for X, count in differences.items():\n            local_res = 0\n\n            if res <= pairs - count:\n                continue\n\n            for i in range(len(nums) // 2):\n                difference = abs(nums[i] - nums[-i - 1])\n\n                if difference == X:\n                    continue\n\n                difference_needed = X - difference\n\n                if (\n                    difference_needed > 0 and\n                    (\n                        max(nums[i], nums[-i - 1]) + difference_needed <= k or\n                        min(nums[i], nums[-i - 1]) - difference_needed >= 0\n                    )\n                ):\n                    local_res += 1\n                elif (\n                    difference_needed < 0 and\n                    (\n                        max(nums[i], nums[-i - 1]) + difference_needed >= 0 or\n                        min(nums[i], nums[-i - 1]) - difference_needed <= k\n                    )\n                ):\n                    local_res += 1\n                else:\n                    local_res += 2\n\n            res = min(res, local_res)\n\n        return res",
    "submit_ts": "1721489547",
    "subm_id": "1327456598"
}