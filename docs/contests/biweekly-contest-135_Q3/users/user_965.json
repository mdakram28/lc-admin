{
    "username": "msa_tanzeel",
    "submission": "\nclass Solution\n{\npublic:\n    int minChanges(vector<int> &v, int k)\n    {\n        int n = v.size();\n        int l = 0, r = n - 1;\n        vector<int> state(k + 5, 0);\n\n        auto add = [&](int i, int j, int val)\n        {\n            // cerr << \"i: \" << i << \" j: \" << j << endl;\n            state[i] += val;\n            state[j + 1] -= val;\n        };\n\n        while (l < r)\n        {\n            int a = v[l++];\n            int b = v[r--];\n            if (a > b)\n                swap(a, b);\n            int diff = b - a;\n            int maxi = max(b, k - b);\n            maxi = max(maxi, a);\n            maxi = max(maxi, k - a);\n            \n            // cout << \"(a,b): (\" << a << \",\" << b  << \") diff: \" << diff << \" maxi: \" << maxi << endl;\n\n            add(0, maxi, 1);\n            if (maxi < k)\n                add(maxi + 1, k, 2);\n\n            if (diff <= maxi)\n                add(diff, diff, -1);\n            else\n                add(diff, diff, -2);\n        }\n        int curr = 0;\n        for (auto &ele : state)\n        {\n            curr += ele;\n            ele = curr;\n        }\n        \n        // for (auto ele : state)\n        //     cout << ele << \" \";\n        return *min_element(begin(state), begin(state)+k+1);\n    }\n};",
    "submit_ts": "1721488701",
    "subm_id": "1327430536"
}