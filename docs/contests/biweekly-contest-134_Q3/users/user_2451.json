{
    "username": "Hs9320",
    "submission": "class Solution {\npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        int n = colors.size(); \n        int count = 0; \n\n        if (k == 1) { \n            return n; \n        } \n\n        int alternatingLength = 1; \n        int index = 1; \n\n        while (index < n + k - 1) { \n            int current = index % n; \n            int previous = (index - 1) % n; \n\n            if (colors[current] != colors[previous]) { \n                alternatingLength++; \n            } else { \n                alternatingLength = 1; \n            } \n\n            if (alternatingLength >= k) { \n                count++; \n            } \n\n            index++; \n        } \n\n        return count; \n    } \n};\n",
    "submit_ts": "1720280559",
    "subm_id": "1311793935"
}