{
    "username": "iiijjj",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int h_segments = 1;\n        int v_segments = 1;\n        long long total_cost = 0;\n        int i = 0, j = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                total_cost += horizontalCut[i] * v_segments;\n                h_segments++;\n                i++;\n            } else {\n                total_cost += verticalCut[j] * h_segments;\n                v_segments++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            total_cost += horizontalCut[i] * v_segments;\n            h_segments++;\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            total_cost += verticalCut[j] * h_segments;\n            v_segments++;\n            j++;\n        }\n\n        return total_cost;\n    }\n};",
    "submit_ts": "1720925901",
    "subm_id": "1320269843"
}