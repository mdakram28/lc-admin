{
    "username": "Wolfester",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int ans = INT_MAX;\n\n        \n        int l = 0;\n        vector<int> count(32, 0);\n        int curr = (1<<30) - 1; \n        \n        for(int i=0;i<n;i++){\n            curr&=nums[i];\n            ans = min(ans, abs(curr-k));\n            \n            //cout<<curr<<\"  \";\n            \n            for(int j=0;j<32;j++){\n                if(((nums[i]>>j) & 1)==0) count[j]++;\n                \n                //cout<<count[j]<<\" \";\n            }\n            \n            if(curr>=k) ans = min(ans, abs(curr-k));\n            else{\n                while(curr<k and l<i){\n                    for(int j=0;j<32;j++){\n                        if(((nums[l]>>j) & 1)==0) count[j]--;\n                        if(count[j]==0) curr|=(1<<j);\n                    }\n                    \n                    ans = min(ans, abs(curr-k));\n                    \n                    l++;\n                }\n                \n                ans = min(ans, abs(curr-k));\n                cout<<curr<<endl;\n            }\n            \n            cout<<endl;\n        }\n        \n        for(auto x : nums) ans = min(ans, abs(x - k));\n        cout<<endl<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1717298776",
    "subm_id": "1274790844"
}