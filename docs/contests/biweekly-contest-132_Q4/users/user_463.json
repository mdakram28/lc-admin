{
    "username": "alex391a",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = [defaultdict(int) for _ in range(k + 2)]\n        mx = [-1 for i in range(k + 1)]\n        mx2 = [-1 for i in range(k + 1)]\n        # for i in range(k + 1):\n        #     dp[i][-1] = -1e10\n        \n        for i in range(n):\n            for j in range(k, 0, -1):\n                if mx[j-1] == nums[i]:\n                    dp[j][nums[i]] = max(dp[j][nums[i]] + 1, dp[j-1][mx2[j-1]] + 1)\n                else:\n                    dp[j][nums[i]] = max(dp[j][nums[i]] + 1, dp[j-1][mx[j-1]] + 1)\n                if dp[j][nums[i]] > dp[j][mx[j]] or mx[j] == -1:\n                    mx2[j] = mx[j]\n                    mx[j] = nums[i]\n                elif dp[j][nums[i]] > dp[j][mx2[j]]  or mx2[j] == -1:\n                    mx2[j] = nums[i]\n            j = 0\n            if mx[j-1] == nums[i]:\n                dp[j][nums[i]] = dp[j][nums[i]] + 1\n            else:\n                dp[j][nums[i]] = dp[j][nums[i]] + 1\n            if dp[j][nums[i]] > dp[j][mx[j]] or mx[j] == -1:\n                mx2[j] = mx[j]\n                mx[j] = nums[i]\n            elif dp[j][nums[i]] > dp[j][mx2[j]] or mx2[j] == -1:\n                mx2[j] = nums[i]\n        \n        # print(dp)\n        res = 0\n        for i in dp[-2]:\n            res = max(res, dp[-2][i])\n        return res\n                \n                    ",
    "submit_ts": 1717861702.0
}