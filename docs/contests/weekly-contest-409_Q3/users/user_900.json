{
    "username": "zbq97",
    "submission": "class TreeArr {\npublic:\n    int n;\n    vector<int> arr; // 1, [n, 2n)\n    TreeArr(int l) {\n        n = 1;\n        while (n < l) {\n            n *= 2;\n        }\n        arr = vector<int>(2 * n);\n    }\n\n    int get(int i) {\n        i += n;\n        int sum = 0;\n        while (i) {\n            sum += arr[i];\n            i >>= 1;\n        }\n        return sum;\n    }\n\n    void add(int i, int j, int d) {\n        i += n;\n        j += n;\n        while (i < j) {\n            if (i % 2 == 1) {\n                arr[i] += d;\n                i++;\n            }\n            if (j % 2 == 0) {\n                arr[j] += d;\n                j--;\n            }\n            i >>= 1;\n            j >>= 1;\n        }\n\n        if (i == j) {\n            arr[i] += d;\n        }\n    }\n};\n\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        TreeArr treeArr(n);\n        TreeArr isInvalid(n);\n        vector<int> res;\n        for (auto& q : queries) {\n            int i = q[0], j = q[1];\n\n            if (i + 1 == j || isInvalid.get(i) || isInvalid.get(j)) {\n                res.push_back(n - 1 - treeArr.get(n - 1));\n                continue;\n            }\n            isInvalid.add(i + 1, j - 1, 1);\n\n            int d = (j - treeArr.get(j)) - (i - treeArr.get(i));\n            //cout << j - treeArr.get(j) << \"   \" << i - treeArr.get(i) << endl;\n            treeArr.add(j, n - 1, d - 1);\n            res.push_back(n - 1 - treeArr.get(n - 1));\n        }\n        return res;\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "submit_ts": "1722743497",
    "subm_id": "552351147"
}