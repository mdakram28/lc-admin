{
    "username": "fireyyouth",
    "submission": "constexpr int INF = numeric_limits<int>::max();\nstruct SegTree {\n    vector<int> heap;\n    int size;\n    int ih;\n    SegTree(int s) {\n        ih = ceil(log2(s));\n        size = s;\n        heap.assign(1 << (ih + 1), INF);\n    }\n    void update(int i, int v) {\n        int x = (1 << ih) - 1 + i;\n        heap[x] = v;\n        x = (x - 1) / 2;\n        while (1) {\n            heap[x] = heap[2 * x + 1] & heap[2 * x + 2];\n            if (x == 0) {\n                break;\n            }\n            x = (x - 1) / 2;\n        }\n    }\n    int f(int x, int p, int q, int i, int j) {\n        if (q < i || j < p) {\n            return INF;\n        }\n        if (i <= p && q <= j) {\n            return heap[x];\n        }\n        return f(2 * x + 1, p, (p + q) / 2, i, j) & f(2 * x + 2, (p + q) / 2 + 1, q, i, j);\n    }\n    int range_and(int i, int j) {\n        return f(0, 0, (1 << ih) - 1, i, j);\n    }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int x) {\n        SegTree segtree(a.size() + 1);\n        for (int i = 0; i < a.size(); ++i) {\n            segtree.update(i, a[i]);\n        }\n        \n        int n = a.size();\n\n        int t = numeric_limits<int>::max();\n        int i = n - 1;\n            \n        while (i >= 0) {\n            t &= a[i];\n            if (t <= x) {\n                break;\n            }\n            --i;\n        }\n        if (t > x) {\n            return 0;\n        }\n        \n        int le = numeric_limits<int>::max();\n        int j = i;\n        while (j < n) {\n            le &= a[j];\n            if (le <= x) {\n                break;\n            }\n            ++j;\n        }\n\n        \n        int lt = numeric_limits<int>::max();\n        int k = i;\n        while (k < n) {\n            lt &= a[k];\n            if (lt < x) {\n                break;\n            }\n            ++k;\n        }\n\n\n        long long r = k - j;\n        //printf(\"%d %d %d\\n\", i, j, k);\n        \n        for (--i; i >= 0; --i) {\n            while (j > i && segtree.range_and(i, j - 1) <= x) {\n                --j;\n            }\n \n            while (k > i && segtree.range_and(i, k - 1) < x) {\n                --k;\n            }    \n            \n            //printf(\"%d %d %d\\n\", i, j, k);\n            r += k - j;    \n        }\n        return r;\n    }\n};",
    "submit_ts": "1720280985",
    "subm_id": "544574101"
}