{
    "username": "yh157612",
    "submission": "impl Solution {\n    pub fn ways_to_reach_stair(k: i32) -> i32 {\n        let k = k as i64;\n        let mut result = 0;\n        let mut i = 0;\n        // 2^i - i - 1 ~ 2^i\n        while k >= (1_i64 << i) - i - 1 {\n            if k >= (1_i64 << i) - i - 1 && k <= 1_i64 << i {\n                let mut diff = (1_i64 << i) - k;\n                // C(i+1, diff)\n                if diff > i + 1 - diff {\n                    diff = i + 1 - diff;\n                }\n                let mut comb = 1;\n                for j in 0..diff {\n                    comb *= (i + 1) - j;\n                    comb /= 1 + j;\n                }\n                result += comb as i32;\n            }\n            i += 1;\n        }\n        result\n    }\n}",
    "submit_ts": 1716088781.0
}