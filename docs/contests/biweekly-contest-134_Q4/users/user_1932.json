{
    "username": "Bhanu1146",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long count = 0;\n        Map<Long, Long> prev = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> curr = new HashMap<>();\n            if (nums[i] == k) {\n                ++count;\n            }\n            curr.put((long) nums[i], 1L);\n\n            for (Map.Entry<Long, Long> entry : prev.entrySet()) {\n                long v = entry.getKey();\n                long f = entry.getValue();\n                long r = v & nums[i];\n                if (r == k) {\n                    count += f;\n                }\n                curr.put(r, curr.getOrDefault(r, 0L) + f);\n            }\n\n            prev = curr;\n        }\n\n        return count;\n    }\n}\n",
    "submit_ts": "1720280707",
    "subm_id": "1311799225"
}