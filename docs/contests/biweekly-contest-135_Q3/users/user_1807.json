{
    "username": "MakarenkoStepan",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        arr = [] # (X, max_X)\n        \n        #count pairs\n        for i in range(n // 2):\n            arr.append((abs(nums[i] - nums[n - 1 - i]), max(max(nums[i], nums[n - 1 - i]), k - min(nums[i], nums[n - 1 - i]))))\n        \n        x_count = defaultdict(int)\n        less_eq_than_x = [0] * (k + 1)\n        ans = float('inf')\n        \n        for el in arr:\n            x_count[el[0]] += 1\n            less_eq_than_x[el[1]] += 1\n        \n        for i in range(1, k + 1):\n            less_eq_than_x[i] += less_eq_than_x[i - 1]\n        \n        for x, c in x_count.items():\n            if x != 0:\n                ans = min(ans, n // 2 - c + less_eq_than_x[x-1] )\n            else:\n                ans = min(ans, n // 2 - c)\n        \n        # print(x_count)\n        # print(arr)\n        return ans\n            \n            \n        ",
    "submit_ts": "1721489538",
    "subm_id": "1327456349"
}