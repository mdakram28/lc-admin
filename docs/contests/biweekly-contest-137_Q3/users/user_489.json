{
    "username": "\u4e09\u6839\u5927\u7af9\u7aff",
    "submission": "import java.util.Arrays;\nimport java.util.Comparator;\n\nclass Solution {\n    void update(int[][] a, int j, int x) {\n        Arrays.sort(a, Comparator.comparingInt(o -> o[1]));\n        for (int i = 0; i < 3; ++i) {\n            int[] p = a[i];\n            if (p[0] == j) {\n                if (p[1] < x) {\n                    a[i] = new int[] { j, x };\n                }\n                return;\n            }\n        }\n        for (int i = 0; i < 3; ++i) {\n            int[] p = a[i];\n            if (p[1] < x) {\n                a[i] = new int[] { j, x };\n                return;\n            }\n        }\n    }\n    public long maximumValueSum(int[][] board) {\n        int n = board.length, m = board[0].length;\n        int[][] a = new int[3][2];\n        a[0][0] = 0;\n        a[1][0] = 1;\n        a[2][0] = 2;\n        a[0][1] = board[0][0];\n        a[1][1] = board[0][1];\n        a[2][1] = board[0][2];\n        int[][][] up = new int[n][3][2];\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                update(a, j, board[i][j]);\n            }\n            for (int j = 0; j < 3; ++j) {\n                int[] p = a[j];\n                up[i][j][0] = p[0];\n                up[i][j][1] = p[1];\n            }\n        }\n        a[0][0] = 0;\n        a[1][0] = 1;\n        a[2][0] = 2;\n        a[0][1] = board[n - 1][0];\n        a[1][1] = board[n - 1][1];\n        a[2][1] = board[n - 1][2];\n        int[][][] down = new int[n][3][2];\n        for (int i = n - 1; i >= 0; --i) {\n            for (int j = 0; j < m; ++j) {\n                update(a, j, board[i][j]);\n            }\n            for (int j = 0; j < 3; ++j) {\n                int[] p = a[j];\n                down[i][j][0] = p[0];\n                down[i][j][1] = p[1];\n            }\n        }\n        // for (int i = 0; i < n; ++i) {\n        //     System.out.println(\"\u7b2c\" + i + \"\u884c\");\n        //     for (int j = 0; j < 3; ++j) {\n        //         System.out.print(\"(\" + up[i][j][0] + \", \" + up[i][j][1] + \") \");\n        //     }\n        //     System.out.println();\n        // }\n        long ans = Long.MIN_VALUE;\n        for (int i = 1; i < n - 1; ++i) {\n            for (int j = 0; j < m; ++j) {\n                int[][] x = up[i - 1], y = down[i + 1];\n                for (int _i = 0; _i < 3; ++_i) {\n                    for (int _j = 0; _j < 3; ++_j) {\n                        int[] p1 = x[_i], p2 = y[_j];\n                        if (p1[0] != p2[0] && p1[0] != j && p2[0] != j) {\n                            ans = Math.max(ans, (long) p1[1] + p2[1] + board[i][j]);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1723909689",
    "subm_id": "556337511"
}