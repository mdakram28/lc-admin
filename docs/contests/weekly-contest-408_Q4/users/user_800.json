{
    "username": "jenting8173",
    "submission": "/**\n * @param {number} X\n * @param {number} Y\n * @param {number[][]} circles\n * @return {boolean}\n */\nvar canReachCorner = function(X, Y, circles) {\n    const adj = {}\n\n    const topSet = new Set()\n    const rightSet = new Set()\n\n    for(let i = 0; i < circles.length; i++) {\n        const [x, y, r] = circles[i]\n\n        if(y + r >= Y || x - r <= 0) {\n            topSet.add(i)\n        }\n        if(x + r >= X || y - r <= 0) {\n            rightSet.add(i)\n        }\n    }\n\n    const queue = []\n\n    for(const num of topSet) {\n        if(rightSet.has(num)) return false\n        queue.push(num)\n    }\n\n    for(let i = 0; i < circles.length - 1; i++) {\n        for(let j = i + 1; j < circles.length; j++) {\n            const [x1, y1, r1] = circles[i]\n            const [x2, y2, r2] = circles[j]\n\n            const dist = Math.sqrt(Math.abs(x1 - x2) ** 2 + Math.abs(y1 - y2) ** 2)\n            if(r1 + r2 >= dist) {\n                adj[i] = adj[i] || []\n                adj[i].push(j)\n                adj[j] = adj[j] || []\n                adj[j].push(i)\n            }\n        }\n    }\n\n    const visited = new Set()\n\n    while(queue.length) {\n        const node = queue.shift()\n\n        if(rightSet.has(node)) return false\n        visited.add(node)\n\n        if(adj[node] != null) {\n            for(const nei of adj[node]) {\n                if(!visited.has(nei)) {\n                    queue.push(nei)\n                    visited.add(nei)\n                }\n            }\n        }\n    }\n\n    return true\n};",
    "submit_ts": "1722138056",
    "subm_id": "1335780951"
}