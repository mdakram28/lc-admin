{
    "username": "og_",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        vector<int> s(n), d(n);\n        for(int i = 0; i < n; i++){\n            s[i] = p[i][0] + p[i][1];\n            d[i] = p[i][0] - p[i][1];\n        }\n        \n        sort(s.begin(), s.end());\n        sort(d.begin(), d.end());\n        \n        int mini = INT_MAX;\n        \n        for(int i = 0; i < n; i++){\n            int l1 = 0, l2 = 0, r1 = n-1, r2 = n-1;\n            \n            if(s[l1] == p[i][0] + p[i][1]) l1++;\n            \n            if(s[r1] == p[i][0] + p[i][1]) r1--;\n            \n            if(d[l2] == p[i][0] - p[i][1]) l2++;\n            \n            if(d[r2] == p[i][0] - p[i][1]) r2--;\n            \n            mini = min(mini, max( s[r1]-s[l1], d[r2]-d[l2] ));\n        }\n        \n        return mini;\n    }\n};"
}