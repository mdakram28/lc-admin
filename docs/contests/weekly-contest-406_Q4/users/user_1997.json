{
    "username": "sai_vamsi1438",
    "submission": "class Solution {\npublic: \n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    \n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        long long h = 0, v = 0; \n        long long hCount = 1, vCount = 1; \n        long long totalCost = 0;\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                totalCost += horizontalCut[h] * vCount;\n                hCount++;\n                h++;\n            } else {\n                totalCost += verticalCut[v] * hCount;\n                vCount++;\n                v++;\n            }\n        }\n\n        while (h < horizontalCut.size()) {\n            totalCost += horizontalCut[h] * vCount;\n            hCount++;\n            h++;\n        }\n\n        while (v < verticalCut.size()) {\n            totalCost += verticalCut[v] * hCount;\n            vCount++;\n            v++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926277",
    "subm_id": "1320281366"
}