{
    "username": "ye-he-hua-jue-lei",
    "submission": "const int N = 1E5 + 10;\nclass Solution {\n    int n, a[N], cnt[N][32];\n    \n    int check(int l, int r) {\n        int ans = 0;\n        for (int i = 0; i < 32; i++) {\n            if (cnt[r][i] - cnt[l - 1][i] == r - l + 1) {\n                ans |= 1 << i;\n            }\n        }\n        return ans;\n    }\n    \npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        for (int i = 0; i < nums.size(); i++) {\n            a[i + 1] = nums[i];\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < 32; j++) {\n                cnt[i][j] = cnt[i - 1][j];\n                if (a[i] >> j & 1) {\n                    cnt[i][j]++;\n                }\n            }\n        }\n        long long ans = 0;\n        for (int i = 1; i <= n; i++) {\n            int l = i, r = n;\n            while (l < r) {\n                int mid = l + r >> 1;\n                if (check(i, mid) <= k) {\n                    r = mid;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            if (check(i, r) <= k) {\n                int L = r;\n                l = i, r = n;\n                while (l < r) {\n                    int mid = l + r + 1 >> 1;\n                    if (check(i, mid) >= k) {\n                        l = mid;\n                    } else {\n                        r = mid - 1;\n                    }\n                }\n                if (check(i, r) >= k) {\n                    int R = r;\n                    if (check(i, L) == k) {\n                        ans++;\n                    }\n                    if (check(i, R) == k && L != R) {\n                        ans++;\n                    }\n                    ans += max(0, R - L - 1);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280616",
    "subm_id": "544572663"
}