{
    "username": "7760764910",
    "submission": "class Solution {\npublic:\nvector<vector<int>>v;\n    bool dfs(int node,vector<int>adj[],vector<int>&vis,vector<vector<int>>&circles,\n    int X,int Y,vector<vector<int>>vtr){\n        vis[node]=1;\n        vtr.push_back(circles[node]);\n        if(circles[node][0]<=circles[node][2] ||\n        Y-circles[node][1]<=circles[node][2]){\n            v=vtr;\n            return 1;\n        }\n        bool ans=0;\n        for(auto j:adj[node]){\n            if(!vis[j]){\n                ans|=dfs(j,adj,vis,circles,X,Y,vtr);\n            }\n        }\n        return ans;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        vector<int>adj[1001];\n        for(int i=0;i<circles.size();i++){\n            for(int j=0;j<circles.size();j++){\n                long dist=1LL*abs(circles[i][0]-circles[j][0])*abs(circles[i][0]-circles[j][0]);\n                dist+=1LL*abs(circles[i][1]-circles[j][1])*abs(circles[i][1]-circles[j][1]);\n                long dist2=1LL*(circles[i][2]+circles[j][2])*(circles[i][2]+circles[j][2]);\n                if(dist<=dist2){\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        for(int i=0;i<circles.size();i++){\n            if(circles[i][1]<=circles[i][2] || X-circles[i][0]<=circles[i][2]){\n                vector<int>vis(1001,0);\n                vector<vector<int>>vtr;\n                bool temp=dfs(i,adj,vis,circles,X,Y,vtr);\n                if(temp){\n                    for(int i=0;i<v.size();i++){\n                        cout<<v[i][0]<<\" \"<<v[i][1]<<\"\\n\";\n                    }\n                    return 0;\n                }\n            }\n        }\n        return 1;\n    }\n};",
    "submit_ts": "1722136940",
    "subm_id": "1335749430"
}