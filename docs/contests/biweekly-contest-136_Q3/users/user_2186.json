{
    "username": "m-d-nabeel",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int flips = 0;\n\n        if (n % 2 == 1 && m % 2 == 1) {\n            flips += (grid[n / 2][m / 2] == 1) ? 1 : 0;\n        }\n\n        vector<int> cnt(3, 0);\n        processMiddleRows(grid, n, m, cnt);\n        processMiddleCols(grid, n, m, cnt);\n\n        if (cnt[2] % 2 == 1) {\n            flips += (cnt[1] > 0) ? cnt[1] : 2;\n        } else {\n            flips += cnt[1];\n        }\n\n        flips += processCorners(grid, n, m);\n        \n        return flips;\n    }\n\nprivate:\n    void processMiddleRows(const vector<vector<int>>& g, int n, int m, vector<int>& cnt) {\n        if (n % 2 == 1) {\n            int left = 0, right = m - 1;\n            while (left < right) {\n                int sum = g[n / 2][left] + g[n / 2][right];\n                cnt[sum]++;\n                left++;\n                right--;\n            }\n        }\n    }\n\n    void processMiddleCols(const vector<vector<int>>& g, int n, int m, vector<int>& cnt) {\n        if (m % 2 == 1) {\n            int top = 0, bottom = n - 1;\n            while (top < bottom) {\n                int sum = g[top][m / 2] + g[bottom][m / 2];\n                cnt[sum]++;\n                top++;\n                bottom--;\n            }\n        }\n    }\n\n    int processCorners(const vector<vector<int>>& g, int n, int m) {\n        int flips = 0;\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = g[i][j];\n                int b = g[n - 1 - i][j];\n                int c = g[i][m - 1 - j];\n                int d = g[n - 1 - i][m - 1 - j];\n\n                int sum = a + b + c + d;\n\n                if (sum != 0 && sum != 4) {\n                    flips += min(sum, 4 - sum);\n                }\n            }\n        }\n        return flips;\n    }\n};\n",
    "submit_ts": "1722699406",
    "subm_id": "1343210655"
}