{
    "username": "njucser",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k1) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<pair<int, int>> ors; // \u6309\u4f4d\u4e0e\u7684\u503c + \u8be5\u503c\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\n        for (int i = n - 1; i >= 0; --i) {\n            ors.emplace_back(0xFFFFFFFF, 1);\n            ors[0].first &= nums[i];\n            int k = 0;\n            for (int j = 1; j < ors.size(); ++j) {\n                ors[j].first &= nums[i];\n                if (ors[k].first == ors[j].first) {\n                    ors[k].second += ors[j].second;\n                }\n                else ors[++k] = ors[j];\n            }\n            ors.resize(k + 1);\n            for (int i = 0; i < ors.size(); i++) {\n                if (ors[i].first == k1) ans += ors[i].second;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277136",
    "subm_id": "544554706"
}