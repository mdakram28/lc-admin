{
    "username": "vamshi_2525",
    "submission": "class Solution {\npublic:\n    \n     vector<int> dfs(int u, int p, vector<int> adj[], vector<vector<int>> &h){\n        \n        int offset=(u%2==0?2:1);\n        if(u==0) offset=0;\n        int mx1=offset, mx2=offset;\n         \n        for(auto e:adj[u]){\n            if(e==p) continue;\n            int hc=offset+dfs(e,u,adj,h)[0];\n            if(hc>mx2){\n                swap(hc,mx2);\n                if(mx2>mx1)\n                  swap(mx1,mx2);\n            }\n        }\n        return h[u]={mx1,mx2};\n    }\n    \n    \n     void dpp(int u, int p, vector<int> adj[], vector<vector<int>> &h){\n            if(p!=-1){\n                h[u][0]-=(u%2==0?2:1);\n                h[u][1]-=(u%2==0?2:1);\n                int best=h[p][0]+(p%2==0?2:1);\n                if(h[u][0]+(u%2==0?2:1)==h[p][0]) best=h[p][1]+(p%2==0?2:1);\n                if(h[u][1]<best){\n                    swap(h[u][1],best);\n                    if(h[u][0]<h[u][1])\n                        swap(h[u][0],h[u][1]);\n                }\n            }\n\n        for(auto e:adj[u]){\n            if(e==p) continue;\n            dpp(e,u,adj,h);\n        }\n\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int es=edges.size();\n        int n=es+1;\n        vector<int> adj[n+1];\n        for(auto e:edges){\n            adj[e[0]].push_back(e[1]);\n            adj[e[1]].push_back(e[0]);\n        }  \n        \n        vector<vector<int>> h(n);\n        dfs(0,-1, adj,h);\n        \n        // for(auto e:h) cout<<e[0]<<\" \"<<e[1]<<\"\\n\";\n        // cout<<\"done \\n\";\n        // h[0][0]-=2; h[0][1]-=2;\n        dpp(0, -1, adj, h);\n        \n        vector<int> ans;\n        for(int i=0;i<n;i++){\n            // if(i%2==0) ans.push_back(h[i][0]-2);\n            // else ans.push_back(h[i][0]-1);\n            ans.push_back(h[i][0]);\n        }\n        \n        return ans;\n    }\n};\n\n\n\n\n\n\n\n\n//     vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {\n//         vector<int> adj[n+1];\n//         for(auto e:edges){\n//             adj[e[0]].push_back(e[1]);\n//             adj[e[1]].push_back(e[0]);\n//         }\n\n//         vector<vector<int>> h(n);\n//         dfs(0,-1, adj,h);\n//         for(auto e:h) cout<<e[0]<<\" \"<<e[1]<<\"\\n\";\n//         cout<<\"done \\n\";\n\n//         dpp(0, -1, adj, h);\n//         map<int,vector<int>> mp;\n\n//         for(auto e:h) cout<<e[0]<<\" \"<<e[1]<<\"\\n\";\n//         cout<<\"\\n\";\n\n//         for(int i=0;i<n;i++){\n//             mp[h[i][0]].push_back(i);\n//         }\n\n//         return (mp.begin())->second;\n\n//         return {-1};\n\n\n//     }",
    "submit_ts": "1722700578",
    "subm_id": "1343246210"
}