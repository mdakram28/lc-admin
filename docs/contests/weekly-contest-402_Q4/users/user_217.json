{
    "username": "happy-hypatiaj5e",
    "submission": "func countOfPeaks(nums []int, queries [][]int) []int {\n\tfwt := newFenwickTree(len(nums))\n\tfor i := 1; i < len(nums)-1; i++ {\n\t\tif nums[i] > nums[i-1] && nums[i] > nums[i+1] {\n\t\t\tfwt.update(i+1, 1)\n\t\t}\n\t}\n\tres := []int{}\n\tfor _, query := range queries {\n\t\tif query[0] == 1 {\n\t\t\tl, r := query[1], query[2]\n            res = append(res, max(0, fwt.query(r)-fwt.query(l+1)))\n\t\t} else {\n\t\t\ti, v := query[1], query[2]\n\t\t\tif i > 0 && i < len(nums)-1 {\n\t\t\t\tif nums[i] > nums[i-1] && nums[i] > nums[i+1] {\n\t\t\t\t\tfwt.update(i+1, -1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif i-1 > 0 && i-1 < len(nums)-1 {\n\t\t\t\tif nums[i-1] > nums[i-2] && nums[i-1] > nums[i] {\n\t\t\t\t\tfwt.update(i, -1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif i+1 > 0 && i+1 < len(nums)-1 {\n\t\t\t\tif nums[i+1] > nums[i] && nums[i+1] > nums[i+2] {\n\t\t\t\t\tfwt.update(i+2, -1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tnums[i] = v\n\t\t\tif i > 0 && i < len(nums)-1 {\n\t\t\t\tif nums[i] > nums[i-1] && nums[i] > nums[i+1] {\n\t\t\t\t\tfwt.update(i+1, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif i-1 > 0 && i-1 < len(nums)-1 {\n\t\t\t\tif nums[i-1] > nums[i-2] && nums[i-1] > nums[i] {\n\t\t\t\t\tfwt.update(i, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif i+1 > 0 && i+1 < len(nums)-1 {\n\t\t\t\tif nums[i+1] > nums[i] && nums[i+1] > nums[i+2] {\n\t\t\t\t\tfwt.update(i+2, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn res\n}\n\ntype fenwickTree struct {\n\ttree []int\n}\n\nfunc newFenwickTree(n int) *fenwickTree {\n\treturn &fenwickTree{\n\t\ttree: make([]int, n+1),\n\t}\n}\n\nfunc (f *fenwickTree) update(i, delta int) {\n\tfor i < len(f.tree) {\n\t\tf.tree[i] += delta\n\t\ti += i & -i\n\t}\n}\n\nfunc (f *fenwickTree) query(i int) int {\n\tres := 0\n\tfor i > 0 {\n\t\tres += f.tree[i]\n\t\ti -= i & -i\n\t}\n\treturn res\n}",
    "submit_ts": "1718506216",
    "subm_id": "539773550"
}