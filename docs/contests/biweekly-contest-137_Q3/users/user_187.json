{
    "username": "palebluedot",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        long ans = (long) Long.MIN_VALUE;\n        int m = board.length, n = board[0].length;\n        List<int[]> idxs = new ArrayList<>(m * n);\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                idxs.add(new int[]{i, j, board[i][j]});  // \u5b58\u50a8\u884c\u7d22\u5f15\u3001\u5217\u7d22\u5f15\u548c\u5bf9\u5e94\u7684\u503c\n            }\n        }\n        Collections.sort(idxs, (a, b) -> Integer.compare(b[2], a[2]));  // \u6bd4\u8f83\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0c\u5373\u68cb\u76d8\u503c\n        int feasibleJ = m * n, feasibleK = m * n;\n        boolean first = false;\n        for (int i = 0; i < m * n; i++) {\n            // if (i >= feasibleJ) break;\n            for (int j = i + 1; j < m * n; j++) {\n                if (j >= feasibleK) break;\n                if (idxs.get(i)[0] == idxs.get(j)[0] || idxs.get(i)[1] == idxs.get(j)[1]) continue;\n                for (int k = j + 1; k < m * n; k++) {\n                    if (idxs.get(k)[0] == idxs.get(i)[0] || idxs.get(k)[1] == idxs.get(i)[1]\n                    || idxs.get(k)[0] == idxs.get(j)[0] || idxs.get(k)[1] == idxs.get(j)[1]) continue;\n                    if (!first) feasibleJ = j; feasibleK = k; first = true;\n                    ans = Math.max(ans, (long)idxs.get(i)[2] + idxs.get(j)[2] + idxs.get(k)[2]);\n                    break;\n                }\n            }\n        }\n        return ans;\n        // for (int i1 = 0; i1 < m; i1++) {\n        //     for (int j1 = 0; j1 < n; j1++) {\n        //         for (int i2 = 0; i2 < m; i2++) {\n        //             if (i2 == i1) continue;\n        //             for (int j2 = 0; j2 < n; j2++) {\n        //                 if (j2 == j1) continue;\n        //                 for (int i3 = 0; i3 < m; i3++) {\n        //                     if (i3 == i2 || i3 == i1) continue;\n        //                     for (int j3 = 0; j3 < n; j3++) {\n        //                         if (j3 == j1 || j3 == j2) continue;\n        //                         ans = Math.max(ans, (long)board[i1][j1] + board[i2][j2] + board[i3][j3]);\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        // }\n        // return ans;\n    }\n}",
    "submit_ts": "1723907921",
    "subm_id": "556328228"
}