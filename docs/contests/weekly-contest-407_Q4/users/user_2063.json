{
    "username": "suman_2708",
    "submission": "// class Solution {\n// public:\n//     long long minimumOperations(vector<int>& nums, vector<int>& target) {\n//          int n = nums.size();\n//         std::vector<int> diff(n, 0);\n//         for (int i = 0; i < n; ++i) {\n//             diff[i] = target[i] - nums[i];\n//         }\n\n//         int count=0;\n//         for(int i=0;i<n;i++){\n//             if(diff[i]>0){\n                \n//             }\n//         }\n        \n//     }\n// };\n\n// class Solution {\n// public:\n//     long long minimumOperations(std::vector<int>& nums, std::vector<int>& target) {\n//         int n = nums.size();\n//         std::vector<int> diff(n, 0);\n        \n//         // Calculate the difference array\n//         for (int i = 0; i < n; ++i) {\n//             diff[i] = target[i] - nums[i];\n//         }\n        \n//         long long operations = 0;\n//         int previous = 0;\n        \n//         // Count operations based on differences between contiguous segments\n//         for (int i = 0; i < n; ++i) {\n//             if (diff[i] != previous) {\n//                 operations += std::abs(diff[i] - previous);\n//                 previous = diff[i];\n//             }\n//         }\n        \n//         return operations;\n//     }\n// };\n\n\n\n\n\n\n\nclass Solution {\npublic:\n     long long minimumOperations(const std::vector<int>& nums, const std::vector<int>& target) {\n        int length = nums.size();\n        std::vector<int> differences(length);\n\n        for (int index = 0; index < length; ++index) {\n            differences[index] = target[index] - nums[index];\n        }\n\n        long long totalSteps = 0;\n        int previousDifference = 0;\n\n  \n        for (int index = 0; index < length; ++index) {\n            int currentDifference = differences[index];\n            \n\n            if (index == 0 || (previousDifference > 0 && currentDifference > 0) || (previousDifference < 0 && currentDifference < 0)) {\n                int stepsRequired = std::abs(currentDifference) - std::abs(previousDifference);\n                if (stepsRequired > 0) {\n                    totalSteps += stepsRequired;\n                }\n            } else {\n       \n                totalSteps += std::abs(currentDifference);\n            }\n            previousDifference = currentDifference;\n        }\n\n        return totalSteps;\n    }\n};",
    "submit_ts": "1721533947",
    "subm_id": "1328020207"
}