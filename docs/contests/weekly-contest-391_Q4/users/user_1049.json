{
    "username": "its7arc",
    "submission": "#include<bits/stdc++.h>\n\nclass Solution {\npublic:\n    \n    vector<int> max_dist(vector<vector<int>> &arr, int n){\n        int i,j;\n        \n        vector<pair<int,int>> sum(n), diff(n);\n        for (int i = 0; i < n; i++) {\n            sum[i] = make_pair(arr[i][0] + arr[i][1], i);\n            diff[i] = make_pair(arr[i][0] - arr[i][1], i);\n        }\n\n        // Sorting both the vectors\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n\n        int sum_diff = sum.back().first - sum.front().first;\n        int diff_diff = diff.back().first - diff.front().first;\n        \n        if(sum_diff >= diff_diff) return vector<int>({sum_diff, sum.front().second, sum.back().second});\n        return vector<int>({diff_diff, diff.front().second, diff.back().second});\n    }\n    \n    \n    int minimumDistance(vector<vector<int>>& arr) {\n        int i,j; int n = int(arr.size()); if(n < 3) return -1;\n        \n        vector<int> dist = max_dist(arr, n);\n        \n        vector<vector<int>> tmp; \n        \n        for(i = 0; i < n; i++) if(i != dist[1]){ tmp.push_back(arr[i]);}\n        vector<int> dist2 = max_dist(tmp, n-1);\n        \n        tmp = vector<vector<int>>(); \n        for(i = 0; i < n; i++) if(i != dist[2]){ tmp.push_back(arr[i]);}\n        vector<int> dist3 = max_dist(tmp, n-1);\n        \n        return min({dist[0], dist2[0], dist3[0]});\n        \n    }\n};\n"
}