{
    "username": "HMETAO",
    "submission": " class Solution {\n        public String check(int n, int len, int k) {\n            int[] w = new int[n];\n            w[0] = 1 % k;\n            for (int i = 1; i < n; i++) {\n                w[i] = (w[i - 1] * 10) % k;\n            }\n            char[] s = new char[n];\n            Arrays.fill(s, '9');\n            for (int i = 0; i < len; i++) {\n                s[i] = s[n - i - 1] = '8';\n            }\n\n            int midIndex = n / 2;\n            int currentSum = 0;\n            for (int i = 0; i < n; i++) {\n                if (n % 2 == 0 && (i == midIndex - 1 || i == midIndex)) continue;\n                if (n % 2 != 0 && i == midIndex) continue;\n                currentSum = (currentSum + w[i] * (s[i] - '0')) % k;\n            }\n\n            if (n % 2 == 0) {\n                return findone(s, w, midIndex, currentSum, k);\n            } else {\n                return findTwo(s, w, midIndex, currentSum, k);\n            }\n        }\n\n\n        private String findone(char[] s, int[] w, int midIndex, int currentSum, int k) {\n            int x1 = midIndex - 1;\n            for (int mid = 9; mid >= 0; mid--) {\n                int val = (currentSum + mid * w[x1] + mid * w[midIndex]) % k;\n                if (val == 0) {\n                    s[x1] = s[midIndex] = (char) (mid + '0');\n                    return new String(s);\n                }\n            }\n            return \"\";\n        }\n\n        private String findTwo(char[] s, int[] w, int midIndex, int currentSum, int k) {\n            for (int mid = 9; mid >= 0; mid--) {\n                int val = (currentSum + mid * w[midIndex]) % k;\n                if (val == 0) {\n                    s[midIndex] = (char) (mid + '0');\n                    return new String(s);\n                }\n            }\n            return \"\";\n        }\n\n        public String largestPalindrome(int n, int k) {\n            if (k == 5) {\n                char[] s = new char[n];\n                Arrays.fill(s, '9');\n                s[0] = s[s.length - 1] = '5';\n                return new String(s);\n            }\n\n            for (int len = 0; ; len++) {\n                String palindrome = check(n, len, k);\n                if (!palindrome.isEmpty()) {\n                    return palindrome;\n                }\n            }\n        }\n\n    \n    }",
    "submit_ts": "1723951585",
    "subm_id": "556406424"
}