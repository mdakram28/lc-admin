{
    "username": "Vani_24",
    "submission": "class Solution {\n    private:\n     static const int MOD = 1000000007;\n     static const int MAX_INVERSIONS = 400;\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n       unordered_map<int, int> mp;\n        for (auto& req : requirements) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> ans(n + 1, vector<long long>(MAX_INVERSIONS + 1, 0));\n        ans[0][0] = 1;\n\n        for (int length = 1; length <= n; length++) {\n            for (int inv = 0; inv <= MAX_INVERSIONS; inv++) {\n                for (int newPos = 0; newPos < length; newPos++) {\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        ans[length][inv] = (ans[length][inv] + ans[length - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.count(length)) {\n                int targetInv = mp[length];\n                for (int inv = 0; inv <= MAX_INVERSIONS; inv++) {\n                    if (inv != targetInv) {\n                        ans[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long result = 0;\n        for (auto count : ans[n]) {\n            result = (result + count) % MOD;\n        }\n\n        return static_cast<int>(result);\n    }\n};",
    "submit_ts": "1719070642",
    "subm_id": "1296828144"
}