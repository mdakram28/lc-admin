{
    "username": "fizhim",
    "submission": "impl Solution {\n    pub fn min_changes(nums: Vec<i32>, k: i32) -> i32 {\n        use std::collections::*;\n        let mut h = HashMap::new();\n        let n = nums.len();\n        let mut b = Vec::with_capacity(n / 2);\n        \n        for i in 0..n / 2 {\n            let x = nums[i];\n            let y = nums[n - 1 - i];\n            let e = h.entry(x.abs_diff(y) as i32).or_insert(0);\n            *e += 1;\n            b.push(x.max(y).max(k - x.min(y)));\n        }\n        \n        b.sort();\n        let mut ans = i32::MAX;\n        \n        for (d, c) in h {\n            let i = b.partition_point(|&x| x < d);\n            let a = n / 2 - i - c + 2 * i;\n            ans = ans.min(a as i32);\n        }\n        \n        ans\n    }\n}",
    "submit_ts": "1721487965",
    "subm_id": "1327407114"
}