{
    "username": "muffin",
    "submission": "class Solution {\npublic:\n    void rmq_init(vector<int> &a, vector<vector<int>> &f)\n    {\n        int n = a.size();\n        for (int i = 1; i <= n; i++)\n            f[i][0] = a[i - 1];\n        int k = floor(log((double)n) / log(2.0));\n        for (int j = 1; j <= k; j++)\n            for (int i = n; i >= 1; i--) {\n                if (i + (1 << (j - 1)) <= n)\n                    f[i][j] = max(f[i][j - 1], f[i + (1 << (j - 1))][j - 1]);\n            }\n    }\n\n    int rmq(vector<vector<int>> &f, int i, int j)\n    {\n        if (i > j) {\n            return INT_MIN;\n        }\n        int k = floor(log((double)(j - i + 1)) / log(2.0));\n        return max(f[i][k], f[j - (1 << k) + 1][k]);\n    }\n    long long maximumValueSum(vector<vector<int>>& a) {\n        int n = a.size(), m = a[0].size();\n        vector<vector<vector<int>>> st(n + 1, vector<vector<int>>(m + 1, vector<int>(floor(log((double) m) / log(2.0)) + 1)));\n        for (int i = 1; i <= n; i++) {\n            rmq_init(a[i - 1], st[i]);\n            // cout << rmq(st[i], 1, m) << endl;\n        }\n        vector<vector<long long>> f1(n + 1, vector<long long>(m + 1, LLONG_MIN));\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                f1[i][j] = max(f1[i - 1][j], 1ll * a[i - 1][j - 1]);\n            }\n        }\n        vector<vector<vector<long long>>> f2(n + 1, vector<vector<long long>>(m + 1, vector<long long>(m + 1, LLONG_MIN)));\n        for (int i = 2; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                for (int k = 1; k <= m; k++) {\n                    if (j == k) {\n                        continue;\n                    }\n                    f2[i][j][k] = max(f2[i - 1][j][k], f1[i - 1][j] + a[i - 1][k - 1]);\n                }\n            }\n        }\n        // cout << \"============\" << endl;\n        long long ans = LLONG_MIN;\n        for (int i = 3; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                for (int k = 1; k <= m; k++) {\n                    if (j == k) {\n                        continue;\n                    }\n                    int l = min(j, k), r = max(j, k); \n                    int v1 = rmq(st[i], 1, l - 1);\n                    int v2 = rmq(st[i], l + 1, r - 1);\n                    int v3 = rmq(st[i], r + 1, m);\n                    // cout << i - 1 << \" \" << j << \" \" << k << \" \" << f2[i - 1][j][k] << endl;\n                    ans = max(ans, max(1ll * v1, 1ll * max(v2, v3)) + f2[i - 1][j][k]);       \n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909577",
    "subm_id": "556336968"
}