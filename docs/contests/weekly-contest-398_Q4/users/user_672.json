{
    "username": "00101010",
    "submission": "class Solution {\npublic:\n    long long int cal(int n, int m) {\n        long long int ans = 1;\n        long long int i = 1;\n        for(i=1;i<=m;i++) {\n            ans = ans * (n-m+i);\n            ans = ans/i;\n        }\n        return ans;\n    }\n    \n    int waysToReachStair(int k) {\n       long long  int ans = 0;\n        long long int lim = 30;\n        long long int i,j;\n        long long int sum = 0;\n        long long int finsum = 0;\n        if(k==0) {\n            return 2;\n        } if(k==1) {\n            return 4;\n        }\n        for(j=0;j<=lim;j++) {\n            sum = pow(2,j+1)-1;\n            for(i=0;i<=j+2;i++) {\n                finsum = sum -i + 1 ;\n                if(finsum==k) {\n                    long long int op = j+2;\n                    long long int poss = cal(op,i);\n                    //cout << j << \" \" << i << \" \" << op << \" \" << poss << endl;\n                    ans = ans + poss;\n                }\n            }\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": 1716088636.0
}