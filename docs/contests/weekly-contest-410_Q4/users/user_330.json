{
    "username": "TheZwischenzug",
    "submission": "class Solution {\n    private static final int mod = 1000_000_000 + 7;\n\n    private int[] nums;\n\n    private  int getRangeSum(int[] preSum, int left, int right){\n        if (left > right) return 0;\n        if (left == 0) return preSum[right];\n        else{\n            int sum = preSum[right]-preSum[left-1];\n            if (sum < 0) sum += mod;\n            return sum;\n        }\n\n    }\n    private int max;\n    private int[] getNext(int[] prev, int idx){\n        for (int i = 1; i < prev.length; i++) {\n            prev[i] += prev[i-1];\n            if (prev[i] >= mod) prev[i] -= mod;\n        }\n        int[] next = new int[prev.length];\n        for (int last = 0; last <= nums[idx];last++){\n            int min = 0;\n            int max = Math.min(last, last+nums[idx-1]-nums[idx]);\n            next[last] = getRangeSum(prev, min, max);\n        }\n        return next;\n    }\n    private int[] computeFirst(int elem){\n        int[] dp = new int[max+2];\n        for (int x = 0; x <= elem; x++) dp[x] = 1;\n        return dp;\n    }\n    public int countOfPairs(int[] nums) {\n        this.nums = nums;\n         max = 0;\n         for (int x : nums) max = Math.max(max, x);\n        int[] prev = computeFirst(nums[0]);\n//        System.out.printf(\"prev = %s\\n\", Arrays.toString(prev));\n        for (int idx = 1; idx < nums.length; idx++){\n\n            prev = getNext(prev, idx);\n//            System.out.printf(\"prev = %s\\n\", Arrays.toString(prev));\n        }\n//        int[] prev = computeFirst(nums);\n//        for (int idx = nums.length-2; idx >= 0; idx--){\n//            prev = getNext(prev, idx);\n//        }\n        int cnt = 0;\n        for (int x : prev) {\n            cnt += x;\n            if (cnt >= mod) cnt -= mod;\n        }\n        return cnt;\n    }\n}",
    "submit_ts": "1723346748",
    "subm_id": "1351584308"
}