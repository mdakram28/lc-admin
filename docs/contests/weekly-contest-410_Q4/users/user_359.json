{
    "username": "atm314",
    "submission": "\nusing i8 = int8_t;\nusing u8 = uint8_t;\nusing i16 = int16_t;\nusing u16 = uint16_t;\nusing i32 = int32_t;\nusing u32 = uint32_t;\nusing i64 = int64_t;\nusing u64 = uint64_t;\n\nusing f32 = float;\nusing f64 = double;\n\n#define all(x) (x).begin(), (x).end()\n#define ll long long int\n#define VI vector<ll>\n#define VVI vector<VI>\n\n#define ISD true\n#define debug(x) \\\n    if (ISD)     \\\n    cout << #x << \": \" << x << endl\n#define DEBUG(x) cout << #x << \": \" << x << endl\n\ntemplate <typename C>\ni64 SIZE(const C &c)\n{\n    return static_cast<i64>(c.size());\n}\n\ntemplate <typename T, size_t N>\ni64 SIZE(const T (&)[N]) { return static_cast<i64>(N); }\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmax(T &xmax, const U &x, Comp comp = {})\n{\n    if (comp(xmax, x))\n    {\n        xmax = x;\n        return true;\n    }\n    return false;\n}\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmin(T &xmin, const U &x, Comp comp = {})\n{\n    if (comp(x, xmin))\n    {\n        xmin = x;\n        return true;\n    }\n    return false;\n}\n\n#define CPP_STR(x) CPP_STR_I(x)\n#define CPP_CAT(x, y) CPP_CAT_I(x, y)\n#define CPP_STR_I(args...) #args\n#define CPP_CAT_I(x, y) x##y\n\n#define ASSERT(expr...) assert((expr))\n\n// }}}\n\nconstexpr i64 INF = 1'010'000'000'000'000'017LL;\n\nconstexpr f64 EPS = 1e-12;\n\nconstexpr f64 PI = 3.14159265358979323846;\n\n#define M5 100007\n#define M9 1000000000\n#define MOD M9 + 7\n#define F first\n#define S second\n\n// util {{{\n#define FOR(i, start, end) for (i64 i = (start), CPP_CAT(i, xxxx_end) = (end); i < CPP_CAT(i, xxxx_end); ++i)\n#define REP(i, n) FOR(i, 0, n)\n\n/* BIT: \u533a\u9593\u548c\u306e\u66f4\u65b0\u3084\u8a08\u7b97\u3092\u884c\u3046\u69cb\u9020\u4f53\n    \u521d\u671f\u5024\u306f a_1 = a_2 = ... = a_n = 0\n    \u30fbadd(i,x): a_i += x \u3068\u3059\u308b\n    \u30fbsum(i): a_1 + a_2 + ... + a_i \u3092\u8a08\u7b97\u3059\u308b\n    \u8a08\u7b97\u91cf\u306f\u5168\u3066 O(logn)\n*/\ntemplate <typename T>\nstruct BIT\n{\n    int n;         // \u914d\u5217\u306e\u8981\u7d20\u6570(\u6570\u5217\u306e\u8981\u7d20\u6570+1)\n    vector<T> bit; // \u30c7\u30fc\u30bf\u306e\u683c\u7d0d\u5148\n    BIT(int n_) : n(n_ + 1), bit(n, 0) {}\n    void add(int i, T x)\n    {\n        for (int idx = i; idx < n; idx += (idx & -idx))\n        {\n            bit[idx] += x;\n            bit[idx] %= MOD;\n        }\n    }\n    T sum(int i)\n    {\n        T s(0);\n        for (int idx = i; idx > 0; idx -= (idx & -idx))\n        {\n            s += bit[idx];\n            s %= MOD;\n        }\n        return s;\n    }\n};\n\nclass Solution\n{\npublic:\n    int countOfPairs(vector<int> &nums)\n    {\n        int N = nums.size();\n        BIT<ll> dp(1007);\n        REP(i, nums[0] + 1)\n        {\n            dp.add(i + 1, 1);\n        }\n        REP(i, N - 1)\n        {\n            BIT<ll> ndp(1007);\n            REP(j, nums[i + 1] + 1)\n            {\n                ll l = j;\n                ll r = nums[i + 1] - j;\n                ll pr = nums[i] - r;\n                ll rr = min(l, pr);\n                if (rr < 0)\n                {\n                    continue;\n                }\n                ndp.add(j + 1, dp.sum(rr + 1));\n            }\n            swap(dp, ndp);\n        }\n        // cout << dp.sum(1003) << endl;\n        return dp.sum(1003);\n    }\n};",
    "submit_ts": "1723347267",
    "subm_id": "1351595373"
}