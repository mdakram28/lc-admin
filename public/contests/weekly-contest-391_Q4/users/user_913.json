{
    "username": "ArinGupta",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        priority_queue<int>pq;\n        int n = points.size();\n        sort(begin(points),end(points));\n        vector<vector<int>>v(n,vector<int>(2));\n        vector<vector<int>>v1(n,vector<int>(2));\n        for(int i=0;i<n;i++){\n            v[i][0]=points[i][0]+points[i][1];\n            v1[i][0]=points[i][0]-points[i][1];\n            v[i][1]=i;\n            v1[i][1]=i;\n        }\n        sort(begin(v),end(v));\n        sort(begin(v1),end(v1));\n        int ans = INT_MAX;\n        \n        for(int i=0;i<n;i++){\n            int j = 0;\n            int k = n-1;;\n            int j1 = 0;\n            int k1 = n-1;\n            while(v[j][1]==i){j++;}\n            while(v[k][1]==i){k--;}\n            while(v1[j1][1]==i){j1++;}\n            while(v1[k1][1]==i){k1--;}\n            ans=min(ans,max(v[k][0]-v[j][0],v1[k1][0]-v1[j1][0]));\n            \n        }\n        return ans;\n    }\n};"
}