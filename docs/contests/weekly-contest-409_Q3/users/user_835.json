{
    "username": "Fkaiser7",
    "submission": "#define lli long long\nclass Solution {\npublic:\nlli update(lli left, lli right, lli value, lli i, lli l, lli r, vector<lli> &seg, vector<lli> &seg1)\n{\n    // cout << l << \" \" << r << endl;\n    if (seg1[i])\n    {\n        seg[i] += (r - l + 1) * seg1[i];\n        if (l != r)\n        {\n            seg1[2 * i + 1] += seg1[i];\n            seg1[2 * i + 2] += seg1[i];\n        }\n        seg1[i] = 0;\n    }\n    lli mid = (l + r) / 2;\n    if (l >= left && r <= right)\n    {\n        seg[i] += (r - l + 1) * value;\n        if (l != r)\n        {\n            seg1[2 * i + 1] += value;\n            seg1[2 * i + 2] += value;\n        }\n        return seg[i];\n    }\n    if (l > right || r < left)\n    {\n        return seg[i];\n    }\n    // lli a=update(left, right, value, 2 * i + 1, l, mid, seg, seg1);\n    // lli b=update(left, right, value, 2 * i + 2, mid + 1, r, seg, seg1);\n    return seg[i] = update(left, right, value, 2 * i + 1, l, mid, seg, seg1) + update(left, right, value, 2 * i + 2, mid + 1, r, seg, seg1);\n    return 0;\n}\nlli rsum(lli left, lli right, lli i, lli l, lli r, vector<lli> &seg, vector<lli> &seg1)\n{\n    // cout << l << \" \" << r << endl;\n    if (seg1[i])\n    {\n        seg[i] += (r - l + 1) * seg1[i];\n        if (l != r)\n        {\n            seg1[2 * i + 1] += seg1[i];\n            seg1[2 * i + 2] += seg1[i];\n        }\n        seg1[i] = 0;\n    }\n    lli mid = (l + r) / 2;\n    if (l >= left && r <= right)\n    {\n        return seg[i];\n    }\n    if (l > right || r < left)\n    {\n        return 0;\n    }\n    // lli a=update(left, right, value, 2 * i + 1, l, mid, seg, seg1);\n    // lli b=update(left, right, value, 2 * i + 2, mid + 1, r, seg, seg1);\n    return rsum(left, right, 2 * i + 1, l, mid, seg, seg1) + rsum(left, right, 2 * i + 2, mid + 1, r, seg, seg1);\n}\nvoid update2(lli ind, lli value, lli i, lli l, lli r, vector<lli> &seg)\n{\n    if (l == r)\n    {\n        seg[i] = value;\n        return;\n    }\n    lli mid = (l + r) / 2;\n    if (ind <= mid)\n    {\n        update2(ind, value, 2 * i + 1, l, mid, seg);\n    }\n    else\n    {\n        update2(ind, value, 2 * i + 2, mid + 1, r, seg);\n    }\n    seg[i] = max(seg[2 * i + 1], seg[2 * i + 2]);\n    return;\n}\nlli rsum2(lli left, lli right, lli i, lli l, lli r, vector<lli> &seg)\n{\n    // cout << l << \" \" << r << endl;\n    lli mid = (l + r) / 2;\n    if (l >= left && r <= right)\n    {\n        return seg[i];\n    }\n    if (l > right || r < left)\n    {\n        return -1e9;\n    }\n    // lli a=update(left, right, value, 2 * i + 1, l, mid, seg, seg1);\n    // lli b=update(left, right, value, 2 * i + 2, mid + 1, r, seg, seg1);\n    return max(rsum2(left, right, 2 * i + 1, l, mid, seg),rsum2(left, right, 2 * i + 2, mid + 1, r, seg));\n}\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int>dist(n);\n        vector<lli>seg(4*n);\n        vector<lli>seg1(4*n);\n        vector<lli>seg2(4*n,-1e9);\n        for(int i=0;i<n-1;i++){\n            dist[i]=n-1-i;\n            update(i,i,dist[i],0,0,n-1,seg,seg1);\n        }\n        //cout<<rsum(0,0,0,0,n-1,seg,seg1)<<endl;\n        vector<int>ans(queries.size());\n        for(int i=0;i<queries.size();i++){\n            int a=queries[i][0];\n            int b=queries[i][1];\n            lli ind=rsum2(0,a,0,0,n-1,seg2);\n            if(ind>=b){\n                ans[i]=(int)(rsum(0,0,0,0,n-1,seg,seg1));\n                continue;\n            }\n            lli p=rsum(b,b,0,0,n-1,seg,seg1);\n            lli q=rsum(a,a,0,0,n-1,seg,seg1);\n            //cout<<p<<\" \"<<q<<endl;\n            lli t=q-p-1;\n            update(0,a,-t,0,0,n-1,seg,seg1);\n            ans[i]=(int)(rsum(0,0,0,0,n-1,seg,seg1));\n            update2(a,b,0,0,n-1,seg2);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742681",
    "subm_id": "1343774670"
}