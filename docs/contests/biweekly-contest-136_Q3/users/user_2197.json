{
    "username": "_Titans_",
    "submission": "import java.util.Arrays;\n\npublic class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length;  \n        int m = grid[0].length;\n        int temp = 0; \n\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                temp += 1;\n            }\n        }\n\n        int[] shift = new int[3];\n        Arrays.fill(shift, 0);\n\n        if (n % 2 == 1) {\n            int x = 0, y = m - 1;\n            while (x < y) {\n                int sum = grid[n / 2][x] + grid[n / 2][y];\n                shift[sum] += 1;  \n                x += 1;\n                y -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int x = 0, y = n - 1;\n            while (x < y) {\n                int sum = grid[x][m / 2] + grid[y][m / 2];\n                shift[sum] += 1; \n                x += 1;\n                y -= 1;\n            }\n        }\n\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                temp += shift[1];\n            } else {\n                temp += 2;\n            }\n        } else {\n            temp += shift[1];\n        }\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int x = grid[i][j];\n                int y = grid[n - 1 - i][j];\n                int z = grid[i][m - 1 - j];\n                int w = grid[n - 1 - i][m - 1 - j];\n\n                int sum = x + y + z + w;\n\n                if (sum != 0 && sum != 4) {\n                    temp += Math.min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return temp;\n    }\n}\n",
    "submit_ts": "1722700314",
    "subm_id": "1343238103"
}