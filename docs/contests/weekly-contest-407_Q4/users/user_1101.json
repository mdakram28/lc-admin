{
    "username": "sbiswas165",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        ArrayList<Long> gaps = new ArrayList<Long>();\n        for (int i = 0; i < nums.length; i++) {\n            long d = target[i] - nums[i];\n            gaps.add(d);\n        }\n        \n        ArrayList<Long> delta = new ArrayList<Long>();\n        delta.add(gaps.get(0));\n        for (int i = 1; i < gaps.size(); i++) {\n            delta.add(gaps.get(i) - gaps.get(i-1));\n        }\n        \n        delta.add(-gaps.get(gaps.size() - 1));\n        \n        long s = 0;\n        \n        for (long v : delta) {\n            if (v > 0) s += v;\n        }\n        \n        return s;\n    }\n}",
    "submit_ts": "1721532392",
    "subm_id": "1327984747"
}