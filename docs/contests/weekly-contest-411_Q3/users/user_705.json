{
    "username": "gongx149",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1:\n            return '9' * n\n        if k == 2:\n            if n >= 2:\n                return '8' + '9' * (n - 2) + '8'\n            else:\n                return '8'\n        if k == 3:\n            return '9' * n\n        if k == 4:\n            if n >= 4:\n                return '88' + '9' * (n - 4) + '88'\n            else:\n                return '8' * n\n        if k == 5:\n            if n >= 2:\n                return '5' + '9' * (n - 2) + '5'\n            else:\n                return '5' * n\n        if k == 6:\n            if n == 1:\n                return '6'\n            if n == 2:\n                return '66'\n            if n == 3:\n                return '888'\n            if n == 4:\n                return '8778'\n            if n % 2 == 1:\n                return '8' + '9' * (n // 2 - 1) + '8' + '9' * (n // 2 - 1) + '8'\n            if n % 2 == 0:\n                return '8' + '9' * (n // 2 - 2) + '77' + '9' * (n // 2 - 2) + '8'\n        if k == 7:\n            candidate = ['', '7', '77', '959', '9779', '99799', '999999', '9994999', '99944999', '999969999', '9999449999', '99999499999']\n            a, b = divmod(n, 12)\n            return '999999' * a + candidate[b] + '999999' * a \n            \n            \n        if k == 8:\n            if n >= 6:\n                return '888' + '9' * (n - 6) + '888'\n            else:\n                return '8' * n\n        if k == 9:\n            return '9' * n\n            \n        ",
    "submit_ts": "1723951465",
    "subm_id": "1359772201"
}