{
    "username": "shivansh1soni",
    "submission": "class Solution {\n    fun minimumCost(target: String, words: Array<String>, costs: IntArray): Int {\n      val n = Solve()\n        val o = target.length\n        val p = IntArray(o + 1)\n        Arrays.fill(p, Int.MAX_VALUE)\n\n        for (q in words.indices) {\n            n.e(words[q], costs[q])\n        }\n\n        p[0] = 0\n\n        for (q in 0 until o) {\n            if (p[q] == Int.MAX_VALUE) continue\n\n            var r: Tree? = n.root\n            for (s in q until o) {\n                val t = target[s]\n                if (r!!.a[t.code - 'a'.code] == null) break\n                r = r.a[t.code - 'a'.code]\n                if (r!!.c) {\n                    p[s + 1] = min(p[s + 1].toDouble(), (p[q] + r.b).toDouble()).toInt()\n                }\n            }\n        }\n\n        return if (p[o] == Int.MAX_VALUE) -1 else p[o]\n    }\n}\n\ninternal class Tree {\n    var a: Array<Tree?> = arrayOfNulls(26)\n    var b: Int = Int.MAX_VALUE\n    var c: Boolean = false\n}\n\ninternal class Solve {\n    var root: Tree = Tree()\n\n    fun e(f: String, g: Int) {\n        var h: Tree? = this.root\n        for (i in f.toCharArray()) {\n            if (h!!.a[i.code - 'a'.code] == null) {\n                h.a[i.code - 'a'.code] = Tree()\n            }\n            h = h.a[i.code - 'a'.code]\n        }\n        h!!.b = min(g.toDouble(), h.b.toDouble()).toInt()\n        h.c = true\n    }\n}",
    "submit_ts": "1720322491",
    "subm_id": "1312351336"
}