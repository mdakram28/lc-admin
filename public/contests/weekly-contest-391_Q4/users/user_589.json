{
    "username": "wxy9018",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def MaxDist(points):         \n            N = len(points)\n \n            max_add = 0\n            min_add = 0\n            max_sub = 0\n            min_sub = 0\n\n            for i in range(N):\n                if points[i][0] + points[i][1] > points[max_add][0] + points[max_add][1]:\n                    max_add = i\n                if points[i][0] + points[i][1] < points[min_add][0] + points[min_add][1]:\n                    min_add = i\n                if points[i][0] - points[i][1] > points[max_sub][0] - points[max_sub][1]:\n                    max_sub = i\n                if points[i][0] - points[i][1] < points[min_sub][0] - points[min_sub][1]:\n                    min_sub = i\n            \n            diff_add = (points[max_add][0] + points[max_add][1]) - (points[min_add][0] + points[min_add][1])\n            diff_sub = (points[max_sub][0] - points[max_sub][1]) - (points[min_sub][0] - points[min_sub][1])\n            \n            if diff_add > diff_sub:\n                return diff_add, max_add, min_add\n            else:\n                return diff_sub, max_sub, min_sub\n    \n        _, a, b = MaxDist(points)\n        \n        arr1 = points[:a] + points[a+1:]\n        arr2 = points[:b] + points[b+1:]\n        \n        d1, _, _ = MaxDist(arr1)\n        d2, _, _ = MaxDist(arr2)\n        \n        return min(d1, d2)"
}