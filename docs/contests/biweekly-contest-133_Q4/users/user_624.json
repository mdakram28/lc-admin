{
    "username": "sasti_monjulika_oo",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    ll MOD = 1e9 + 7 ;\n    ll maxi = 401 ;\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> mp;\n        for (auto& it : requirements) {\n            mp[it[0] + 1] = it[1];\n        }\n\n        vector<vector<ll>> dp(n + 1, vector<ll>(maxi + 1, 0));\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= maxi; j++) {\n                for (int k = 0; k < i; k++) {\n                    int curr = j - k;\n                    if (curr >= 0) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][curr]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.find(i) != mp.end()) {\n                int val = mp[i];\n                for (int j = 0; j <= maxi; ++j) {\n                    if (j != val) {\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        ll ans = 0;\n        for (auto it : dp[n]) {\n            ans = (ans + it) % MOD;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1719070833.0
}