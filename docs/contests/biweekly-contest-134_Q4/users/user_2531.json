{
    "username": "yelamanfazyl",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long count = 0;\n        int n = nums.size();\n        \n        std::unordered_map<int, int> andMap;\n\n        for (int i = 0; i < n; ++i) {\n            std::unordered_map<int, int> newMap;\n            \n            newMap[nums[i]] = newMap[nums[i]] + 1;\n            \n            for (auto& [key, value] : andMap) {\n                int newAnd = key & nums[i];\n                newMap[newAnd] += value;\n            }\n            \n            andMap = newMap;\n            \n            if (andMap.find(k) != andMap.end()) {\n                count += andMap[k];\n            }\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720281204",
    "subm_id": "1311816778"
}