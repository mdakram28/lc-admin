{
    "username": "user1584rz",
    "submission": "#include <vector>\n#include <algorithm>\n#include <utility>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        \n        // Combine horizontal and vertical cuts into a single list with their identities\n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, 'H'});\n        }\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, 'V'});\n        }\n        \n        // Sort the combined cuts list by cost in descending order\n        sort(cuts.rbegin(), cuts.rend());\n        \n        long long horizontalSections = 1;\n        long long verticalSections = 1;\n        long long totalCost = 0;\n        \n        // Apply cuts starting from the most expensive one\n        for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                totalCost += static_cast<long long>(cut.first) * verticalSections;\n                horizontalSections++;\n            } else {\n                totalCost += static_cast<long long>(cut.first) * horizontalSections;\n                verticalSections++;\n            }\n        }\n        \n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925742",
    "subm_id": "1320264746"
}