{
    "username": "user9557Mg",
    "submission": "class Solution {\npublic:\n    unordered_map<string, long long> memo;\nlong long ways(int i, int jump, int k, bool flag) {\n    if(i < 0) return 0;\n    if(i > k + 10) return 0;\n\n    string key = to_string(i) + \",\" + to_string(jump) + \", \" + to_string(flag);\n    if (memo.find(key) != memo.end()) return memo[key];\n\n    long long count = 0;\n    \n    if (i == k){\n        count++;\n    }\n    int nextUp = i + (1 << jump);\n    count += ways(nextUp, jump + 1, k, 0);\n\n    if(!flag) count += ways(i - 1, jump, k, 1);\n    \n\n    memo[key] = count;\n\n    return count;\n}\n    int waysToReachStair(int k) {\n    memo.clear();\n    return ways(1, 0, k, 0);\n    }\n};",
    "submit_ts": "1716088630",
    "subm_id": "1261819516"
}