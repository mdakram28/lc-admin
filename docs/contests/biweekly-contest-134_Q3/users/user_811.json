{
    "username": "senapatirana415",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    ll const mod = 1e9+7;\n\n    ll gcd(ll a, ll b) {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    } //__gcd\n    ll lcm(ll a, ll b) { return (a / gcd(a, b) * b); }\n    ll moduloMultiplication(ll a, ll b) {\n        ll res = 0;\n        a %= mod;\n        while (b) {\n            if (b & 1)\n                res = (res + a) % mod;\n            b >>= 1;\n        }\n        return res;\n    }\n    ll powermod(ll x, ll y, ll p) {\n        ll res = 1;\n        x = x % p;\n        if (x == 0)\n            return 0;\n        while (y > 0) {\n            if (y & 1)\n                res = (res * x) % p;\n            y = y >> 1;\n            x = (x * x) % p;\n        }\n        return res;\n    }\n\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        colors.insert(colors.end(), colors.begin(), colors.begin() + k);\n\n        ll n = colors.size(), count = 0;\n\n        unordered_map<string, ll> colorToIdx;\n        gcd(1,2);\n        lcm(3,5);\n        lcm(3,2);\n        gcd(1,3);\n        gcd(99,3);\n        gcd(29,8);\n\n        vector<int> pre(n + 1, 0);\n\n        for (int i = 1; i < n; i++) {\n            pre[i] += pre[i - 1] + abs(colors[i] - colors[i - 1]);\n        }\n        k--;\n\n        for (int i = k + 1; i < n; i++) {\n            if (pre[i] - pre[i - k] == k) {\n                count++;\n            }\n        }\n\n        lcm(2,4);\n        gcd(3,4);\n        gcd(2,4);\n        lcm(23,8);\n        lcm(33,5);\n        lcm(33,2);\n        gcd(1,33);\n        gcd(99,3);\n        gcd(29,38);\n\n        return count;\n    }\n};",
    "submit_ts": "1720280145",
    "subm_id": "1311778555"
}