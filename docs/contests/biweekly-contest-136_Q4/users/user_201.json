{
    "username": "Guardian-or-nothing",
    "submission": "#include <bits/stdc++.h> \nusing namespace std;\ntypedef long long ll;\n\nclass Solution {\npublic:\n    vector<vector<int>> g;\n    vector<ll> prices,in,out;\n    \n    ll f1 (int src, int par) {\n        ll& result = in[src];\n        for (auto i : g[src]) {\n            if (i == par) continue;\n            result = max(result, f1 (i, src));\n        }\n        result += prices[src];\n        \n        return result;\n    }\n    \n    void f2 (int src, int par) {\n        multiset<ll> smaan;\n        for (auto i : g[src]) {\n            if (i == par) continue;\n            smaan.insert(in[i]);\n        }\n        for (auto i : g[src]) {\n            if (i == par) continue;\n            ll tval = in[i];\n            smaan.erase (smaan.find(tval));\n            \n            ll below; \n            if(smaan.size()==0) below=0;\n            else below=*(--smaan.end());\n            out[i] = max (below, out[src]) + prices[src];\n            smaan.insert(tval);\n            f2 (i,src);\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1; vector<int> price(n);\n        for(int i=0;i<n;i++){\n            if(i%2==0) price[i]=2;\n            else price[i]=1;\n        }\n        in.clear(); out.clear(); g.clear(); prices.clear();\n        g.resize(n), prices.resize(n), in.resize(n), out.resize(n);\n        for(int i=0;i<edges.size();i++) {\n            int x=edges[i][0],y=edges[i][1];\n            g[x].push_back(y);\n            g[y].push_back(x);\n        }\n        for(int j=0;j<n;j++) prices[j]=price[j];\n        f1(0, -1); f2(0, -1);\n        vector<int> fans;\n        for (int i=0;i<n;i++) {\n            ll tans=max(in[i],out[i]+prices[i])-prices[i];\n            fans.push_back(tans);\n        }\n        return fans;\n    }\n};",
    "submit_ts": "1722699751",
    "subm_id": "1343221181"
}