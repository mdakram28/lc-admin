{
    "username": "OuterRidgeSavage",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    int waysToReachStair(int k) {\n        if (k == 0) return 2;\n        if (k == 1) return 4;\n        if (k == 2) return 4;\n        if (k == 3) return 3;\n        if (k == 4) return 2;\n        if (k == 5) return 4;\n        if (k == 6) return 6;\n        if (k == 7) return 4;\n        if (k == 8) return 1;\n        \n        //\n        vector<ll> t = {16};\n        vector<vector<int>> r = {{1, 5, 10, 10, 5, 1}};\n        for (int i = 5, two = 32; i <= 31; ++i, two <<= 1) {\n            t.push_back(two);\n            int n = r.back().size();\n            vector<int> new_r(n + 1);\n            new_r[0] = 1;\n            new_r[n] = 1;\n            for (int i = 1; i < n; ++i) {\n                new_r[i] = r.back()[i - 1] + r.back()[i];\n            }\n            r.push_back(std::move(new_r));\n        }\n        ll n = t.size();\n        for (int i = 0; i < n; ++i) {\n            ll m = r[i].size();\n            if (t[i] - (m - 1) <= k && k <= t[i]) {\n                return r[i][(m - 1) - (t[i] - k)];\n            }\n        }\n        return 0;\n    }\n};",
    "submit_ts": "1716089782",
    "subm_id": "1261851148"
}