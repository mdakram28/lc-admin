{
    "username": "prateek_saxena",
    "submission": "class Solution {\npublic:\n    int n=0;\n    vector<int> tree;\n    void build(vector<int>& nums,int node,int start,int end)\n    {\n        if(start==end)\n            tree[node]=nums[start];\n        else \n        {\n            int mid=start+(end-start)/2;\n            build(nums,2*node+2,mid+1,end);\n            build(nums,2*node+1,start,mid);\n            tree[node]=(tree[2*node+1]&tree[2*node+2]);\n        }\n    }\n    int query(int l, int r)\n    {\n        return query(0,0,n-1,l,r);\n    }\n    int query(int node, int start, int end, int l, int r)\n    {\n        if (r<start || end<l)\n            return INT32_MAX;\n\n        if (l<=start && end<=r)\n            return tree[node];\n\n        int mid=start+(end-start)/2;\n        int p1=query(2*node+2,mid+1,end,l,r);\n        int p2=query(2*node+1,start,mid,l,r);\n\n        return p1&p2;\n    }\n\n    int closestAnd(vector<int>& nums, int k)\n    {\n        int ans=1e9;\n        for(int i=0;i<n;i++)\n        {  \n            int l=i-1,r=n-1,mid;\n            while(r-l>1) \n            {\n                mid=l+(r-l)/2;\n                if(query(i,mid)<k)\n                    r=mid;\n                else\n                    l=mid;\n            }\n            int val1=abs(query(i,l)-k);\n            ans=min(ans,abs(k-query(i,r)));\n            if(l!=i-1)\n                ans=min(ans,val1);\n        }\n        return ans;\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        \n        n=nums.size();\n        tree.resize(4*n);\n        build(nums,0,0,n-1);\n        return closestAnd(nums,k);\n    }\n};",
    "submit_ts": 1717299452.0
}