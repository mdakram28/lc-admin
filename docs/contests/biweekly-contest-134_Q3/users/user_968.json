{
    "username": "iwebgaurav",
    "submission": "class Solution { \npublic: \n  int numberOfAlternatingGroups(vector<int>& colors, int k) {  \n        int n = colors.size();  \n        int res = 0;  \n  \n        if (k == 1) {  \n            return n;  \n        }  \n  \n        int altLen = 1;  \n        int i = 1;  \n        while (i < n + k - 1) {  \n            int curr = i;  \n            int prev = i - 1;  \n   \n            if (curr >= n) {  \n                curr -= n;  \n            }  \n            if (prev >= n) {  \n                prev -= n;  \n            }  \n  \n            if (colors[curr] != colors[prev]) {  \n                altLen++;  \n            } else {  \n                altLen = 1;  \n            }  \n  \n            if (altLen>=k) {  \n                res++;  \n            }  \n  \n            ++i;  \n        }  \n  \n        return res;  \n    } \n};",
    "submit_ts": "1720280109",
    "subm_id": "1311777262"
}