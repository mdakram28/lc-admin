{
    "username": "Priyanshu_gupta_9620",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& arr, int k) {\n        int n=arr.size();\n        vector<int> v;\n        for(auto it:arr){v.push_back(it);}\n        for(int i=0;i<k-1;i++){\n            v.push_back(arr[i]);\n        }\n        vector<int> hash(n+k-1);\n        for(int i=0;i<v.size()-1;i++){\n            if(v[i]==v[i+1]){\n                hash[i]=1;\n                hash[i+1]=1;\n            }\n        }\n        // for(auto it:v){\n        //     cout<<it<<' ';\n        // }\n        // cout<<endl;\n        // for(auto it:hash){\n        //     cout<<it<<' ';\n        // }\n        // cout<<endl;\n        vector<int> psum;\n        int sum=0;\n        for(auto it:hash){\n            sum+=it;\n            psum.push_back(sum);\n        }\n        int i=k-1;\n        int j=0;\n        int ans=0;\n        while(i<v.size()){\n            int val;\n            if(j!=0){\n                val=psum[i]-psum[j-1];\n            }\n            else{\n                val=psum[i];\n            }\n            if(val==0){\n                ans++;\n            }\n            else{\n                int pg=0;\n                if(hash[i]==1){pg++;}\n                if(hash[j]==1){pg++;}\n                if(val==pg){\n                    ans++;\n                }\n            }\n            i++;\n            j++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278024",
    "subm_id": "1311690913"
}