{
    "username": "Ridh123",
    "submission": "package main\n\nimport (\n\t\"container/list\"\n\t\"math\"\n)\n\nfunc bfs(g [][]int, s, t1, t2, n int) int {\n\tq := list.New()\n\tv := make([]int, n+4)\n\tq.PushBack(s)\n\tv[s] = 1\n\t\n\tfor q.Len() > 0 {\n\t\tu := q.Remove(q.Front()).(int)\n\t\tfor _, x := range g[u] {\n\t\t\tif v[x] == 0 {\n\t\t\t\tq.PushBack(x)\n\t\t\t\tv[x] = 1\n\t\t\t}\n\t\t}\n\t}\n\treturn v[t1] | v[t2]\n}\n\nfunc canReachCorner(X, Y int, c [][]int) bool {\n\ttype Circle struct {\n\t\tx, y, r int\n\t}\n\t\n\tn := len(c)\n\tcir := make([]Circle, n)\n\tg := make([][]int, n+4)\n\t\n\tfor i := 0; i < n; i++ {\n\t\tcir[i] = Circle{c[i][0], c[i][1], c[i][2]}\n\t}\n\t\n\tfor i := 0; i < n; i++ {\n\t\tif cir[i].x <= cir[i].r {\n\t\t\tg[n] = append(g[n], i)\n\t\t\tg[i] = append(g[i], n)\n\t\t}\n\t\tif X-cir[i].x <= cir[i].r {\n\t\t\tg[n+2] = append(g[n+2], i)\n\t\t\tg[i] = append(g[i], n+2)\n\t\t}\n\t\tif cir[i].y <= cir[i].r {\n\t\t\tg[n+1] = append(g[n+1], i)\n\t\t\tg[i] = append(g[i], n+1)\n\t\t}\n\t\tif Y-cir[i].y <= cir[i].r {\n\t\t\tg[n+3] = append(g[n+3], i)\n\t\t\tg[i] = append(g[i], n+3)\n\t\t}\n\t\tfor j := i + 1; j < n; j++ {\n\t\t\td := math.Sqrt(float64((cir[i].x-cir[j].x)*(cir[i].x-cir[j].x) +\n\t\t\t\t(cir[i].y-cir[j].y)*(cir[i].y-cir[j].y)))\n\t\t\trSum := cir[i].r + cir[j].r\n\t\t\tif float64(rSum) >= d {\n\t\t\t\tg[i] = append(g[i], j)\n\t\t\t\tg[j] = append(g[j], i)\n\t\t\t}\n\t\t}\n\t}\n\t\n\tblocked := 0\n\tblocked = max(blocked, bfs(g, n, n+1, n+2, n+4))\n\tblocked = max(blocked, bfs(g, n+3, n+2, n+1, n+4))\n\t\n\treturn blocked == 0\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}",
    "submit_ts": "1722137945",
    "subm_id": "1335777915"
}