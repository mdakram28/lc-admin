{
    "username": "arinawasthi05",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        if(colors.size() < k)   return 0;\n        int res = 0, prev = 0, start = 0, i = 0, n = colors.size();\n        while(start < n)\n        {\n            // cout << start << endl;\n            if(!prev)\n            {\n                int f = 0;\n                for(int i=0;i<k-1;i++)\n                {\n                    if(colors[(start+i)%n] == colors[(start+1+i)%n])\n                    {\n                        start = (start+1+i);\n                        f = 1;\n                        break;\n                    }\n                }\n                if(f)   continue;\n                else\n                { \n                    prev = 1;res++;start++;\n                }\n            }\n            else\n            {\n                if(colors[(start+k-2)%n] == colors[(start+k-1)%n])\n                {\n                    start = (start+k-1);\n                    prev = 0;\n                }\n                else\n                { \n                    res++;\n                    start++;\n                }\n            }\n            // cout << start << endl;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720278401",
    "subm_id": "1311707569"
}