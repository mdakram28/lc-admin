{
    "username": "ho_chung",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        MODULUS = 10 ** 9 + 7\n\n        n = len(nums)\n        A_B_dict = {\n            (i, nums[-1] - i): 1\n            for i in range(nums[-1] + 1)\n        }\n        for idx in range(n-2, -1, -1):\n            num = nums[idx]\n            new_A_B_dict = defaultdict(int)\n\n            sorted_A_B_dict_items = sorted(\n                list(A_B_dict.items()), \n                key=lambda item: min(item[0][0], num-item[0][1]),\n            )\n            next_idx = len(sorted_A_B_dict_items) - 1\n            next_key = min(sorted_A_B_dict_items[-1][0][0], num - sorted_A_B_dict_items[-1][0][1])\n            cum_cnt = 0\n\n            for i in range(num, -1, -1):\n                while next_idx >= 0 and i <= next_key:\n                    cum_cnt += sorted_A_B_dict_items[next_idx][1]\n                    next_idx -= 1\n                    next_key = min(sorted_A_B_dict_items[next_idx][0][0], num - sorted_A_B_dict_items[next_idx][0][1])\n\n                new_A_B_dict[(i, num - i)] += cum_cnt\n\n            A_B_dict = {\n                k: v % MODULUS\n                for k, v in new_A_B_dict.items()\n            }\n        \n        return sum(A_B_dict.values()) % MODULUS\n\n        ",
    "submit_ts": "1723346781",
    "subm_id": "1351585027"
}