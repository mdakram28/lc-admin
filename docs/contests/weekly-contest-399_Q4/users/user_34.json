{
    "username": "prajwal_733",
    "submission": "class Solution {\npublic:\n    long long ans[200007], m1[200007], m2[200007], m3[200007];\n    vector<int> num;\n    // m1 -> withouht first\n    // m2 -> withouth last\n    // m3 -> without first/last\n    \n    void build(int index, int l,int r)\n    {\n        if(l==r)\n        {\n            //cout<<num[l]<<endl;\n            \n            ans[index] = max(0, num[l]);\n            m1[index] = 0;\n            m2[index] = 0;\n            m3[index] = 0;\n            return;\n        }\n        \n        int mid = (l+r)/2;\n        int left = 2 *index + 1, right = 2 * index + 2;\n        \n        build(left, l, mid);\n        build(right, mid+1, r);\n        \n        \n        \n        ans[index] = max({ 0ll, ans[left], ans[right], m2[left] + ans[right], ans[left] + m1[right] });\n        m1[index] = max({ 0ll, m1[left] + m1[right], m3[left] + ans[right] });\n        m2[index] = max({ 0ll,m2[left] + m2[right], ans[left] + m3[right] });\n        m3[index] = max({ 0ll, m1[left] + m3[right], m3[left] + m2[right] });\n    }\n    \n    void update(int index,int l,int r,int i)\n    {\n        if((l==r) and (l==i))\n        {\n            ans[index] = max(0, num[l]);\n            m1[index] = 0;\n            m2[index] = 0;\n            m3[index] = 0;\n            return;\n        }\n        \n        if((r<i) or (l>i))\n            return;\n        \n         int mid = (l+r)/2;\n        int left = 2 *index + 1, right = 2 * index + 2;\n        \n        update(left, l, mid, i);\n        update(right, mid+1, r, i);\n        \n        ans[index] = max({0ll, ans[left], ans[right], m2[left] + ans[right], ans[left] + m1[right] });\n        m1[index] = max({0ll, m1[left] + m1[right], m3[left] + ans[right] });\n        m2[index] = max({0ll, m2[left] + m2[right], ans[left] + m3[right] });\n        m3[index] = max({0ll, m1[left] + m3[right], m3[left] + m2[right] });\n    }\n    \n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        num = nums;\n        int n = nums.size();\n        \n        build(0, 0, n-1);\n        \n        long long sum = 0;\n        int mod = (int)1e9+7;\n        \n        for(int i=0;i<queries.size();i++)\n        {\n            num[queries[i][0]] = queries[i][1];\n            \n            update(0, 0, n-1, queries[i][0]);\n            //cout<<ans[0]<<endl;\n            \n            sum += ans[0];\n            sum = sum % mod;\n        }\n        \n        return sum;\n    }\n};",
    "submit_ts": "1716692721",
    "subm_id": "1268062524"
}