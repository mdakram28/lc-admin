{
    "username": "turuiiii",
    "submission": "const int N = 200010;\n\nclass Solution {\npublic:\n    int tr[N];\n    int n, w[N];\n    int gt[N], lt[N];\n\n    int lowbit(int x) {\n        return x & -x;\n    }\n\n    void add(int x, int v) {\n        for (int i = x; i <= n; i += lowbit(i)) tr[i] += v;\n    }\n\n    int sum(int x) {\n        int cnt = 0;\n        for (int i = x; i; i -= lowbit(i)) cnt += tr[i];\n        return cnt;\n    }\n    void change(vector<int> &nums, int b, int type) {\n        if (b <= 0 || b >= n - 1) return ;\n        int t =  (nums[b] > nums[b - 1] && nums[b] > nums[b + 1]);\n        add(b + 1, t * type);\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        for (int i = 1; i < n - 1; i ++ )\n            if (nums[i - 1] < nums[i] && nums[i] > nums[i + 1])\n                add(i + 1, 1);\n        \n        vector<int> ans;\n        for (auto &u: queries) {\n            int a = u[0], b = u[1], c = u[2];\n            if (a == 1) {\n                if (c - b >= 2) ans.push_back(sum(c) - sum(b + 1));\n                else ans.push_back(0);\n            }\n            else {\n                change(nums, b, -1), change(nums, b + 1, -1), change(nums, b - 1, -1);\n                nums[b] = c;\n                change(nums, b, 1), change(nums, b + 1, 1), change(nums, b - 1, 1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507766.0
}