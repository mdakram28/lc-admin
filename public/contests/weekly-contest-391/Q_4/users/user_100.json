{
    "username": "Akatsuki_",
    "submission": "class Solution {\npublic:\n    int get_max(multiset<int> &st) {\n        return *st.rbegin()-*st.begin();\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<int> z, w;\n        for(int i = 0; i < n; i++) {\n            z.insert(points[i][0]+points[i][1]);\n            w.insert(points[i][0]-points[i][1]);\n        }\n        int ans = INT_MAX;\n        for(int i = 0; i < n; i++) {\n            int tz = points[i][0]+points[i][1];\n            int tw = points[i][0]-points[i][1];\n            z.erase(z.find(tz));\n            w.erase(w.find(tw));\n            int v = max(get_max(z), get_max(w));\n            ans = min(ans, v);\n            z.insert(tz);\n            w.insert(tw);\n        }\n        return ans;\n    }\n};"
}