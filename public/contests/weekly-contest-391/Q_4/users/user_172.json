{
    "username": "timetoai",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def max_dist(A):\n            N = len(A)\n            minsum = maxsum = A[0][0] + A[0][1]\n            minsi = maxsi = maxdi = mindi = 0\n            mindiff = maxdiff = A[0][0] - A[0][1]\n\n            for i in range(1, N):\n                s = A[i][0] + A[i][1]\n                diff = A[i][0] - A[i][1]\n                if (s < minsum):\n                    minsum = s\n                    minsi = i\n                elif (s > maxsum):\n                    maxsum = s\n                    maxsi = i\n                if (diff < mindiff):\n                    mindiff = diff\n                    mindi = i\n                elif (diff > maxdiff):\n                    maxdiff = diff\n                    maxdi = i\n\n            if maxsum - minsum > maxdiff - mindiff:\n                return maxsum - minsum, maxsi, minsi\n            return maxdiff - mindiff, maxdi, mindi\n        \n        ma, i, j = max_dist(points)\n        ma1, *_ = max_dist(points[:i] + points[i + 1:])\n        ma2, *_ = max_dist(points[:j] + points[j + 1:])\n        return min(ma1, ma2)\n        \n        "
}