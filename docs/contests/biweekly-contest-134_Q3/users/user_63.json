{
    "username": "tsreaper",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int K) {\n        int n = colors.size();\n        int f[n];\n        for (int i = 0; i < n; i++) {\n            int x = colors[(i - 1 + n) % n];\n            int y = colors[i];\n            int z = colors[(i + 1) % n];\n            if (x != y && y != z) f[i] = 1;\n            else f[i] = 0;\n        }\n\n        int sm = 0;\n        for (int i = 1; i + 1 < K; i++) sm += f[i];\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (sm == K - 2) ans++;\n            sm -= f[(i + 1) % n];\n            sm += f[(i + K - 1) % n];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720276849",
    "subm_id": "544552761"
}