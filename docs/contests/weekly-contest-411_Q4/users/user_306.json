{
    "username": "yashwanth73",
    "submission": "class Solution {\n    public long[] countKConstraintSubstrings(String s, int k, int[][] queries) {\n        int n = s.length();\n        int zeroes[] = new int[n];\n        int ones[] = new int[n];\n        if(s.charAt(0) == '0')\n            zeroes[0]++;\n        else\n            ones[0]++;\n        for(int i=1;i<n;i++) {\n            if(s.charAt(i) == '0') {\n                zeroes[i] = zeroes[i-1]+1;\n                ones[i] = ones[i-1];\n            }\n            else {\n                zeroes[i] = zeroes[i-1];\n                ones[i] = ones[i-1]+1;\n            }\n        }\n        int[] next = new int[n];\n        for(int i=0;i<n;i++) {\n            int zero = zeroes[i];\n            int one = ones[i];\n            if(s.charAt(i) == '0')\n                zero--;\n            else\n                one--;\n            int val1 = bSearch(zero+k,zeroes);\n            int val2 = bSearch(one+k,ones);\n            next[i] = Math.max(val1,val2);\n        }\n        int q = queries.length;\n        long[] ans = new long[q];\n        long[] prefixSum = new long[n];\n        prefixSum[0] = next[0]+1;\n        for(int i=1;i<n;i++) {\n            long prev = prefixSum[i-1];\n            prefixSum[i] = prev+next[i]-i+1;\n        }\n        for(int i=0;i<q;i++) {\n            int start = queries[i][0], end = queries[i][1];\n            long res = 0;\n            int ind = bSearch(end,next);\n            if(ind<start) {\n                long temp = (end-start+1);\n                ans[i] += ((temp)*(temp+1))/2;\n                continue;\n            }\n            res+=prefixSum[ind];\n            if(start>0)\n                res-=prefixSum[start-1];\n            long temp = end-ind;\n            res+= ((temp)*(temp+1))/2;\n            ans[i] = res;\n        }\n        return ans;\n    }\n\n    private int bSearch(int val, int[] arr) {\n        int low = 0, high = arr.length-1;\n        while(low<=high) {\n            int mid = (low+high)>>1;\n            if(arr[mid] <= val)\n                low = mid+1;\n            else\n                high = mid-1;\n        }\n        return high;\n    }\n}",
    "submit_ts": "1723953189",
    "subm_id": "1359814681"
}