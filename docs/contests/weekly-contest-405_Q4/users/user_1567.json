{
    "username": "MaugouMio",
    "submission": "class Solution {\nprivate:\n    struct Trie {\n        short cost = 10001;\n        Trie* next[26] = {};\n        ~Trie() {\n            for (Trie* node : next) {\n                if (node)\n                    delete node;\n            }\n        }\n    };\n    Trie root;\n\n    vector<int> dp;\n    int getCost(const string& target, int i) {\n        if (i >= target.size())\n            return 0;\n        int& record = dp[i];\n        if (record > 0)\n            return record;\n\n        uint cost = -1;\n        Trie* node = &root;\n        while (i < target.size()) {\n            int idx = target[i] - 'a';\n            if (!node->next[idx])\n                break;\n\n            i++;\n            node = node->next[idx];\n            if (node->cost != 10001) {\n                int otherCost = getCost(target, i);\n                if (otherCost != -1)\n                    cost = min<uint>(cost, node->cost + otherCost);\n            }\n        }\n        record = cost;\n        return cost;\n    }\npublic:\n    int minimumCost(const string& target, vector<string>& words, vector<int>& costs) {\n        dp.assign(target.size(), 0);\n        for (int i = 0; i < words.size(); i++) {\n            string& word = words[i];\n            Trie* node = &root;\n            for (char c : word) {\n                if (node->next[c - 'a'] == nullptr)\n                    node->next[c - 'a'] = new Trie();\n                node = node->next[c - 'a'];\n            }\n            node->cost = min<short>(node->cost, costs[i]);\n        }\n        return getCost(target, 0);\n    }\n};",
    "submit_ts": "1720323880",
    "subm_id": "1312386304"
}