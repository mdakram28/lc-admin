{
    "username": "satyam_bhaiiiiii",
    "submission": "class Solution {\npublic:\n\n #define ll long long\n    long long maximumValueSum(vector<vector<int>>& v) {\n         ll n = v.size();\n    ll m = v[0].size();\n    vector<vector<ll>>ok(n);\n\n    // Compute the top 3 indices for each row\n    for (int i = 0; i < n; i++) {\n        multiset<pair<ll, ll>> m1;\n        for (int k = 0; k < v[i].size(); k++) {\n            m1.insert({v[i][k], k});\n        }\n        ll k = 0;\n        for (auto it = m1.rbegin(); it != m1.rend() && k < 3; it++, k++) {\n            ok[i].push_back(it->second);\n        }\n    }\n\n    ll maxSum = LLONG_MIN;\n\n    \n    for (ll r1 = 0; r1 < n; ++r1) {\n        for (ll r2 = r1 + 1; r2 < n; ++r2) {\n            for (ll r3 = r2 + 1; r3 < n; ++r3) {\n                for (ll c1 : ok[r1]) {\n                    for (ll c2 : ok[r2]) {\n                        if (c2 == c1) continue;\n                        for (ll c3 : ok[r3]) {\n                            if (c3 == c1 || c3 == c2) continue;\n                            ll sum = v[r1][c1] + v[r2][c2] ;\n                            \n                            maxSum = max(maxSum, sum+ v[r3][c3]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return maxSum;\n    }\n};",
    "submit_ts": "1723909324",
    "subm_id": "1359188217"
}