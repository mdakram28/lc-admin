{
    "username": "prathamagg",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n//         vector<int> result;\n//         vector<vector<int>> adjList(n); \n//         for (int i = 0; i < n-1; i++) {\n//             adjList[i].push_back(i+1);\n//         }\n\n//         vector<int> distance(n); \n//         for (int i = 0; i<n; i++) {\n//             distance[i] = i;\n//         }\n\n//         for (auto& query : queries) {\n//             int u = query[0];\n//             int v = query[1];\n\n//             adjList[u].push_back(v);\n//             queue<int> updateQueue;\n//             if (distance[u] + 1 < distance[v]) {\n//                 distance[v] = distance[u] + 1;\n//                 updateQueue.push(v);\n//             }\n\n//             while (!updateQueue.empty()) {\n//                 int node = updateQueue.front();\n//                 updateQueue.pop();\n//                 for (int neighbor : adjList[node]) {\n//                     if (distance[node] + 1 < distance[neighbor]) {\n//                         distance[neighbor] = distance[node] + 1;\n//                         updateQueue.push(neighbor);\n//                     }\n//                 }\n//             }\n\n//             result.push_back(distance[n-1]); \n//         }\n\n//         return result;\n        \n        vector<int> distance (n);\n        set<int> s1;\n        vector<int> result;\n        for (int i = 0; i < n; i++) {\n            distance[i] = i;\n            s1.insert (i);\n        }\n\n        for (auto& query: queries) {\n            int u = query[0];\n            int v = query[1];\n\n            auto lbound = s1.lower_bound(u+1);\n            auto ubound = s1.lower_bound(v);\n\n            s1.erase(lbound, ubound);\n\n            result.push_back(s1.size() - 1);\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1722743512",
    "subm_id": "1343793604"
}