{
    "username": "kumararnab",
    "submission": "class Solution {\nprivate:\n    int fn(int one,int moves){\n        int ans=INT_MAX;\n        \n        for(int i=0;i<=moves;i++){\n            int x=one;\n            x+=i;\n            x-=(moves-i);\n            ans=min(ans,x%4);\n        }\n        return ans;\n    }\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size(),m=grid[0].size(),middle=0,ans=0;\n        \n        if(n%2!=0&&m%2!=0){\n            if(grid[n/2][m/2]!=0){\n                grid[n/2][m/2]=0;\n                middle++;\n            }\n            \n            int temp=0,moves=0;\n            \n            for(int i=0;i<n;i++){\n                if(grid[i][m/2]==1)temp++;\n            }\n            for(int i=0;i<m;i++){\n                if(grid[n/2][i]==1)temp++;\n            }\n            \n            int i=0,j=n-1;\n            \n            while(i<j){\n                if(grid[i][m/2]!=grid[j][m/2])moves++;\n                i++;\n                j--;\n            }\n            \n            i=0;\n            j=m-1;\n            \n            while(i<j){\n                if(grid[n/2][i]!=grid[n/2][j])moves++;\n                i++;\n                j--;\n            }\n            middle+=moves;\n            //if(temp%4!=0||moves%2!=0)middle+=min(((temp+moves)%4),((temp-moves)%4));\n            middle+=fn(temp,moves);\n        }\n        \n        if(n%2==0&&m%2!=0){\n            int temp=0,moves=0;\n            int i=0,j=n-1;\n            \n            while(i<j){\n                if(grid[i][m/2]!=grid[j][m/2])moves++;\n                if(grid[i][m/2]==1)temp++;\n                if(grid[j][m/2])temp++;\n                i++;\n                j--;\n            }\n            middle+=moves;\n            //if(temp%4!=0||moves%2!=0)middle+=min(((temp+moves)%4),((temp-moves)%4));\n            middle+=fn(temp,moves);\n        }\n        \n        if(n%2!=0&&m%2==0){\n            int temp=0,moves=0;\n            int i=0,j=m-1;\n            \n            while(i<j){\n                if(grid[n/2][i]!=grid[n/2][j])moves++;\n                if(grid[n/2][i]==1)temp++;\n                if(grid[n/2][j])temp++;\n                i++;\n                j--;\n            }\n            middle+=moves;\n            //if(temp%4!=0||moves%2!=0)middle+=min(((temp+moves)%4),((temp-moves)%4));\n            middle+=fn(temp,moves);\n        }\n        \n        int row1=0,row2=n-1,col1=0,col2=m-1;\n        \n        while(row1<row2){\n            col1=0;\n            col2=m-1;\n            while(col1<col2){\n                int z=0,o=0;\n                \n                o=grid[row1][col1]+grid[row1][col2]+grid[row2][col1]+grid[row2][col2];\n                z=4-o;\n                ans+=min(o,z);\n                col1++;\n                col2--;\n            }\n            row1++;\n            row2--;\n        }\n        return middle+ans;\n    }\n};",
    "submit_ts": "1722699679",
    "subm_id": "1343219020"
}