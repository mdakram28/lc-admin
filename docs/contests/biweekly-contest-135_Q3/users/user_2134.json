{
    "username": "Ajay_Walke",
    "submission": "class Solution {\npublic:\n    int check(int mid, vector<int>& nums, int k) {\n        int n = nums.size();\n        int count = 0;\n        for(int i=0; i<n/2; i++) {\n            int mn = min(nums[i], nums[n-i-1]);\n            int mx = max(nums[i], nums[n-i-1]);\n            if(mx-mn!=mid) {\n                if(mx-mn < mid) {\n                    int a = mn;\n                    int b = k-mx;\n                    if(max(a, b) + mx-mn >= mid) {count++;}\n                    else {count += 2;}\n                }\n                else {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        unordered_map<int, int> mp;\n        int n = nums.size();\n        for(int i=0; i<n/2; i++) {\n            mp[abs(nums[i]-nums[n-i-1])]++;\n        }\n        int t = INT_MIN;\n        vector<int> temp;\n        for(auto a : mp) {\n            if(t<a.second) {\n                t = a.second;\n            }\n        }\n        for(auto a : mp) {\n            if(t-a.second<=2) { temp.push_back(a.first);}\n        }\n        int ans = INT_MAX;\n        for(auto a : temp) {\n            ans = min(ans, check(a, nums, k));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721489857",
    "subm_id": "1327465899"
}