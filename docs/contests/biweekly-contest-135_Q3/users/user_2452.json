{
    "username": "vrajtalatii",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n     map<int, vector<int>> diffToValuesMap;\n        vector<int> possibleValues;\n\n        int n = nums.size();\n\n        for (int i = 0; i < n / 2; ++i) {\n            int first = nums[i];\n            int second = nums[n - i - 1];\n            int difference = abs(first - second);\n\n            int X = max({first, second, k - first, k - second});\n\n            diffToValuesMap[difference].push_back(X);\n            possibleValues.push_back(X);\n        }\n\n        int minChangesRequired = n;  \n        sort(possibleValues.begin(), possibleValues.end());\n\n        for (const auto& [difference, values] : diffToValuesMap) {\n            int changesNeeded = lower_bound(possibleValues.begin(), possibleValues.end(), difference) - possibleValues.begin();\n            changesNeeded = changesNeeded * 2 + (n / 2 - changesNeeded);\n\n            for (const auto& X : values) {\n                if (X < difference) {\n                    changesNeeded -= 2;\n                } else {\n                    changesNeeded -= 1;\n                }\n            }\n\n            minChangesRequired = min(minChangesRequired, changesNeeded);\n        }\n\n        return minChangesRequired;\n    }\n};\n",
    "submit_ts": "1721490156",
    "subm_id": "1327474646"
}