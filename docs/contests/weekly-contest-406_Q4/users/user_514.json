{
    "username": "harshadkhandare9000",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(),greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(),greater<int>());\n\n        int height = 1; \n        int vertical = 1; \n        int i = 0; \n        int j = 0; \n        long long TCost = 0;\n\n      \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                TCost += horizontalCut[i] * vertical;\n                height++;\n                i++;\n            } else {\n                TCost += verticalCut[j] * height;\n                vertical++;\n                j++;\n            }\n        }\n\n     \n        while (i < horizontalCut.size()) {\n            TCost += horizontalCut[i] * vertical;\n            i++;\n        }\n\n  \n        while (j < verticalCut.size()) {\n            TCost += verticalCut[j] * height;\n            j++;\n        }\n\n        return TCost;\n    }\n};",
    "submit_ts": "1720925610",
    "subm_id": "1320260449"
}