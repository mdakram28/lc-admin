{
    "username": "sandbag",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> s, d;\n        for (int i = 0; i < points.size(); i++) {\n            int sum = points[i][0] + points[i][1];\n            int dif = points[i][0] - points[i][1];\n            s.push_back(sum);\n            d.push_back(dif);\n        }\n        int n = points.size();\n        sort(s.begin(),s.end());\n        sort(d.begin(),d.end());\n        // if(s.size() )\n        int mx = INT_MAX;\n        for (int i = 0; i < points.size(); i++) {\n            int sum = points[i][0] + points[i][1];\n            int dif = points[i][0] - points[i][1];\n            int l1 = 0, l2 = 0, r1 = 0, r2 = 0;\n            if(sum == s[0]) l1++;\n            if(sum == s.back()) r1++;\n            if(dif == d[0]) l2++;\n            if(dif == d.back()) r2++;\n            mx = min(mx, max({s[n-1-r1] - s[0+l1], d[n-1-r2]-d[0+l2]}));\n        }\n        return mx;\n    }\n};"
}