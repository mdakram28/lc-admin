{
    "username": "IamAho",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> pre(n + 1, vector<int>(30));\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 30; j++) {\n                pre[i + 1][j] = pre[i][j] + (nums[i] >> j & 1);\n            }\n        }\n        auto cal = [&](int mid, int i) -> int {\n            int st = 0;\n            for (int j = 0; j < 30; j++) {\n                if (pre[i][j] - pre[mid - 1][j] == i - mid + 1) {\n                    st |= 1 << j;\n                }\n            }  \n            return st;\n        };\n        int64_t ans = 0;\n        for (int i = 1; i <= n; i++) {\n            int x = nums[i - 1];\n            int l = 1, r = i;\n            while (l < r) {\n                int mid = (l + r) / 2;\n                int st = cal(mid, i);\n                if (st >= k) {\n                    r = mid;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            if (cal(r, i) == k) {\n                int left_most = r;\n                int l = 1, r = i;\n                while (l < r) {\n                    int mid = (l + r + 1) / 2;\n                    int st = cal(mid, i);\n                    if (st <= k) {\n                        l = mid;\n                    } else {\n                        r = mid - 1;\n                    }\n                }      \n                if (cal(l, i) == k) {\n                    ans += l - left_most + 1;\n                    // cout << r << \" \" << l << \" \" << i << \"?\\n\";\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279732",
    "subm_id": "1311762917"
}