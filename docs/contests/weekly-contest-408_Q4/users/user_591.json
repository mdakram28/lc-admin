{
    "username": "oneshan",
    "submission": "class UnionFind:\n    def __init__(self, n):\n        self.size = n\n        self.rank = [1] * n\n        self.root = list(range(n))\n\n    def find(self, x):\n        if self.root[x] != x:\n            self.root[x] = self.find(self.root[x])\n        return self.root[x]\n    \n    def union(self, x, y):\n        rx, ry = self.find(x), self.find(y)\n        if rx == ry:\n            return False\n        if self.rank[rx] >= self.rank[ry]:\n            self.rank[rx] += self.rank[ry]\n            self.root[ry] = rx\n        else:\n            self.rank[ry] += self.rank[rx]\n            self.root[rx] = ry\n\n    def get_groups(self):\n        groups = defaultdict(list)\n        for i in range(self.size):\n            groups[self.find(i)].append(i)\n        return groups.values()\n\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        n = len(circles)\n\n        def get_mask(xi, yi, ri):\n            mask = 0\n            if xi + ri >= X:\n                mask |= (1 << 0)\n            if xi - ri <= 0:\n                mask |= (1 << 1)\n            if yi + ri >= Y:\n                mask |= (1 << 2)\n            if yi - ri <= 0:\n                mask |= (1 << 3)\n            return mask\n\n        reach = [0] * n\n        uf = UnionFind(n)\n        \n        for i in range(n):\n            xi, yi, ri = circles[i]\n            reach[i] = get_mask(xi, yi, ri)\n\n            for xj, yj in (X, Y), (0, 0):\n                dist = (xi - xj) ** 2 + (yi - yj) ** 2\n                if ri ** 2 >= dist:\n                    return False\n            \n            for j in range(i+1, n):\n                xj, yj, rj = circles[j]\n                dist = (xi - xj) ** 2 + (yi - yj) ** 2\n                if (ri + rj) ** 2 >= dist:\n                    uf.union(i, j)\n\n        for group in uf.get_groups():\n            mask = 0\n            for i in group:\n                mask |= reach[i]\n                if mask & 10 == 10 or mask & 5 == 5 or mask & 12 == 12 or mask & 3 == 3 or mask == 15:\n                    return False\n        return True",
    "submit_ts": "1722137691",
    "subm_id": "1335770955"
}