{
    "username": "jassy",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n,\n                                             vector<vector<int>>& queries) {\n        auto res = std::vector<int>();\n        auto cost = std::vector<int>(n, 0);\n        for (int i = 0; i < n; i++) {\n            cost[i] = i;\n        }\n        // for(auto&co : cost){\n        //     std::cout<<co<<\" \";\n        // }std::cout<<std::endl;\n        // auto edges = std::vector<std::vector<int>>();\n        int c = n - 1;\n        auto edges = std::map<int, int>();\n        for (auto& q : queries) {\n            // int diff = cost[q[1]] - (cost[q[0]]+1);\n            // if (diff > 0){\n            //     for(int i=q[1];i<n;i++) cost[i]-=diff;\n            // }\n            // res.push_back(cost[n-1]);\n            int good = true;\n            auto eit = edges.lower_bound(q[0]);\n            if(eit != edges.begin()) eit = std::prev(eit);\n            while (eit != edges.end()) {\n                if (eit->first <= q[0] && eit->second >= q[1]) {\n                    good = false;\n                    break;\n                }\n                if (eit->first > q[1])\n                    break;\n                eit++;\n            }\n            int sm = 0;\n            eit = edges.lower_bound(q[0]);\n            while (eit != edges.end()) {\n                if (eit->first > q[1]) {\n                    break;\n                } else if (eit->first >= q[0] && eit->second <= q[1]) {\n                    sm += eit->second - eit->first - 1;\n                    eit = edges.erase(eit);\n                } else {\n                    eit++;\n                }\n            }\n            int diff = 0;\n            if (good) {\n                diff = q[1] - q[0] - 1;\n                edges.emplace(q[0], q[1]);\n            }\n            // std::cout<<good<<\",\"<<sm<<\",\"<<diff<<std::endl;\n            c = c - diff + sm;\n            // std::cout << c << std::endl;\n            res.emplace_back(c);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722743532",
    "subm_id": "552351353"
}