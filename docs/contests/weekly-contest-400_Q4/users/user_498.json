{
    "username": "sachinbarupal",
    "submission": "class Solution {\npublic:\n    void remove(int x, vector<int> &bits){\n        \n        for(int i=0; i<31; ++i){\n            if(((x >> i)&1) == 0) bits[i]--;\n        }\n        \n    }\n    int calc(vector<int> &bits){\n        int ans = 0;\n        for(int i=0; i<31; ++i){\n            if(bits[i] == 0) ans += (1 << i);\n        }\n        return ans;\n    }\n    void reset(vector<int> &bits){\n        for(auto &i : bits) i = 0;\n    }\n    void doAnd(int x, vector<int> &bits){\n        \n        for(int i=0; i<31; ++i){\n            if(((x >> i)&1) == 0) bits[i]++;\n        }\n        \n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> bits(31);\n        \n        int n = nums.size();\n        int ans = INT_MAX;\n        for(int i=0, j=0; i<n; ++i){\n            doAnd(nums[i], bits);\n            int currAnd = calc(bits);\n            \n            ans = min(ans, abs(currAnd - k));\n            \n            while(currAnd < k){\n                remove(nums[j], bits);\n                j++;\n                currAnd = calc(bits);\n                ans = min(ans, abs(currAnd - k));\n            }\n            \n        }\n        return ans;\n        \n        \n    }\n};",
    "submit_ts": "1717298050",
    "subm_id": "1274765566"
}