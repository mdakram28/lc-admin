{
    "username": "sujithkp",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        int ans = INT_MAX;\n        vector<pair<int,int>> a(n), b(n);\n        // 13, 20, 12, 8\n        // -7, -10, 8, 8\n \n       for (int i = 0; i < n; i++) {\n           a[i] = make_pair(points[i][0] + points[i][1], i);\n           b[i] = make_pair(points[i][0] - points[i][1], i);\n       }\n       sort(a.begin(), a.end());\n       sort(b.begin(), b.end());\n        \n        \n        for(int i = 0 ; i < n ; i++) {\n            int w,x,y,z;\n            if(a[n-1].second == i) {\n                w = a[n-2].first;\n            } else {\n                w = a[n-1].first;\n            }\n            \n            if(a[0].second == i) {\n                x = a[1].first;\n            } else {\n                x = a[0].first;\n            }\n            \n            if(b[n-1].second == i) {\n                y = b[n-2].first;\n            } else {\n                y = b[n-1].first;\n            }\n            \n            if(b[0].second == i) {\n                z = b[1].first;\n            } else {\n                z = b[0].first;\n            }\t\n\n            ans = min(ans, max(w - x, y - z)) ;\n        }\n        \n        return ans;\n    }\n};"
}