{
    "username": "utkarshraj_20",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n        \n        // Sort requirements by endi\n        sort(requirements.begin(), requirements.end());\n        \n        vector<vector<int>> dp(n + 1, vector<int>(401, 0));\n        dp[0][0] = 1;\n        \n        for (int i = 1; i <= n; ++i) {\n            for (int j = 0; j <= 400; ++j) {\n                for (int k = 0; k < i; ++k) {\n                    if (j >= k) {\n                        dp[i][j] = (dp[i][j] + dp[i-1][j-k]) % MOD;\n                    }\n                }\n            }\n            \n            // Apply all requirements for this length\n            for (const auto& req : requirements) {\n                if (req[0] == i - 1) {\n                    vector<int> new_dp(401, 0);\n                    new_dp[req[1]] = dp[i][req[1]];\n                    dp[i] = new_dp;\n                    break;  // Since endi are unique\n                }\n            }\n        }\n        \n        return dp[n][requirements.back()[1]];\n\n    }\n};",
    "submit_ts": 1719069851.0
}