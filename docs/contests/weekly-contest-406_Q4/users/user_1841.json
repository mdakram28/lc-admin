{
    "username": "goldenliang",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int cntX = 1, cntY = 1;\n        int[][] arr = new int[m + n - 2][2];\n        for (int i = 0; i < horizontalCut.length; i++) {\n            arr[i][0] = horizontalCut[i];\n            arr[i][1] = 0;\n        }\n        for (int i = 0; i < verticalCut.length; i++) {\n            arr[m - 1 + i][0] = verticalCut[i];\n            arr[m - 1 + i][1] = 1;\n        }\n        long res = 0;\n        Arrays.sort(arr, (a, b) -> b[0] - a[0]);\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i][1] == 0) {\n                res += (long) arr[i][0] * cntX;\n                cntY++;\n            } else {\n                res += (long) arr[i][0] * cntY;\n                cntX++;\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1720925882",
    "subm_id": "546442583"
}