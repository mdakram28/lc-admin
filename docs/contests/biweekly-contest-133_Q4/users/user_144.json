{
    "username": "sshikhar_7",
    "submission": "class Solution {\npublic:\n    int dp [300][401];\n    int mod = 1000000007;\n\n    int solve (int i,int taken,int n,vector<int> &need){\n        if(i == n){\n            return 1;\n        }\n\n        if(dp[i][taken] != -1){\n            return dp[i][taken];\n        }\n\n        int ans = 0;\n        for(int j = 0 ; j <= i ; j++){\n            if(taken + j > 400){\n                break;\n            }\n            if(need[i] == -1){\n                ans = ((ans % mod) + (solve(i + 1,taken + j,n,need) % mod)) % mod;\n            }\n            else{\n                if(taken + j == need[i]){\n                    ans = ((ans % mod) + (solve(i + 1,taken + j,n,need) % mod)) % mod;\n                }\n            }\n        }\n        \n\n        return dp[i][taken] = ans;\n    }\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        memset(dp,-1,sizeof(dp));\n        vector <int> need (n,-1);\n        for(auto it : requirements){\n            need[it[0]] = it[1];\n        }\n        return solve(0,0,n,need);\n    }\n};",
    "submit_ts": 1719069040.0
}