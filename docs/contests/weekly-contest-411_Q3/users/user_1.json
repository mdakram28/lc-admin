{
    "username": "rvrty5",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        \n        if k in {1, 3, 9}:\n            return '9' * n\n        \n        elif k == 5:\n            if n == 1:\n                return '5'\n            else:\n                return '5' + '9' * (n - 2) + '5'\n        \n        elif k == 2:\n            if n == 1:\n                return '8'\n            else:\n                return '8' + '9' * (n - 2) + '8'\n        \n        elif k == 4:\n            if n == 1:\n                return '8'\n            elif n == 2:\n                return '88'\n            elif n == 3:\n                return '888'\n            else:\n                return '88' + '9' * (n - 4) + '88'\n        \n        elif k == 8:\n            if n <= 5:\n                return '8' * n\n            else:\n                return '888' + '9' * (n - 6) + '888'\n\n        elif k == 6:\n            if n == 1:\n                return '6'\n            elif n == 2:\n                return '66'\n            elif n == 3:\n                return '888'\n            else:\n                ans = '8' + '9' * (n - 2) + '8'\n                m = 0\n                d = [1] * (n + 1)\n                for i in range(1, n + 1):\n                    d[i] = d[i - 1] * 10 % k\n                for i in range(n):\n                    m = (m + (int(ans[i]) * d[i])) % k\n                p = 0\n                if n % 2:\n                    p = d[n >> 1]\n                else:\n                    p = (d[n >> 1] + d[n // 2 - 1]) % k\n                for i in range(10):\n                    if (m - i * p) % k == 0:\n                        if n % 2:\n                            ans = ans[:n >> 1] + str(9 - i) + ans[(n >> 1) + 1:]\n                        else:\n                            ans = ans[:n // 2 - 1] + str(9 - i) + str(9 - i) + ans[n // 2 + 1:]\n                        return ans\n\n        elif k == 7:\n            ans = '9' * n\n            m = 0\n            d = [1] * (n + 1)\n            for i in range(1, n + 1):\n                d[i] = d[i - 1] * 10 % k\n            for i in range(n):\n                m = (m + (int(ans[i]) * d[i])) % k\n            p = 0\n            if n % 2:\n                p = d[n >> 1]\n            else:\n                p = (d[n >> 1] + d[n // 2 - 1]) % k\n            for i in range(10):\n                if (m - i * p) % k == 0:\n                    if n % 2:\n                        ans = ans[:n >> 1] + str(9 - i) + ans[(n >> 1) + 1:]\n                    else:\n                        ans = ans[:n // 2 - 1] + str(9 - i) + str(9 - i) + ans[n // 2 + 1:]\n                    return ans\n        \n        return \"\"",
    "submit_ts": "1723949929",
    "subm_id": "1359732679"
}