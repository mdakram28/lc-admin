{
    "username": "Haocheng",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        \n        vector<int> dp(n, 0);\n        \n        int right = 0, zero = 0, one = 0;\n        for (int left = 0; left < n; ++left) {\n            while (right < n) {\n                if (s[right] == '0') ++zero;\n                else ++one;\n                \n                if (zero > k && one > k)\n                    break;\n                \n                right++;\n            }\n            \n            if (right < n) {\n                if (s[right] == '0') --zero;\n                else --one;\n            }\n            \n            dp[left] = right;\n            cout << dp[left] << \",\";\n            \n            if (s[left] == '0') --zero;\n            else --one;\n        }\n        cout << endl;\n        \n        vector<long long> sum(n + 1, 0);\n        for (int i = 0; i < n; ++i)\n            sum[i + 1] = sum[i] + (dp[i] - i);\n        \n        vector<long long> result;\n        for (auto& q : queries) {\n            int bound = upper_bound(dp.begin(), dp.end(), q[1] + 1) - dp.begin() - 1;\n            long long l = bound >= q[0] ? q[1] - bound : q[1] - q[0] + 1;\n            long long add = l * (l + 1) / 2;\n            //cout << \"bound = \" << bound << endl;\n            //cout << \"l = \" << l << endl;\n            //cout << \"add = \" << add << endl;\n            if (bound < q[0]) result.push_back(add);\n            else result.push_back(sum[bound + 1] - sum[q[0]] + add);\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1723950674",
    "subm_id": "556400596"
}