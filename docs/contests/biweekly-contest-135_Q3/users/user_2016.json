{
    "username": "abhay__krn",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        int ans = n;\n        vector<int> temp;\n        map<int, vector<int>> mp;\n        for (int i = 0; i < n / 2; ++i) {\n            mp[abs(nums[i]-nums[n - i - 1])].push_back(max({nums[i], nums[n - i - 1], k - nums[i], k - nums[n - i - 1]}));\n            temp.push_back(max({nums[i], nums[n - i - 1], k - nums[i], k - nums[n - i - 1]}));\n        }\n        sort(temp.begin(), temp.end());\n        for (const auto &it : mp) {\n            int curr = lower_bound(temp.begin(), temp.end(), it.first) - temp.begin() + n/2 - it.second.size(); \n            for (const int &itt : it.second)\n                if (itt < it.first)\n                    curr--;\n            ans = min(ans, curr);\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1721490350",
    "subm_id": "1327480155"
}