{
    "username": "Behrooz Sepehry",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        D0 = {dd: (sorted(set((dd * xx) % 10 for xx in range(1, 11)), reverse=True)) for dd in range(1, 10)}\n        if k == 1:\n            return \"9\" * n\n\n        @functools.lru_cache(None)\n        def dp(i, modk):\n            if i >= ((n + 1) // 2):\n                if modk == 0:\n                    return 99\n                else:\n                    return -1\n            if i == 0:\n                D = D0[k]\n            else:\n                D = range(9, -1, -1)\n            for d in D:\n                if (n - i - 1) != i:\n                    ppp = pow(10, i, k) + pow(10, n - i - 1, k)\n                else:\n                    ppp = pow(10, i, k)\n                modk2 = (modk + d * ppp) % k\n                if dp(i + 1, modk2) >= 0:\n                    return d\n            return -1\n\n        modk = 0\n        sol = []\n        for i in range((n + 1) // 2):\n            d = dp(i, modk)\n            ppp = pow(10, i, k) + pow(10, n - i - 1, k)\n            modk = (modk + d * ppp) % k\n            sol.append(str(d))\n        for i in range(n // 2):\n            sol.append(sol[n // 2 - i - 1])\n        dp.cache_clear()\n        return ''.join(sol)\n",
    "submit_ts": "1723950994",
    "subm_id": "1359760512"
}