{
    "username": "sparkwenc",
    "submission": "\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<vector<int>> data(n, vector<int>());\n        for (int i = 0; i < n - 1; i++)\n            data[i].emplace_back(i + 1);\n        vector<int> res;\n\n        set<int> path;\n        for (int i = 0; i < n; i++)\n            path.insert(i);        \n\n        for (auto query : queries) {\n            int u = query[0], v = query[1];\n            \n            auto it = path.find(u);\n            if (it == path.end()) {\n                res.emplace_back(path.size() - 1);\n                continue;\n            }\n            for (it++; it != path.end() && (*it) < v;) {\n                path.erase(it++);\n            }\n            \n            res.emplace_back(path.size() - 1);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722742858",
    "subm_id": "1343778729"
}