{
    "username": "jacky3627",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        unordered_map<int, int> diffFreq;\n        for (int i = 0; i < nums.size() / 2; i++) {\n            int diff = abs(nums[i] - nums[nums.size() - 1 - i]);\n            diffFreq[diff]++;\n        }\n\n        priority_queue<pair<int, int>> pq;\n        for (auto& [diff, freq] : diffFreq) {\n            pq.push({freq, diff});\n        }\n\n        int result = nums.size();\n        int topFreq = pq.top().first;\n        \n        while (!pq.empty() && pq.top().first >= topFreq - 1) {\n            auto [freq, diff] = pq.top();\n            pq.pop();\n            int count = 0;\n            for (int i = 0; i < nums.size() / 2; i++) {\n                int a = nums[i];\n                int b = nums[nums.size() - 1 - i];\n                int d = abs(a-b);\n                if (d == diff) continue;\n                if (a - diff <= k && a - diff >= 0) {\n                    count += 1;\n                } else if (b - diff <= k && b - diff >= 0) {\n                    count += 1;\n                } else if (a + diff <= k || b + diff <= k) {\n                    count += 1;\n                } else {\n                    count += 2;\n                }\n            }\n            result = min(result, count);\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1721488068",
    "subm_id": "1327410505"
}