{
    "username": "loving-i2hodesgux",
    "submission": "def rotate(ps,d=1):\n        res = []\n        for x,y in ps:\n            if d==1:\n                xx,yy = x-y,x+y\n            else:\n                xx,yy = x+y,-x+y\n            res.append([xx,yy])\n        return res\n    \n\nclass Solution:\n    \n    def minimumDistance(self, points: List[List[int]]) -> int:\n        ps = rotate(points)\n        xs,ys = [],[]\n        for x,y in ps:\n            xs.append(x)\n            ys.append(y)\n        xs.sort(); ys.sort()\n\n        mid = 1000000000\n        for x,y in ps:\n            mix,miy = xs[-1]-xs[0],ys[-1]-ys[0]\n            if x==xs[0]:\n                mix = xs[-1]-xs[1]\n            elif x==xs[-1]:\n                mix = xs[-2]-xs[0]\n            if y==ys[0]:\n                miy = ys[-1]-ys[1]\n            elif y==ys[-1]:\n                miy = ys[-2]-ys[0]\n\n            \n\n            cur = max(mix,miy)\n           # print((x,y),mix,miy,cur,mid)\n            mid = min(mid, cur)\n        return mid\n        \n\n\n            "
}