{
    "username": "RickeyZheng",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        long long l = 0;\n        long long r = 0;\n        long long sol = INT_MAX;\n        vector<long long> arr(31);\n        long long cur = 0;\n        while(r<nums.size()){\n            long long bit = 1;\n            for(int i=0; i<31; i++){\n                if(bit&nums[r]){\n                    arr[i]++;\n                    if(arr[i]==r-l+1 && !(bit&cur)){\n                        cur += bit;\n                    }\n                }\n                else{\n                    if(bit&cur){\n                        cur-=bit;\n                    }\n                }\n\n                bit *= 2;\n            }\n            sol = min(sol, abs(k-cur));\n\n            while(l<r && cur<k){\n                bit = 1;\n                for(int i=0; i<31; i++){\n                    if(bit&nums[l]){\n                        arr[i]--;\n                        if(arr[i]==0 && (bit&cur)){\n                            cur -= bit;\n                        }\n\n                    }\n                    else{\n                        if(arr[i]==r-l && !(bit&cur)){  \n                            cur += bit;\n                        }\n                    }\n\n                    bit *= 2;\n                }\n                sol = min(sol, abs(k-cur));\n\n                l++;\n            }\n\n            sol = min(sol, abs(k-cur));\n\n            r++;\n        }\n        return sol;\n\n    }\n};",
    "submit_ts": 1717300533.0
}