{
    "username": "jaskaransingh1255",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n     \n        sort(horizontalCut.begin(), horizontalCut.end(),greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(),greater<int>());\n        \n        int h = 0, v = 0;\n        long long horizontalSeg = 1, verticalSeg= 1;\n        long long total = 0;\n\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                total += static_cast<long long>(horizontalCut[h]) * verticalSeg;\n                h++;\n                horizontalSeg++;\n            } else {\n              \n                total += static_cast<long long>(verticalCut[v]) * horizontalSeg;\n                v++;\n                verticalSeg++;\n            }\n        }\n        while (h < horizontalCut.size()) {\n            total += static_cast<long long>(horizontalCut[h]) * verticalSeg;\n            h++;\n        }\n        while (v < verticalCut.size()) {\n            total += static_cast<long long>(verticalCut[v]) * horizontalSeg;\n            v++;\n        }\n\n        return total;\n    }\n};",
    "submit_ts": "1720926798",
    "subm_id": "1320296649"
}