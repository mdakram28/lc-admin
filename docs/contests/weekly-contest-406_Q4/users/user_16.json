{
    "username": "RkRoy",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        List<int[]> cuts = new ArrayList<>();\n        for (int i = 0; i < horizontalCut.length; i++) {\n            cuts.add(new int[]{horizontalCut[i], 0});\n        }\n        for (int i = 0; i < verticalCut.length; i++) {\n            cuts.add(new int[]{verticalCut[i], 1});\n        }\n        Collections.sort(cuts, (a, b) -> b[0] - a[0]);\n        int hs = 1;\n        int vs = 1;\n\n        long res = 0;\n        for (int[] cut : cuts) {\n            int cost = cut[0];\n            int type = cut[1];\n\n            if (type == 0) {\n                res += cost * vs;\n                hs++;\n            }\n            else {\n                res += cost * hs;\n                vs++;\n            }\n        }\n\n        return res;\n    }\n}",
    "submit_ts": "1720924649",
    "subm_id": "1320225268"
}