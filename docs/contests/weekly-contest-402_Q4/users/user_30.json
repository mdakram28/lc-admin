{
    "username": "scanhex",
    "submission": "struct st {\n    vector<int> t;\n    int n;\n    st (int n) : t(2 * n), n(n) {}\n    int su(int l, int r){\n        l += n;\n        r += n;\n        int ans = 0;\n        while (l < r) {\n            if (l & 1) ans += t[l++];\n            if (r & 1) ans += t[--r];\n            l >>= 1;\n            r >>= 1;\n        }\n        return ans;\n    }\n    void set(int p, int v) {\n        p += n;\n        t[p] = v;\n        for (p >>= 1; p > 0; p >>= 1) {\n            t[p] = t[p << 1] + t[p << 1 | 1];\n        }\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums1, vector<vector<int>>& queries) {\n        auto nums = nums1;\n        int n = nums.size();\n        auto ispeak = [&](int i) {\n            if (i == 0 || i == n - 1) return false;\n            return nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n        };\n        st it(n);\n        for (int i = 0; i < n; ++i) {\n            if (ispeak(i)) {\n                it.set(i, 1);\n            }\n        }\n        vector<int> ans;\n        for (auto& q : queries) {\n            if (q[0] == 1) {\n                int res = it.su(q[1], q[2] + 1);\n                if (ispeak(q[1])) --res;\n                if (q[1] != q[2] && ispeak(q[2])) --res;\n                ans.push_back(res);\n            } else {\n                int ind = q[1], val = q[2];\n                nums[ind] = val;\n                if (ind > 0)\n                    it.set(ind - 1, ispeak(ind - 1));\n                if (ind < n - 1)\n                    it.set(ind + 1, ispeak(ind + 1));\n                it.set(ind, ispeak(ind));\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": 1718505795.0
}