{
    "username": "\u5343\u53e4",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int n = board.length;\n        int m = board[0].length;\n        long res = Long.MIN_VALUE;\n\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                max = Math.max(max,board[i][j]);\n            }\n        }\n\n\n        for (int i1 = 0; i1 < n; i1++) {\n            for (int i2 = i1 +1; i2 < n; i2++) {\n                for (int i3 = i2+1; i3 < n; i3++) {\n                    for (int j1 = 0; j1 < m; j1++) {\n                        if (board[i1][j1] + max  + max <= res){\n                            continue;\n                        }\n                        for (int j2 = 0; j2 < m; j2++) {\n                            if (j2 == j1) {\n                                continue;\n                            }\n                            long sum = ((long) board[i1][j1]) + board[i2][j2];\n                            if (sum + max <= res){\n                                continue;\n                            }\n                            for (int j3 = 0; j3 < m; j3++) {\n                                if (j3 == j1 || j3 == j2) {\n                                    continue;\n                                }\n                                res = Math.max(res, ( sum + board[i3][j3]));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1723910049",
    "subm_id": "556339289"
}