{
    "username": "kaq",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        c.resize(41);\n        for (int i = 0; i <= 40; i++) {\n            c[i].resize(i + 1, -1);\n            c[i][0] = 1;\n            c[i][i] = 1;\n        }\n        long long powTwo = 1;\n        int count = 1;\n        int ans = 0;\n        while (true) {\n            if (k >= powTwo - count && k <= powTwo) {\n                int subtracts = powTwo - k;\n                ans += choose(count, subtracts);\n            } else if (k < powTwo - count) {\n                break;\n            }\n            powTwo <<= 1;\n            count++;\n        }\n        return ans;\n    }\n    \n    int choose(int n, int k) {\n        if (c[n][k] == -1) {\n            return c[n][k] = choose(n - 1, k - 1) + choose(n - 1, k);\n        }\n        return c[n][k];\n    }\n    \n    vector<vector<int>> c;\n};",
    "submit_ts": "1716086937",
    "subm_id": "1261767859"
}