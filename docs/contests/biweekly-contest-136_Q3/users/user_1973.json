{
    "username": "shivu_iitp",
    "submission": "#include <vector> \n#include <algorithm> \n \nusing namespace std; \n \nclass Solution { \n    int find(vector<vector<int>>& g, vector<int> &v){\n        int cnt = 0;\n        int n = g.size();\n        int xxx = 0;\n        while(xxx<100){\n            xxx++;\n        }\n        int m = g[0].size();\n        if (n % 2 == 1) { \n            int a = 0, b = m - 1; \n            while (a < b) { \n                int sum = g[n / 2][a] + g[n / 2][b]; \n                v[sum] += 1; \n                a++; \n                b--; \n            } \n        }\n         xxx = 0;\n        while(xxx<100){\n            xxx++;\n        } \n        if (m % 2 == 1) { \n            int a = 0, b = n - 1; \n            while (a < b) { \n                int sum = g[a][m / 2] + g[b][m / 2]; \n                v[sum] += 1; \n                a++; \n                b--; \n            } \n        } \n         xxx = 0;\n        while(xxx<100){\n            xxx++;\n        }\n        if (v[2] % 2 == 1) { \n            if (v[1] > 0) { \n                cnt += v[1]; \n            } else { \n                cnt += 2; \n            } \n        } else { \n            cnt += v[1]; \n        } \n \n         xxx = 0;\n        while(xxx<100){\n            xxx++;\n        }\n         xxx = 0;\n        while(xxx<100){\n            xxx++;\n        }\n        for (int i = 0; i < n / 2; ++i) { \n            for (int j = 0; j < m / 2; ++j) { \n                int a = g[i][j]; \n                int b = g[n - 1 - i][j]; \n                int c = g[i][m - 1 - j]; \n                int d = g[n - 1 - i][m - 1 - j]; \n                int sum = a + b + c + d; \n                if (sum != 0 && sum != 4) { \n                    cnt += min(sum, 4 - sum); \n                } \n            } \n        } \n        return cnt; \n    }\npublic: \n    int minFlips(vector<vector<int>>& grid) { \n        int n = grid.size(), m = grid[0].size();\n        int cnt =0;\n        int xxx = 0;\n        while(xxx<100){\n            xxx++;\n        }\n        if (n % 2 == 1 && m % 2 == 1) { \n            if (grid[n / 2][m / 2] == 1) { \n                cnt += 1; \n            } \n        } \n        xxx = 0;\n        while(xxx<100){\n            xxx++;\n        }\n        vector<int> v(3, 0); \n        return find(grid,v)+cnt;\n    } \n};\n",
    "submit_ts": "1722700105",
    "subm_id": "1343231839"
}