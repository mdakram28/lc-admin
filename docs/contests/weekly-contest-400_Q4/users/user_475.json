{
    "username": "3727",
    "submission": "class Solution {\npublic:\n    \n    int val(vector<int> &v , int len) {\n        int ans{0};\n        for(int i = 0 ; i < 32 ; i ++) {\n            ans += (v[i] == len) * (1 << i);\n        }\n        return ans;\n    }\n    \n    void add(int x , vector<int> &v) {\n        for(int i = 0 ; i < 32 ; i ++) {\n            v[i] += ((x & (1 << i)) != 0);\n        }\n    }\n    \n    void sub(int x , vector<int> &v) {\n        for(int i = 0 ; i < 32 ; i ++) {\n            v[i] -= ((x & (1 << i)) != 0);\n        }\n    }\n    \n    \n    int minimumDifference(vector<int> &a , int k) {\n        int n = a.size() , ans = 1e9;\n        vector<int> v(32);\n        for(int i = 0 , j = 0 ; i < n ; i ++) {\n            if(i == j) {\n                add(a[j ++] , v);\n                ans = min(ans , abs(val(v , 1) - k));\n            }\n            while(j < n && val(v , j - i) > k) {\n                add(a[j] , v);\n                if(val(v , j - i + 1) <= k) {\n                    ans = min(ans , k - val(v , j - i + 1));\n                    sub(a[j] , v);\n                    break;\n                }\n                ans = min(ans , val(v , j - i + 1) - k);\n                j ++;\n            }\n            sub(a[i] , v);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298594.0
}