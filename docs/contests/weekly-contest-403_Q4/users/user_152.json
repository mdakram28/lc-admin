{
    "username": "etian6795",
    "submission": "class Solution {\n    int ans = Integer.MAX_VALUE;\n    int m, n;\n    public int minimumSum(int[][] grid) {\n        m = grid.length;\n        n = grid[0].length;\n        int top = m;\n        int bot = 0;\n        int left = n;\n        int right = 0;\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n                if(grid[i][j] == 1) {\n                    top = Math.min(top, i);\n                    left = Math.min(left, j);\n                    bot = Math.max(bot, i);\n                    right = Math.max(right, j);\n                }\n            }\n        }\n        \n        for(int i = left; i <= right; i++) {\n            for(int j = i; j <= right; j++) {\n                int tempAns = 0;\n                int temp = minArea(grid, top, bot, i, j);\n                if(temp == -1) continue;\n                tempAns += temp;\n                temp = minArea(grid, top, bot, 0, i-1);\n                if(temp == -1) continue;\n                tempAns += temp;\n                temp = minArea(grid, top, bot, j+1, n-1);\n                if(temp == -1) continue;\n                tempAns += temp;\n                ans = Math.min(ans, tempAns);\n            }\n        }\n        \n        for(int i = top; i <= bot; i++) {\n            for(int j = i; j <= bot; j++) {\n                int tempAns = 0;\n                int temp = minArea(grid, i, j, left, right);\n                if(temp == -1) continue;\n                tempAns += temp;\n                temp = minArea(grid, 0, i-1, left, right);\n                if(temp == -1) continue;\n                tempAns += temp;\n                temp = minArea(grid, j+1, m-1, left, right);\n                if(temp == -1) continue;\n                tempAns += temp;\n                ans = Math.min(ans, tempAns);\n            }\n        }\n        \n        for(int i = top; i <= bot; i++) {\n            for(int j = left; j <= right; j++) {\n                int tempAns = 0;\n                int temp = minArea(grid, top, i, left, j);\n                if(temp == -1) continue;\n                tempAns += temp;\n                \n                int tempAns1 = tempAns;\n                \n                temp = minArea(grid, i+1, bot, left, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, top, i, j+1, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n                \n                tempAns1 = tempAns;\n                temp = minArea(grid, i+1, bot, left, j);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, top, bot, j+1, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n            }\n        }\n        \n        for(int i = top; i <= bot; i++) {\n            for(int j = right; j >= left; j--) {\n                int tempAns = 0;\n                int temp = minArea(grid, top, i, j, right);\n                if(temp == -1) continue;\n                tempAns += temp;\n                \n                int tempAns1 = tempAns;\n                \n                temp = minArea(grid, top, bot, left, j-1);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, i+1, bot, j, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n                \n                tempAns1 = tempAns;\n                temp = minArea(grid, top, i, left, j-1);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, i+1, bot, left, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n            }\n        }\n        \n        for(int i = bot; i >= top; i--) {\n            for(int j = left; j <= right; j++) {\n                int tempAns = 0;\n                int temp = minArea(grid, i, bot, left, j);\n                if(temp == -1) continue;\n                tempAns += temp;\n                \n                int tempAns1 = tempAns;\n                \n                temp = minArea(grid, top, i-1, left, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, i, bot, j+1, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n                \n                tempAns1 = tempAns;\n                temp = minArea(grid, top, i-1, left, j);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, top, bot, j+1, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n            }\n        }\n        \n        for(int i = bot; i >= top; i--) {\n            for(int j = right; j >= left; j--) {\n                int tempAns = 0;\n                int temp = minArea(grid, i, bot, j, right);\n                if(temp == -1) continue;\n                tempAns += temp;\n                \n                int tempAns1 = tempAns;\n                \n                temp = minArea(grid, top, i-1, left, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, i, bot, left, j-1);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n                \n                tempAns1 = tempAns;\n                temp = minArea(grid, top, i-1, j, right);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                temp = minArea(grid, top, bot, left, j-1);\n                if(temp == -1) continue;\n                tempAns1 += temp;\n                ans = Math.min(ans, tempAns1);\n            }\n        }\n        \n        return ans;\n        \n    }\n    \n    public int minArea(int[][] grid, int top, int bot, int left, int right) {\n        int ux = 31;\n        int uy = 31;\n        int lx = -1;\n        int ly = -1;\n        boolean found = false;\n        for(int i = top; i <= bot; i++) {\n            for(int j = left; j <= right; j++) {\n                if(grid[i][j] == 1) {\n                    ux = Math.min(ux, i);\n                    uy = Math.min(uy, j);\n                    lx = Math.max(lx, i);\n                    ly = Math.max(ly, j);\n                    found = true;\n                }\n            }\n        }\n        if(!found) return -1;\n        return (lx-ux+1)*(ly-uy+1);\n    }\n}",
    "submit_ts": "1719112798",
    "subm_id": "1297309218"
}