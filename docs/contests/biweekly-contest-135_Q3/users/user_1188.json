{
    "username": "mdnizamuddinfarhaan",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        vector<int> sum(k+2, 0);\n        int n = nums.size();\n        map<int, int> mp;\n\n        for(int i=0;i<n/2;i++){\n            if(nums[i] < nums[n-i-1]) {\n                swap(nums[i], nums[n-i-1]);\n            }\n\n            int diff = nums[i] - nums[n-i-1];\n            mp[diff] += 1;\n\n            int temp = min(k-nums[i], nums[n-i-1]);\n            sum[k-temp+1] += 1;\n        }\n        \n        for(int i=1;i<=k;i++){\n            sum[i] += sum[i-1];\n        }\n\n        int mnValue = n;\n        for(int i=0;i<=k;i++){\n            int cost = n/2 - mp[i] + sum[i];\n            mnValue = min(mnValue, cost);\n        }\n\n        return mnValue;\n    }\n};",
    "submit_ts": "1721488647",
    "subm_id": "1327428880"
}