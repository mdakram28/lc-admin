{
    "username": "Neil Chetty",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length, n = board[0].length;\n        Pair<Integer, Integer>[][] ok = (Pair<Integer, Integer>[][]) new Pair[m][3];\n        for(int i = 0; i < m; i++) {\n            int index = 0;\n            int[][] lol = new int[n][2];\n            for(int j = 0; j < n; j++) {\n                lol[j][0] = board[i][j];\n                lol[j][1] = j;\n            }\n            // for(int[] rorr: lol) System.out.println(Arrays.toString(rorr));\n            Arrays.sort(lol, Comparator.comparingInt(a->a[0]));\n            for(int j = n-1; j>= n-1-2; j--) ok[i][index++] = new Pair<Integer, Integer>(lol[j][0], lol[j][1]); \n        }\n        // for(Pair<Integer, Integer>[] lol : ok) System.out.println(Arrays.toString(lol));\n        long result = Long.MIN_VALUE;\n        for(int i = 0; i < m; i++) {\n            for(int ii = 0; ii < 3; ii++) {\n                int c1 = ok[i][ii].getValue();\n                for(int j = 0; j < m; j++) {\n                    if(j == i) continue;\n                    for(int jj = 0; jj < 3; jj++) {\n                        int c2 = ok[j][jj].getValue();\n                        for(int k = 0; k < m; k++) {\n                            if(k == i || k == j) continue;\n                            for(int kk = 0; kk < 3; kk++) {\n                                int c3 = ok[k][kk].getValue();\n                                if(c1 != c2 && c2 != c3 && c1 != c3) result = Math.max(result, (long)ok[i][ii].getKey()+ok[j][jj].getKey()+ok[k][kk].getKey());\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // System.out.println();\n        return result;\n    }\n}",
    "submit_ts": "1723907733",
    "subm_id": "1359121836"
}