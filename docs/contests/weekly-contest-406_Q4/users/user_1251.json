{
    "username": "deepli",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n\n\n        int i = m-2, j = n-2;\n        int horizontalPieces = 1, verticalPieces = 1;\n        long totalCost = 0;\n\n        \n        while (i >= 0 && j >=0) {\n            \n            if (horizontalCut[i] > verticalCut[j]) {\n                \n                totalCost += (long)horizontalCut[i] * verticalPieces;\n                horizontalPieces++;\n                i--;\n            } else {\n                totalCost += (long)verticalCut[j] * horizontalPieces;\n                verticalPieces++;\n                j--;\n            }\n        }\n\n\n        while (i >= 0) {\n            totalCost += (long)horizontalCut[i] * verticalPieces;\n            horizontalPieces++;\n            i--;\n        }\n\n        // Process any remaining vertical cuts\n        while (j >= 0) {\n            totalCost += (long)verticalCut[j] * horizontalPieces;\n            verticalPieces++;\n            j--;\n        }\n\n        return totalCost;\n    }\n}",
    "submit_ts": "1720925847",
    "subm_id": "1320268109"
}