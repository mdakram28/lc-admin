{
    "username": "dineshhardasani2000",
    "submission": "class TrieNode{\n    public:\n    TrieNode* childs[26];\n    bool isEnd;\n    int cost;\n    TrieNode(){\n        for(int i=0;i<26;i++){\n            childs[i]=NULL;\n        }\n        this->isEnd=false;\n        cost = INT_MAX;\n    }\n};\nclass Trie{\n    public:\n    TrieNode* root;\n    Trie(){\n        root=new TrieNode();\n    }\n    void insert(string& word,int& cost){\n        TrieNode* cur=root;\n        for(int i=0;i<word.size();i++){\n            if(cur->childs[word[i]-'a']==NULL){\n                cur->childs[word[i]-'a']=new TrieNode();\n            }\n            cur = cur->childs[word[i]-'a'];\n        }\n        cur->isEnd=true;\n        cur->cost = min(cost,cur->cost);\n    }\n};\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie* trie = new Trie();\n        for(int i=0;i<words.size();i++){\n            trie->insert(words[i],costs[i]);\n        }\n        vector<int> dp(target.size()+1,-1);\n        dp[target.size()]=0;\n        for(int i=target.size()-1;i>=0;i--){\n            TrieNode* cur = trie->root;\n            for(int j=i;j<target.size();j++){\n                if(cur->childs[target[j]-'a']==NULL){\n                    break;\n                }\n                cur = cur->childs[target[j]-'a'];\n                if(cur->isEnd && dp[j+1]!=-1){\n                    if(dp[i]==-1) dp[i]=cur->cost+dp[j+1];\n                    else dp[i]=min(dp[i],cur->cost+dp[j+1]);\n                }\n            }\n        }\n        return dp[0];\n    }\n};",
    "submit_ts": "1720321916",
    "subm_id": "1312335724"
}