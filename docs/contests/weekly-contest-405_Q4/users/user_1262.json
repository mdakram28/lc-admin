{
    "username": "nobitanobi_123",
    "submission": "class Tries {\npublic:\n    unordered_map<char, Tries*> cld;\n    int cst;\n    \n    Tries() : cst(INT_MAX) {}\n};\n\nclass Try{\npublic:\n    Tries* root;\n    \n    Try() {\n        root = new Tries();\n    }\n    \n    void insertion(const string& word, int cost) {\n        Tries* node = root;\n        for (char c : word) \n        {\n            if (node->cld.find(c) == node->cld.end()) {\n                node->cld[c] = new Tries();\n            }\n            node = node->cld[c];\n        }\n        int x=node->cst;\n        node->cst = min(x, cost);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.length();\n        Try trie;    \n        int dp[n+1];\n        for(int i=0;i<n+1;i++)\n        dp[i]=INT_MAX;\n        dp[0] = 0;\n        \n        for (int i = 0; i < words.size(); i++) \n            trie.insertion(words[i], costs[i]);\n        \n       \n        for (int i = 0; i < n;i++) {\n            if (dp[i] == INT_MAX) \n            continue;\n            \n            Tries* node = trie.root;\n            int flag=1;\n            for (int j = i; j < n; j++) {\n                if (node->cld.find(target[j]) == node->cld.end()) {\n                    flag=0;\n                   \n                }\n                if(flag==0)\n                break;\n                node = node->cld[target[j]];\n                if (node->cst != INT_MAX) {\n                    int p=dp[i] + node->cst;\n                    dp[j + 1] = min(dp[j + 1],p);\n                }\n            }\n        }\n           if(dp[n]==INT_MAX)\n           return -1;\n        return dp[n];\n    }\n};\n",
    "submit_ts": "1720323795",
    "subm_id": "1312384227"
}