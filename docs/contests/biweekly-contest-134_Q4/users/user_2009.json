{
    "username": "fighter_phoenix",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long res = 0;\n        unordered_map<long long, long long> prev;\n        \n        for (int i = 0; i < n; ++i) {\n            std::unordered_map<long long, long long> curr;\n            \n            if (nums[i] == k) {\n                ++res;\n            }\n            \n            curr[nums[i]] = 1;\n            \n            for (const auto& [val, freq] : prev) {\n                long long new_and = val & nums[i];\n                \n                if (new_and == k) {\n                    res += freq;\n                }\n                \n                curr[new_and] += freq;\n            }\n            \n            prev = move(curr);\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720281113",
    "subm_id": "1311813585"
}