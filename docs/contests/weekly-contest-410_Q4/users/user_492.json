{
    "username": "WA_Automaton",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        '''\n        mod = int(10**9) + 7\n        cap = [nums[-1]]*len(nums)\n        for i in range(len(nums)-2, -1, -1):\n            cap[i] = min(nums[i], cap[i+1])\n        @cache\n        def dp(i, prev1):\n            if i == len(nums):\n                return 1\n            if nums[i] < prev1:\n                return 0\n            res = 0\n            prev2 = float('inf') if i == 0 else nums[i-1]-prev1\n            # nums[i]-x <= nums[i-1]-prev1 \n            # x >= nums[i]-nums[i-1] + prev1\n            start = prev1\n            if i > 0 and nums[i]-nums[i-1] + prev1 > start:\n                start = nums[i]-nums[i-1] + prev1\n            for x in range(start, cap[i]+1):\n                res += dp(i+1, x)\n                res %= mod\n            return res\n        ret = dp(0, 0)\n        dp.cache_clear()\n        return ret\n        '''\n        mod = int(10**9) + 7\n        cap = [nums[-1]]*len(nums)\n        for i in range(len(nums)-2, -1, -1):\n            cap[i] = min(nums[i], cap[i+1])\n        mx = max(nums)\n        n = len(nums)\n        dp = [[0 for _ in range(mx+1)] for _ in range(n+1)]\n        for x in range(cap[n-1]+1):\n            dp[-1][x] = 1\n        dp2 = [0]*(mx+1)\n        acc = 0\n        for x in range(cap[n-1], -1, -1):\n            acc += dp[-1][x]\n            dp2[x] = acc\n        #print(dp2)\n        for i in range(n-1, -1, -1):\n            for prev1 in range(nums[i], -1, -1):\n                start = prev1\n                if i > 0 and nums[i] - nums[i - 1] + prev1 > start:\n                    start = nums[i] - nums[i - 1] + prev1\n                '''\n                for x in range(start, cap[i]+1):\n                    dp[i][prev1] += dp[i+1][x]\n                    dp[i][prev1] %= mod\n                '''\n                if start >= len(dp2):\n                    continue\n                dp[i][prev1] += dp2[start]\n                dp[i][prev1] %= mod\n            dp2 = [0]*(mx+1)\n            acc = 0\n            for x in range(cap[i], -1, -1):\n                acc += dp[i][x]\n                dp2[x] = acc\n        return dp[0][0]\n",
    "submit_ts": "1723347379",
    "subm_id": "1351597590"
}