{
    "username": "vijaykatari23",
    "submission": "#define ll long long\n\nclass DisjointSet {\nprivate:\n    vector<ll> parent;\n    vector<ll> rank;\n    vector<ll> size;\npublic:\n    DisjointSet(ll n) {\n        parent.resize(n + 1 , 0);\n        rank.resize(n + 1);\n        size.resize(n + 1);\n        for(ll i = 0; i <= n; i++) {\n            parent[i] = i;\n            rank[i] = 0;\n            size[i] = 1;\n        }\n    }\n\n    ll find(ll node) {\n        if(parent[node] != node) {\n            parent[node] = find(parent[node]);\n        }\n        return parent[node];\n    }\n\n    void UnionByRank(ll x, ll y) {\n        ll px = find(x);\n        ll py = find(y);\n        if(px == py) {\n            return;\n        }\n        if(rank[px] < rank[py]) {\n            parent[px] = py;\n        }\n        else if(rank[px] > rank[py]) {\n            parent[py] = px;\n        }\n        else {\n            parent[py] = px;\n            rank[px]++;\n        }\n    }\n\n    void UnionBySize(ll x, ll y) {\n        ll px = find(x);\n        ll py = find(y);\n        if(px == py) {\n            return;\n        }\n        if(size[px] < size[py]) {\n            parent[px] = py;\n            size[py] += size[px];\n        }\n        else {\n            parent[py] = px;\n            size[px] += size[py];\n        }\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& A) {\n        ll N = A.size();\n        DisjointSet dsu(N);\n        for(int i = 0; i < N; ++i) \n            for(int j = i + 1; j < N; ++j) {\n                ll dist = (ll)(A[i][0] - A[j][0]) * (A[i][0] - A[j][0]) + (ll)(A[i][1] - A[j][1]) * (A[i][1] - A[j][1]);\n                dist -= (ll)(A[i][2] + A[j][2]) * (A[i][2] + A[j][2]);\n                if(dist <= 0)\n                    dsu.UnionBySize(i, j);\n            }\n        vector<vector<ll>> comp(N);\n        for(ll i = 0; i < N; ++i)\n            comp[dsu.find(i)].push_back(i);\n        for(auto v : comp) {\n            if(v.empty()) continue;\n            ll lx, rx, ly, ry;\n            lx = rx = A[v[0]][0];\n            ly = ry = A[v[0]][1];\n            for(auto i : v) {\n                ll a = A[i][0], b = A[i][1], r = A[i][2];\n                lx = min(lx, a - r);\n                rx = max(rx, a + r);\n                ly = min(ly, b - r);\n                ry = max(ry, b + r);\n            }\n            if(lx <= 0 && rx >= X) return false;\n            if(ly <= 0 && ry >= Y) return false;\n            if(rx >= X && ry >= Y) return false;\n            if(lx <= 0 && ly <= 0) return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722136864",
    "subm_id": "1335747212"
}