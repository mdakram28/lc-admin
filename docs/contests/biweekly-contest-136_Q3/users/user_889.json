{
    "username": "Pavel_For_Sure",
    "submission": "public class Solution \n{\n    public int MinFlips(int[][] grid) \n    {\n        int m = grid.Length, n = grid[0].Length, centerN = n / 2, centerM = m / 2, res = 0;\n\n        for (int i = 0; i < centerM; i++)\n        {\n            for (int j = 0; j < centerN; j++)\n            {\n                int cost = Check(i, j);\n                if (cost > 2)\n                    cost = 4 - cost;\n                res += cost;\n            }\n        }\n\n        bool haveVertical = n % 2 == 1, haveHorizontal = m % 2 == 1, verticalSwap = false, horizontalSwap = false;\n        int verticalOnes = 0, horisontalOnes = 0;\n\n        if (haveVertical)\n        {\n            for (int i = 0; i < centerM; i++)\n            {\n                if (grid[i][centerN] != grid[^(i + 1)][centerN])\n                {\n                    res++;\n                    verticalSwap = true;\n                }\n                else\n                {\n                    if (grid[i][centerN] == 1)\n                        verticalOnes += 2;\n                }\n            }\n        }\n\n        if (haveHorizontal)\n        {\n            for (int i = 0; i < centerN; i++)\n            {\n                if (grid[centerM][i] != grid[centerM][^(i + 1)])\n                {\n                    res++;\n                    horizontalSwap = true;\n                }\n                else\n                {\n                    if (grid[centerM][i] == 1)\n                        horisontalOnes += 2;\n                }\n            }\n        }\n\n        if (haveVertical && haveHorizontal && grid[centerM][centerN] == 1)\n            res++;\n\n        verticalOnes %= 4;\n        horisontalOnes %= 4;\n        if (verticalOnes != horisontalOnes && !horizontalSwap && !verticalSwap)\n            res += 2;\n\n        return res;\n\n        int Check(int i, int j)\n        {\n            int res = 0;\n            if (grid[i][j] == 0)\n                res++;\n            if (grid[i][^(j + 1)] == 0)\n                res++;\n            if (grid[^(i + 1)][j] == 0)\n                res++;\n            if (grid[^(i + 1)][^(j + 1)] == 0)\n                res++;\n\n            return res;\n        }\n    }\n}",
    "submit_ts": "1722698320",
    "subm_id": "1343176833"
}