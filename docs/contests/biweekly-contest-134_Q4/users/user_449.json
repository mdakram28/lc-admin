{
    "username": "l00",
    "submission": "# https://leetcode.cn/u/l00/\n\ndic = {1<<i:i for i in range(32)}\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        zore = [-1] * 32\n        one = [-1] * 32\n        breaks = -1\n        ans = 0\n        for i, num in enumerate(nums):\n            if num & k != k:\n                breaks = i\n                continue\n            \n            queue = []\n            tmp = num ^ k\n            while tmp:\n                low = tmp & -tmp\n                x = dic[low]\n                queue.append(x)\n                tmp ^= low\n            \n            tail = i\n            for index in queue:\n                tail = min(tail, zore[index])\n            if breaks < tail:\n                ans += tail - breaks\n            # print(\"i\",(i,num), \"queue\",queue,\"tail\",tail,\"breaks\",breaks)\n            for j in range(32):\n                if (num >> j) & 1 == 0:\n                    zore[j] = i\n            # print(\"zore\",zore)\n            \n        return ans\n\n\n\n",
    "submit_ts": "1720278967",
    "subm_id": "544565305"
}