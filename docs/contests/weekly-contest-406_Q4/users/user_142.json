{
    "username": "xiao-lin-baby",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<long long> horizontal(horizontalCut.begin(), horizontalCut.end());\n        priority_queue<long long> vertical(verticalCut.begin(), verticalCut.end());\n        long long totalCost = 0;\n        long long horizontalPieces = 1;\n        long long verticalPieces = 1;\n        while (!horizontal.empty() || !vertical.empty()) {\n            if (!horizontal.empty() && (vertical.empty() || horizontal.top() >= vertical.top())) {\n                totalCost += horizontal.top() * verticalPieces;\n                horizontal.pop();\n                horizontalPieces++;\n            } else {\n                totalCost += vertical.top() * horizontalPieces;\n                vertical.pop();\n                verticalPieces++;\n            }\n        }\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925121",
    "subm_id": "546437026"
}