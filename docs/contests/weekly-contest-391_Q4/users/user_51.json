{
    "username": "Maruzensky",
    "submission": "from collections import Counter\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        ps = [(x, y, x + y, x - y) for x, y in points]\n        \n        ps1 = sorted(ps, key = lambda x: x[2])\n        ps2 = sorted(ps, key = lambda x: x[3])\n        \n        answer = max(ps1[-1][2] - ps1[0][2], ps2[-1][3] - ps2[0][3])\n        for x, y, _, _ in ps1:\n            if (x, y) == ps1[0][:2]:\n                d1 = ps1[1][2]\n            else:\n                d1 = ps1[0][2]\n            if (x, y) == ps1[-1][:2]:\n                d2 = ps1[-2][2]\n            else:\n                d2 = ps1[-1][2]\n            if (x, y) == ps2[0][:2]:\n                d3 = ps2[1][3]\n            else:\n                d3 = ps2[0][3]\n            if (x, y) == ps2[-1][:2]:\n                d4 = ps2[-2][3]\n            else:\n                d4 = ps2[-1][3]\n                \n            # print(x, y, d1, d2, d3, d4)\n                \n            answer = min(answer, max(d2 - d1, d4 - d3))\n                \n        return answer"
}