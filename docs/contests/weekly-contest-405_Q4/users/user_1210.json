{
    "username": "abhishekpra111",
    "submission": "class Solution {\npublic:\n    class TrieNode {\n    public:\n        int cost;\n        TrieNode* children[26];\n        TrieNode() {\n            cost = -1;\n            for (int i = 0; i < 26; i++) {\n                children[i] = NULL;\n            }\n        }\n    };\n    int dp[500001];\n    class Trie {\n    public:\n        TrieNode* root;\n        Trie() {\n            root = new TrieNode();\n        }\n        void add(TrieNode* root, string& word, int i, int cost) {\n            if (word.size() == i) {\n                if(root->cost!=-1)root->cost = min(root->cost,cost);\n                else root->cost=cost;\n                return;\n            }\n            int idx = word[i] - 'a';\n            TrieNode* child;\n            if (root->children[idx] != NULL) {\n                child = root->children[idx];\n            } else {\n                child = new TrieNode();\n                child->cost=-1;\n                root->children[idx] = child;\n            }\n            add(child, word, i + 1, cost);\n        }\n        void add(string& word, int cost) {\n            add(root, word, 0, cost);\n        }\n    };\n\n    Trie* t;\n    string tar;\n\n    int solve(TrieNode* node, int i) {\n        if (i == tar.size()) return 0;\n        int res = 1e9;\n        if(dp[i]!=-1)return dp[i];\n        int n = tar.size();\n        for (int j = i; j < n; j++) {\n            int c = tar[j] - 'a';\n            if (node->children[c] == NULL) {\n                break;\n            } else {\n                node = node->children[c];\n                if (node->cost != -1) {\n                    res = min(res, node->cost + solve(t->root, j + 1));\n                }\n            }\n        }\n        return dp[i]= res;\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        t = new Trie();\n        for (int i = 0; i < words.size(); i++) {\n            t->add(words[i], costs[i]);\n        }\n        memset(dp,-1,sizeof(dp));\n        this->tar = target;\n        int ans = solve(t->root, 0);\n        return ans == 1e9 ? -1 : ans;\n    }\n};\n",
    "submit_ts": "1720323710",
    "subm_id": "1312382158"
}