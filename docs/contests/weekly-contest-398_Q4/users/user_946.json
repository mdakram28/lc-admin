{
    "username": "you_jia",
    "submission": "class Solution {\nprivate:\n    long long to_key(int x, int jump, int back) {\n        return x * 1000LL + jump * 10LL + back;\n    }\npublic:\n    int waysToReachStair(int k) {\n        int bound = k + 10;\n        int ans = k == 1;\n        map<long long, int> mp;\n        mp[to_key(1,0,0)] = 1;\n        while(!mp.empty()) {\n            long long key = mp.begin()->first;\n            int c = mp.begin()->second;\n            mp.erase(mp.begin());\n            \n            int back = key % 10; key /= 10;\n            int jump = key % 100; key /= 100;\n            int x = key;\n            \n            // cout << \"cur \" << x << \" \" << jump << \" \" << back << \" \" << c << endl;\n            \n            long long next_jump = (long long)x + (1LL << jump);\n            long long next_back = (long long)x -1;\n\n            if(x && back == 0) {\n                mp[to_key(next_back, jump, 1)] += c;\n                // cout << \"push (back) \" << next_back << \" \" << jump << \" \" << 1 << endl;\n                if(next_back == k) {\n                    ans += c;\n                }\n            }\n            if(next_jump < bound) {\n                mp[to_key(next_jump, jump + 1, 0)] += c;\n                // cout << \"push (jump) \" << next_jump << \" \" << jump + 1 << \" \" << 0 << endl;\n                if(next_jump == k) {\n                    ans += c;\n                }\n            }\n        }\n        // cout << endl;\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716089929.0
}