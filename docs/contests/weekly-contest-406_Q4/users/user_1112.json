{
    "username": "GJnas4mKDn",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, X: List[int], Y: List[int]) -> int:\n        res = 0\n    \n        # sort the horizontal cost in reverse order\n        X.sort(reverse = True)\n    \n        # sort the vertical cost in reverse order\n        Y.sort(reverse = True)\n    \n        # initialize current width as 1\n        hzntl = 1; vert = 1\n    \n        # loop until one or both\n        # cost array are processed\n        i = 0; j = 0\n        while (i < m - 1 and j < n - 1):\n            if (X[i] > Y[j]):\n            \n                res += X[i] * vert\n    \n                # increase current horizontal\n                # part count by 1\n                hzntl += 1\n                i += 1\n            \n            else:\n                res += Y[j] * hzntl\n    \n                # increase current vertical\n                # part count by 1\n                vert += 1\n                j += 1\n    \n        # loop for horizontal array, if remains\n        total = 0\n        while (i < m - 1):\n            total += X[i]\n            i += 1\n        res += total * vert\n    \n        #loop for vertical array, if remains\n        total = 0\n        while (j < n - 1):\n            total += Y[j]\n            j += 1\n        res += total * hzntl\n    \n        return res",
    "submit_ts": "1720926050",
    "subm_id": "546443724"
}