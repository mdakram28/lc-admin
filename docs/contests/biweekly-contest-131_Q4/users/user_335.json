{
    "username": "jayduk",
    "submission": "\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>> &queries) {\n        vector<bool> ans;\n\n        map<int, int> ob;\n        ob.insert({0, 0});\n\n        for (auto &query: queries) {\n            if (query[0] == 1) {\n                int x = query[1];\n\n                //insert\n                auto [it, _] = ob.insert({x, -1});\n                auto tmp = it;\n                --tmp;\n\n                it->second = std::max(x - tmp->first, tmp->second);\n\n                //update\n                auto next = it;\n                while (it != ob.end() && ++next != ob.end()) {\n                    int new_value = std::max(it->second, next->first - it->first);\n                    // cout << \"n\"<<new_value<<\" o\"<<next->second<<endl;\n                    if (new_value == next->second) {\n                        break;\n                    }\n                    next->second = new_value;\n                    it = next;\n\n                }\n\n\n            } else {\n                int x = query[1];\n                int sz = query[2];\n\n                auto it = --ob.upper_bound(x);\n                // cout <<x<<\"-\"<<sz<<\":\"<<it->first<<\" \"<<it->second<<endl;\n                ans.push_back(std::max(x - it->first, it->second) >= sz);\n            }\n        }\n\n        return ans;\n\n    }\n};\n",
    "submit_ts": 1716651624.0
}