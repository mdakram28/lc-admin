{
    "username": "lakshyathakur",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ans = 0;\n        for(int i = 0 ; i < nums.length ; ){\n            int j = i;\n            long diff = target[j] - nums[j];\n            j++;\n            while(j < nums.length && (diff*(target[j]-nums[j])) > 0 ) j++;\n            long min = -1;\n            for(int p = i ; p < j ; p++){\n                if(min == -1){\n                    ans += Math.abs(target[p] - nums[p]);\n                    min =  Math.abs(target[p] - nums[p]);\n                }\n                else{\n                   \n                   if((Math.abs(target[p] - nums[p]) - min) > 0 ) ans += (Math.abs(target[p] - nums[p]) - min);\n                    min = Math.abs(target[p] - nums[p]);\n               }\n            }\n            i = j;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721531503",
    "subm_id": "1327962572"
}