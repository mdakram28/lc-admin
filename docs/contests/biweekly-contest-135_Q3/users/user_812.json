{
    "username": "thienan175",
    "submission": "type diff struct {\n    value int\n    cap int\n}\n\nfunc minChanges(nums []int, k int) int {\n    n := len(nums)\n    diffs := make([]diff, n/2)\n    freqs := make(map[int]int)\n\n    for i := 0; i < n / 2; i++ {\n        value := abs(nums[i], nums[n-1-i])\n        cap := max(cap(nums[i], k), cap(nums[n-1-i], k))\n        freqs[value] = freqs[value] + 1\n        diffs[i] = diff{value: value, cap: cap}\n    }\n\n\n\n    sort.Slice(diffs, func(i, j int) bool {\n        return diffs[i].cap > diffs[j].cap\n    })\n\n\n\n    answer := 2 * n\n    for _, d := range diffs {\n        zero := freqs[d.value]\n        two := countLessThan(diffs, d.value)\n        one := n / 2 - two - zero\n\n        changes := one + two*2\n        answer = min(answer, changes)\n    }\n\n    return answer\n}\n\nfunc abs(a, b int) int {\n    if a >= b {\n        return a - b\n    }\n    return b - a\n}\n\nfunc cap(num, k int) int {\n    return max(num, k - num)\n}\n\nfunc countLessThan(nums []diff, limit int) int {\n    left, right := 0, len(nums) - 1\n\n    idx := 0\n    for left <= right {\n        mid := (left + right) / 2\n        if nums[mid].cap >= limit {\n            idx = mid\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n\n    return len(nums) - 1 - idx \n}",
    "submit_ts": "1721488791",
    "subm_id": "1327433309"
}