{
    "username": "opPO24",
    "submission": "class Solution {\npublic:\n    void calc_dp(vector<vector<int>> &g, vector<int> &dp, int v, int pr = -1) {\n        for (int &u : g[v]) {\n            if (u == pr) continue;\n            calc_dp(g, dp, u, v);\n            dp[v] = max(dp[v], dp[u] + (u % 2 ? 1 : 2));\n        }\n    }\n\n    void calc_ans(vector<vector<int>> &g, vector<int> &ans, vector<int> &dp, int v, int up_ans = 0, int pr = -1) {\n        ans[v] = max(up_ans, dp[v]);\n        int mx1 = 0, mx2 = 0;\n        for (int &u : g[v]) {\n            if (u == pr) continue;\n            int cur = (u % 2 ? 1 : 2);\n            if (dp[u] + cur > mx1) {\n                mx2 = mx1;\n                mx1 = dp[u] + cur;\n            } else if (dp[u] + cur > mx2) {\n                mx2 = dp[u] + cur;\n            }\n        }\n\n        for (int &to : g[v]) {\n            if (to == pr) continue;\n            int add = (v % 2 ? 1 : 2);\n            int cur = (to % 2 ? 1 : 2);\n            int maxi = mx1;\n            if (mx1 == dp[to] + cur) {\n                maxi = mx2;\n            }\n\n            calc_ans(g, ans, dp, to, max(up_ans, maxi) + add, v);\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int m = (int)edges.size();\n        int n = m + 1;\n\n        vector<vector<int>> g(n + 1);\n        for (int i = 0; i < m; i++) {\n            g[edges[i][0]].push_back(edges[i][1]);\n            g[edges[i][1]].push_back(edges[i][0]);\n        }\n\n        vector<int> dp(n);\n        calc_dp(g, dp, 0);\n\n        vector<int> ans(n);\n        calc_ans(g, ans, dp, 0);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700791",
    "subm_id": "1343253334"
}