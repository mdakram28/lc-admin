{
    "username": "jai_shree_raam",
    "submission": "#define INF INT32_MAX\nclass Segtree{\npublic:\n    vector<int> tree;\n    int n;\n    Segtree(vector<int> &arr)\n    {\n        n=arr.size();\n        tree.resize(4*n);\n        build(arr,0,0,n-1);\n    }\n\n    void build(vector<int> &arr,int node,int start,int end)\n    {\n        if(start==end)\n        {\n            tree[node]=arr[start];\n        }\n        else\n        { \n            int mid=(start+end)/2;\n            build(arr,2*node+1,start,mid);\n            build(arr,2*node+2,mid+1,end);\n\n            tree[node]=tree[2*node+1]&tree[2*node+2];\n        }\n    }\n\n    int query(int l,int r)\n    {\n        return query(0,0,n-1,l,r);\n    }\n    \n    int  query(int node,int start,int end,int l,int r)\n    {\n        if(r < start || l > end)\n        {\n            return INF;\n        }\n        if(l<=start && end <=r) return tree[node];\n\n        int mid=(start+end)/2;\n        int p1=query(2*node+1,start,mid,l,r);\n        int p2=query(2*node+2,mid+1,end,l,r);\n\n        return p1&p2;\n    }\n};\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size();\n        Segtree st(nums);\n        int ans=INF;\n\n        for(int i=0 ; i < n ; i++)\n        {\n            int l=i-1,r=n-1,mid;\n\n            while(r-l > 1)\n            {\n                mid=(l+r)/2;\n                if(st.query(i,mid) >= k)\n                {\n                    l=mid;\n                }\n                else\n                {\n                    r=mid;\n                }\n            }\n            if(l!=i-1) ans=min(ans,abs(st.query(i,l)-k));\n\n            ans=min(ans,abs(k-st.query(i,r)));\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717300622.0
}