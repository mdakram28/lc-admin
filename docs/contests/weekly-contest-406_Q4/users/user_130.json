{
    "username": "EricYXing",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int i = 0, j = 0;\n        long long ans = 0, r = 1, c = 1;\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        while (i < m - 1 || j < n - 1)\n        {\n            if (i == m - 1)\n            {\n                ans += (verticalCut[j] * r);\n                j++;\n                c++;\n            }\n            else if (j == n - 1)\n            {\n                ans += (horizontalCut[i] * c);\n                i++;\n                r++;\n            }\n            else\n            {\n                if (horizontalCut[i] >= verticalCut[j])\n                {\n                    ans += (horizontalCut[i] * c);\n                    i++;\n                    r++;\n                }\n                else\n                {\n                    ans += (verticalCut[j] * r);\n                    j++;\n                    c++;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925093",
    "subm_id": "1320242599"
}