{
    "username": "rpmv",
    "submission": "import java.util.Arrays;\nimport java.util.PriorityQueue;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] hCut, int[] vCut) {\n        Arrays.sort(hCut);\n        Arrays.sort(vCut);\n\n        int h = hCut.length - 1;\n        int v = vCut.length - 1;\n\n        int hPieces = 1;\n        int vPieces = 1;\n        \n        long cost = 0;\n\n        while (h >= 0 && v >= 0) {\n            if (hCut[h] >= vCut[v]) {\n                cost += (long) hCut[h] * vPieces;\n                hPieces++;\n                h--;\n            } else {\n                cost += (long) vCut[v] * hPieces;\n                vPieces++;\n                v--;\n            }\n        }\n\n        while (h >= 0) {\n            cost += (long) hCut[h] * vPieces;\n            hPieces++;\n            h--;\n        }\n\n        while (v >= 0) {\n            cost += (long) vCut[v] * hPieces;\n            vPieces++;\n            v--;\n        }\n\n        return cost;\n    }\n}\n",
    "submit_ts": "1720925304",
    "subm_id": "1320250139"
}