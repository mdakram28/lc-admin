{
    "username": "remidinishanth",
    "submission": "struct node{\n    long long iFiL;\n    long long iF;\n    long long iL;\n    long long ans;\n};\n\ntemplate<class T> struct Seg { // comb(ID,b) = b\n    const T ID = node{INT_MIN, INT_MIN, INT_MIN, INT_MIN};\n    \n    T comb(T a, T b) { \n        node x;\n        \n        x.iF = max(a.iFiL + b.ans, a.iF + b.iF);\n        x.iF = max(b.iF, x.iF);\n        x.iF = max(a.iF, x.iF);\n        x.iF = max(0ll, x.iF);\n        \n        x.iFiL = max(a.iF + b.iFiL, a.iFiL + b.iL);\n        x.iFiL = max(x.iFiL, b.iFiL);\n        x.iFiL = max(x.iFiL, a.iFiL);\n        x.iFiL = max(0ll, x.iFiL);\n        \n        x.iL = max(a.ans + b.iFiL, a.iL + b.iL);\n        x.iL = max(b.iL, x.iL);\n        x.iL = max(a.iL, x.iL);\n        x.iL = max(0ll, x.iL);\n        \n        x.ans = max({x.iF, x.iFiL, x.iL, a.ans + b.iF, a.iL + b.ans, 0ll, a.ans, b.ans});\n        \n        return x;\n    } \n    \n    int n; vector<T> seg;\n    \n    void init(int _n) { // upd, query also work if n = _n\n        for (n = 1; n < _n; ) n *= 2; \n        seg.assign(2*n,ID); }\n    \n    void pull(int p) { seg[p] = comb(seg[2*p],seg[2*p+1]); }\n    \n    void upd(int p, T val) { // set val at position p\n        seg[p += n] = val; for (p /= 2; p; p /= 2) pull(p); }\n    \n    T query(int l, int r) { // any associative op on interval [l, r]\n        T ra = ID, rb = ID;\n        for (l += n, r += n+1; l < r; l /= 2, r /= 2) {\n            if (l&1) ra = comb(ra, seg[l++]);\n            if (r&1) rb = comb(seg[--r], rb);\n        }\n        return comb(ra,rb);\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int md = 1e9 + 7;\n        int nx = nums.size();\n        long long ans = 0;\n        Seg<node> seg;\n        seg.init(nx);\n        for(int i=0;i<nx;i++){\n            seg.upd(i, node{0, 0, 0, nums[i]});\n        }\n        for(vector<int> q: queries){\n            seg.upd(q[0], node{0, 0, 0, q[1]});\n            node x = seg.query(0, nx-1);\n            ans += max(0ll, x.ans);\n            ans %= md;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716694981",
    "subm_id": "1268130084"
}