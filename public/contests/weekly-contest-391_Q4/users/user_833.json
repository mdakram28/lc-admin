{
    "username": "nhatminh886688",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def MaxDist(A, N):\n            minsum = maxsum = A[0][0] + A[0][1]\n            mindiff = maxdiff = A[0][0] - A[0][1]\n            minsum_point = maxsum_point = 0\n            mindiff_point = maxdiff_point = 0\n\n            for i in range(1, N):\n                x, y = A[i]\n                sum_val = x + y\n                diff_val = x - y\n\n                if sum_val < minsum:\n                    minsum = sum_val\n                    minsum_point = i\n                elif sum_val > maxsum:\n                    maxsum = sum_val\n                    maxsum_point = i\n                if diff_val < mindiff:\n                    mindiff = diff_val\n                    mindiff_point = i\n                elif diff_val > maxdiff:\n                    maxdiff = diff_val\n                    maxdiff_point = i\n\n            max_distance = max(maxsum - minsum, maxdiff - mindiff)\n\n            if maxsum - minsum > maxdiff - mindiff:\n                return maxsum_point, minsum_point\n            return maxdiff_point, mindiff_point\n        \n        def MaxDist2(A, N):\n            minsum = maxsum = A[0][0] + A[0][1]\n            mindiff = maxdiff = A[0][0] - A[0][1]\n            for i in range(1,N):\n                sum = A[i][0] + A[i][1]\n                diff = A[i][0] - A[i][1]\n                if (sum < minsum):\n                    minsum = sum\n                elif (sum > maxsum):\n                    maxsum = sum\n                if (diff < mindiff):\n                    mindiff = diff\n                elif (diff > maxdiff):\n                    maxdiff = diff\n            maximum = max(maxsum - minsum, maxdiff - mindiff)\n            return maximum\n        \n        def distance(point1, point2):\n            return abs(point1[0]-point2[0])+abs(point1[1]-point2[1])\n        \n        def check():\n            p1, p2 = MaxDist(points, len(points))\n            v1 = MaxDist2(points[:p1]+points[p1+1:], len(points)-1)\n            v2 = MaxDist2(points[:p2]+points[p2+1:], len(points)-1)\n            return min(v1, v2) \n        \n        return check()"
}