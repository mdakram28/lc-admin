{
    "username": "M-Manas-s",
    "submission": "class Solution {\npublic:\n    \n    \n    struct TrieNode\n    {\n\n    #define int long long\n        TrieNode *children[26];\n        int wordCount, cost;\n        \n        void insert(string word, int c)\n        {\n            TrieNode *curr = this;\n            for (auto &ch : word)\n            {\n                if (!curr->children[ch - 'a'])\n                    curr->children[ch - 'a'] = new TrieNode();\n                curr = curr->children[ch - 'a'];\n            }\n            curr->wordCount++;\n            curr->cost = curr->cost == 0 ? c : min(curr->cost,c);\n        }\n        #undef int\n\n    };\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        \n        #define int long long\n        TrieNode* root = new TrieNode();\n        for ( int i = 0; i < words.size(); i++ ) {\n            root->insert(words[i],costs[i]);\n        }\n        cout << endl;\n        \n        int n = target.length();\n        vector<int> dp(n+1,1e9);\n        dp[0] = 0;\n        \n        for ( int i = 0; i<n; i++ ) {\n            \n            TrieNode *curr = root;\n            for ( int len = 0; len + i < n; len++ ) {\n                \n                char ch = target[i + len];\n                if ( !curr->children[ch - 'a'] )\n                        break;\n                curr = curr->children[ch - 'a'];\n                \n                if ( curr->wordCount ) {\n                    int cost = curr->cost;\n                    dp[len+i+1] = min(dp[len+i+1], dp[i] + cost);\n                }\n            }\n            \n            \n            // for ( int i = 0; i < target.length() + 1; i++)\n            //     cout << dp[i] << ' ';\n            // cout << endl;\n            \n        }\n        \n        #undef int\n\n        // cout << root->children[3]->cost << endl;\n        \n        \n        \n        return (dp[n] == 1e9 ? -1 : dp[n]);\n        \n    }\n};",
    "submit_ts": "1720323099",
    "subm_id": "1312367286"
}