{
    "username": "sslel",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n\n        int n = nums.length ;\n        int diff = 0 ;\n        int pre = 0 ;\n        long count = 0 ;\n        for (int i=0; i<n; i++) {\n            \n            int curDiff = nums[i] - target[i] ;\n            if ( diff >= 0 ) {\n                if (curDiff >= diff ) {\n                    count += curDiff - diff ;\n                    diff = curDiff ;\n                }  else if ( curDiff >= 0 ) {\n                    diff = curDiff ;\n                } else {\n                    count += -1 * curDiff ;\n                    diff = curDiff ;\n                } \n            } else {\n                if (curDiff <= diff ) {\n                    count += diff - curDiff ;\n                    diff = curDiff ;\n                }  else if ( curDiff <= 0 ) {\n                    diff = curDiff ;\n                } else {\n                    count +=  curDiff ;\n                    diff = curDiff ;\n                } \n            }\n        }\n        return count ;\n   \n    }\n}",
    "submit_ts": "1721531395",
    "subm_id": "1327959847"
}