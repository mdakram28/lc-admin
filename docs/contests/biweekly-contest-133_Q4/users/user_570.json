{
    "username": "NotFisrt",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        const long long M = 1000000007;\n        const int I = 400;\n\n        map<int, int> m;\n        for (auto& e : r) {\n            m[e[0] + 1] = e[1];\n        }\n\n        vector<vector<long long>> p(n + 1, vector<long long>(I + 1, 0));\n        p[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= I; j++) {\n                for (int k = 0; k < i; k++) {\n                    int v = j - k;\n                    if (v >= 0) {\n                        p[i][j] = (p[i][j] + p[i - 1][v]) % M;\n                    }\n                }\n            }\n\n            if (m.find(i) != m.end()) {\n                int t = m[i];\n                for (int j = 0; j <= I; j++) {\n                    if (j != t) {\n                        p[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        long long s = 0;\n        for (long long c : p[n]) {\n            s = (s + c) % M;\n        }\n\n        return (int) s;\n    }\n};\n",
    "submit_ts": "1719070688",
    "subm_id": "1296829296"
}