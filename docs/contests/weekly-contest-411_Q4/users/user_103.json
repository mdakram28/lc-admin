{
    "username": "LayCurse",
    "submission": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"inline\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define main dummy_main\nint main(){\n  return 0;\n}\n#undef main\nclass Solution{\n  public:\n  vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries){\n    dummy_main();\n    int i;\n    int j;\n    int c0;\n    int c1;\n    int N;\n    static long long go[1000000];\n    static long long c[1000000];\n    static long long r;\n    vector<long long> res;\n    N = s.size();\n    j = c0 = c1 = 0;\n    for(i=(0);i<(N);i++){\n      while(j < N && (c0+(s[j]=='0') <= k || c1+(s[j]=='1') <= k)){\n        if(s[j]=='0'){\n          c0++;\n        }\n        if(s[j]=='1'){\n          c1++;\n        }\n        j++;\n      }\n      go[i] = j;\n      if(s[i] == '0'){\n        c0--;\n      }\n      if(s[i] == '1'){\n        c1--;\n      }\n    }\n    c[0] = 0;\n    for(i=(0);i<(N);i++){\n      c[i+1] = c[i] + go[i];\n    }\n    for(vector<int> q : queries){\n      long long L = q[0];\n      long long R = q[1];\n      r = - (L + R) * (R - L + 1) / 2;\n      int OA9NF42T;\n      int ATMZloZo;\n      int pyHJGNQc;\n      OA9NF42T = L;\n      ATMZloZo = R+1;\n      while(OA9NF42T < ATMZloZo){\n        if((OA9NF42T + ATMZloZo)%2==0){\n          pyHJGNQc = (OA9NF42T + ATMZloZo) / 2;\n        }\n        else{\n          pyHJGNQc = (OA9NF42T + ATMZloZo - 1) / 2;\n        }\n        if(go[pyHJGNQc] >= R+1){\n          ATMZloZo = pyHJGNQc;\n        }\n        else{\n          OA9NF42T = pyHJGNQc + 1;\n        }\n      }\n      i =ATMZloZo;\n      r += c[i] - c[L];\n      r += (R - i + 1) * (R + 1);\n      res.push_back(r);\n    }\n    return res;\n  }\n}\n;\n// cLay version 20240810-1 [beta]\n\n// --- original code ---\n// #define main dummy_main\n// {}\n// #undef main\n// \n// class Solution {\n// public:\n//   vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n//     dummy_main();\n// \n//     int i, j, c0, c1, N;\n//     static ll go[1d6], c[1d6], r;\n//     vector<long long> res;\n// \n//     N = s.size();\n// \n//     j = c0 = c1 = 0;\n//     rep(i,N){\n//       while(j < N && (c0+(s[j]=='0') <= k || c1+(s[j]=='1') <= k)){\n//         if(s[j]=='0') c0++;\n//         if(s[j]=='1') c1++;\n//         j++;\n//       }\n//       go[i] = j;\n//       if(s[i] == '0') c0--;\n//       if(s[i] == '1') c1--;\n//     }\n// \n//     c[0] = 0;\n//     rep(i,N) c[i+1] = c[i] + go[i];\n// \n//     for(VI q : queries){\n//       ll L = q[0];\n//       ll R = q[1];\n// \n//       r = - (L + R) * (R - L + 1) / 2;\n//       i = bsearch_min[int,i,L,R+1](go[i] >= R+1);\n// \n//       r += c[i] - c[L];\n//       r += (R - i + 1) * (R + 1);\n// \n//       res.push_back(r);\n//     }\n// \n//     return res;\n//   }\n// };\n",
    "submit_ts": "1723951580",
    "subm_id": "1359774999"
}