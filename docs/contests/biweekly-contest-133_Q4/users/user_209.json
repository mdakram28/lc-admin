{
    "username": "yc-li",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, q: List[List[int]]) -> int:\n        q.sort()\n        MOD = 10**9 + 7\n        \n        @cache\n        def d(m, k, x):\n            if k == 0:\n                if x == 0:\n                    return 1\n                else:\n                    return 0\n            \n#             s = 0\n            # for i in range(m):\n            #     if i > x:\n            #         break\n            \n                # s += d(m - 1, k - 1, x - i)\n                # s %= MOD\n    \n#             return s            \n            \n    \n            # print(x, x - m)\n            # print(\"A\", [d(m - 1, k - 1, i) for i in range(max(0, x - m), x + 1 )])\n            \n            # print(\"B\", D(m - 1, k - 1, x), D(m - 1, k - 1, x - m))\n    \n            return (D(m - 1, k - 1, x) - D(m - 1, k - 1, x - m)) % MOD\n    \n        \n        @cache\n        def D(m, k, x):\n            if x == 0:\n                return d(m, k, x)\n            elif x < 0:\n                return 0\n                \n            return (D(m, k, x - 1) + d(m, k, x)) % MOD\n            \n        \n        ed, ct = q[0]\n        f = d(ed + 1, ed + 1, ct) % MOD\n        \n        # print(f)\n        \n        for ed_, ct_ in q[1:]:\n            \n            dn = ed_ - ed\n            dk = ct_ - ct\n            \n            # print(ed_ + 1, dn, dk, d(ed_ + 1, dn, dk))\n            \n            f = (f * (d(ed_ + 1, dn, dk) % MOD) ) % MOD\n            \n            ed = ed_\n            ct = ct_\n        \n        D.cache_clear()\n        d.cache_clear()\n        \n        return f\n    ",
    "submit_ts": 1719069619.0
}