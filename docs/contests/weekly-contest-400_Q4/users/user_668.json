{
    "username": "Java_Programmer_Ujjwal",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int n = nums.length;\n        int[][] dp = new int[n][31];\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < 31; ++j) {\n                int mask = 1 << j;\n                if ((mask & nums[i]) > 0) {\n                    dp[i][j] = (i == 0) ? 1 : dp[i - 1][j] + 1;\n                } else {\n                    dp[i][j] = (i == 0) ? 0 : dp[i - 1][j];\n                }\n            }\n        }\n        int res = Integer.MAX_VALUE;\n        for (int i = 0; i < n; ++i) {\n            //System.out.println(\"i= \" + i);\n            int lower = small(k, i, dp, nums), higher = large(k, i, dp, nums);\n            //System.out.println(\"lower= \" + lower + \" higher= \" + higher);\n            res = Math.min(res,Math.min(lower,higher));\n        }\n        return res;\n    }\n\n    private int small(int k, int st, int[][] dp, final int[] arr) {\n        int n = arr.length;\n        int lo = st, hi = n - 1, res = arr[st];\n        while (lo <= hi) {\n            int mid = (lo + hi) >> 1;\n            //System.out.println(\"mid= \" + mid);\n            int range = mid - st + 1, curr = 0;\n            //System.out.println(\"range= \" + range);\n            for (int i = 0; i < 31; ++i) {\n                int t = (st == 0) ? dp[mid][i] : dp[mid][i] - dp[st - 1][i];\n                if (t == range) curr ^= (1 << i);\n            }\n            //System.out.println(\"curr= \" + curr);\n            if (curr <= k) {\n                res = curr;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        //System.out.println(\"smallerVal= \" + res);\n        return Math.abs(k - res);\n    }\n\n    private int large(int k, int st, int[][] dp, final int[] arr) {\n        int n = arr.length;\n        int lo = st, hi = n - 1, res = arr[st];\n        while (lo <= hi) {\n            int mid = (lo + hi) >> 1;\n            //System.out.println(\"mid= \" + mid);\n            int range = mid - st + 1, curr = 0;\n            //System.out.println(\"range= \" + range);\n            for (int i = 0; i < 31; ++i) {\n                int t = (st == 0) ? dp[mid][i] : dp[mid][i] - dp[st - 1][i];\n                if (t == range) curr ^= (1 << i);\n            }\n            //System.out.println(\"curr= \" + curr);\n            if (curr >= k) {\n                res = curr;\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        //System.out.println(\"largerVal= \" + res);\n        return Math.abs(k - res);\n    }\n}\n",
    "submit_ts": 1717299835.0
}