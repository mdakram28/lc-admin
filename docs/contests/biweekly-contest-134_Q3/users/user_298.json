{
    "username": "sam_990",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int> colors, int k) {\n        int n = colors.size();\n        for (int i = 0; i < n; i++) colors.push_back(colors[i]);\n        vector<int> v(2 * n + 5, 0);\n        vector<int> pv(2 * n + 5, 0);\n        for (int i = 0; i < 2 * n - 1; i++) {\n            v[i] = (colors[i] != colors[i + 1]);\n        }\n        \n        pv[0] = v[0];\n        for (int i = 1; i < 2 * n; i++) {\n            pv[i] = pv[i - 1] + v[i];\n        }\n        \n        int ans = 0;\n            \n        for (int i = 0; i < n; i++) {\n            ans += (pv[i + k - 2] - (i ? pv[i - 1] : 0) == k - 1);\n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1720277385",
    "subm_id": "1311661225"
}