{
    "username": "swift51385",
    "submission": "class Solution {\n    int dist(vector<vector<int>>& points, int i, int j) {\n        return abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]);\n    }\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector q(4, vector<int>(n));\n        for (int i = 0; i < 4; i++) {\n            iota(q[i].begin(), q[i].end(), 0);\n        }\n        sort(q[0].begin(), q[0].end(), [&](int x, int y) {\n           return points[x][0] + points[x][1] < points[y][0] + points[y][1];\n        });\n        sort(q[1].begin(), q[1].end(), [&](int x, int y) {\n           return points[x][0] - points[x][1] < points[y][0] - points[y][1];\n        });\n        sort(q[2].begin(), q[2].end(), [&](int x, int y) {\n           return -points[x][0] + points[x][1] < -points[y][0] + points[y][1];\n        });\n        sort(q[3].begin(), q[3].end(), [&](int x, int y) {\n           return -points[x][0] - points[x][1] < -points[y][0] - points[y][1];\n        });\n        int ans = int(2e9);\n        for (int i = 0; i < n; i++) {\n            vector<int> use;\n            for (int j = 0; j < 4; j++) {\n                if (q[j].back() != i) {\n                    use.push_back(q[j].back());\n                } else {\n                    use.push_back(q[j][n - 2]);\n                }\n            }\n            int mx = 0;\n            for (int x = 0; x < 4; x++) {\n                for (int y = 0; y < 4; y++) {\n                    mx = max(mx, dist(points, use[x], use[y]));\n                }\n            }\n            ans = min(ans, mx);\n        }\n        return ans;\n    }\n};"
}