{
    "username": "tennkei",
    "submission": "//#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n//#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\")\n//#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n//#define INF 2147483647\n#define infL (1LL<<60)\n#define inf (1<<30)\n#define inf9 (1000000000)\n#define MOD  1000000007 //998244353 //1000000007\n#define EPS 1e-9\n#define Gr 9.8\n#define PI acos(-1)\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define REQ(i,n) for(int (i)=1;(i)<=(int)(n);(i)++)\n#define lch (rt<<1)\n#define rch (rt<<1|1)\n#define readmp(n) for(int i=0,u,v;i<n;i++) {scanf(\"%d%d\",&u,&v); mp[u].push_back(v); mp[v].push_back(u);}\ntypedef  long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, vector<int>> piv;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef double ValType;\ntemplate<typename  T> void maxtt(T& t1, T t2) {\n    t1=max(t1,t2);\n}\ntemplate<typename  T> void mintt(T& t1, T t2) {\n    t1=min(t1,t2);\n}\n\n\nbool debug = 0;\nint n,m,k;\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\nstring direc=\"RDLU\";\nconst ll MOD2 = (ll)MOD * (ll)MOD;\nll ln, lk, lm;\nvoid etp(bool f = 0) {\n    puts(f ?\"YES\" : \"NO\");\n    exit(0);\n}\nvoid addmod(int &x, int y, int mod = MOD){\n    x+=y; if (x>=mod) x-=mod;\n    if(x<0) x+=mod;\n    assert(x>=0 && x<mod);\n}\nvoid et(int x=-1) {\n    printf(\"%d\\n\", x); exit(0);\n}\nll fastPow(ll x, ll y, int mod=MOD) {\n    ll ans = 1;\n    while(y>0) {\n        if(y&1) ans = (x * ans)%mod;\n        x = x*x%mod;\n        y>>=1;\n    }\n    return ans;\n}\nll gcd1(ll x, ll y) {\n    return y?gcd1(y,x%y):x;\n}\n\n//#include <atcoder/all>\n//using mint = atcoder::modint998244353;\n#define MAX (1000005)\n\n\nvoid fmain(int tid) {\n    scanf(\"%d\", &n);\n}\nvector<int> qs[MAX];\n#define VType ll\nclass FTree {\npublic:\n    VType t[2][MAX];\n    int N;\n    void init(int n) {\n        N = n+5;\n        REP(i,n+10) REP(j,2) t[j][i]=0;\n    }\n    void update(int which, int x, VType val) {\n        for(int i=x;i<=N;i += i&-i) {\n            t[which][i] += val;\n        }\n    }\n    VType query(int which, int x) {\n        VType ret = 0;\n        for ( ; x > 0; ret += t[which][x], x -= x&-x);\n        return ret;\n    }\n\n    void addInv(int l, int r, VType val) {\n        update(0, l, val);\n        update(0, r+1, -val);\n        update(1, l, val*(1 - l));\n        update(1, r+1, val* r);\n    }\n    VType queryPre(int x) {\n        return query(0, x) * x + query(1, x);\n    }\n    VType queryInv(int l, int r) {\n        return queryPre(r) - queryPre(l-1);\n    }\n}ft;\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        n = s.size();\n        m = queries.size();\n        REQ(i,n) qs[i].clear();\n        REP(i,m) qs[queries[i][0]+1].emplace_back(i);\n\n        vector<int> ps(n+1,0);\n        REQ(i,n) ps[i]=ps[i-1] + (s[i-1]-'0');\n        \n        ft.init(n+5);\n        vector<ll> ans(m, 0);\n        for(int i=n, lst=n;i>=1;i--) {\n            while(ps[lst]-ps[i-1] > k and (lst-i+1 - (ps[lst]-ps[i-1])) > k) lst--;\n            ft.addInv(i, lst, 1);\n            for(int qid: qs[i]) {\n                int R=queries[qid][1]+1;\n                ans[qid] = ft.queryInv(i, R);\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1723952815",
    "subm_id": "556413795"
}