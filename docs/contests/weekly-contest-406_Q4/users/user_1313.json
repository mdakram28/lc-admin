{
    "username": "anurag_6787",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long sum = 0;\n        long long hCnt = 1;  \n        long long vCnt = 1;    \n\n        long long i = 0; \n        long long j = 0;  \n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                sum += horizontalCut[i] * vCnt;\n                hCnt++;\n                i++;\n            } else {\n                sum += verticalCut[j] * hCnt;\n                vCnt++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            sum += horizontalCut[i] * vCnt;\n            hCnt++;\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            sum += verticalCut[j] * hCnt;\n            vCnt++;\n            j++;\n        }\n\n        return sum;\n    }\n};",
    "submit_ts": "1720926183",
    "subm_id": "1320278413"
}