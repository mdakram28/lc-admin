{
    "username": "subrat0018",
    "submission": "#define ll long long\nconst ll M = 1e9 + 7;\nclass Solution {\npublic:\n    ll func(int n, int k, vector<int> &req, vector<int> &ends, vector<vector<ll>> &dp){\n        if(n == 0)\n            return 0;\n        if(k == 0)\n            return 1;\n        int ln = lower_bound(ends.begin(), ends.end(), n - 1)-ends.begin();\n        if(k > req[ends[ln]])return 0;\n        if(dp[n][k] != -1)return dp[n][k];\n        ln--;\n        ln = ends[ln];\n        int mrq = 0;\n        if(ln != -1)\n            mrq = req[ln];\n        ll ans=0;\n        for(int i=mrq;i<=k;i++){\n            int inv = k - i;\n            if(inv <= n - 1)\n                ans = (ans + func(n - 1, i, req, ends, dp))%M;\n        }\n        return dp[n][k] = ans;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> req(n);\n        vector<int> ends;\n        ends.push_back(-1);\n        for(auto &val: requirements){\n            ends.push_back(val[0]);\n            req[val[0]] = val[1];\n        }\n        vector<vector<ll>> dp(n + 1, vector<ll>(req[n-1] + 1, -1));\n        sort(ends.begin(), ends.end());\n        ll ans = func(n, req[n - 1], req, ends, dp);\n        // for(int i=1;i<=n;i++){\n        //     for(int j=0;j<=req[n-1];j++){\n        //         cout<<i<<\" \"<<j<<\" \"<<dp[i][j]<<endl;\n        //     }\n        // }\n        return ans;\n    }\n};",
    "submit_ts": 1719070608.0
}