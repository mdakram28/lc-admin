{
    "username": "srinjoyarya007",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        int horizontalSegments = 1;\n        int verticalSegments = 1;\n        \n        int i = horizontalCut.length - 1;\n        int j = verticalCut.length - 1;\n        \n        long totalCost = 0;\n        \n        while (i >= 0 && j >= 0) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                totalCost += horizontalCut[i] * verticalSegments;\n                horizontalSegments++;\n                i--;\n            } else {\n                totalCost += verticalCut[j] * horizontalSegments;\n                verticalSegments++;\n                j--;\n            }\n        }\n        \n        while (i >= 0) {\n            totalCost += horizontalCut[i] * verticalSegments;\n            i--;\n        }\n        \n        while (j >= 0) {\n            totalCost += verticalCut[j] * horizontalSegments;\n            j--;\n        }\n        \n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720925221",
    "subm_id": "1320247252"
}