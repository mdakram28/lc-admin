{
    "username": "MvKaio",
    "submission": "using A = array<int, 2>;\n\nstruct T {\n    int pk;\n    A l, r;\n    T (int v=-1) : pk(0), l({v, -1}), r({-1, v}) {}\n    \n    T operator+(T ot) const {\n        if (l[0] == -1) return ot;\n        if (ot.l[0] == -1) return *this;\n        \n        //cout << \"L:\";\n        //cout << pk << endl;\n        //cout << l[0] << \" \" << l[1] << endl;\n        //cout << r[0] << \" \" << r[1] << endl;\n        //\n        //cout << \"R:\";\n        //cout << ot.pk << endl;\n        //cout << ot.l[0] << \" \" << ot.l[1] << endl;\n        //cout << ot.r[0] << \" \" << ot.r[1] << endl;\n        \n        T ans;\n        ans.pk = pk + ot.pk;\n        \n        if (ot.l[1] != -1)\n            if (ot.l[0] > ot.l[1] && ot.l[0] > r[1]) ans.pk++;\n        if (r[0] != -1)\n            if (r[1] > r[0] && r[1] > ot.l[0]) ans.pk++;\n        \n        ans.l = l;\n        ans.r = ot.r;\n        if (ans.l[1] == -1) ans.l[1] = ot.l[0];\n        if (ans.r[0] == -1) ans.r[0] = r[1];\n        \n        //cout << \"ANS:\";\n        //cout << ans.pk << endl;\n        //cout << ans.l[0] << \" \" << ans.l[1] << endl;\n        //cout << ans.r[0] << \" \" << ans.r[1] << endl;\n        \n        return ans;\n    }\n    \n    bool operator == (const T ot) const {\n        return pk == ot.pk && l == ot.l && r == ot.r;    \n    }\n};\n\nstruct Seg {\n    int n;\n    vector<T> seg;\n\n    Seg(int _n) : n(_n), seg(2 * n, -1) {}\n\n    int query(int a, int b) {\n        T retl = -1;\n        T retr = -1;\n        for(a += n, b += n; a <= b; ++a /= 2, --b /= 2) {\n            if (a % 2 == 1) retl = retl + seg[a];\n            if (b % 2 == 0) retr = seg[b] + retr;\n            //if (a % 2 == 1) ret = ret + seg[a];\n            //if (b % 2 == 0) ret = seg[b] + ret;\n        }\n        return (retl + retr).pk;\n    }\n\n    void update(int p, int x) {\n        seg[p += n] = T{x};\n        while (p /= 2) seg[p] = seg[2*p] + seg[2*p+1];\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& Q) {\n        int n = a.size(), q = Q.size();\n        \n        Seg st(n);\n        for (int i = 0; i < n; i++)\n            st.update(i, a[i]);\n        \n        //T t = T(1) + T(1) + T(2) + T(1) + T(-1);\n        //cout << t.pk << endl;\n        //cout << t.l[0] << \" \" << t.l[1] << endl;\n        //cout << t.r[0] << \" \" << t.r[1] << endl;\n        \n        vector<int> ans;\n        for (auto v : Q) {\n            int t = v[0];\n            if (t == 1) {\n                int l = v[1];\n                int r = v[2];\n                ans.push_back(st.query(l, r));\n            } else {\n                int i = v[1];\n                int x = v[2];\n                //cout << \"--------- upd -----\" << endl;\n                st.update(i, x);\n                //cout << \"--------- upd -----\" << endl;\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1718507533.0
}