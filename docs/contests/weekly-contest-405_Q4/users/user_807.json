{
    "username": "kHb9Q9dLoRkkQFkIWDj0zu7PtJ",
    "submission": "class Solution {\nprivate:\n    struct Node {\n        bool isWord;\n        int cost;\n        Node* next[26];\n        \n        Node(): isWord(false), cost(INT_MAX), next() {};\n    };\n    \n    Node* root;\n    \n    void addWord(string &s, int pCost) {\n        int n = s.size();\n        Node *curr = root;\n        for(int i=0;i<n;i++) {\n            if(curr->next[s[i]-'a'] == nullptr) {\n                curr->next[s[i]-'a'] = new Node();\n            }\n            curr = curr->next[s[i]-'a'];\n        }\n        if(curr->isWord)    {\n            curr->cost = min(curr->cost, pCost);\n        }\n        else {\n            curr->isWord = true;\n            curr->cost = pCost;   \n        }\n    }\n    \n    int go(string &target, vector<int> &dp, int idx) {\n        int n = target.size();\n        if(idx == n)    return 0;\n        if(dp[idx] != -1)   return dp[idx];\n        if(root->next[target[idx]-'a'] == nullptr)  return dp[idx] = INT_MAX;\n        \n        Node *curr = root;\n        int best = INT_MAX, val;\n        for(int i=idx;i<n;i++) {\n            curr = curr->next[target[i]-'a'];\n            if(curr == nullptr) break;\n            if(curr->isWord)    {\n                val = go(target, dp, i+1);\n                if(val != INT_MAX)  best = min(best, curr->cost + val);\n            }\n        }\n        return dp[idx] = best;\n    }\n    \npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        root = new Node();\n        \n        int n = target.size(), m = words.size();\n        for(int i=0;i<m;i++) {\n            addWord(words[i], costs[i]);\n        }\n        \n        vector<int> dp(n, -1);\n        int val = go(target, dp, 0);\n        return (val == INT_MAX ? -1 : val);\n    }\n};",
    "submit_ts": "1720322911",
    "subm_id": "1312362405"
}