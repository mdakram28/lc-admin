{
    "username": "EricYXing",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), l = INT_MAX, r = INT_MIN, t = INT_MAX, b = INT_MIN, ans = INT_MAX;\n        for (int i = 0; i < m; i++)\n            for (int j = 0; j < n; j++)\n                if (grid[i][j] == 1)\n                {\n                    l = min(l, j);\n                    r = max(r, j);\n                    t = min(t, i);\n                    b = max(b, i);\n                }\n        for (int i = t + 1; i <= b + 1; i++)\n            for (int j = l + 1; j <= r + 1; j++)\n            {\n                if (i == b + 1 && j < r + 1)\n                {\n                    int s1 = minSubArea(grid, l, j, t, b + 1);\n                    if (s1 == -1)\n                        continue;\n                    for (int k = 1; k < b + 1; k++)\n                    {\n                        int s2 = minSubArea(grid, j, r + 1, t, k);\n                        if (s2 == -1)\n                            continue;\n                        int s3 = minSubArea(grid, j, r + 1, k, b + 1);\n                        if (s3 != -1)\n                            ans = min(ans, s1 + s2 + s3);\n                    }\n                    for (int k = j + 1; k < r + 1; k++)\n                    {\n                        int s2 = minSubArea(grid, j, k, t, b + 1);\n                        if (s2 == -1)\n                            continue;\n                        int s3 = minSubArea(grid, k, r + 1, t, b + 1);\n                        if (s3 != -1)\n                            ans = min(ans, s1 + s2 + s3);\n                    }\n                }\n                else if (i < b + 1 && j == r + 1)\n                {\n                    int s1 = minSubArea(grid, l, r + 1, t, i);\n                    if (s1 == -1)\n                        continue;\n                    for (int k = 1; k < r + 1; k++)\n                    {\n                        int s2 = minSubArea(grid, l, k, i, b + 1);\n                        if (s2 == -1)\n                            continue;\n                        int s3 = minSubArea(grid, k, r + 1, i, b + 1);\n                        if (s3 != -1)\n                            ans = min(ans, s1 + s2 + s3);\n                    }\n                    for (int k = i + 1; k < b + 1; k++)\n                    {\n                        int s2 = minSubArea(grid, l, r + 1, i, k);\n                        if (s2 == -1)\n                            continue;\n                        int s3 = minSubArea(grid, l, r + 1, k, b + 1);\n                        if (s3 != -1)\n                            ans = min(ans, s1 + s2 + s3);\n                    }\n                }\n                else if (i < b + 1 && j < r + 1)\n                {\n                    int s1 = minSubArea(grid, l, j, t, i);\n                    if (s1 == -1)\n                        continue;\n                    int s2 = minSubArea(grid, l, j, i, b + 1);\n                    int s3 = minSubArea(grid, j, r + 1, t, b + 1);\n                    if (s2 != -1 && s3 != -1)\n                        ans = min(ans, s1 + s2 + s3);\n                    s2 = minSubArea(grid, l, r + 1, i, b + 1);\n                    s3 = minSubArea(grid, j, r + 1, t, i);\n                    if (s2 != -1 && s3 != -1)\n                        ans = min(ans, s1 + s2 + s3);\n                }\n            }\n        return ans;\n    }\n    \nprivate:\n    int minSubArea(vector<vector<int>>& grid, int l, int r, int t, int b) {\n        int minc = INT_MAX, maxc = INT_MIN, minr = INT_MAX, maxr = INT_MIN, ans = 0;\n        for (int i = t; i < b; i++)\n            for (int j = l; j < r; j++)\n                if (grid[i][j] == 1)\n                {\n                    minc = min(minc, j);\n                    maxc = max(maxc, j);\n                    minr = min(minr, i);\n                    maxr = max(maxr, i);\n                }\n        if (minc == INT_MAX)\n            return -1;\n        ans = (maxr - minr + 1) * (maxc - minc + 1);\n        return ans;\n    }\n};",
    "submit_ts": "1719114271",
    "subm_id": "1297343370"
}