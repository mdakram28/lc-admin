{
    "username": "Cathedral",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = a.size();\n        vector<bool> good(n);\n        for(int i=0;i<n;++i) good[i] = ((a[i]&k)==k);\n        int base = n; while(__builtin_popcount(base)!=1) base++;\n        vector<int> tree(2*base);\n        for(int i=0;i<n;++i) tree[base+i] = a[i];\n        for(int i=base-1;i;--i) tree[i] = tree[2*i]&tree[2*i+1];\n        auto s = [&](int node,int l,int r,int ql,int qr,auto && s)->int{\n            if(ql<=l && qr>=r) return tree[node];\n            if(l>qr || ql>r) return INT_MAX;\n            int m = (l+r)/2;\n            return s(2*node,l,m,ql,qr,s)&s(2*node+1,m+1,r,ql,qr,s);\n        };\n        using ll = long long; ll ans = 0;\n        int last = 0;\n        for(int i=0;i<n;++i){\n            if(!good[i]) last = i+1;\n            else if (s(1,0,base-1,last,i,s) == k){\n                int L = 1, R = i-last+1;\n                while(L<R){\n                    int M = (L+R)/2;\n                    if(s(1,0,base-1,i-M+1,i,s) != k) L = M+1;\n                    else R = M;\n                }\n                R = i-last+1;\n                ans += R-L+1;\n                cout<<i<<' '<<L<<'\\n';\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279656",
    "subm_id": "1311759936"
}