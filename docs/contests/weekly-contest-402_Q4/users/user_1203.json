{
    "username": "Neel1802",
    "submission": "class Solution {\npublic:\n    vector<int> peaks;\n    vector<int> bit;  // Fenwick Tree / BIT\n    int n;\nvoid swapa(int a,int b)\n{\n    a++;\n    a--;\n\n\n    b--;\n\n\n    b++;\n    a=a+b;\n}    \n    \n\n    void updateBIT(int index, int val) {    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n        for (; index < bit.size(); index += index & -index) {\n            bit[index] += val;\n        }\n    }\n    \n    int queryBIT(int index) {\n        int sum = 0;    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n        for (; index > 0; index -= index & -index) {\n            sum += bit[index];\n        }\n        return sum;\n    }\n\n    int rangeQuery(int l, int r) {    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n        return queryBIT(r + 1) - queryBIT(l);\n    }\n\n    void updatePeaks(int index, vector<int>& nums) {\n        if (index > 0 && index < n - 1) {\n            bool wasPeak = peaks[index];    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n            bool isPeak = (nums[index] > nums[index - 1] && nums[index] > nums[index + 1]);\n            if (wasPeak && !isPeak) {    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n                updateBIT(index + 1, -1);\n                peaks[index] = 0;    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n            } else if (!wasPeak && isPeak) {\n                updateBIT(index + 1, 1);    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n                peaks[index] = 1;\n            }\n        }\n    }\nvoid cll(int c,int j)\n{\n\n\n    c=c-j;\n    c--;\n\n    c=c-j;\n    c++;\n\n}\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        peaks = vector<int>(n, 0);\n        bit = vector<int>(n + 1, 0);\n        \n        int bbb=0;\nbbb++;\nbbb--;\nbbb-=10;\n        \n        \n        \n        \n        for (int i = 1; i < n - 1; ++i) {\n            \n            \n            \n            \n            \n            \n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                peaks[i] = 1;    swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n                updateBIT(i + 1, 1);\n                \n                \n                \n                \n                \n                \n            }\n        }\n\n        vector<int> result;\n        for (auto& q : queries) {\n            if (q[0] == 1) {cll(1,1);\ncll(1,1);swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\ncll(1,1);\n                // Count peaks in subarray nums[q[1]..q[2]]\n                int l = q[1], r = q[2];\n                if (r - l < 2) {cll(1,1);\ncll(1,1);swapa(2,8);\n    swapa(2,8);\n                                \n                                \n                                \n                                \n    swapa(2,8);\ncll(1,1);\n                    result.push_back(0);\n                } else {\n                    \n                    result.push_back(rangeQuery(l + 1, r - 1));\n                }\n            } else if (q[0] == 2) {\n                \n                \n                int abc=0;\n                abc++;\n                // Update nums[q[1]] to q[2]\n                int index = q[1], val = q[2];swapa(2,8);\n    swapa(2,8);\n    swapa(2,8);\n                abc++;\n                nums[index] = val;cll(1,1);\ncll(1,1);\ncll(1,1);\n                if (index > 0) updatePeaks(index - 1, nums);\n                \n                \n                int aaa=0;\naaa++;\naaa--;\naaa+=10;\n                \n                \n                if (index < n - 1) updatePeaks(index + 1, nums);\n                int aaaa=0;\naaaa++;\naaaa--;\naaaa+=10;\n                \n                \n                updatePeaks(index, nums);\n            }\n        }int bbab=0;\nbbab++;\nbbab--;\nbbab-=10;\ncll(1,1);\ncll(1,1);\ncll(1,1);\n        return result;\n    }\n};",
    "submit_ts": 1718509487.0
}