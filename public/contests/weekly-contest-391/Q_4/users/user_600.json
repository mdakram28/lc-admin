{
    "username": "Gaurav_Upreti",
    "submission": "class Solution {\npublic:\n//     pair<int, int> MaxDist(vector<vector<int>> >& A, int N)\n// {\n//     // Variables to track running extrema\n//     int minsum, maxsum, mindiff, maxdiff;\n \n//     minsum = maxsum = A[0][0] + A[0][1];\n//     mindiff = maxdiff = A[0][0] - A[0][1];\n//         vector<int> dis(n)\n//     for (int i = 1; i < N; i++) {\n//         int sum = A[i][0] + A[i][1];\n//         int diff = A[i][0] - A[i][1];\n//         if (sum < minsum)\n//             minsum = sum;\n//         else if (sum > maxsum)\n//             maxsum = sum;\n//         if (diff < mindiff)\n//             mindiff = diff;\n//         else if (diff > maxdiff)\n//             maxdiff = diff;\n//     }\n \n//     int maximum = max(maxsum - minsum, maxdiff - mindiff);\n \n//     return maximum;\n// }\n    int MaxDis(vector<pair<int, int> >& A, int N)\n{\n    // Variables to track running extrema\n    int minsum, maxsum, mindiff, maxdiff;\n \n    minsum = maxsum = A[0].first + A[0].second;\n    mindiff = maxdiff = A[0].first - A[0].second;\n    for (int i = 1; i < N; i++) {\n        int sum = A[i].first + A[i].second;\n        int diff = A[i].first - A[i].second;\n        if (sum < minsum)\n            minsum = sum;\n        else if (sum > maxsum)\n            maxsum = sum;\n        if (diff < mindiff)\n            mindiff = diff;\n        else if (diff > maxdiff)\n            maxdiff = diff;\n    }\n \n    int maximum = max(maxsum - minsum, maxdiff - mindiff);\n \n    return maximum;\n}\n \n    int MaxDist(vector<vector<int>>& A, int N)\n{\n    // Vectors to store maximum and\n    // minimum of all the four forms\n    vector<pair<int, int>> V(N), V1(N);\n \n    for (int i = 0; i < N; i++) {\n        V[i] = {A[i][0] + A[i][1], i};\n        V1[i] = {A[i][0] - A[i][1], i};\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    // int maximum = max(V.back() - V.front(), V1.back() - V1.front());\n        int p1, p2;\n    if (V.back().first - V.front().first >= V1.back().first - V1.front().first)\n    {\n        p1 = V.back().second;\n        p2 = V.front().second;\n    }\n        else\n        {\n            p1 = V1.back().second;\n            p2 = V1.front().second;\n        }\n        vector<pair<int, int>> arr, arr1;\n        for (int i = 0; i < N; i++)\n        {\n            if (i != p1)\n                arr.push_back({A[i][0], A[i][1]});\n            if (i != p2)\n                arr1.push_back({A[i][0], A[i][1]});\n        }\n    return min(MaxDis(arr, N - 1), MaxDis(arr1, N - 1));\n}\n \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        return MaxDist(points, n);\n    }\n};"
}