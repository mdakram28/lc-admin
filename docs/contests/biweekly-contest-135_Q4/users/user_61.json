{
    "username": "lovelive__-7",
    "submission": "class Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& a) {\n        int n = a.size();\n        if (n == 1)\n            return 0ll;\n        vector sum(n + 1, vector(n + 1, 0ll));\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                sum[j + 1][i + 1] = sum[j + 1][i] + a[i][j];\n            }\n        }\n        vector dp(n + 1, vector(n + 1, vector(n + 1, 0ll)));\n\n        auto get = [&](int x, int l, int r) {\n            if (l >= r)\n                return 0ll;\n            return sum[x][r] - sum[x][l];\n        };\n        for (int i = 0; i <= n; ++i) {\n            for (int j = 0; j <= n; ++j) {\n                dp[1][i][j] = get(1, i, j);\n            }\n        }\n\n        for (int i = 2; i <= n; ++i) {\n            for (int k = 0; k <= n; ++k) {\n                vector<long long> ans(n + 2);\n                vector<long long> res(n + 1);\n                for (int j = 0; j <= n; ++j) {\n                    if (j > 0)\n                        res[j] = max(res[j - 1], dp[i - 1][j][k]);\n                    else\n                        res[j] = dp[i - 1][j][k];\n                }\n                for (int j = n; j >= 0; --j) {\n                    ans[j] = max(ans[j + 1],\n                                 dp[i - 1][j][k] +\n                                     (k >= j ? 0 : sum[i][j] - sum[i][k]));\n                }\n                for (int z = 0; z <= n; ++z) {\n                    dp[i][k][z] = max(\n                        res[z] + (k >= z ? 0 : sum[i][z] - sum[i][k]), ans[z]);\n                }\n            }\n        }\n        long long ans = 0;\n        for (int x = 0; x <= n; ++x)\n            ans = max(ans, dp[n][x][0]);\n        return ans;\n    }\n};",
    "submit_ts": "1721490188",
    "subm_id": "548321929"
}