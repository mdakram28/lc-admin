{
    "username": "Nitin_Kanzariya_7",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int target) {\n        int size = nums.size();\n        long long subarrayCount = 0;\n        \n        unordered_map<long long, long long> previousMap;\n\n        for (int i = 0; i < size; ++i) {\n            unordered_map<long long, long long> currentMap; \n\n            if (nums[i] == target) {\n                ++subarrayCount;\n            }\n            currentMap[nums[i]] = 1;\n\n            for (auto& [previousValue, frequency] : previousMap) {\n                long long newAndValue = previousValue & nums[i];\n                if (newAndValue == target) {\n                    subarrayCount += frequency;\n                }\n                currentMap[newAndValue] += frequency;\n            }\n            \n            previousMap = currentMap;\n        }\n        \n        return subarrayCount;\n    }\n};\n",
    "submit_ts": "1720281595",
    "subm_id": "1311831580"
}