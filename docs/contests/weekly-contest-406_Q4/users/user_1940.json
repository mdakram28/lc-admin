{
    "username": "lingtei",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        vector<pair<int, bool>> cuts;\n        for (int cost : horizontalCut) {\n            cuts.emplace_back(cost, true);  \n        }\n        for (int cost : verticalCut) {\n            cuts.emplace_back(cost, false);  \n        }\n        sort(cuts.begin(), cuts.end(), greater<pair<int, bool>>());\n\n        long long total_cost = 0;\n        long long h_pieces = 1, v_pieces = 1;\n\n        for (const auto& cut : cuts) {\n            if (cut.second) {  \n                total_cost += ((long long)(cut.first)) * v_pieces;\n                h_pieces++;\n            } else {  \n                total_cost += ((long long)(cut.first)) * h_pieces;\n                v_pieces++;\n            }\n        }\n\n        return total_cost;\n    }\n};",
    "submit_ts": "1720925943",
    "subm_id": "546443006"
}