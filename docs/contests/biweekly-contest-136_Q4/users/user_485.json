{
    "username": "yelarys",
    "submission": "class Solution {\n    int n;\n    int t[(int)1e5 + 5];\n    vector<int> g[(int)1e5 + 5];\n    int dp[(int)1e5 + 5];\n    void dfs(int v, int pr = -1) {\n        t[v] = dp[v];\n        multiset<int, greater<int>> st;\n        for (int u : g[v]) {\n            st.insert(dp[u] + 2 - (u & 1));\n        }\n        int cur = 0;\n        for (int u : g[v]) {\n            st.erase(st.find(dp[u] + 2 - (u & 1)));\n            int pdv = dp[v];\n            int pdu = dp[u];\n            dp[v] = cur;\n            if (st.size()) {\n                dp[v] = max(dp[v], *st.begin());\n            }\n            dp[u] = max(dp[u], dp[v] + 2 - (v & 1));\n            if (u != pr)\n            dfs(u, v);\n            dp[v] = pdv;\n            dp[u] = pdu;\n            cur = max(cur, dp[u] + 2 - (u & 1));\n        }\n    }\n    void prec(int v, int pr = -1) {\n        for(int u : g[v]) {\n            if (u == pr) continue;\n            prec(u, v);\n            dp[v] = max(dp[v], dp[u] + 2 - (u & 1));\n        }\n    }\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n\n        n = edges.size() + 1;\n        for (int i = 0; i < n; i++) {\n            dp[i] = 0;\n            g[i].clear();\n            t[i] = 0;\n        }\n        for (auto i : edges) {\n            int u = i[0], v = i[1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        prec(0);\n        dfs(0);\n        vector<int> ans;\n        for (int i = 0; i < n; i++) {\n            ans.push_back(t[i]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722700611",
    "subm_id": "1343247189"
}