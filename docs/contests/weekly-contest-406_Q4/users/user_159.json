{
    "username": "Dev_Ahuja310528",
    "submission": "class Solution {\npublic:\n    long long minimumCostOfBreaking(vector<int> X, vector<int> Y, int M, int N){\n        sort(X.begin(),X.end(),greater<int>());\n        sort(Y.begin(),Y.end(),greater<int>());\n        \n        long long v=1,h=1;\n        \n        long long i=0,j=0,cost = 0;\n        while (i<X.size() && j<Y.size()) {\n            if (X[i] >= Y[j]) {\n                cost += (X[i]*h);\n                v++;\n                i++;\n            } else {\n                cost += (Y[j]*v);\n                h++;\n                j++;\n            }\n        }\n        \n        while (i<X.size()) {\n            cost += (X[i]*h);\n            v++;\n            i++;\n        }\n        \n        while (j<Y.size()) {\n            cost += (Y[j]*v);\n            h++;\n            j++;\n        }\n        \n        return cost;\n    }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        return minimumCostOfBreaking(horizontalCut, verticalCut, m, n);\n    }\n};",
    "submit_ts": "1720925161",
    "subm_id": "1320245039"
}