{
    "username": "hsdsh",
    "submission": "use std::collections::HashMap;\nimpl Solution {\n    pub fn maximum_length(nums: Vec<i32>, k: i32) -> i32 {\n        let mut m: Vec<i32> = vec![0;(k+1) as usize];\n        let mut dp:Vec<HashMap<i32,i32>> = vec![HashMap::new();(k+1) as usize];\n        for n in nums {\n            for i in (0..=k as usize).rev() {\n                let mut nl = dp[i].get(&n).unwrap_or(&0)+1;\n                if i > 0 && m[i-1]+1 > nl {\n                    nl = m[i-1]+1;\n                }\n                if m[i] < nl {\n                    m[i] = nl;\n                } \n                dp[i].insert(n, nl);\n            }\n        }\n        return m[k as usize];\n    }\n}",
    "submit_ts": 1717860844.0
}