{
    "username": "KINGZIE",
    "submission": "class Solution {\n    int calc(int x,int y);\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<vector<int>>v1,v2;\n        int n = points.size();\n          for(auto it:points){\n            v1.push_back({it[0] + it[1],it[0],it[1]});\n            v2.push_back({it[0] - it[1],it[0],it[1]});\n          }\n        \n        sort(v1.begin(),v1.end());\n        sort(v2.begin(),v2.end());\n        unordered_map<int,vector<int>>m;\n        int l  = 0;\n        int r = n-1;\n        \n        if(v1[0][1] == v2[0][1] && v1[0][2] == v2[0][2]){\n            l++;\n        }\n        if(v1[n-1][1] == v2[0][1] && v1[n-1][2] == v2[0][2]){\n            r--;\n        }\n        m[1].push_back(v2[n-1][0] - v2[1][0]);\n        m[1].push_back(v1[r][0] - v1[l][0]);\n        l = 0;\n        r = n-1;\n        if(v1[0][1] == v2[n-1][1] && v1[0][2] == v2[n-1][2]){\n            l++;\n        }\n        if(v1[n-1][1] == v2[n-1][1] && v1[n-1][2] == v2[n-1][2]){\n            r--;\n        }\n        m[2].push_back(v2[n-2][0] - v2[0][0]);\n        m[2].push_back(v1[r][0] - v1[l][0]);\n        l = 0;\n        r = n-1;\n        \n        if(v1[0][1] == v2[0][1] && v1[0][2] == v2[0][2]){\n            l++;\n        }\n        if(v1[0][1] == v2[n-1][1] && v1[0][2] == v2[n-1][2]){\n            r--;\n        }\n        m[3].push_back(v2[r][0] - v2[l][0]);\n        m[3].push_back(v1[n-1][0] - v1[1][0]);\n        l = 0;\n        r = n-1; \n         if(v1[n-1][1] == v2[0][1] && v1[n-1][2] == v2[0][2]){\n            l++;\n        }\n        if(v1[n-1][1] == v2[n-1][1] && v1[n-1][2] == v2[n-1][2]){\n            r--;\n        }\n        m[4].push_back(v2[r][0] - v2[l][0]);\n        m[4].push_back(v1[n-2][0] - v1[0][0]);\n          int ans = INT_MAX;\n        for(auto it : m){\n               auto v = it.second;\n               ans = min(ans,max(v[0],v[1]));\n        }\n        return ans;                                                 \n    } \n};"
}