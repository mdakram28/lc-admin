{
    "username": "andy-d7",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        t1 = []\n        t2 = [] \n        n = len(points)\n        for i, v in enumerate(points):\n            t1.append((v[0]+v[1], i))\n            t2.append((v[0]-v[1],i))\n        \n        t1.sort()\n        # print(t1)\n         \n        t2.sort()\n        # print(t2)\n        \n        # ret1 = min(t1[-2][0] - t1[0][0], t1[-1][0] - t1[1][0])\n        # if t1[-2][0] - t1[0][0]\n        \n        \n        def calc(arr, v):\n            if v == arr[-1][1]:\n                return arr[-2][0] - arr[0][0]\n            if v == arr[0][1]:\n                return arr[-1][0] - arr[1][0]\n            return arr[-1][0] - arr[0][0]\n            \n        s = set()\n        s.add(t1[0][1])\n        s.add(t1[-1][1])\n        s.add(t2[0][1])\n        s.add(t2[-1][1])\n        # print(s)\n        ret = max(t1[-1][0] - t1[0][0], t2[-1][0] - t2[0][0])\n        for v in s:\n            tmp = max(calc(t1, v), calc(t2, v))\n            # print(v, calc(t1, v), calc(t2, v), tmp)\n            ret = min(ret, tmp) \n        return ret\n        \n        \n        "
}