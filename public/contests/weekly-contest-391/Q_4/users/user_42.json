{
    "username": "plasmatic",
    "submission": "class Solution:\n    def _getMaxDist(self, points: List[List[int]]):\n        pts1 = [(p[0]+p[1], i) for i, p in enumerate(points)]\n        pts2 = [(p[0]-p[1], i) for i, p in enumerate(points)]\n        pts1.sort()\n        pts2.sort()\n        \n        cand1 = (pts1[-1][0] - pts1[0][0], pts1[0][1], pts1[-1][1])\n        cand2 = (pts2[-1][0] - pts2[0][0], pts2[0][1], pts2[-1][1])\n        \n        return max(cand1, cand2)\n        \n    def minimumDistance(self, points: List[List[int]]) -> int:\n        _, a, b = self._getMaxDist(points)\n        \n        points2 = [p for p in points]\n        del points2[a]\n        points3 = [p for p in points]\n        del points3[b]\n        \n        # print(a, b, points2, points3)\n        \n        d1 = self._getMaxDist(points2)[0]\n        d2 = self._getMaxDist(points3)[0]\n        \n        # print(d1, d2)\n        \n        return min(d1, d2)\n        \n"
}