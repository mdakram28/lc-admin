{
    "username": "Chandan Agrawal",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board)\n    {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<pair<int, int>>> rowMaxValues(m);\n        for (int i = 0; i < m; ++i) \n        {\n            vector<pair<int, int>> values;\n            for (int j = 0; j < n; ++j) \n            {\n                values.emplace_back(board[i][j], j);\n            }\n            \n            sort(values.rbegin(), values.rend());\n            \n            rowMaxValues[i] = vector<pair<int, int>>(values.begin(), values.begin() + min(3, n));\n        }\n\n        long long int maxSum = -40000000000;\n\n        for (int r1 = 0; r1 < m; ++r1) \n        {\n            for (int r2 = r1 + 1; r2 < m; ++r2)\n            {\n                for (int r3 = r2 + 1; r3 < m; ++r3) \n                {\n                    for (const auto& p1 : rowMaxValues[r1]) \n                    {\n                        for (const auto& p2 : rowMaxValues[r2])\n                        {\n                            if (p1.second == p2.second)\n                                continue;\n\n                            for (const auto& p3 : rowMaxValues[r3]) \n                            {\n                                if (p1.second == p3.second || p2.second == p3.second) \n                                    continue;\n                                \n                                long long int sum = 1ll*p1.first + 1ll*p2.first + 1ll*p3.first;\n                                \n                                maxSum = max(maxSum, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723908942",
    "subm_id": "1359173359"
}