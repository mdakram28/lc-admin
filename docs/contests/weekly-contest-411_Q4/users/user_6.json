{
    "username": "Rohin Garg",
    "submission": "#define sz(v) int(v.size())\ntemplate<class T>\nstruct FT {\n    vector<T> bit;\n    FT(int n) : bit(n) {}\n    FT(){}\n    void upd(int i, T x) {\n        for (; i < sz(bit); i |= i+1) bit[i] += x;\n    }\n    T qry(int r) {\n        T ans = T();\n        for (++r; r > 0; r &= r-1) ans += bit[r-1];\n        return ans;\n    }\n    T qry(int l, int r) {\n        return qry(r)-qry(l-1);\n    }\n};\n\nclass Solution {\npublic:\n    long long sum_ari(long long l, long long r) {\n        return (r - l + 1) * (l + r) / 2;\n    }\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        int p = 0;\n        int z = 0, o = 0;\n\n        vector<int> me(n);\n        for (int i = 0; i < n; i++) {\n            while (p < n && (z + (s[p] == '0') <= k || (o + (s[p] == '1') <= k))) {\n                z += s[p] == '0';\n                o += s[p] == '1';\n                p++;\n            }\n\n            me[i] = p-1;\n            z -= s[i] == '0';\n            o -= s[i] == '1';\n            // cout << i << ' ' << me[i] << endl;\n        }\n\n        int q = queries.size();\n        vector<long long> pr(q);\n        vector<vector<int>> ev(n);\n        vector<vector<pair<int, int>>> qr(n);\n        for (int i = 0; i < n; i++) {\n            ev[me[i]].push_back(i);\n        }\n        \n        for (int i = 0; i < q; i++) {\n            auto v = queries[i];\n            int l = v[0], r = v[1];\n            qr[r].emplace_back(l, i);\n        }\n\n        FT<int> cnt(n);\n        FT<long long> sum(n);\n        for (int i = 0; i < n; i++) cnt.upd(i, +1);\n        for (int i = 0; i < n; i++) {\n            for (int x : ev[i]) {\n                cnt.upd(x, -1);\n                sum.upd(x, i);\n            }\n\n            for (auto [l, id] : qr[i]) {\n                pr[id] += sum.qry(l, i) + (long long) i * cnt.qry(l, i);\n            }\n        }\n\n        for (int i = 0; i < q; i++) {\n            auto v = queries[i];\n            int l = v[0], r = v[1];\n            long long ans = -sum_ari(l, r) + (r - l + 1);\n            // for (int i = l; i <= r; i++)\n                // ans += min(me[i], r);\n            pr[i] += ans;    \n        }\n        return pr;\n    }\n};",
    "submit_ts": "1723950002",
    "subm_id": "1359734572"
}