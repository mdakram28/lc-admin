{
    "username": "thomas87666",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        sit = [0] * 35\n        dp = [[0 for _ in range(31)] for _ in range(len(nums))]\n        for i in range(31):\n            if (k>>i) & 1:\n                sit[i] = 1\n        ans = 0\n        tmp = nums[0]\n        for i in range(len(nums)):\n            tmp &= nums[i]\n            l,r = 0,i\n            for j in range(31):\n                if sit[j] == 0:\n                    if ((nums[i] >> j) & 1) == 0:\n                        dp[i][j] = i\n                    else:\n                        dp[i][j] = dp[i-1][j]\n                        r = min(r, dp[i][j])\n                else:\n                    if ((nums[i] >> j) & 1) == 0:\n                        dp[i][j] = i + 1\n                        l = inf\n                        break\n                    else:\n                        dp[i][j] = dp[i-1][j]\n                    l = max(l, dp[i][j])\n            if tmp > k:\n                continue\n            else:\n                ans += max(r - l + 1, 0)\n            # print(l,r)\n        # print(dp[0])\n        return ans\n            \n\n\n\n\n\n",
    "submit_ts": "1720279666",
    "subm_id": "544568531"
}