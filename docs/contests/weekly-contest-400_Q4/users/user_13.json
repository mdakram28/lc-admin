{
    "username": "PurpleCrayon",
    "submission": "#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\ntemplate<class T>\nstruct RMQ {\n\tvector<vector<T>> jmp;\n\tRMQ(const vector<T>& V) : jmp(1, V) {\n\t\tfor (int pw = 1, k = 1; pw * 2 <= sz(V); pw *= 2, ++k) {\n\t\t\tjmp.emplace_back(sz(V) - pw * 2 + 1);\n\t\t\trep(j,0,sz(jmp[k]))\n\t\t\t\tjmp[k][j] = jmp[k - 1][j] & jmp[k - 1][j + pw];\n\t\t}\n\t}\n\tT qry(int a, int b) {\n        b++;\n\t\tassert(a < b); // or return inf if a == b\n\t\tint dep = 31 - __builtin_clz(b - a);\n\t\treturn jmp[dep][a] & jmp[dep][b - (1 << dep)];\n\t}\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int ans = INT_MAX;\n        RMQ rmq(nums);\n        for (int i = 0; i < n; i++) {\n            // last thing that's >= k\n            int lo = i, hi = n, mid = (lo + hi) / 2;\n            while (lo < mid && mid < hi) {\n                if (rmq.qry(i, mid) >= k) lo = mid;\n                else hi = mid;\n                mid = (lo + hi) / 2;\n            }\n            \n            ans = min(ans, abs(rmq.qry(i, lo) - k));\n            if (lo < n-1) {\n                ans = min(ans, abs(rmq.qry(i, lo + 1) - k));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717296228.0
}