{
    "username": "vodanh9710",
    "submission": "\ndef md(point1, point2):\n    return abs(point1[0] - point2[0]) + abs(point1[1] - point2[1])\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        l, r, ml, mr = None, None, math.inf, 0\n        maxx = 0\n        for i in range(n):\n            x, y = points[i]\n            if x + y < ml:\n                ml = x + y\n                l = i\n            if x + y > mr:\n                mr = x + y\n                r = i\n            maxx = max(maxx, x)\n        check = {l, r}\n        l, r, ml, mr = None, None, math.inf, 0\n        for i in range(n):\n            x, y = points[i]\n            x = maxx - x\n            if x + y < ml:\n                ml = x + y\n                l = i\n            if x + y > mr:\n                mr = x + y\n                r = i\n        check.add(l)\n        check.add(r)\n        \n        ans = math.inf\n        for c in check:\n            l, r, ml, mr = None, None, math.inf, 0\n            maxx = 0\n            for i in range(n):\n                if i == c:\n                    continue\n                x, y = points[i]\n                if x + y < ml:\n                    ml = x + y\n                    l = i\n                if x + y > mr:\n                    mr = x + y\n                    r = i\n                maxx = max(maxx, x)\n            maxh = md(points[l], points[r])\n            l, r, ml, mr = None, None, math.inf, 0\n            for i in range(n):\n                if i == c:\n                    continue\n                x, y = points[i]\n                x = maxx - x\n                if x + y < ml:\n                    ml = x + y\n                    l = i\n                if x + y > mr:\n                    mr = x + y\n                    r = i\n            maxh = max(maxh, md(points[l], points[r]))\n            ans = min(ans, maxh)\n        return ans"
}