{
    "username": "hmnt_kmr",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int pos = 0;\n        int[] diffArr = new int[n];\n\n        for (int i = 0; i < n; i++) {\n            diffArr[i] = target[i] - nums[i];\n        }\n\n        long totalOperations = 0;\n        long currentMin = Math.abs(diffArr[0]);\n        totalOperations = currentMin;\n\n        if (diffArr[0] >= 0) {\n            pos = 1;\n        }\n\n        for (int i = 1; i < n; i++) {\n            if (diffArr[i] < 0 && pos == 1) {\n                totalOperations += Math.abs(diffArr[i]);\n                currentMin = Math.abs(diffArr[i]);\n                pos = 0;\n            } else if (diffArr[i] >= 0 && pos == 0) {\n                totalOperations += Math.abs(diffArr[i]);\n                currentMin = Math.abs(diffArr[i]);\n                pos = 1;\n            } else if (currentMin >= Math.abs(diffArr[i])) {\n                currentMin = Math.abs(diffArr[i]);\n            } else {\n                totalOperations += Math.abs(diffArr[i]) - currentMin;\n                currentMin = Math.abs(diffArr[i]);\n            }\n        }\n\n        return totalOperations;\n    }\n}",
    "submit_ts": "1721534395",
    "subm_id": "1328030286"
}