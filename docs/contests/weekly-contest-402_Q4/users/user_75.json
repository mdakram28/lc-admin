{
    "username": "ryanguorocket",
    "submission": "typedef long long ll;\n\nclass Solution {\npublic:\n    struct BIT {\n        int si;\n        vector<ll> bit;\n        BIT(int nsi) {\n            si = nsi;\n            bit = vector<ll>(nsi + 1);\n        }\n        void update(int p, ll v) {\n            for(p++; p <= si; p += p & -p) bit[p] += v;\n        }\n        ll query(int p) {\n            ll ret = 0;\n            for(p++; p > 0; p -= p & -p) ret += bit[p];\n            return ret;\n        }\n        ll query(int a, int b) {\n            return query(b) - query(a - 1);\n        }\n    };\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> ret;\n        int n = nums.size();\n        vector<bool> p(n);\n        BIT ds(n);\n        for(int i = 1; i < n - 1; i++) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                p[i] = true;\n                ds.update(i, 1);\n            }\n        }\n        for(auto& q: queries) {\n            int t = q[0];\n            int a = q[1];\n            int b = q[2];\n            if(t == 1) {\n                int outp = ds.query(a, b);\n                if(p[a]) outp--;\n                if(a != b && p[b]) outp--;\n                ret.push_back(outp);\n            }\n            else {\n                auto reset = [&](int x) -> void {\n                    if(x <= 0 || x >= n - 1) return;\n                    if(nums[x] > nums[x - 1] && nums[x] > nums[x + 1]) {\n                        if(!p[x]) ds.update(x, 1);\n                        p[x] = true;\n                    }\n                    else {\n                        if(p[x]) ds.update(x, -1);\n                        p[x] = false;\n                    }\n                };\n                nums[a] = b;\n                reset(a - 1);\n                reset(a);\n                reset(a + 1);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1718506141",
    "subm_id": "1289608410"
}