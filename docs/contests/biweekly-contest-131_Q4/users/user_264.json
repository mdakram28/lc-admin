{
    "username": "qwertyish",
    "submission": "using ll = long long;\n\nclass Solution {\npublic:\n    vector<ll> st;\n    vector<bool> qr;\n    set<int> ps;\n    map<int, ll> pm;\n\n    void build(int s, int e, int idx, vector<ll>& arr) {\n        if (s == e) {\n            st[idx] = arr[s];\n            return;\n        }\n        int m = s + (e - s) / 2;\n        build(s, m, 2 * idx + 1, arr);\n        build(m + 1, e, 2 * idx + 2, arr);\n        st[idx] = max(st[2 * idx + 1], st[2 * idx + 2]);\n    }\n\n    void update(int s, int e, int idx, int qIdx, ll val) {\n        if (s == e) {\n            st[idx] = val;\n            return;\n        }\n        int m = s + (e - s) / 2;\n        if (qIdx <= m)\n            update(s, m, 2 * idx + 1, qIdx, val);\n        else\n            update(m + 1, e, 2 * idx + 2, qIdx, val);\n        st[idx] = max(st[2 * idx + 1], st[2 * idx + 2]);\n    }\n\n    ll queryRange(int s, int e, int idx, int qS, int qE) {\n        if (qS <= s && qE >= e)\n            return st[idx];\n        if (qS > e || qE < s)\n            return LLONG_MIN;\n        int m = s + (e - s) / 2;\n        ll lr = queryRange(s, m, 2 * idx + 1, qS, qE);\n        ll rr = queryRange(m + 1, e, 2 * idx + 2, qS, qE);\n        return max(lr, rr);\n    }\n\n    vector<bool> getResults(vector<vector<int>>& q) {\n        st.resize(5e5);\n        qr.clear();\n        ps.insert(0);\n        ps.insert(100000);\n        pm[0] = 0;\n        pm[100000] = 100000;\n        for (auto& query : q) {\n            if (query[0] == 1) {\n                ps.insert(query[1]);\n                auto pItr = prev(ps.lower_bound(query[1]));\n                auto nItr = next(ps.lower_bound(query[1]));\n                int p = *pItr;\n                int n = *nItr;\n                pm[n] = n - query[1];\n                pm[query[1]] = query[1] - p;\n                update(0, 100000, 0, query[1], pm[query[1]]);\n                update(0, 100000, 0, n, pm[n]);\n            } else {\n                auto pItr = prev(ps.lower_bound(query[1]));\n                int p = *pItr;\n                if (query[1] - p >= query[2]) {\n                    qr.push_back(true);\n                    continue;\n                } else if (queryRange(0, 100000, 0, 0, query[1]) >= query[2]) {\n                    qr.push_back(true);\n                    continue;\n                }\n                qr.push_back(false);\n            }\n        }\n        return qr;\n    }\n};\n",
    "submit_ts": 1716651987.0
}