{
    "username": "Thinkronized",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        if(n%2 == 1 && m%2 == 1){ \n            ans = grid[n/2][m/2];\n        }\n        int parityr = 0;\n        bool doner = false;\n        if(n%2 == 1){\n            int l = 0, r = m-1;\n            while(l < r){\n                if(grid[n/2][l] != grid[n/2][r]) ans++,doner = true;\n                else if(grid[n/2][l] == 1)parityr++;\n                l++,r--;\n            }\n        }\n        int parityc = 0;\n        bool donec = false;\n        if(m%2 == 1){\n            int l = 0, r = n-1;\n            while(l < r){\n                if(grid[l][m/2] != grid[r][m/2]) ans++,donec = true;\n                else if(grid[l][m/2] == 1) parityc++;\n                l++, r--;\n            }\n        }\n\n        if(m%2 == 1 && n%2 == 1 && parityc%2 != parityr%2 && (!doner && !donec)) ans += 2;\n        else if((parityr%2 == 1 && m%2 == 0) || (parityc%2 == 1 && n%2 == 0)) if(!doner &!donec)ans+= 2;\n        for(int i = 0; i < n/2; i++){\n            for(int j = 0; j < m/2; j++){\n                int o = grid[i][j] + grid[i][m-1-j] + grid[n-1-i][j] + grid[n-1-i][m-1-j];\n                if(o <= 2) ans += o;\n                else ans += 4-o; \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698993",
    "subm_id": "1343198246"
}