{
    "username": "rigel_136",
    "submission": "class Solution {\npublic:\nint countF(int low,int high,int f,vector<vector<int>>& grid){\n    int ct=0;\n\n    while(low<high){\n        if(f){\n          if(grid[low][high]!=grid[high][low]){ct++;}\n        }\n        else{\n          if(grid[low][high]!=grid[high][low]){ct++;} \n        }\n        high--; low++;\n    }\n    return ct;\n}\n\n    int minFlips(vector<vector<int>>& grid) {\n      int m=grid.size(),n=grid[0].size();\n       int ct=0;\n        \n       if(m&1 && n&1){\n           if(grid[m/2][n/2]&1){ct++;}\n        }\n        vector<int>next(3);\n\n        if(m&1){\n          int q=0,w=n-1;\n            while(q<w) {\n            int sum=grid[m/2][q]+grid[m/2][w];\n                next[sum]++;\n              q++;w--;\n            }\n        }\n        if(n&1){\n         int q=0,w=m-1;\n         while(q<w){\n            int sum=grid[q][n/2]+grid[w][n/2];\n                next[sum]++;\n                q++;w--;\n            }\n        }\n\n        if(next[2]&1){\n            if(0<next[1]){ct+=next[1];}\n            else{ct+=2;}\n        } \n        else{\n            ct+=next[1];\n        }\n\n        for(int i=0;i<m/2;i++){\n          for(int j=0;j<n/2;j++){\n                int q=grid[i][j];\n                int w= grid[m-i-1][j];\n                int e= grid[i][n-j-1];\n                int r= grid[m-i-1][n-j-1];\n\n                int foursum=q+w+e+r;\n\n            if(foursum!=0 && foursum!=4){\n                ct+=min(foursum,4-foursum);\n                }\n            }\n        }\n\n        return ct;\n    }\n};",
    "submit_ts": "1722699847",
    "subm_id": "1343224193"
}