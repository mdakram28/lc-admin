{
    "username": "mble6125",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int h=grid.size(), w=grid[0].size();\n        int n=grid.size()/2, m=grid[0].size()/2;\n        int res=0;\n        if ((h & 1) && (w & 1)) res=grid[n][m];\n        \n        for (int i=0; i<n; ++i) {\n            for (int j=0; j<m; ++j) {\n                int temp=grid[i][j] + grid[h-i-1][j] + grid[i][w-j-1] + grid[h-i-1][w-j-1];\n                // cout<<temp;\n                res+=min(temp,  4-temp);\n            }\n        }\n        // cout<<res;\n        int count=0;\n        bool p=false;\n        if (h & 1) {\n            for (int i=0; i<m; ++i) {\n                if (grid[n][i] == grid[n][w-i-1] && grid[n][i]==1) ++count;\n                if (grid[n][i] != grid[n][w-i-1]) {\n                    ++res;\n                    p=true;\n                }\n            }\n        }\n        \n        if (w & 1) {\n            for (int i=0; i<n; ++i) {\n                if (grid[i][m] == grid[h-i-1][m] && grid[i][m]==1) ++count;\n                if (grid[i][m] != grid[h-i-1][m]) {\n                    ++res;\n                    p=true;\n                }\n            }\n        }\n        \n        if (!p && (count & 1)) res+=2;\n        \n        return res;\n    }\n};",
    "submit_ts": "1722696930",
    "subm_id": "1343127718"
}