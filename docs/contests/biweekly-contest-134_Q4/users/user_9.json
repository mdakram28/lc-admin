{
    "username": "lympanda",
    "submission": "int d[110000][30];\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int i,j,n,o,ll,rr,mid,v1,v2,tmp;\n        long long ans;\n        n=a.size();\n        memset(d[0],0,sizeof(d[0]));\n        for (i=0;i<n;i++)\n        {\n            memcpy(d[i+1],d[i],sizeof(d[i]));\n            for (o=0;o<30;o++)\n            {\n                if (((1<<o)&a[i])!=0) d[i+1][o]++;\n            }\n        }\n        ans=0;\n        for (i=0;i<n;i++)\n        {\n            ll=i-1;rr=n;\n            while (rr-ll>1)\n            {\n                mid=(ll+rr)/2;\n                tmp=0;\n                for (o=0;o<30;o++)\n                {\n                    if (d[mid+1][o]-d[i][o]==mid-i+1) tmp|=(1<<o);\n                }\n                if (tmp<=k) rr=mid;\n                else ll=mid;\n            }\n            v1=rr;\n            ll=i-1;rr=n;\n            while (rr-ll>1)\n            {\n                mid=(ll+rr)/2;\n                tmp=0;\n                for (o=0;o<30;o++)\n                {\n                    if (d[mid+1][o]-d[i][o]==mid-i+1) tmp|=(1<<o);\n                }\n                if (tmp<k) rr=mid;\n                else ll=mid;\n            }\n            v2=ll;\n            if (v2-v1>=0) ans+=v2-v1+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277089",
    "subm_id": "544554409"
}