{
    "username": "RAHUL_JANGID_01",
    "submission": "\nclass Solution {\nfun maximumLength(nums: IntArray, k: Int): Int {\n    val n = nums.size\n    val dp = Array(n) { IntArray(k + 1) { 1 } }\n    var ans = 1\n    val vk = IntArray(k + 1) { -1 }\n    val vkm = Array(k + 1) { mutableMapOf<Int, Int>() }\n\n    for (i in nums.indices) {\n        for (j in 0..k) {\n            for (l in 0 until j) {\n                dp[i][j] = maxOf(dp[i][j], 1 + vk[l])\n            }\n            if (vkm[j].containsKey(nums[i])) {\n                dp[i][j] = maxOf(dp[i][j], 1 + vkm[j][nums[i]]!!)\n            }\n            ans = maxOf(ans, dp[i][j])\n        }\n        for (j in 0..k) {\n            vk[j] = maxOf(vk[j], dp[i][j])\n            vkm[j][nums[i]] = maxOf(vkm[j].getOrDefault(nums[i], 0), dp[i][j])\n        }\n    }\n    return ans\n}\n}\n",
    "submit_ts": 1717862232.0
}