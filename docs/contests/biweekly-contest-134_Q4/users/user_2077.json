{
    "username": "aleem123",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        long long count = 0;\n        int n = nums.size();\n        unordered_map<int, int> dp;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<int, int> new_dp;\n\n            if (nums[i] == k) {\n                ++count;\n            }\n\n            new_dp[nums[i]] = 1;\n\n            for (auto& [and_val, freq] : dp) {\n                int new_and = and_val & nums[i];\n                if (new_and == k) {\n                    count += freq;\n                }\n                new_dp[new_and] += freq;\n            }\n\n            dp = new_dp;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720281298",
    "subm_id": "1311820083"
}