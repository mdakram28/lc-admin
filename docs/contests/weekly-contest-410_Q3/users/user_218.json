{
    "username": "brian386",
    "submission": "class Solution {\npublic:\n    /*\n    for each i, split nums[i] into 2\n    dp? \n    dp[i][x] = number of choices splitting nums[i] at x;\n\n    */\n    typedef long long ll;\n    ll M = 1e9+7;\n    ll add(ll a, ll b){\n        return ((a%M)+(b%M))%M;\n    }\n    int countOfPairs(vector<int>& nums) {\n        int MX = 51;\n        int n = (int) nums.size();\n        vector<vector<ll>> dp(n, vector<ll>(MX));\n\n\n        for(int i = 0; i < dp.size(); i++){\n            for(int x = 0; x < MX; x++){\n                if(x <= nums[i]){\n                    ll dp1 = 0;\n                    if(i == 0){\n                        dp1 = 1;\n                    } else {\n                        for(int y = x; y >= 0; y--){\n                            if(nums[i-1]-y >= 0 && nums[i-1]-y >= nums[i]-x){\n                                dp1 = add(dp1, dp[i-1][y]);\n                            }\n                        }\n                    }\n                    dp[i][x] = dp1;\n                }\n            }\n        }\n\n        for(int i = 0 ;i < n; i++){\n            for(int j = 0;j < 5; j++){\n                cout << dp[i][j] << \" \";\n            }\n            cout << endl;\n        }\n        ll ans = 0;\n        for(int i =0; i < MX; i++){\n            ans = add(ans, dp[n-1][i]);\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1723345132",
    "subm_id": "1351549271"
}