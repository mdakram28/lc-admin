{
    "username": "chang-fh",
    "submission": "class Solution {\npublic:\n    const static int N = 100010; \n    using LL = long long; \n    int w1[N], w2[N], up[N];   \n    int dfs(int u, int fa, vector<vector<int>>& e) {\n        w1[u] = 0, w2[u] = 0; \n        for(auto j : e[u]) {\n            if(j == fa) continue; \n            int u1 = dfs(j, u, e) + (j % 2 == 0 ? 2 : 1); \n            if(u1 > w1[u]) w2[u] = w1[u], w1[u] = u1;\n            else if(u1 > w2[u]) w2[u] = u1; \n        }\n        return w1[u]; \n    }\n\n    void dfs1(int u, int fa, vector<vector<int>>& e, vector<int>& a) {\n\n        if(u == 0) {\n            up[u] = 0; \n        }\n        else {\n            int x = w1[u] + (u % 2 == 0 ? 2 : 1);\n            if(x == w1[fa]) x = w2[fa]; \n            else x = w1[fa]; \n            up[u] = max(x + (fa % 2 == 0 ? 2 : 1), up[fa] + (fa % 2 == 0 ? 2 : 1));    \n        }\n        for(auto j : e[u]) {\n            if(j == fa) continue; \n            dfs1(j,u,e,a);\n        }\n        a[u] = max(up[u], w1[u]);  \n    }\n    vector<int> timeTaken(vector<vector<int>>& es) {\n        vector<vector<int>>edges(es.size()+1, vector<int>(0)); \n        for(auto t : es) {\n            edges[t[0]].push_back(t[1]);\n            edges[t[1]].push_back(t[0]); \n        }  \n        dfs(0, -1, edges); \n        vector<int>ans(edges.size(), 0); \n        dfs1(0, -1, edges, ans);\n\n        return ans; \n    }\n};",
    "submit_ts": "1722699945",
    "subm_id": "552277801"
}