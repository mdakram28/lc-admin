{
    "username": "shubh37kumar",
    "submission": "class Solution {\npublic:\n    vector<int> in,out;\n    vector<int> mx,secmx,ans;\n    vector<int> adj[100005];\n    void dfs(int source,int par){\n        if(source % 2 == 1){\n            in[source] = 1;\n        }\n        else in[source] = 2;\n        int maxi = 0;\n        int secmaxi = 0;\n        for(auto child : adj[source]){\n            if(child == par) continue;\n            dfs(child,source);\n            int pres = mx[child] + in[child];\n            if(pres > maxi){\n                secmaxi = maxi;\n                maxi = pres;\n            }\n            else if(pres > secmaxi){\n                secmaxi = pres;\n            }\n        }\n        mx[source] = maxi;\n        secmx[source] = secmaxi;\n    }\n\n    void dfs2(int source,int par){\n        // out[source] = mx[source];\n        for(auto child : adj[source]){\n            if(child == par) continue;\n            int pres = mx[child] + in[child];\n            if(mx[source] == pres){\n                out[child] = max({secmx[source],out[source]}) + in[source];\n                ans[child] = max({mx[child],secmx[source] + in[source],out[child]});\n            }\n            else{\n                out[child] = max({mx[source],out[source]}) + in[source];\n                ans[child] = max({mx[child],mx[source] + in[source],out[child]});\n            }\n            dfs2(child,source);\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        // vector<int> adj[n+1];\n        // adj.resize(n+1,0);\n        for(int i=  0;i < n-1;i++){\n            int u = edges[i][0];\n            int v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        in.resize(n+1,0);\n        out.resize(n+1,0);\n        mx.resize(n+1,0);\n        secmx.resize(n+1,0);\n        ans.resize(n,0);\n        // out[0] = mx[0];\n        dfs(0,-1);\n        // for(int i = 0;i < n;i++){\n        //     cout<<mx[i]<<\" \";\n        // }\n        // cout<<endl;\n        ans[0] = mx[0];\n        // out[0] = mx[0];\n        dfs2(0,-1);\n        // for(int i = 0;i < n;i++){\n        //     cout<<out[i]<<\" \";\n        // }\n        // cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1722700645",
    "subm_id": "1343248251"
}