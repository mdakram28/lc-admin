{
    "username": "__keep_it_simple__",
    "submission": "#define ll long long\nll st[101][101][8][8];\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& b) {\n        //vector st(101, vector(101, vector(8, vector<ll>(8))));\n        int N = b.size(), M = b[0].size();\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < M; j++) {\n                st[i][j][0][0] = b[i][j];\n            }\n        }\n        for (int k = 1; k <= 7; k++) {\n            for (int i = 0; i + (1 << k) - 1 < N; i++) {\n                for (int j = 0; j /*+ (1 << k) - 1*/ < M; j++) {\n                    st[i][j][k][0] = max(st[i][j][k - 1][0], st[i + (1 << (k - 1))][j][k - 1][0]);\n                }\n            }\n        }\n        for (int k = 1; k <= 7; k++) {\n            for (int i = 0; i < N; i++) {\n                for (int j = 0; j + (1 << k) - 1 < M; j++) {\n                    st[i][j][0][k] = max(st[i][j][0][k - 1], st[i][j + (1 << (k - 1))][0][k - 1]);\n                }\n            }\n        }\n        for (int x = 1; x <= 7; x++) for (int y = 1; y <= 7; y++) {\n            for (int i = 0; i + (1 << x) - 1 < N; i++) for (int j = 0; j + (1 << y) - 1 < M; j++) {\n                st[i][j][x][y] = max({\n                    st[i][j][x - 1][y - 1], \n                    st[i + (1 << (x - 1))][j][x - 1][y - 1],\n                    st[i][j + (1 << (y - 1))][x - 1][y - 1],\n                    st[i + (1 << (x - 1))][j + (1 << (y - 1))][x - 1][y - 1]});\n            }\n        }\n        auto rmq = [&](int x1, int x2, int y1, int y2) {\n            int s = __lg(x2 - x1 + 1), t = __lg(y2 - y1 + 1);\n            return max({\n                st[x1][y1][s][t],\n                st[x2 - (1 << s) + 1][y1][s][t],\n                st[x1][y2 - (1 << t) + 1][s][t],\n                st[x2 - (1 << s) + 1][y2 - (1 << t) + 1][s][t]\n            });\n        };\n        ll res = -4e9;\n        for (int i = 1; i < N - 1; i++) for (int j = 1; j < M - 1; j++) {\n            res = max(res, b[i][j] + rmq(0, i - 1, 0, j - 1) + rmq(i + 1, N - 1, j + 1, M - 1));\n            res = max(res, b[i][j] + rmq(i + 1, N - 1, 0, j - 1) + rmq(0, i - 1, j + 1, M - 1));\n        }\n        for (int i = 0; i + 2 < N; i++) for (int j = 1; j < M - 1; j++) {\n            for (int k = i + 1; k <= N - 2; k++) {\n                res = max(res, b[i][j] + rmq(i + 1, k, j + 1, M - 1) + rmq(k + 1, N - 1, 0, j - 1));\n                //if (i == 0 && j == 2) cout << rmq(i + 1, k, j + 1, M - 1) << \"!!\" << rmq(k + 1, N - 1, 0, j - 1) << endl;\n                \n                res = max(res, b[i][j] + rmq(i + 1, k, 0, j - 1) + rmq(k + 1, N - 1, j + 1, M - 1));\n\n                //if (i == 0 && j == 2) cout << rmq(i + 1, k, 0, j - 1) << \" ?? \" << rmq(k + 1, N - 1, j + 1, M - 1) << endl;\n            }\n        }\n        for (int i = 2; i < N; i++) for (int j = 1; j < M - 1; j++) {\n            for (int k = 0; k + 1 < i; k++) {\n                res = max(res, b[i][j] + rmq(0, k, j + 1, M - 1) + rmq(k + 1, i - 1, 0, j - 1));\n                res = max(res, b[i][j] + rmq(0, k, 0, j - 1) + rmq(k + 1, i - 1, j + 1, M - 1));\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723910277",
    "subm_id": "1359224050"
}