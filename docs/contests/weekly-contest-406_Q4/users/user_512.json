{
    "username": "groot_li",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        row, column = 1, 1\n        res = 0\n        horizontalCut.sort()\n        verticalCut.sort()\n        while horizontalCut and verticalCut:\n            if horizontalCut[-1] > verticalCut[-1]:\n                cost = horizontalCut.pop()\n                res += cost * column\n                row += 1\n            else:\n                cost = verticalCut.pop()\n                res += cost * row\n                column += 1\n                \n        while horizontalCut:\n            cost = horizontalCut.pop()\n            res += cost * column\n            \n        while verticalCut:\n            cost = verticalCut.pop()\n            res += cost * row\n            \n        return res",
    "submit_ts": "1720925308",
    "subm_id": "1320250276"
}