{
    "username": "hgwalani81",
    "submission": "class Solution {\npublic:\n    \n    int findOne(vector<vector<int>>& grid, int si, int sj, int ei, int ej) {\n        int n = ei+1, m = ej+1;\n        int left = sj, right = ej, up = si, down = ei;\n        while(left < m) {\n            bool isRemovable = true;\n            for(int i = si; i<n; i++) isRemovable = (isRemovable && (grid[i][left] == 0));\n            if(!isRemovable) break;\n            left++;\n        }\n        while(right >= sj) {\n            bool isRemovable = true;\n            for(int i = si; i<n; i++) isRemovable = (isRemovable && (grid[i][right] == 0));\n            if(!isRemovable) break;\n            right--;\n        }\n        while(down >= si) {\n            bool isRemovable = true;\n            for(int i = sj; i<m; i++) isRemovable = (isRemovable && (grid[down][i] == 0));\n            if(!isRemovable) break;\n            down--;\n        }\n        while(up < n) {\n            bool isRemovable = true;\n            for(int i = sj; i<m; i++) isRemovable = (isRemovable && (grid[up][i] == 0));\n            if(!isRemovable) break;\n            up++;\n        }\n        int ans = ((right - left + 1) * (down - up + 1));\n        if(ans <= 0) ans = INT_MAX;\n        // cout<<\"one \"<<si<<\" \"<<sj<<\" \"<<ei<<\" \"<<ej<<\" \"<<\" \"<<left<<\" \"<<right<<\" \"<<up<<\" \"<<down<<\" \"<<ans<<endl;\n        return ans;\n    }\n    \n    int findTwo(vector<vector<int>>& grid, int si, int sj, int ei, int ej) {\n        int ans = INT_MAX;\n        for(int i = si; i<ei; i++) {\n            int upper = findOne(grid, si, sj, i, ej);\n            if(upper == INT_MAX) continue;\n            int lower = findOne(grid, i+1, sj, ei, ej);\n            if(lower == INT_MAX) continue;\n            ans = min(ans, upper + lower);\n        }\n        for(int j = sj; j<ej; j++) {\n            int left = findOne(grid, si, sj, ei, j);\n            if(left == INT_MAX) continue;\n            int right = findOne(grid, si, j+1, ei, ej);\n            if(right == INT_MAX) continue;\n            ans = min(ans, left + right);\n        }\n        // cout<<\"Calling two \"<<si<<\" \"<<sj<<\" \"<<ei<<\" \"<<ej<<\" \"<<ans<<endl;\n        return ans;\n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = INT_MAX;\n        for(int i = 0; i<n-1; i++) {\n            int one = findOne(grid, 0, 0, i, m-1);\n            // if(one == INT_MAX) continue;\n            int two = findTwo(grid, i+1, 0, n-1, m-1);\n            // if(two == INT_MAX) continue;\n            // cout<<i<<\" \"<<one<<\" \"<<two<<endl;\n            if(one != INT_MAX and two != INT_MAX)\n            ans = min(ans, one + two);\n            one = findOne(grid, i+1, 0, n-1, m-1);\n            if(one == INT_MAX) continue;\n            two = findTwo(grid, 0, 0, i, m-1);\n            if(two == INT_MAX) continue;\n            ans = min(ans, one + two);\n            // cout<<i<<\" \"<<one<<\" \"<<two<<endl;\n        }\n        for(int j = 0; j<m-1; j++) {\n            int one = findOne(grid, 0, 0, n-1, j);\n            // if(one == INT_MAX) continue;\n            int two = findTwo(grid, 0, j+1, n-1, m-1);\n            // if(two == INT_MAX) continue;\n            cout<<j<<\" \"<<one<<\" \"<<two<<endl;\n            if(one != INT_MAX and two != INT_MAX)\n                ans = min(ans, one + two);\n            one = findOne(grid, 0, j+1, n-1, m-1);\n            if(one == INT_MAX) continue;\n            two = findTwo(grid, 0, 0, n-1, j);\n            if(two == INT_MAX) continue;\n            ans = min(ans, one + two);\n            // cout<<j<<\" \"<<one<<\" \"<<two<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719115143.0
}