{
    "username": "next_utkarsh_108",
    "submission": "\nclass Solution {\npublic:\nusing ll= long long;\nusing sg=string;\ntypedef pair<int, int> pll;\ntypedef vector<int> vll;\ntypedef vector<pll> vpll; \ntypedef map<int,int> mll;\n#define ff first\n#define ss second\n#define pb push_back\n#define fl(i,n) for(int i=0;i<n;i++)\n#define vr(v) v.begin(),v.end()\n#define flp(i,a,b) for(int i = a; i <= b; i++)\n\npll bfs(int start, const vector<vector<int>>& adj) {\n    int n = adj.size();\n    vll v(n,-1);\n    queue<int> q;\n    \n    q.push(start);\n    v[start] = 0;\n    \n    int ans = start;\n    int x = 0;\n    \n    while (!q.empty()) {\n        int node = q.front();\n        q.pop();\n        for (int ii : adj[node]) {\n            if (v[ii] == -1) {\n                v[ii] = v[node] + 1;\n                q.push(ii);\n                \n                if (v[ii] > x) {\n                    x=v[ii];\n                    ans=ii;\n                }\n            }\n        }\n    }\n    \n    return {ans, x};\n}\n \nint f(const vector<vector<int>>& adj) {\n    auto [u, v] = bfs(0, adj);\n    auto [w, x] = bfs(u, adj);\n    return x;\n}\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        \n    \n\n    vector<vector<int>> adj1(100005);\n    vector<vector<int>> adj2(100005);\n    \n    for (const auto& edge : edges1) {\n        adj1[edge[0]].push_back(edge[1]);\n        adj1[edge[1]].push_back(edge[0]);\n    }\n    \n    for (const auto& edge : edges2) {\n        adj2[edge[0]].push_back(edge[1]);\n        adj2[edge[1]].push_back(edge[0]);\n    }\n     \n    int a = f(adj1);\n    int b = f(adj2); \n    int c = max(a, b);\n    c = max(c, (a + 1) / 2 + (b + 1) / 2 + 1);\n    \n    return c;\n}\n};",
    "submit_ts": 1719719257.0
}