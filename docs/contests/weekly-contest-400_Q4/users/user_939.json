{
    "username": "_krat_",
    "submission": "void add(vector<int>& arr, int x) {\n    int k = 0;\n    \n    while(x) \n    {\n        int xx = x & arr[k];\n        arr[k] ^= x;\n        x = xx;\n        k++;\n    }\n}\n\nvoid sub(vector<int>& arr, int x) \n{\n    int k = 0;\n    \n    while(x) \n    {\n        int xx = x & ~arr[k];\n        arr[k] ^= x;\n        x = xx;\n        k++;\n    }\n}\n\nint get(vector<int>& arr, int cnt) \n{\n    int k = 0;\n    int res = -1;\n    \n    while(cnt) \n    {\n        if(cnt % 2) \n        {\n            res = (res & arr[k]);\n        } \n        else \n        {\n            res = (res & ~arr[k]);\n        }\n        \n        cnt /= 2;\n        k++;\n    }\n    return res;\n}\n\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> cnt(32, 0);\n        int n = nums.size();\n        int i = 0, j = 0;\n        int p = k;\n        int mini = 1e9;\n\n        while(i < n) \n        {\n            if (p < k || j == n) \n            { \n                sub(cnt, nums[i]);\n                i++;\n            } \n            else \n            { \n                add(cnt, nums[j]);\n                j++;\n            }\n\n            if(j > i) \n            {\n                p = get(cnt, j-i);\n                int x = abs(p - k);\n                mini = min(mini, x);\n            } \n            else \n            {\n                p = k;\n            }\n        }\n\n        return mini;\n\n    }\n};",
    "submit_ts": "1717299769",
    "subm_id": "1274823295"
}