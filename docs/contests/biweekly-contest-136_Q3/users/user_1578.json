{
    "username": "nibaron13",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=0;\n        set<pair<int,int>> check;\n        int one=0;\n        int one1=0;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                if(check.find({i,j})==check.end()){\n                    int c1=grid[i][j]+grid[n-1-i][j]+grid[i][m-1-j]+grid[n-1-i][m-j-1];\n                    int s=check.size();\n                    check.insert({i,j});\n                    check.insert({n-1-i,m-1-j});\n                    check.insert({i,m-1-j});\n                    check.insert({n-1-i,j});\n                    int s1=check.size();\n                    if(s1-s==2){\n                        c1/=2;\n                        ans+=min(c1,2-c1);\n                        if(c1==2){\n                            one++;\n                        }\n                        else if(c1==1){\n                            one1++;\n                        }\n                    }\n                    else if(s1-s==1){\n                        c1/=4;\n                        ans+=c1;\n                    }\n                    else{\n                        cout<<c1<<endl;\n                        ans+=min(c1,4-c1);\n                    }\n                }\n            }\n        }\n        if(one%2==1){\n            if(one1==0){\n                ans+=2;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697252",
    "subm_id": "1343139817"
}