{
    "username": "coder-praveen",
    "submission": "#include <bits/stdc++.h>\n#define MOD 10000007\n#define ll long long int\nclass Solution\n\n{\npublic:\n    int solve(vector<vector<int>> &vt, int a, int b, int can_reach, int n)\n    {\n        queue<int> queue;\n        vector<int> vec(n + 4, 0);\n        queue.push(a);\n        vec[a] = 1;\n        while (!queue.empty())\n        {int u = queue.front();\n            queue.pop(); for (int it : vt[u])\n            {\n                if (!vec[it])\n                {\n                    queue.push(it);\n                    vec[it] = 1;\n                }\n            }\n        }\n        int ans=vec[b] || vec[can_reach];\n        return ans;\n    }\n    bool canReachCorner(int x, int y, vector<vector<int>> &ve)\n    { \n        int num_size = ve.size();\n        vector<pair<pair<int, int>, int>> can_reach(num_size);\n        vector<vector<int>> vt(num_size + 4);\n        for (int k = 0; k < num_size; k++)\n            can_reach[k] = {{ve[k][0], ve[k][1]}, ve[k][2]};\n        for (int k = 0; k < num_size; k++)\n        {\n            if (can_reach[k].first.first <= can_reach[k].second)\n            {vt[num_size].push_back(k);  vt[k].push_back(num_size);\n            }\n            if (x - can_reach[k].first.first <= can_reach[k].second)\n            {vt[num_size + 2].push_back(k);vt[k].push_back(num_size + 2);\n            }\n            if (can_reach[k].first.second <= can_reach[k].second)\n            { vt[num_size + 1].push_back(k); vt[k].push_back(num_size + 1);\n            }\n            if (y - can_reach[k].first.second <= can_reach[k].second)\n            {vt[num_size + 3].push_back(k);vt[k].push_back(num_size + 3);\n            }\n            for (int l = k + 1; l < num_size; l++)\n            {double tt = sqrt(pow(can_reach[k].first.first - can_reach[l].first.first, 2) + pow(can_reach[k].first.second - can_reach[l].first.second, 2));\n\n                if (can_reach[k].second + can_reach[l].second >= tt)\n                { vt[k].push_back(l);   vt[l].push_back(k);\n                }\n            }\n        }\n        bool ans = (solve(vt, num_size, num_size + 1, num_size + 2, num_size + 4) || solve(vt, num_size + 3, num_size + 2, num_size + 1, num_size + 4));\n       bool tem=!ans; \n       return tem;\n    }\n};",
    "submit_ts": "1722139119",
    "subm_id": "1335808376"
}