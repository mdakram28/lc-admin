{
    "username": "martin0327",
    "submission": "using ll = long long;\nvoid __print(ll x) {cout << x;}\nvoid __print(long x) {cout << x;}\nvoid __print(unsigned x) {cout << x;}\nvoid __print(unsigned long x) {cout << x;}\nvoid __print(unsigned long long x) {cerr << x;}\nvoid __print(float x) {cout << x;}\nvoid __print(double x) {cout << x;}\nvoid __print(long double x) {cout << x;}\nvoid __print(char x) {cout << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cout << '{'; __print(x.first); cout << ','; __print(x.second); cerr << '}';}\ntemplate<typename T1, typename T2, typename T3>\nvoid __print(const tuple<T1, T2, T3> &x) {cout << '{'; __print(get<0>(x)); cerr << ','; __print(get<1>(x)); cerr << ','; __print(get<2>(x)); cerr << '}';}\ntemplate<typename T1, typename T2, typename T3, typename T4>\nvoid __print(const tuple<T1, T2, T3, T4> &x) {cout << '{'; __print(get<0>(x)); cerr << ','; __print(get<1>(x)); cerr << ','; __print(get<2>(x)); cerr << ','; __print(get<3>(x)); cerr << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cout << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\ntemplate<typename T1, typename T2>\nvoid __print(map<T1,T2> &mp) {for (auto [k,v] : mp) {cout << '{'; __print(k); cerr << ':'; __print(v); cerr << '}';}}\nvoid _print() {cout << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cout << \", \"; _print(v...);}\n#ifndef ONLINE_JUDGE\n#define debug(x...) cout << \"[\" << #x << \"] = [\"; _print(x)\n#else\n#define debug(x...)\n#endif\n\n\n#include <algorithm>\n#include <cassert>\n#include <vector>\n\n\n#ifdef _MSC_VER\n#include <intrin.h>\n#endif\n\nnamespace atcoder {\n\nnamespace internal {\n\nint ceil_pow2(int n) {\n    int x = 0;\n    while ((1U << x) < (unsigned int)(n)) x++;\n    return x;\n}\n\nint bsf(unsigned int n) {\n#ifdef _MSC_VER\n    unsigned long index;\n    _BitScanForward(&index, n);\n    return index;\n#else\n    return __builtin_ctz(n);\n#endif\n}\n\n}  // namespace internal\n\n}  // namespace atcoder\n\n\nnamespace atcoder {\n\ntemplate <class S, S (*op)(S, S), S (*e)()> struct segtree {\n  public:\n    segtree() : segtree(0) {}\n    segtree(int n) : segtree(std::vector<S>(n, e())) {}\n    segtree(const std::vector<S>& v) : _n(int(v.size())) {\n        log = internal::ceil_pow2(_n);\n        size = 1 << log;\n        d = std::vector<S>(2 * size, e());\n        for (int i = 0; i < _n; i++) d[size + i] = v[i];\n        for (int i = size - 1; i >= 1; i--) {\n            update(i);\n        }\n    }\n\n    void set(int p, S x) {\n        assert(0 <= p && p < _n);\n        p += size;\n        d[p] = x;\n        for (int i = 1; i <= log; i++) update(p >> i);\n    }\n\n    S get(int p) {\n        assert(0 <= p && p < _n);\n        return d[p + size];\n    }\n\n    S prod(int l, int r) {\n        assert(0 <= l && l <= r && r <= _n);\n        S sml = e(), smr = e();\n        l += size;\n        r += size;\n\n        while (l < r) {\n            if (l & 1) sml = op(sml, d[l++]);\n            if (r & 1) smr = op(d[--r], smr);\n            l >>= 1;\n            r >>= 1;\n        }\n        return op(sml, smr);\n    }\n\n    S all_prod() { return d[1]; }\n\n    template <bool (*f)(S)> int max_right(int l) {\n        return max_right(l, [](S x) { return f(x); });\n    }\n    template <class F> int max_right(int l, F f) {\n        assert(0 <= l && l <= _n);\n        assert(f(e()));\n        if (l == _n) return _n;\n        l += size;\n        S sm = e();\n        do {\n            while (l % 2 == 0) l >>= 1;\n            if (!f(op(sm, d[l]))) {\n                while (l < size) {\n                    l = (2 * l);\n                    if (f(op(sm, d[l]))) {\n                        sm = op(sm, d[l]);\n                        l++;\n                    }\n                }\n                return l - size;\n            }\n            sm = op(sm, d[l]);\n            l++;\n        } while ((l & -l) != l);\n        return _n;\n    }\n\n    template <bool (*f)(S)> int min_left(int r) {\n        return min_left(r, [](S x) { return f(x); });\n    }\n    template <class F> int min_left(int r, F f) {\n        assert(0 <= r && r <= _n);\n        assert(f(e()));\n        if (r == 0) return 0;\n        r += size;\n        S sm = e();\n        do {\n            r--;\n            while (r > 1 && (r % 2)) r >>= 1;\n            if (!f(op(d[r], sm))) {\n                while (r < size) {\n                    r = (2 * r + 1);\n                    if (f(op(d[r], sm))) {\n                        sm = op(d[r], sm);\n                        r--;\n                    }\n                }\n                return r + 1 - size;\n            }\n            sm = op(d[r], sm);\n        } while ((r & -r) != r);\n        return 0;\n    }\n\n  private:\n    int _n, size, log;\n    std::vector<S> d;\n\n    void update(int k) { d[k] = op(d[2 * k], d[2 * k + 1]); }\n};\n\n}  // namespace atcoder\n\nusing namespace atcoder;\n\nusing ll = long long;\nusing vi = vector<ll>;\nusing vvi = vector<vi>;\nusing pii = pair<ll,ll>;\nusing vp = vector<pii>;\nusing ti3 = tuple<ll,ll,ll>;\nusing vs = vector<string>;\n\ntemplate<typename T>\nusing min_pq = priority_queue<T, vector<T>, greater<T>>;\ntemplate<typename T>\nusing max_pq = priority_queue<T>;\n\nusing S = ll;\n\nS ee;\nS op(S x, S y) { return x & y; }\nS e() { return ee; }\n\nll tg;\n\nbool f(S v) { return v > tg;}\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int kk) {\n        ee = 0;\n        for (ll i=0; i<31; i++) {\n            ee += (1ll << i);\n        }\n        vi a(nums.begin(), nums.end());\n        ll k = kk;\n                    tg = k;\n\n                    // debug(tg,e());\n\n\n        vvi b;\n        b.push_back({});\n        for (auto x : a) {\n            if ((x&k) == k) b.back().push_back(x);\n            else b.push_back({});\n        }\n\n\n        ll ans = 0;\n        for (auto &v : b) {\n            if (v.empty()) continue;\n            ll n = v.size();\n            segtree<S,op,e> seg(v);\n            for (ll i=0; i<n; i++) {\n                ll idx = seg.max_right<f>(i);\n                // debug(i,idx);\n                ans += n - idx;\n                \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279963",
    "subm_id": "1311771946"
}