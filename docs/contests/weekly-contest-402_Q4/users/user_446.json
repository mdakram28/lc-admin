{
    "username": "anshulagarwal3131",
    "submission": "class Solution {\npublic:\n    vector<int> seg,a;\nvoid Build(int ind,int low,int high){\n    if(low==high)\n    {\n        seg[ind] = a[low];\n        return;\n    }\n    int mid = (low+high)/2;\n    Build(2*ind,low,mid);\n    Build(2*ind+1,mid+1,high);\n    seg[ind] = seg[2*ind]+seg[2*ind+1];\n}\nint find_sum(int l,int r,int ind,int low,int high){\n    if(l>high || r<low)\n        return 0;\n    if(l<=low && r>=high)\n        return seg[ind];\n    int mid = (low+high)/2;\n    int left = find_sum(l,r,2*ind,low,mid);\n    int right = find_sum(l,r,2*ind+1,mid+1,high);\n    return left+right;\n}\nvoid update(int i,int val,int ind,int low,int high){\n    if(i<low || i>high)\n        return;\n    if(low==high){\n        seg[ind] = val;\n        return;\n    }\n    int mid = (low+high)/2;\n    if(i<=mid)\n        update(i,val,2*ind,low,mid);\n    else\n        update(i,val,2*ind+1,mid+1,high);\n    seg[ind] = seg[2*ind]+seg[2*ind+1];\n}\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        a.resize(n);\n        seg.resize(4*n);\n        for(int i = 1;i<n-1;i++)\n        {\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1])\n                a[i] = 1;\n        }\n        Build(1,0,n-1);\n        vector<int> ans;\n        for(auto i : queries){\n            // cout<<find_sum(1,3,1,0,n-1)<<endl;\n            if(i[0]==2){\n                nums[i[1]] = i[2];\n                int j = i[1];\n                if(j>=1 && j<n-1 && nums[j]>nums[j-1] && nums[j]>nums[j+1]){\n                    update(j,1,1,0,n-1);\n                }\n                else{\n                    update(j,0,1,0,n-1);\n                }\n                j--;\n                if(j>=1 && j<n-1 && nums[j]>nums[j-1] && nums[j]>nums[j+1]){\n                    update(j,1,1,0,n-1);\n                }\n                else{\n                    update(j,0,1,0,n-1);\n                }\n                j+=2;\n                if(j>=1 && j<n-1 && nums[j]>nums[j-1] && nums[j]>nums[j+1]){\n                    update(j,1,1,0,n-1);\n                }\n                else{\n                    update(j,0,1,0,n-1);\n                }\n            }\n            else{\n                if(i[2]-i[1]<=1)\n                    ans.push_back(0);\n                else\n                ans.push_back(find_sum(i[1]+1,i[2]-1,1,0,n-1));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507287.0
}