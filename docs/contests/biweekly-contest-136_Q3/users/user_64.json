{
    "username": "pasricha_dhruv",
    "submission": "const int N = 2e5 + 10;\n\nint dp[N][4];\n\nclass Solution {\n    \n    int f(vector<pair<int, int>> &arr, int pos, int ones)\n    {\n        if(pos == arr.size())\n        {\n            return ones == 0 ? 0 : 1e9;\n        }\n        \n        \n        int &ans = dp[pos][ones]; if(ans != -1) return ans;\n    \n        ans = 1e9;\n        \n        int ans1 = f(arr, pos + 1, (ones + arr[pos].first + arr[pos].second) % 4) + arr[pos].first; // convert to 1\n        int ans2 = f(arr, pos + 1, ones) + arr[pos].second; // convert to 0\n        \n        return ans = min(ans1, ans2);\n    }\n    \npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n    \n        vector<pair<int, int>> arr;\n        \n        arr.reserve(n * m);\n        \n        int c1 = 0, c2 = m - 1;\n        int ans = 0;\n        \n        while(c1 <= c2)\n        {\n            int r1 = 0, r2 = n - 1;\n            while(r1 <= r2)\n            {\n                map<int, int> mp;\n                mp[grid[r1][c1]]++;\n                if(c1 != c2)\n                {   \n                    mp[grid[r1][c2]]++;\n                }\n                if(r1 != r2)\n                {\n                    mp[grid[r2][c1]]++;\n                    if(c1 != c2)\n                    {   \n\n                        mp[grid[r2][c2]]++;\n                    }\n                }\n                \n                arr.push_back({mp[0], mp[1]});\n                \n                ++r1;\n                --r2;\n            }\n            \n            ++c1;\n            --c2;\n        }\n        \n        \n        for(int i = 0; i < arr.size(); ++i)\n        {\n            for(int j = 0; j < 4; ++j)\n            {\n                dp[i][j] = -1;\n            }\n        }\n        \n        return f(arr, 0, 0);\n    }\n};",
    "submit_ts": "1722697269",
    "subm_id": "1343140421"
}