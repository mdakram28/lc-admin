{
    "username": "ddstarynight",
    "submission": "class Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        unordered_map<string, int> minCostMap;\n\n        // \u66f4\u65b0\u6bcf\u500b\u55ae\u8a5e\u7684\u6700\u5c0f\u6210\u672c\n        for (int i = 0; i < words.size(); ++i) {\n            if (minCostMap.find(words[i]) == minCostMap.end()) {\n                minCostMap[words[i]] = costs[i];\n            } else {\n                minCostMap[words[i]] = min(minCostMap[words[i]], costs[i]);\n            }\n        }\n\n        // \u69cb\u5efa\u65b0\u7684 words \u548c costs\n        vector<string> uniqueWords;\n        vector<int> uniqueCosts;\n        for (const auto& entry : minCostMap) {\n            uniqueWords.push_back(entry.first);\n            uniqueCosts.push_back(entry.second);\n        }\n\n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0; // \u521d\u59cb\u689d\u4ef6\uff0c\u751f\u6210\u7a7a\u5b57\u7b26\u4e32\u7684\u6210\u672c\u70ba0\n\n        // \u52d5\u614b\u898f\u5283\u6c42\u89e3\u6700\u5c0f\u6210\u672c\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue; // \u7121\u6cd5\u9054\u5230\u8a72\u4f4d\u7f6e\n\n            for (int j = 0; j < uniqueWords.size(); ++j) {\n                const string& word = uniqueWords[j];\n                int len = word.size();\n                if (i + len <= n && target.compare(i, len, word) == 0) {\n                    dp[i + len] = min(dp[i + len], dp[i] + uniqueCosts[j]);\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n\n};",
    "submit_ts": "1720323843",
    "subm_id": "1312385380"
}