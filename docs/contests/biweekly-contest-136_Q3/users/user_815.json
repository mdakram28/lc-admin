{
    "username": "dakkar-7",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n\n        int res = 0;\n        for (int i = 0; i < n / 2; i++)\n        {\n            for (int j = 0, k = m - 1; j < k; j++, k--)\n            {\n                int t = grid[i][j] + grid[i][k] + grid[n - i - 1][j] + grid[n - i - 1][k];\n                if (t == 4 || !t) continue;\n                if (t == 2) res += 2;\n                else res++;\n            }\n        }\n        //cout << res << endl;\n        int x = n / 2, y = m / 2;\n        //cout << res  <<endl;\n        if (n & 1 && m & 1 && grid[x][y]) res++;\n\n        int cnt = 0, cnt1 = 0;\n        if (n & 1) {\n            for (int j = 0, k = m - 1; j < k; j++, k--)\n            {\n                if (grid[x][j] && grid[x][k]) cnt++;\n                if (grid[x][j] != grid[x][k]) cnt1++;\n            }\n        }\n        if (m & 1)\n        {\n            for (int j = 0, k = n - 1; j < k; j++, k--)\n            {\n                if (grid[j][y] && grid[k][y]) cnt++;\n                if (grid[j][y] != grid[k][y]) cnt1++;\n            }\n        }\n        if (cnt & 1 && !cnt1) res += 2;\n        else res += cnt1;\n\n        return res;\n        \n    }\n};",
    "submit_ts": "1722698166",
    "subm_id": "552269653"
}