{
    "username": "fakhrulsojib",
    "submission": "class Solution {\npublic:\n    int result[5003][51];\n    \n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> mp2;\n        int ans = 0;\n        \n        for (int i = n - 1; i >= 0; i--) {\n            mp2[nums[i]]++;\n            result[i][0] = mp2[nums[i]];\n            ans = max(ans, result[i][0]);\n        }\n        \n        for (int j = 1; j <= k; j++) {\n            int lessChangeMax = 1;\n            result[n - 1][j] = 1;\n            \n            unordered_map<int, int> mp;\n            mp[nums[n - 1]] = n - 1;\n            \n            for (int i = n - 2; i >= 0; i--) {\n                result[i][j] = lessChangeMax + 1;\n                \n                if (result[i][j - 1] > lessChangeMax) {\n                    lessChangeMax = result[i][j - 1];\n                }\n                if (mp.find(nums[i]) != mp.end()) {\n                    result[i][j] = max(result[i][j], result[mp[nums[i]]][j] + 1);\n                }\n                \n                mp[nums[i]] = i;\n                ans = max(ans, result[i][j]);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1717862075",
    "subm_id": "1281811236"
}