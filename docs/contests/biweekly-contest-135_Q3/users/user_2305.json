{
    "username": "SpitfireRF",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> cnt;\n        for (int i = 0; i < n / 2; ++i) {\n            ++cnt[abs(nums[i] - nums[n - i - 1])];\n        }\n        priority_queue<pair<int, int>> pq;\n        for (auto [diff, c] : cnt) {\n            //cout << c << \" \" << diff << endl;\n            pq.push({c, diff});\n        }\n        int min_ops = INT_MAX;\n        int doubles = 1;\n        while (!pq.empty() && doubles > 0) {\n            auto [c, max_diff] = pq.top();\n            pq.pop();\n            int ops = 0;\n            for (int i = 0; i < n / 2; ++i) {\n                int diff = abs(nums[i] - nums[n - i - 1]);\n                if (diff != max_diff) {\n                    if ((nums[i] + max_diff <= k) || (nums[n - i - 1] + max_diff <= k) || (nums[i] - max_diff >= 0) || (nums[n - i - 1] - max_diff >= 0))\n                        ++ops;\n                    else {\n                        ++doubles;\n                        ops += 2;\n                    }\n                }\n            }\n            //cout << c << \" \" << max_diff << \" \" << ops << endl;\n            //has_double = false;\n            min_ops = min(min_ops, ops);\n            if (ops - doubles / 2 > min_ops)\n                break;\n        }\n        return min_ops;\n    }\n};",
    "submit_ts": "1721489120",
    "subm_id": "1327443484"
}