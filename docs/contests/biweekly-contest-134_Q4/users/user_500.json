{
    "username": "Tutul_dhar",
    "submission": "class Solution {\npublic:\n    int seg[400005];\n    void build(int ind,int ss,int se,int pos,int val) {\n        if(ss == se) {\n            seg[ind] = val;\n            return;\n        }\n        int mid = (ss+se)>>1;\n        if(pos <= mid) build(2*ind,ss,mid,pos,val);\n        else build(2*ind+1,mid+1,se,pos,val);\n        seg[ind] = (seg[2*ind]&seg[2*ind+1]);\n    }\n    int cc = (1<<30)-1;\n    \n    int query(int ind,int ss,int se,int l,int r) {\n        if(ss > r or se < l) return cc;\n        if(ss >= l and se <= r) return seg[ind];\n        int mid = (ss+se)>>1;\n        int p = query(2*ind,ss,mid,l,r);\n        int q = query(2*ind+1,mid+1,se,l,r);\n        return (p&q);\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        for(int i = 0; i < n; i++) {\n            build(1,1,n,i+1,nums[i]);\n        }\n\n        for(int i = 1; i <= n; i++) {\n            int l = i,r = n;\n            int p = -1,q = -1;\n            while(l <= r) {\n                int mid = (l+r)>>1;\n                int and_val = query(1,1,n,i,mid);\n                if(and_val == k) {\n                    p = mid;\n                    l = mid+1;\n                } else if(and_val < k) r = mid-1;\n                else l = mid+1;\n            }\n            l = i,r = n;\n            while(l <= r) {\n                int mid = (l+r)>>1;\n                int and_val = query(1,1,n,i,mid);\n                if(and_val == k) {\n                    q = mid;\n                    r = mid-1;\n                } else if(and_val < k) r = mid-1;\n                else l = mid+1;\n            }\n            if(p != -1) {\n                int e = p-q+1;\n                ans += e;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279120",
    "subm_id": "1311738259"
}