{
    "username": "AndreasHzz",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        \n        //max diff is going to be k;\n        int val = 0;\n        HashMap<Integer,Integer> map = new HashMap<>();\n        for(int i = 0; i<nums.length/2; i++){\n            int diff = Math.abs(nums[i]-nums[nums.length-1-i]);\n            map.put(diff, map.getOrDefault(diff,0)+1);\n        }\n        if(map.size()==1)return 0;\n        \n        List<Integer> list = new ArrayList<>();\n        for(int key:map.keySet()){\n            int cnt = map.get(key);\n            \n            if(key<=k){\n                \n                list.add(key);\n            }\n        }\n        //System.out.println(map);\n        if(list.isEmpty())list.add(k);\n        if(!map.containsKey(k))map.put(k,0);\n        Collections.sort(list, (a,b)->Integer.compare(map.get(b),map.get(a)));\n        System.out.println(list);\n        \n        int res = 0;\n        int dc = 0;\n        for(int j = 0; j<list.size(); j++){\n            int diff = list.get(j);\n            int l = nums.length/2;\n            int change = l-map.get(diff);\n            \n            if(j>0){\n                if(dc+l-map.get(list.get(j-1))<=change)return res;\n            }\n            dc = 0;\n            res = 0;\n            //System.out.println(diff);\n            for(int i = 0; i<nums.length/2; i++){\n                int curdiff = Math.abs(nums[i]-nums[nums.length-1-i]);\n                if(curdiff==diff)continue;\n                int max = Math.max(nums[i],nums[nums.length-1-i]);\n                int min = Math.min(nums[i],nums[nums.length-1-i]);\n                if(min+diff>=0 && min+diff<=k)res+=1;\n                else if(max-diff<=k && max-diff>=0)res+=1;\n                else{\n                    dc+=1;\n                    res+=2;\n                }\n            \n                //System.out.println(res);\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721489680",
    "subm_id": "1327460557"
}