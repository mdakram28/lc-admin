{
    "username": "mahin__7686",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\nprivate:\n    const int MOD = 1e9 + 7;\n    const int MAX_INV = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> req;\n        for (const auto& r : requirements) {\n            req[r[0] + 1] = r[1];\n        }\n\n        vector<vector<long long>> perm(n + 1, vector<long long>(MAX_INV + 1, 0));\n        perm[0][0] = 1;\n\n        for (int len = 1; len <= n; ++len) {\n            for (int inv = 0; inv <= MAX_INV; ++inv) {\n                for (int newPos = 0; newPos < len; ++newPos) {\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        perm[len][inv] = (perm[len][inv] + perm[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (req.count(len) > 0) {\n                int targetInv = req[len];\n                for (int inv = 0; inv <= MAX_INV; ++inv) {\n                    if (inv != targetInv) {\n                        perm[len][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long res = 0;\n        for (int inv = 0; inv <= MAX_INV; ++inv) {\n            res = (res + perm[n][inv]) % MOD;\n        }\n\n        return static_cast<int>(res);\n    }\n};\n",
    "submit_ts": "1719070348",
    "subm_id": "1296820813"
}