{
    "username": "gary3219",
    "submission": "class Solution { \npublic: \n    int minimumDistance(vector<vector<int>>& points) {int n = points.size();\n        vector<vector<int>> xy1(n, vector<int>(2));\n        vector<vector<int>> xy2(n, vector<int>(2));\n        \n        for (int i = 0; i < n; i++) {\n            xy1[i][0] = i;\n            xy1[i][1] = points[i][0] - points[i][1];\n            xy2[i][0] = i;\n            xy2[i][1] = points[i][0] + points[i][1];\n        }\n\n        sort(xy1.begin(), xy1.end(), [](const vector<int>& A, const vector<int>& B) {\n            return A[1] < B[1];\n        });\n\n        sort(xy2.begin(), xy2.end(), [](const vector<int>& A, const vector<int>& B) {\n            return A[1] < B[1];\n        });\n\n        int ans = max(xy1[n - 1][1] - xy1[0][1], xy2[n - 1][1] - xy2[0][1]);\n\n        int idx, L, R;\n        idx = L = R = -1;\n        int res = 0;\n\n        idx = xy1[0][0];\n        L = 0; R = n - 1;\n        if (xy2[0][0] == idx) L++;\n        if (xy2[n - 1][0] == idx) R--;\n        res = max(xy1[n - 1][1] - xy1[1][1], xy2[R][1] - xy2[L][1]);\n        ans = min(ans, res);\n\n        idx = xy1[n - 1][0];\n        L = 0; R = n - 1;\n        if (xy2[0][0] == idx) L++;\n        if (xy2[n - 1][0] == idx) R--;\n        res = max(xy1[n - 2][1] - xy1[0][1], xy2[R][1] - xy2[L][1]);\n        ans = min(ans, res);\n\n        idx = xy2[0][0];\n        L = 0; R = n - 1;\n        if (xy1[0][0] == idx) L++;\n        if (xy1[n - 1][0] == idx) R--;\n        res = max(xy2[n - 1][1] - xy2[1][1], xy1[R][1] - xy1[L][1]);\n        ans = min(ans, res);\n\n        idx = xy2[n - 1][0];\n        L = 0; R = n - 1;\n        if (xy1[0][0] == idx) L++;\n        if (xy1[n - 1][0] == idx) R--;\n        res = max(xy2[n - 2][1] - xy2[0][1], xy1[R][1] - xy1[L][1]);\n        ans = min(ans, res);\n\n        return ans;\n    }\n};"
}