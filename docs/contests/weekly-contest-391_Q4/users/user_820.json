{
    "username": "sanskarn17",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& A) {\n        int N = A.size();\n        int ans = INT_MAX;\n        multiset<int> V, V1;\n \n        for (int i = 0; i < N; i++) {\n            V.insert(A[i][0] + A[i][1]);\n            V1.insert(A[i][0] - A[i][1]);\n        }\n    \n        for(int i = 0; i < N; i++){\n            V.extract(A[i][0]+A[i][1]);\n            V1.extract(A[i][0]-A[i][1]);\n            int mx = (*V.rbegin())-(*V.begin());\n            mx = max(mx , (*V1.rbegin())-(*V1.begin()));\n            ans = min(ans,mx);\n            V.insert(A[i][0]+A[i][1]);\n            V1.insert(A[i][0]-A[i][1]);\n        }\n        // int maximum = max(V.back() - V.front(), V1.back() - V1.front());\n \n        return ans;\n    }\n};"
}