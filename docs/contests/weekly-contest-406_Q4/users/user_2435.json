{
    "username": "srmk2005",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        cuts = []\n        for cost in horizontalCut:\n            cuts.append((cost, 'H'))\n        for cost in verticalCut:\n            cuts.append((cost, 'V'))\n        \n        # Sort the cuts by their costs in descending order\n        cuts.sort(reverse=True, key=lambda x: x[0])\n\n        # Counters for how many pieces are created after cuts\n        horizontal_pieces = 1\n        vertical_pieces = 1\n        \n        # Total cost accumulator\n        total_cost = 0\n        \n        # Process each cut in descending order of cost\n        for cost, cut_type in cuts:\n            if cut_type == 'H':\n                # Horizontal cut affects the number of vertical pieces\n                total_cost += cost * vertical_pieces\n                horizontal_pieces += 1\n            else:\n                # Vertical cut affects the number of horizontal pieces\n                total_cost += cost * horizontal_pieces\n                vertical_pieces += 1\n                \n        return total_cost\n        ",
    "submit_ts": "1720926514",
    "subm_id": "1320288481"
}