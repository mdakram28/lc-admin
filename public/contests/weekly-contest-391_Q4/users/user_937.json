{
    "username": "kavascgjmd39",
    "submission": "const double eps = 1e-6;\n#define ll long long\ntypedef long double ld;\n#define pb push_back // for vector\n#define pi pair \n// #define mp make_pair\n#define all(a) a.begin(), a.end()\n#define rep(i, a, b) for (ll i = a; i < b; i++)\n#define ff first\n#define ss second\n#define vt vector\n#define vi vt<ll>\n#define ub upper_bound\n#define lb lower_bound\n#define repr(i, n, a) for (ll i = n; i >= a; i--)\n#define dq deque\n#define inset(a, st) st.find(a) != st.end()\n#define issub(a, b) b.find(a) != string::npos // check if a is substr of b\n#define len(a) (ll)a.size()\nconst ld PI = 2 * acos(0.0);\nconst ll mod = 1e9+7;\nconst ll mod2 = 998244353;\nconst ll nax = 2e5 + 5;\nclass Solution {\npublic:\n    int n1 =  0 , n2 = 0, n3 = 0 , n4 = 0;\n    bool t = false;\n    bool f = false;\n    int MaxDist(vector<pair<int, int> >& A, int N)\n    {\n    \n    int minsum, maxsum, mindiff, maxdiff;\n    \n    minsum = maxsum = A[0].first + A[0].second;\n    mindiff = maxdiff = A[0].first - A[0].second;\n    for (int i = 1; i < N; i++) {\n        int sum = A[i].first + A[i].second;\n        int diff = A[i].first - A[i].second;\n        if (sum < minsum){\n            minsum = sum; if(!t){n1 = i;}}\n        else if (sum > maxsum){\n            maxsum = sum; if(!t){n2 = i;}}\n        if (diff < mindiff){\n            mindiff = diff;if(!t) {n3 = i;}}\n        else if (diff > maxdiff){\n            maxdiff = diff; if(!t){n4 = i;}}\n    }\n \n    if(maxsum - minsum <  maxdiff - mindiff){\n        f = 1;\n    }\n    ll sol = max(maxsum - minsum ,  maxdiff - mindiff);\n        return sol;\n}\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        f = false;\n        vt<pi<int,int>>ps;\n        int sol = INT_MAX;\n        rep(i  , 0 , points.size()){\n            pi<int,int>p = {points[i][0] , points[i][1]};\n            ps.push_back(p);\n        }\n        MaxDist(ps , ps.size());\n       t = 1;\n            vt<pi<int,int>>temp;\n            rep(i , 0 , ps.size()){\n                if(i == n1){\n                    continue;\n                }\n                temp.push_back(ps[i]);\n            }\n            sol = min(sol, MaxDist(temp, temp.size()));\n            \n            vt<pi<int,int>>temp2;\n            rep(i , 0 , ps.size()){\n                if(i == n2){\n                    continue;\n                }\n                temp2.push_back(ps[i]);\n            }\n            sol = min(sol, MaxDist(temp2, temp2.size()));\n      \n              vt<pi<int,int>>temp3;\n            rep(i , 0 , ps.size()){\n                if(i == n3){\n                    continue;\n                }\n                temp3.push_back(ps[i]);\n            }\n            sol = min(sol, MaxDist(temp3, temp3.size()));\n            \n            vt<pi<int,int>>temp4;\n            rep(i , 0 , ps.size()){\n                if(i == n4){\n                    continue;\n                }\n                temp4.push_back(ps[i]);\n            }\n      \n            sol = min(sol, MaxDist(temp4, temp4.size()));\n        \n        return sol;\n    }\n};"
}