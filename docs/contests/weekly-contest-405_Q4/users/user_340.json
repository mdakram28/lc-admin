{
    "username": "prashantgautam",
    "submission": "class Solution {\npublic:\n    struct T {\n        unordered_map<char, T*> c;\n        vector<pair<int, int>> w; \n    };\n\n    class R {\n    public:\n        T* r;\n        R() { r = new T(); }\n\n        void i(string& s, int x, int y) {\n            T* n = r;\n            for (char ch : s) {\n                if (!n->c.count(ch))\n                    n->c[ch] = new T();\n                n = n->c[ch];\n            }\n            n->w.push_back({x, y});\n        }\n    };\n\n    int minimumCost(string t, vector<string>& w, vector<int>& c) {\n        int l = t.size();\n        vector<int> d(l + 1, INT_MAX);\n        d[0] = 0;\n\n        R r;\n        for (int i = 0; i < w.size(); ++i) {\n            r.i(w[i], i, c[i]);\n        }\n\n        for (int i = 0; i < l; ++i) {\n            if (d[i] == INT_MAX) continue;\n\n            T* tn = r.r;\n            for (int j = i; j < l; ++j) {\n                if (!tn->c.count(t[j])) break;\n                tn = tn->c[t[j]];\n                for (auto& p : tn->w) {\n                    int idx = p.first;\n                    int cost = p.second;\n                    int len = w[idx].size();\n                    if (i + len <= l) {\n                        d[i + len] = min(d[i + len], d[i] + cost);\n                    }\n                }\n            }\n        }\n\n        return d[l] == INT_MAX ? -1 : d[l];\n    }\n};\n",
    "submit_ts": "1720321557",
    "subm_id": "1312326057"
}