{
    "username": "Anandharsh275",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        int k = 50; \n        vector<pair<int, pair<int, int>>> cells;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                cells.push_back({board[i][j], {i, j}});\n            }\n        }\n        sort(cells.rbegin(), cells.rend());\n        if (cells.size() > k * 3) cells.resize(k * 3);\n        long long maxi = LLONG_MIN;\n        int size = cells.size();\n        for (int i = 0; i < size; i++) {\n            int r1 = cells[i].second.first;\n            int c1 = cells[i].second.second;\n            for (int j = i + 1; j < size; j++) {\n                int r2 = cells[j].second.first;\n                int c2 = cells[j].second.second;\n                if (r1 == r2 || c1 == c2) continue;\n                for (int k = j + 1; k < size; k++) {\n                    int r3 = cells[k].second.first;\n                    int c3 = cells[k].second.second;\n                    if (r1 == r3 || c1 == c3 || r2 == r3 || c2 == c3) continue;\n                    long long sum = (long long)((long long)(cells[i].first + cells[j].first) + cells[k].first);\n                    maxi = max(maxi, sum);\n                }\n            }\n        }\n        return maxi;\n    }\n};\n",
    "submit_ts": "1723910300",
    "subm_id": "1359224956"
}