{
    "username": "unstablebrainiac",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long[] diff = new long[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        return minimumOperations(diff);\n    }\n\n    private long minimumOperations(long[] diff) {\n        long ans = 0;\n        int start = 0;\n        boolean positive = false;\n\n        for (int i = 0; i < diff.length; i++) {\n            long l = diff[i];\n            if (l > 0) {\n                if (!positive) {\n                    ans += minimumOperations(diff, start, i, 0);\n                    start = i;\n                    positive = true;\n                }\n            } else if (l < 0) {\n                if (positive) {\n                    ans += minimumOperations(diff, start, i, 0);\n                    start = i;\n                    positive = false;\n                }\n            } else {\n                ans += minimumOperations(diff, start, i, 0);\n                start = i;\n            }\n        }\n\n        return ans + minimumOperations(diff, start, diff.length, 0);\n    }\n\n    private long minimumOperations(long[] diff, int startInclusive, int endExclusive, long base) {\n        if (startInclusive >= endExclusive) {\n            return 0;\n        }\n        if (startInclusive == endExclusive - 1) {\n            return Math.abs(diff[startInclusive]) - base;\n        }\n        long min = Arrays.stream(diff, startInclusive, endExclusive).map(Math::abs).min().orElseThrow();\n        List<Integer> minIndices = new ArrayList<>();\n        for (int i = startInclusive; i < endExclusive; i++) {\n            if (Math.abs(diff[i]) == min) {\n                minIndices.add(i);\n            }\n        }\n\n        long ans = min - base;\n        int start = startInclusive;\n        for (int minIndex : minIndices) {\n            ans += minimumOperations(diff, start, minIndex, min);\n            start = minIndex + 1;\n        }\n        ans += minimumOperations(diff, start, endExclusive, min);\n        return ans;\n    }\n}",
    "submit_ts": "1721533000",
    "subm_id": "1327999007"
}