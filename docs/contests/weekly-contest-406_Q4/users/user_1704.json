{
    "username": "virajbusa743",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         priority_queue<int>hori;\n        priority_queue<int>verti;\n\n        for(int i=0;i<m-1;i++){\n            hori.push(horizontalCut[i]);\n        }\n        for(int i=0;i<n-1;i++){\n            verti.push(verticalCut[i]);\n        }\n\n        int horiCnt=0;\n        int vertiCnt=0;\n        long long cost=0;\n        while(!hori.empty() && !verti.empty()){\n            int topv=verti.top();\n            int toph=hori.top();\n\n            if(topv>=toph){\n                vertiCnt++;\n                cost+= topv*(horiCnt+1);\n                verti.pop();\n            }\n            else{\n                horiCnt++;\n                cost+=toph*(vertiCnt+1);\n                hori.pop();\n            }\n        }\n\n        if(!hori.empty()){\n            while(!hori.empty()){\n                int toph=hori.top();\n                horiCnt++;\n                cost+=toph*(vertiCnt+1);\n                hori.pop();\n            }   \n        }\n\n        if(!verti.empty()){\n            while(!verti.empty()){\n                int topv=verti.top();\n                vertiCnt++;\n                cost+=topv*(horiCnt+1);\n                verti.pop();\n            }   \n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720926414",
    "subm_id": "1320285578"
}