{
    "username": "Mani-S",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {  \n        int rows = grid.size();\n        int cols = grid[0].size();\n        int flips = 0;\n\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (grid[rows / 2][cols / 2] == 1) {\n                flips++;\n            }\n        }\n\n        vector<int> counts(3, 0);\n\n        if (rows % 2 == 1) {\n            int left = 0, right = cols - 1;\n            while (left < right) {\n                int sum = grid[rows / 2][left] + grid[rows / 2][right];\n                counts[sum]++;\n                left++;\n                right--;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sum = grid[top][cols / 2] + grid[bottom][cols / 2];\n                counts[sum]++;\n                top++;\n                bottom--;\n            }\n        }\n\n        if (counts[2] % 2 == 1) {\n            flips += counts[1] > 0 ? counts[1] : 2;\n        } else {\n            flips += counts[1];\n        }\n\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int topLeft = grid[i][j];\n                int bottomLeft = grid[rows - 1 - i][j];\n                int topRight = grid[i][cols - 1 - j];\n                int bottomRight = grid[rows - 1 - i][cols - 1 - j];\n\n                int total = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (total != 0 && total != 4) {\n                    flips += min(total, 4 - total);\n                }\n            }\n        }\n\n        return flips;\n    }\n};\n",
    "submit_ts": "1722699969",
    "subm_id": "1343227718"
}