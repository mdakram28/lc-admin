{
    "username": "ddd-a",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        sort(points.begin(),points.end(),[&](auto &a,auto &b){\n            if(a[0] == b[0])return a[1]<b[1];\n            return a[0]<b[0];\n        });\n        int n = points.size();\n        vector<int>pre(n);\n        vector<int>suf(n);\n        vector<int>apre(n);\n        vector<int>asuf(n);\n        for(int i = 0;i<n;++i){\n            pre[i] = points[i][0] + points[i][1];\n            if(i-1>=0)pre[i] = min(pre[i],pre[i-1]);\n        }\n        for(int i = n-1;i>=0;--i){\n            suf[i] = points[i][0] + points[i][1];\n            if(i+1<n) suf[i] = max(suf[i],suf[i+1]);\n        }\n        for(int i = 0;i<n;++i){\n            apre[i] = points[i][0] - points[i][1];\n            if(i-1>=0)apre[i] = min(apre[i],apre[i-1]);\n        }\n        for(int i = n-1;i>=0;--i){\n            asuf[i] = points[i][0] - points[i][1];\n            if(i+1<n) asuf[i] = max(asuf[i],asuf[i+1]);\n        }\n        int ans = 1e9;\n        int ac = points[0][0] + points[0][1];\n        int bc = points[0][0] - points[0][1];\n        vector<int>pp(n);\n        vector<int>ss(n);\n        for(int i = 1;i<n;++i){\n            int dis1 = points[i][0]+points[i][1];\n            int dis2 = points[i][0]-points[i][1];\n            int mx = max(dis1-ac,dis2-bc);\n            \n            pp[i] = max(pp[i-1],mx);\n            ac = min(ac,dis1);\n            bc = min(bc,dis2);\n        }\n        ac = points[n-1][0] + points[n-1][1];\n        bc = points[n-1][0] - points[n-1][1];\n        int ak = 0;\n        for(int i = n-2;i>=0;--i){\n            int dis1 = points[i][0]+points[i][1];\n            int dis2 = points[i][0]-points[i][1];\n            int mx = max(ac-dis1,bc-dis2);\n            \n            ss[i] = max(ss[i+1],mx);\n            ac = max(ac,dis1);\n            bc = max(bc,dis2);\n        }\n        ans = min(pp[n-2],ss[1]);\n        for(int i = 1;i<n-1;++i){\n            int val = max(suf[i+1] - pre[i-1],asuf[i+1] - apre[i-1]);\n            val = max(val,pp[i-1]);\n            val = max(val,ss[i+1]);\n            ans = min(ans,val);\n        }\n        return ans;\n    }\n};"
}