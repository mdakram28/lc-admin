{
    "username": "Taciturn_02",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    \n\n \n    int minimumDistance(vector<vector<int>>& p) {\n        \n        multiset<ll>sum;\n        multiset<ll>diff;\n        \n        ll ans=LLONG_MAX;\n        \n         for(int i=0;i<p.size();i++){\n            \n             sum.insert(p[i][0]+p[i][1]);\n            \n         diff.insert(p[i][0]-p[i][1]);\n        }\n        \n        int i=0;\n        while(i<p.size()){\n            \n            ll subb = p[i][0]-p[i][1];\n            \n             ll add  = p[i][1]+p[i][0];\n           \n            auto it = sum.lower_bound(add);\n            sum.erase(it);\n            it = diff.lower_bound(subb);\n            diff.erase(it);\n            \n            ll a = (*sum.rbegin()-*sum.begin());\n            ll b = (*diff.rbegin()-*diff.begin());\n            ans = min(ans, max(a,b));\n            sum.insert(add);\n            diff.insert(subb);\n            i++;\n        }\n        return (int)ans;        \n        \n    }\n};"
}