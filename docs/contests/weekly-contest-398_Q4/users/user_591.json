{
    "username": "ace_Coder121",
    "submission": "class Solution {\npublic:\n    map<vector<int>,int> dp;\n    int rec(int k,int target,bool last,int jump){\n        if(k<0)return 0;\n        if(dp.count({k,last,jump})==1)return dp[{k,last,jump}];\n        if(k>target+1){\n            return 0;\n        }\n        int ans=0;\n        if(k==target){\n            ans++;\n        }\n        if(last==false)\n            ans+=rec(k-1,target,true,jump);\n        ans+=rec(k+(1<<jump),target,false,jump+1);\n        return dp[{k,last,jump}]=ans;\n    }\n    int waysToReachStair(int k) {\n        return rec(1,k,false,0);\n    }\n};",
    "submit_ts": 1716089027.0
}