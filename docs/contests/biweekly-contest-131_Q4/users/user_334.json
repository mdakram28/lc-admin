{
    "username": "lastprism",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& q) {\n        int n = q.size();\n        const int MAX = 15 * 10000 + 10;\n        map<int, set<int>> mp;\n        map<int,int> mp2;\n        vector<bool> ans;\n        mp[MAX].insert(0);\n        mp2[0] = MAX;\n        for(int i = 0; i < n; i ++){\n            int x = q[i][0];\n            int y = q[i][1];\n            \n            if(x == 1){\n                auto iter = mp2.lower_bound(y);\n                iter --;\n                auto [a, b] = (*iter);\n                // cout << a << \" \" << b << endl;\n                int len = b - a;\n                mp[len].erase(a);\n                if(mp[len].size() == 0)mp.erase(len);\n                mp[y-a].insert(a);\n                mp[b-y].insert(y);\n                mp2[a] = y;\n                mp2[y] = b;\n                continue;\n            }\n            int z = q[i][2];\n            auto iter = mp.lower_bound(z);\n            int ok = false;\n            while(iter != mp.end()){\n                // cout << \"#\" << i << \" \" << (iter->first) << \" \" << (*(iter->second.begin()) + iter->first) << endl;\n                if(*(iter->second.begin()) + z <= y){\n                    ok = 1;\n                    break;\n                }\n                iter++;\n            }\n            ans.push_back(ok);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716651611.0
}