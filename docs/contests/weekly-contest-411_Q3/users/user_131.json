{
    "username": "Superultra",
    "submission": "#include <bits/stdc++.h>\nusing namespace std; \n\n#define ll long long\n#define FOR(i, x, y) for (int i = x; i < y; i++)\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k){\n        string S = \"\";\n\n        if (k == 1 or k == 3 or k == 9){\n            while (n--)\n                S += \"9\";\n            \n            return S;\n        }\n        if (k == 2){\n            if (n == 1)\n                return \"8\";\n            while (n > 2){\n                S += \"9\";\n                n--;\n            }\n            return \"8\" + S + \"8\";\n        }\n        if (k == 4){\n            for (int i = 0; i < n; i++)\n                S += \"8\";\n            \n            for (int i = 2; i + 2 < n; i++)\n                S[i] = '9';\n\n            return S;\n        }\n        if (k == 8){\n            for (int i = 0; i < n; i++)\n                S += \"8\";\n            \n            for (int i = 3; i + 3 < n; i++)\n                S[i] = '9';\n                \n            return S;\n        }\n        if (k == 5){\n            if (n == 1)\n                return \"5\";\n            while (n > 2){\n                S += \"9\";\n                n--;\n            }\n            return \"5\" + S + \"5\";\n        }\n        if (k == 6){\n            if (n == 1)\n                return \"6\";\n            if (n == 2)\n                return \"66\";\n            \n            int sum = 9 * (n - 2) + 16;\n\n            for (int i = 0; i < n - 2; i++)\n                S += \"9\";\n\n            S = \"8\" + S + \"8\";\n\n            while (sum % 3){\n                if (n % 2){\n                    int mid = n / 2;\n                    S[mid] = (S[mid] - '1') + '0';\n                    sum--;\n                }\n                else{\n                    int mid = n / 2;\n                    S[mid - 1] = (S[mid - 1] - '1') + '0';\n                    S[mid] = (S[mid] - '1') + '0';\n                    sum -= 2;\n                }\n            }\n            return S;\n        }\n        \n        // The annoying k = 7 case\n        for (int i = 0; i < n; i++)\n            S += \"9\";\n        \n        int vals[] = {1, 3, 2, 6, 4, 5};\n        int mod7 = (vals[n % 6] - 1 + 7) % 7;\n\n        if (n % 2){\n            int mid = n / 2;\n            int sub = vals[(n / 2) % 6];\n\n            while (mod7){\n                S[mid] = (S[mid] - '1') + '0';\n                mod7 = (mod7 - sub + 7) % 7;\n            }\n        }\n        else{\n            int duo[] = {4, 5, 1, 3, 2, 6};\n            int mid = n / 2;\n            int sub = duo[(n / 2 - 1) % 6];\n\n            while (mod7){\n                S[mid - 1] = (S[mid - 1] - '1') + '0';\n                S[mid] = (S[mid] - '1') + '0';\n\n                mod7 = (mod7 - sub + 7) % 7;\n            }\n        }\n        return S;\n    }\n};",
    "submit_ts": "1723952911",
    "subm_id": "1359807681"
}