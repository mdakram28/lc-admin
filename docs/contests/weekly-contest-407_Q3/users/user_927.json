{
    "username": "kl649",
    "submission": "class Solution {\n    public int maxOperations(String s) {\n        int n = s.length();\n        int[] nums = new int[n];\n        for (int i = 0; i < n; i++) {\n            char c = s.charAt(i);\n            if (c == '0') {\n                nums[i] = 0;\n            } else {\n                nums[i] = 1;\n            }\n        }\n        \n        \n        int[] dp = new int[n];\n        int numOfOne = 0;\n        for (int i = 0; i < n - 1; i++) {\n            if (s.charAt(i) == '1' && s.charAt(i + 1) == '0') {\n                if (i == 0) {\n                    dp[0] = 1;\n                } else {\n                    dp[i] = dp[i - 1] + numOfOne + 1;\n                }\n            } else {\n                if (i != 0) {\n                    dp[i] = dp[i - 1];\n                }\n            }\n            if (s.charAt(i) == '1') {\n                numOfOne++;\n            }\n        }\n        // for (int num : dp) {\n        //     System.out.println(num);\n        // }\n        if (n - 2 < 0) {\n            return 0;\n        }\n        return dp[n - 2];\n    }\n}",
    "submit_ts": "1721530670",
    "subm_id": "1327940392"
}