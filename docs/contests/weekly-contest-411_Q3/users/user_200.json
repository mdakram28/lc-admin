{
    "username": "xil899",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1:\n            return '9' * n\n        elif k == 2:\n            if n <= 2:\n                return '8' * n\n            else:\n                return '8' + '9' * (n - 2) + '8'\n        elif k == 3 or k == 9:\n            return '9' * n\n        elif k == 4:\n            if n <= 4:\n                return '8' * n\n            else:\n                return '88' + '9' * (n - 4) + '88'\n        elif k == 5:\n            if n <= 2:\n                return '5' * n\n            else:\n                return '5' + '9' * (n - 2) + '5'\n        elif k == 6:\n            if n <= 2:\n                return '6' * n\n            elif n == 3:\n                return '888'\n            elif n == 4:\n                return '8778'\n            elif n % 2 == 1:\n                l = n // 2 - 1\n                return '8' + '9' * l + '8' + '9' * l + '8'\n            else:\n                l = n // 2 - 2\n                return '8' + '9' * l + '77' + '9' * l + '8'\n        elif k == 8:\n            if n <= 6:\n                return '8' * n\n            else:\n                return '888' + '9' * (n - 6) + '888'\n        else:\n            dic = {0: '', 1: '7', 2: '77', 3: '959', 4: '9779', 5: '99799', 6: '999999', 7: '9994999',\n                       8: '99944999', 9: '999969999', 10: '9999449999', 11: '99999499999'}\n            l, r = divmod(n, 12)\n            return '999999' * l + dic[r] + '999999' * l",
    "submit_ts": "1723950513",
    "subm_id": "1359747900"
}