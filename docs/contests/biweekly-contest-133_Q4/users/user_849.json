{
    "username": "praneetjain13",
    "submission": "class Solution {\npublic:\n    \n    const int mod = 1e9+7;\n    const int MAX_INV = 400;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n \n        map<int, int> r;\n        for (auto& req : reqs) {\n            r[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> dp(n + 1, vector<long long>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        for (int len = 1; len <= n; len++) {\n            for (int j = 0; j <= MAX_INV; j++) {\n                for (int pos = 0; pos < len; pos++) {\n                    int prev = j - pos;\n                    if(prev<0) continue;\n                    dp[len][j] = (dp[len][j] + dp[len - 1][prev]) % mod;\n                }\n            }\n\n            if (r.count(len)) {\n                int targetInv = r[len];\n                for (int i = 0; i <= MAX_INV; i++) {\n                    if (i != targetInv) {\n                        dp[len][i] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (long long count : dp[n]) {\n            ans = (ans + count) % mod;\n        }\n\n        return ans;\n\t}\n};",
    "submit_ts": "1719071381",
    "subm_id": "1296845453"
}