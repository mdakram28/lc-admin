{
    "username": "manikiran949",
    "submission": "class Solution {\npublic:\n    #define MAX 100001\n    #define bitscount 32\n    int prefix_count[bitscount][MAX];\n    \n    void findPrefixCount(vector<int>&arr, int n){\n        for (int i = 0; i < bitscount; i++) {\n            prefix_count[i][0] = ((arr[0] >> i) & 1);\n            for (int j = 1; j < n; j++) {\n                prefix_count[i][j] = ((arr[j] >> i) & 1);\n                prefix_count[i][j] += prefix_count[i][j - 1];\n            }\n        }\n    }\n    int find(int l, int r){\n        int ans = 0;\n        for (int i = 0; i < bitscount; i++) {\n            int x;\n            if (l == 0) x = prefix_count[i][r];\n            else x = prefix_count[i][r] - prefix_count[i][l - 1];\n            if (x == r - l + 1) ans = (ans | (1 << i));\n        }\n        return ans;\n    }\n    int minimumDifference(vector<int>& a, int k) {\n        int n=a.size();\n        findPrefixCount(a, n);\n        int ans=1e9;\n        for(int i=0;i<n;i++){\n            int l=i,r=n-1;\n            while(l<=r){\n                int mid=l+(r-l)/2;\n                int cur=find(i,mid);\n                if(cur>k){\n                    ans=min(ans,abs(cur-k));\n                    l=mid+1;\n                }\n                else{\n                    ans=min(ans,abs(cur-k));\n                    r=mid-1;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717299421.0
}