{
    "username": "virajchandra51",
    "submission": "\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        // Variables to track running extrema\n        int N = points.size();\n        int n = points.size();\n        vector<pair<int,int>> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) {\n            V[i] = {points[i][0] + points[i][1],i};\n            V1[i] = {points[i][0] - points[i][1],i};\n        }\n\n        // Sorting both the vectors\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n\n        pair<int,int> ii;\n        if(V[n-1].first - V[0].first > V1[n-1].first - V1[0].first){\n            ii = {V[n-1].second, V[0].second};\n        }\n        else{\n            ii = {V1[n-1].second, V1[0].second};\n        }\n        int ans = INT_MAX;\n        \n        vector<pair<int, int>> VV, VV1;\n        for(int i=0; i<n; i++){\n            if(i==ii.first) continue;\n            VV.push_back({points[i][0]+points[i][1], i});\n            VV1.push_back({points[i][0]-points[i][1], i});\n        }\n        sort(VV.begin(), VV.end());\n        sort(VV1.begin(), VV1.end());\n        \n        ans = min(ans,max(VV[VV.size()-1].first - VV[0].first, VV1[VV1.size()-1].first - VV1[0].first)); \n        \n        vector<pair<int, int>> VVV, VVV1;\n        \n        for(int i=0; i<n; i++){\n            if(i==ii.second) continue;\n            VVV.push_back({points[i][0]+points[i][1], i});\n            VVV1.push_back({points[i][0]-points[i][1], i});\n        }\n        \n        sort(VVV.begin(), VVV.end());\n        sort(VVV1.begin(), VVV1.end());\n        \n        ans = min(ans,max(VVV[VVV.size()-1].first - VVV[0].first, VVV1[VVV1.size()-1].first - VVV1[0].first));  \n        \n        // cout<<max(VV[VV.size()-1].first - VV[0].first, VV1[VV1.size()-1].first - VV1[0].first)<<\" \"<<max(VVV[VVV.size()-1].first - VVV[0].first, VVV1[VVV1.size()-1].first - VVV1[0].first)<<endl;\n        \n        // return min(ans1,ans2);\n\n\n\n        // cout << maximum << endl;\n        \n        // int ans = INT_MIN;\n        int i1 = -1;\n        int i2 = -1;\n        // int n = points.size();\n        for(int i=0;i<n-1;i++)\n        {\n            int d = abs(points[i][0]-points[i+1][0])+abs(points[i][1]-points[i+1][1]);\n            if(d>ans)\n            {\n                // ans=d;\n            }\n        }\n        return ans;\n    }\n};"
}