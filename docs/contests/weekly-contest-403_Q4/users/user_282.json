{
    "username": "PeterChenX",
    "submission": "class Solution {\n    vector<vector<vector<vector<int>>>> dp;\n    int helper(vector<vector<int>>& grid, int topB, int bottomB, int leftB, int rightB) {\n        if(dp[topB][bottomB][leftB][rightB] != INT_MIN)\n            return dp[topB][bottomB][leftB][rightB];\n        int top = bottomB, bottom = topB, left = rightB, right = leftB;\n        for(int y = topB; y <= bottomB; y++){\n            for(int x = leftB; x <= rightB; x++){\n                if(grid[y][x] == 1){\n                    top = min(top, y);\n                    bottom = max(bottom, y);\n                    left = min(left, x);\n                    right = max(right, x);\n                }\n            }\n        }\n        int res = (bottom - top + 1) * (right - left + 1);\n        res = max(res, 0);\n        return dp[topB][bottomB][leftB][rightB] = res;\n    }\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        dp.resize(m, vector<vector<vector<int>>>(m, vector<vector<int>>(n, vector<int>(n, INT_MIN))));\n        int res = INT_MAX;\n        // case: --\n        for(int y = 0; y < m; y++){\n            for(int y1 = y + 1; y1 + 1 < m; y1++){\n                int cur = helper(grid, 0, y, 0, n - 1) + helper(grid, y + 1, y1, 0, n - 1) + helper(grid, y1 + 1, m - 1, 0, n - 1);\n                res = min(res, cur);\n            }\n        }\n        // case: ||\n        for(int x = 0; x < n; x++){\n            for(int x1 = x + 1; x1 + 1 < n; x1++){\n                int cur = helper(grid, 0, m - 1, 0, x) + helper(grid, 0, m - 1, x + 1, x1) + helper(grid, 0, m - 1, x1 + 1, n - 1);\n                res = min(res, cur);\n            }\n        }\n        // case: -|\n        for(int y = 0; y + 1 < m; y++){\n            for(int x = 0; x + 1 < n; x++){\n                int cur = helper(grid, 0, y, 0, n - 1) + helper(grid, y + 1, m - 1, 0, x) + helper(grid, y + 1, m - 1, x + 1, n - 1);\n                res = min(res, cur);\n            }\n        }\n        for(int y = 0; y + 1 < m; y++){\n            for(int x = 0; x + 1 < n; x++){\n                int cur = helper(grid, y + 1, m - 1, 0, n - 1) + helper(grid, 0, y, 0, x) + helper(grid, 0, y, x + 1, n - 1);\n                res = min(res, cur);\n            }\n        }\n        // case: |-\n        for(int x = 0; x + 1 < n; x++){\n            for(int y = 0; y + 1 < m; y++){\n                int cur = helper(grid, 0, m - 1, 0, x) + helper(grid, 0, y, x + 1, n - 1) + helper(grid, y + 1, m - 1, x + 1, n - 1);\n                res = min(res, cur);\n            }\n        }\n        for(int x = 0; x + 1 < n; x++){\n            for(int y = 0; y + 1 < m; y++){\n                int cur = helper(grid, 0, m - 1, x + 1, n - 1) + helper(grid, 0, y, 0, x) + helper(grid, y + 1, m - 1, 0, x);\n                res = min(res, cur);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719113200.0
}