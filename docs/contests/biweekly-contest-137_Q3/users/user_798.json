{
    "username": "Integer",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        long long temp[3][n];\n        long long left[3][n];\n        long long right[3][n];\n        long long ans = LONG_LONG_MIN;\n\n        for (int i = 0; i < m; i++) {\n            for (int p1 = 0; p1 < n; p1++) temp[0][p1] = board[i][p1];\n            for (int j = i + 1; j < m; j++) {\n                for (int p2 = 0; p2 < n; p2++) temp[1][p2] = board[j][p2];\n                for (int k = j + 1; k < m; k++) {\n                    for (int p3 = 0; p3 < n; p3++) temp[2][p3] = board[k][p3];\n                    for (int x = 0; x <= 2; x++) {\n                        for (int y = 0; y < n; y++)\n                            left[x][y] = y == 0 ? temp[x][0] : max(left[x][y - 1], temp[x][y]);\n                        for (int y = n - 1; y >= 0; y--)\n                            right[x][y] = y == n - 1 ? temp[x][n - 1] : max(right[x][y + 1], temp[x][y]);\n                    }\n                    for (int x = 1; x < n - 1; x++) {\n                        long long y1 = temp[0][x] + max(left[1][x - 1] + right[2][x + 1], right[1][x + 1] + left[2][x - 1]);\n                        long long y2 = temp[1][x] + max(left[0][x - 1] + right[2][x + 1], right[0][x + 1] + left[2][x - 1]);\n                        long long y3 = temp[2][x] + max(left[0][x - 1] + right[1][x + 1], right[0][x + 1] + left[1][x - 1]);\n                        ans = max({y1, y2, y3, ans});\n                    }\n\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723908542",
    "subm_id": "556331466"
}