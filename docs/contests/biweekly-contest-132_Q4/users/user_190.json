{
    "username": "akashSudan",
    "submission": "void update(vector<int> &segtree,int idx,int l,int r,int i,int v)\n{\n    if(l==r)\n    {\n        segtree[idx]=max(segtree[idx],v);\n        return;\n    }\n    int mid=(l+r)/2;\n    if(i<=mid)\n    update(segtree,2*idx+1,l,mid,i,v);\n    else\n    update(segtree,2*idx+2,mid+1,r,i,v);\n    segtree[idx]=max(segtree[2*idx+1],segtree[2*idx+2]);\n \n}\nint find(vector<int> &segtree,int idx,int l,int r,int a,int b)\n{\n    if(l>b||r<a)\n    return INT_MIN;\n    if(a<=l&&r<=b)\n    return segtree[idx];\n    int mid=(l+r)/2;\n    return max(find(segtree,2*idx+1,l,mid,a,b),find(segtree,2*idx+2,mid+1,r,a,b));\n}\n\nvector<int> convert(vector<int> &nums)\n{\n    int n=nums.size();\n    set<int> s;\n    for(auto i:nums)\n        s.insert(i);\n    int idx=0;\n    map<int,int> mep;\n    for(auto i:s)\n    {\n        mep[i]=idx;\n        idx++;\n    }\n    for(int i=0;i<n;i++)\n        nums[i]=mep[nums[i]];\n    return nums;\n}\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size();\n        nums=convert(nums);\n        vector<vector<int>> segtree(k+1,vector<int>(4*n,0));\n        int ans=1;\n        for(int i=n-1;i>=0;i--)\n        {\n            for(int j=0;j<=k;j++)\n            {\n                int a=find(segtree[j],0,0,n-1,nums[i],nums[i]);\n                ans=max(ans,a+1);\n                update(segtree[j],0,0,n-1,nums[i],a+1);\n                if(j-1>=0)\n                {\n                    int b=find(segtree[j-1],0,0,n-1,0,nums[i]-1);\n                    b=max(b,find(segtree[j-1],0,0,n-1,nums[i]+1,n-1));\n                    ans=max(ans,b+1);\n                     update(segtree[j],0,0,n-1,nums[i],b+1);\n                }\n                \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717860220.0
}