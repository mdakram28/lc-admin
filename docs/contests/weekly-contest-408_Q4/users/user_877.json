{
    "username": "macuadros",
    "submission": "struct DSU {\n    std::vector<int> par, sz;\n    std::vector<std::array<bool, 4>> cnt;\n\n    DSU (int n) {\n        par.resize(n);\n        cnt.resize(n);\n        std::iota(par.begin(), par.end(), 0);\n        sz.assign(n, 1);\n    }\n\n    int find(int x) {\n        while (x != par[x]) {\n            x = par[x] = par[par[x]];\n        }\n\n        return x;\n    }\n\n    bool same(int x, int y) {\n        return find(x) == find(y);\n    }\n\n    bool join(int x, int y) {\n        x = find(x);\n        y = find(y);\n\n        if (x == y) {\n            return false;\n        }\n\n        if (sz[x] < sz[y]) {\n            std::swap(x, y);\n        }\n\n        for (int i = 0; i < 4; ++i) {\n            cnt[x][i] |= cnt[y][i];\n        }\n        par[y] = x;\n        sz[x] += sz[y];\n\n        return true;\n    }\n\n    int size(int x) {\n        return sz[find(x)];\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        const int n = circles.size();\n        DSU dsu(n);\n\n        for (int i = 0; i < n; ++i) {  \n            int x = circles[i][0];\n            int y = circles[i][1];\n            int r = circles[i][2]; \n            if (y - r <= Y && y + r >= Y) {\n                dsu.cnt[i][0] = true; // U\n            }\n            if (y - r <= 0 && y + r >= 0) {\n                dsu.cnt[i][1] = true; // D\n            }\n            if (x - r <= 0 && x + r >= 0) {\n                dsu.cnt[i][2] = true; // L\n            }\n            if (x - r <= X && x + r >= X) {\n                dsu.cnt[i][3] = true; // R\n            }\n        }\n\n        for (int i = 0; i < n; ++i) {\n            int x1 = circles[i][0];\n            int y1 = circles[i][1];\n            int r1 = circles[i][2]; \n            for (int j = i + 1; j < n; ++j) {\n                int x2 = circles[j][0];\n                int y2 = circles[j][1];\n                int r2 = circles[j][2]; \n\n                long long x = x2 - x1;\n                x *= x;\n                long long y = y2 - y1;\n                y *= y;\n\n                if (x + y <= 1LL * r1 * r1 + 1LL * r2 * r2 + 2LL * r1 * r2) {\n                    dsu.join(i, j);\n                }\n            }\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dsu.par[i] == i) {\n                if ((dsu.cnt[i][0] && (dsu.cnt[i][1] || dsu.cnt[i][3])) \n                    || (dsu.cnt[i][3] && dsu.cnt[i][2]) || (dsu.cnt[i][1] && dsu.cnt[i][2])) {\n                        return false;\n                    }\n            }\n        }\n\n        return true;\n    }\n};",
    "submit_ts": "1722138267",
    "subm_id": "1335786379"
}