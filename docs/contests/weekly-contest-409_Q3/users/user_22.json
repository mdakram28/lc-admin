{
    "username": "nifeshe",
    "submission": "#define f first\n#define s second\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) ((int) (x).size())\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\ntemplate <typename T> inline bool umin(T &a, const T &b) { if(a > b) { a = b; return 1; } return 0; }\ntemplate <typename T> inline bool umax(T &a, const T &b) { if(a < b) { a = b; return 1; } return 0; }\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst ll mod = 1e9 + 7;\nconst ll base = 1e6 + 9;\nconst ll inf = 1e9;\nconst int MAX = 2e5 + 42;\nconst int LG = 20;\n\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<pii> qr;\n        for(auto x : queries) {\n            int u = x[0], v = x[1];\n            qr.pb({u, v});\n        }\n        vector<int> ans;\n        set<int> s;\n        for(int i = 0; i < n; i++) s.insert(i);\n        vector<int> mx(n, 1);\n        for(auto [u, v] : qr) {\n            if(umax(mx[u], v - u) && s.count(u)) {\n                while(1) {\n                    auto it = s.upper_bound(u);\n                    int x = *it;\n                    if(x == v) break;\n                    s.erase(it);\n                }\n            }\n            ans.pb(sz(s) - 1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722739209",
    "subm_id": "1343688809"
}