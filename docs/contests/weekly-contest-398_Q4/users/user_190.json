{
    "username": "nicolasalba",
    "submission": "#define ACTIVE_DEBUG\n\n// ############ Ignore macros and debugger ########################\n#include \"bits/stdc++.h\"\nusing namespace std;\n\n#define pb push_back\n#define F first\n#define S second\n#define all(x) (x).begin(), (x).end()\n#define sortt(x) sort(all(x))\n\nusing ll = long long;\nusing ld = long double;\nusing pi = pair<int, int>;\nusing pl = pair<ll, ll>;\nusing ti = tuple<long long, long long, long long>;\nusing vi = vector<int>;\nusing vb = vector<bool>;\nusing vl = vector<ll>;\nusing vs = vector<string>;\nusing vvl = vector<vl>;\nusing vpl = vector<pl>;\n\ntemplate<class T> using pql = priority_queue<T,vector<T>,greater<T>>;\ntemplate<class T> using pqg = priority_queue<T>;\n\nvoid __print(int x) {cout << x;}\nvoid __print(long long x) {cout << x;}\nvoid __print(string x) {cout << x;}\nvoid __print(char x) {cout << '\\'' << x << '\\'';}\nvoid __print(bool x) {cout << (x ? \"T\" : \"F\");}\n\nvoid __print(map<ll,ll> mp) {\n    for (auto p : mp) {\n        cout << p.F << \":\" << p.S << \",\";\n    }\n}\n\ntemplate<typename T> // for data structures (vector, set, map, etc)\n\nvoid __print(const T &xs)\n{cout << \"[ \"; for (auto &x : xs) {__print(x);cout << ' ';}cout << ']';}\n\nvoid _print()\n{cout << \"]\" << endl;}\n\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v)\n{__print(t); if (sizeof...(v)) cout << \", \"; _print(v...);}\n\n#ifdef ACTIVE_DEBUG\n    #define deb(x...) cout << \"[\" << #x << \"] = [\", _print(x)\n    #define LINE cout << \"-------------------\" << endl;\n#else\n    #define deb(x...) \"C\"\n    #define LINE \"C\"\n#endif\n// ############ Ignore macros and debugger ########################\nclass Solution {\npublic:\n\n    ll f(ll actual, ll k, ll jump, map<pair<ll,ll>, ll> &dp) {\n        if (actual - 1 > k) return 0;\n        if (dp.count({actual,jump})) return dp[{actual,jump}];\n        ll ans = 0;\n        if (actual == k) {\n            ans = 1;\n        }\n        ans += f(actual+(1<<jump),k,jump+1,dp)+\n               f(actual+(1<<jump)-1,k,jump+1,dp);\n        return dp[{actual,jump}]=ans;\n    }\n    int waysToReachStair(int k) {\n        map<pair<ll,ll>, ll> dp, dp2;\n        return f(1,k,0,dp) + f(1,k+1,0,dp2) ;\n    }\n};",
    "submit_ts": "1716087873",
    "subm_id": "1261797042"
}