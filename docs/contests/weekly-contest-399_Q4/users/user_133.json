{
    "username": "agix",
    "submission": "#define LL long long\n\nLL mod = 1e9 + 7;\n\nconst int MAXN = 1e5;\nLL t1[4 * MAXN];\nLL t2[4 * MAXN];\nLL t3[4 * MAXN];\nLL t4[4 * MAXN];\n\nvoid build(vector<int>& a, int v, int tl, int tr)\n{\n    if (tl == tr)\n    {\n        t1[v] = a[tl] > 0 ? a[tl] : 0;\n        t2[v] = 0;\n        t3[v] = 0;\n        t4[v] = 0;\n    }\n    else\n    {\n        int tm = (tl + tr) / 2;\n        \n        build(a, v * 2, tl, tm);\n        build(a, v * 2 + 1, tm + 1, tr);\n        \n        t1[v] = max({t1[v * 2] + t2[v * 2 + 1], t3[v * 2] + t1[v * 2 + 1], t3[v * 2] + t2[v * 2 + 1]});\n        t2[v] = max({t2[v * 2] + t2[v * 2 + 1], t4[v * 2] + t1[v * 2 + 1], t4[v * 2] + t2[v * 2 + 1]});\n        t3[v] = max({t1[v * 2] + t4[v * 2 + 1], t3[v * 2] + t3[v * 2 + 1], t3[v * 2] + t4[v * 2 + 1]});\n        t4[v] = max({t2[v * 2] + t4[v * 2 + 1], t4[v * 2] + t3[v * 2 + 1], t4[v * 2] + t4[v * 2 + 1]});\n    }\n}\n\nvoid update(int v, int tl, int tr, int pos, LL new_val)\n{\n    if (tl == tr)\n    {\n        t1[v] = new_val > 0 ? new_val : 0;\n        t2[v] = 0;\n        t3[v] = 0;\n        t4[v] = 0;\n    }\n    else\n    {\n        int tm = (tl + tr) / 2;\n        if (pos <= tm)\n        {\n            update(v * 2, tl, tm, pos, new_val);\n        }\n        else\n        {\n            update(v * 2 + 1, tm + 1, tr, pos, new_val);\n        }\n        \n        t1[v] = max({t1[v * 2] + t2[v * 2 + 1], t3[v * 2] + t1[v * 2 + 1], t3[v * 2] + t2[v * 2 + 1]});\n        t2[v] = max({t2[v * 2] + t2[v * 2 + 1], t4[v * 2] + t1[v * 2 + 1], t4[v * 2] + t2[v * 2 + 1]});\n        t3[v] = max({t1[v * 2] + t4[v * 2 + 1], t3[v * 2] + t3[v * 2 + 1], t3[v * 2] + t4[v * 2 + 1]});\n        t4[v] = max({t2[v * 2] + t4[v * 2 + 1], t4[v * 2] + t3[v * 2 + 1], t4[v * 2] + t4[v * 2 + 1]});\n    }\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        memset(t1, 0 ,sizeof(t1));\n        memset(t2, 0 ,sizeof(t2));\n        memset(t3, 0 ,sizeof(t3));\n        memset(t4, 0 ,sizeof(t4));\n        \n        int n = nums.size();\n        \n        build(nums, 1, 0, n - 1);\n        \n        LL ans = 0;\n        \n        for (auto& q : queries)\n        {\n            int pos = q[0];\n            int val = q[1];\n            \n            update(1, 0, n - 1, pos, val);\n            \n            ans += max({t1[1], t2[1], t3[1], t4[1]});\n            ans = ans % mod;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716695189.0
}