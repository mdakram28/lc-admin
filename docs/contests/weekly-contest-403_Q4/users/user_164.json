{
    "username": "fsshakkhor",
    "submission": "class Solution {\npublic:\n    int calc(int x1,int y1,int x2,int y2,vector<vector<int>>& grid){\n        set<int>X , Y;\n        for(int i = x1;i <= x2;i++){\n            for(int j = y1;j <= y2;j++){\n                if(grid[i][j] == 1){\n                    X.insert(i);\n                    Y.insert(j);\n                }\n            }\n        }\n        if(X.size() == 0 || Y.size() == 0)return 0;\n        int dx = *(--X.end()) - *X.begin();\n        int dy = *(--Y.end()) - *Y.begin();\n        // cout << \"calc: \" << x1 << y1 << x2 << y2 << \" \" << (dx + 1) * (dy + 1) << endl;\n        return (dx + 1) * (dy + 1);\n    }\n    int second(int x1,int y1,int x2,int y2,vector<vector<int>>& grid){\n        int ans = 1e9;\n        int n = grid.size();\n        int m = grid[0].size();\n        if(x1 >= n || x2 >= n || y1 >= m || y2 >= m)return 0;\n        for(int r = x1;r <= x2;r++){\n            ans = min(ans,calc(x1,y1,r,y2,grid) + calc(r+1,y1,x2,y2,grid));\n        }\n        for(int c = y1;c <= y2;c++){\n            ans = min(ans,calc(x1,y1,x2,c,grid) + calc(x1,c+1,x2,y2,grid));\n        }\n        // cout << \"second: \" << x1 << y1 << x2 << y2 << \" \" << ans << endl;\n        return ans;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int ans = 1e9;\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        for(int r = 0;r < n;r++){\n            ans = min(ans,calc(0,0,r,m-1,grid) + second(r+1,0,n-1,m-1,grid));\n            ans = min(ans,second(0,0,r,m-1,grid) + calc(r+1,0,n-1,m-1,grid));\n        }\n        for(int c = 0;c < m;c++){\n            ans = min(ans,calc(0,0,n-1,c,grid) + second(0,c+1,n-1,m-1,grid));\n            ans = min(ans,second(0,0,n-1,c,grid) + calc(0,c+1,n-1,m-1,grid));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719112913",
    "subm_id": "1297312226"
}