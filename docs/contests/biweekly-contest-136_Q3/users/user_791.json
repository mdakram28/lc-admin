{
    "username": "swayam_wish",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n     int  n = grid.size() , m = grid[0].size();\n        \n       int ans = 0;\n       int cnt = 0;\n        int cnt2 = 0;\n        for(int i=0; i<=(n-1)/2; i++){\n            for(int j = 0; j<=(m-1)/2; j++){\n                int v1 = grid[i][j] , v2 = grid[(n-1)-i][j] , v3 = grid[i][m-1-j], v4 = grid[(n-1-i)][m-1-j];\n                int sum = v1+v2+v3+v4;\n                if(i == (n-1-i) && (j == (m-1-j))){\n                    ans += v1;\n                }\n                else if(i == (n-1-i) || j == (m-1-j)){\n                    if(sum == 4){cnt++;}\n                    else if(sum == 0){ans += 0;}\n                    else {ans += 1; cnt2++; }\n                }\n               \n                else{\n              \n                int req = min(4-sum,sum);\n                \n                ans += req;\n                }\n                \n                \n            }\n        }\n        if((cnt%2) != 0){\n            if(cnt2 == 0){ans += 2;}\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1722698118",
    "subm_id": "1343170249"
}