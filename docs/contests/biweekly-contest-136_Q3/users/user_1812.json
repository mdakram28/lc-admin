{
    "username": "SpartanCode-117",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n\n        int res = 0, sum;\n        for(int i = 0; i < n/2; i++)\n        {\n            for(int j = 0; j < m/2; j++)\n            {\n                sum = grid[i][j]+grid[i][m-1-j]+grid[n-1-i][j]+grid[n-1-i][m-1-j];\n                res += min(sum, 4-sum);\n            }\n        }\n        int extras = 0, agrega = 0;\n        if(n%2 == 1)\n        {\n            for(int j = 0; j < m/2; j++)\n            {\n                if(grid[n/2][j] != grid[n/2][m-1-j])\n                {\n                    res++;\n                    agrega++;\n                    continue;\n                }\n                if(grid[n/2][j] == 1)\n                    extras++;\n            }\n        }\n        if(m%2 == 1)\n        {\n            for(int i = 0; i < n/2; i++)\n            {\n                if(grid[i][m/2] != grid[n-1-i][m/2])\n                {\n                    res++;\n                    agrega++;\n                    continue;\n                }\n                if(grid[i][m/2] == 1)\n                    extras++;\n            }\n        }\n        if(n%2 == 1 && m%2 == 1)\n            res += grid[n/2][m/2];\n        cout << extras << \" \" << agrega << \"\\n\";\n        if((extras*2)%4 == 0)\n            return res;\n        if(agrega > 0)\n            return res;\n        return res+2;\n    }\n};",
    "submit_ts": "1722699370",
    "subm_id": "1343209575"
}