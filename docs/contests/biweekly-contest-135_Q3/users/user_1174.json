{
    "username": "Vraj_Naik",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int, vector<int>> diffMap;\n        vector<int> maxVals;\n\n        computeDiffs(nums, k, diffMap, maxVals);\n        return findMinChanges(diffMap, maxVals, n);\n    }\n\nprivate:\n    void computeDiffs(const vector<int>& nums, int k, map<int, vector<int>>& diffMap, vector<int>& maxVals) {\n        int n = nums.size();\n        for (int i = 0; i < n / 2; ++i) {\n            int a = nums[i], b = nums[n - i - 1];\n            int diff = abs(a - b);\n            int maxVal = max({a, b, k - a, k - b});\n            diffMap[diff].push_back(maxVal);\n            maxVals.push_back(maxVal);\n        }\n        sort(maxVals.begin(), maxVals.end());\n    }\n\n    int findMinChanges(const map<int, vector<int>>& diffMap, const vector<int>& maxVals, int n) {\n        int minChanges = n;\n        for (const auto& entry : diffMap) {\n            int diff = entry.first;\n            int pos = lower_bound(maxVals.begin(), maxVals.end(), diff) - maxVals.begin();\n            int changes = pos * 2 + (n / 2 - pos);\n\n            for (const auto& val : entry.second) {\n                if (val < diff) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n\n            minChanges = min(minChanges, changes);\n        }\n        return minChanges;\n    }\n};",
    "submit_ts": "1721488928",
    "subm_id": "1327437491"
}