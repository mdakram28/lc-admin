{
    "username": "biltharesatyendra",
    "submission": "int nextZero[32][200005];\nint last[32];\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int kk) {\n        int n = nums.size();\n        int i,j, k;\n        int ans = 1000000007;\n       // memset(nextZero, 0, sizeof(nextZero));\n        memset(last, 0, sizeof(last));\n        for(i=1; i<=n; i++)\n            for(j=0; j<32; j++)\n                nextZero[j][i] = 0;\n        for(i=1; i<=n; i++)\n        {\n            for(j=0; j<32; j++)\n            {\n                if((nums[i-1] & (1<<j)) == 0)\n                {\n                    // this is 0 bit\n                    for(k=last[j]+1; k<=i; k++)\n                    {\n                        nextZero[j][k] = i;\n                    }\n                    last[j] = i;\n                }\n            }\n        }\n        \n        set<int> s;\n        for(i=1; i<=n; i++)\n        {\n            int cur = nums[i-1];\n            //printf(\"from %d we can make\\n\",cur);\n            s.insert(cur);\n            set<pair<int,int> > ss;\n            for(j=0; j<32; j++)\n            {\n                if(nextZero[j][i] > i)\n                {\n                    ss.insert({nextZero[j][i],j});\n                }\n            }\n            set<pair<int,int> > ::iterator I;\n            for(I=ss.begin();I!=ss.end();I++)\n            {\n                j = I->second;\n                cur = cur & (nums[I->first-1]);\n                s.insert(cur);\n               // printf(\"%d \",cur);\n            }\n            //printf(\"\\n\");\n        }\n        set<int>::iterator I;\n       // printf(\"diffrent are\\n\");\n        for(I=s.begin();I!=s.end();I++)\n        {\n            ans = min(ans, abs(kk- *I));\n           // printf(\"%d \",*I);\n        }\n      //  printf(\"\\n\");\n        return ans;\n        \n        \n    }\n};",
    "submit_ts": 1717299233.0
}