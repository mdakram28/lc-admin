{
    "username": "neelmittal2903",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& numbers, int target) {\n     int size = numbers.size();\n    long long result_count = 0;\n    \n    unordered_map<long long, long long> previous_results;\n\n    for (int idx = 0; idx < size; ++idx) {\n        unordered_map<long long, long long> current_results; \n\n        if (numbers[idx] == target) {\n            ++result_count;\n        }\n        current_results[numbers[idx]] = 1;\n\n        for (auto& [value, frequency] : previous_results) {\n            long long new_and_result = value & numbers[idx];\n            if (new_and_result == target) {\n                result_count += frequency;\n            }\n            current_results[new_and_result] += frequency;\n        }\n        \n        previous_results = current_results;\n    }\n    \n    return result_count;    \n    }\n};",
    "submit_ts": "1720280458",
    "subm_id": "1311790140"
}