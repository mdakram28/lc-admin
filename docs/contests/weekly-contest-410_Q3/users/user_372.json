{
    "username": "ChristopherJiang",
    "submission": "class Solution {\n    static final int MOD = 1000000007;\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        int[][] dp = new int[n][51];\n\n        // Initialize dp for the first element\n        for (int i = 0; i <= nums[0]; i++) {\n            dp[0][i] = 1;\n        }\n\n        // Fill dp table\n        for (int i = 1; i < n; i++) {\n            int[][] newDp = new int[n][51];\n            for (int j = 0; j <= nums[i]; j++) {\n                int arr2Value = nums[i] - j;\n                for (int k = 0; k <= j; k++) {\n                    if (arr2Value <= nums[i - 1] - k) {\n                        newDp[i][j] = (newDp[i][j] + dp[i - 1][k]) % MOD;\n                    }\n                }\n            }\n            dp = newDp;\n        }\n\n        // Sum up all valid pairs for the last element\n        int result = 0;\n        for (int i = 0; i <= 50; i++) {\n            result = (result + dp[n - 1][i]) % MOD;\n        }\n\n        return result;\n    }\n}",
    "submit_ts": "1723345149",
    "subm_id": "1351549647"
}