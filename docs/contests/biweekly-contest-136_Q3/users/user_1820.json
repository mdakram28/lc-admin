{
    "username": "soooda",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n\n        // how many to add\n        vector<int> four_sum_mirrors(5, 0);\n\n        vector<int> two_sum_mirrors(3, 0);\n\n        vector<int> one_sum_mirrors(2, 0);\n\n        //\u7b97\u51fa\u6765\u88ab4\u6574\u9664\u9700\u8981\u6539\u53d8\u7684\u6700\u5c0f\u7684\n        // 4\u4e2a\uff0c sum 0-4    \u53ea\u80fd\u53d8\u62100/4 \n        // \u76f4\u63a5\u53d6\u6700\u5c0f\u7684\u5c31\u884c 0\u548c4\u4e0d\u53d8, 2\u53d6\u539f\u6765\u7684\uff0c3 \u5c31\u51cf1\uff0c1\u5c31\u51cf1\n        // 1+2*2+3\n\n        // 2\u4e2a\uff0c sum 0-2    \u53ea\u80fd\u53d8\u62100/2\n            // \u8981\u4e48\u76f4\u63a5\u53d8\u62100\n            // \u8981\u4e48\u548c\u53e6\u5916\u4e24\u4e2a\u51d1\u62102\n\n        // 010101 101001\n        // \u5de6\u8fb9\u662f\u5076\u6570\u5c31\u53ef\u4ee5\u4e86\n        // 1\u6709\u591a\u5c11\u4e2a\n        // 01 10 \u2014> 1111 2\u591a\u8fd8\u662f0\u591a\u4e86\uff0c\u7ffb\u4e00\u534a\n        // 01 00 -> 0000 \n        // 0->2 2->0 \u529b\u6c14\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u662f\n\n        // 1->0 1->2 \u53ea\u89811\n\n        // 3\u4e2a0 2\u4e2a2  1\u4e2a1 1->0\n        // 2 %2 \u6574\u9664\uff0c\u4e0d\u80fd\u5269\u591a\u5c11 \n        // \u80fd\u7684\u8bdd\uff0c\u5c31\u662f1\n        // \u4e0d\u80fd\u7684\u8bdd\uff0c\u770b\u6709\u6ca1\u67091\uff0c\u6709\u7684\u8bdd\u5c31\u662f1\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u662f1 \u52a0\u4e0a\u4e00\u4e2a2\n        // \n\n        // 1\u4e2a\uff0c sum 0-1    \u53ea\u80fd\u53d8\u62100 \n        // 1\n\n        for(int i =0;i<(m+1)/2;i++) {\n            for(int j =0;j<(n+1)/2;j++) {\n                int cur = grid[i][j];\n                int mirror_x = grid[m - 1 - i][j];\n                int mirror_y = grid[i][n - 1 - j];\n                int mirror_x_y = grid[m - 1 - i][n - 1 - j];\n                if(m - 1 - i != i && n - 1 - j != j) {\n                    int tmp = cur + mirror_x + mirror_y + mirror_x_y;\n                    four_sum_mirrors[tmp]++;\n                } else if(m - 1 - i == i && n - 1 - j == j){\n                    one_sum_mirrors[cur]++;\n                } else if(m - 1 - i == i ) {\n                    two_sum_mirrors[cur+mirror_y]++;\n                } else {\n                    two_sum_mirrors[cur+mirror_x]++;\n                }\n            }\n        }\n\n        int sum_4 = four_sum_mirrors[1] + four_sum_mirrors[3] + 2 * four_sum_mirrors[2];\n        int sum_1 = one_sum_mirrors[1];\n        int sum_2 = two_sum_mirrors[1];\n\n        // for(int i =0;i<=4;i++) {\n        //     cout<<i<<\":\"<<four_sum_mirrors[i]<<\",\";\n        // }\n        // cout<<endl;\n        // for(int i =0;i<=2;i++) {\n        //     cout<<i<<\":\"<<two_sum_mirrors[i]<<\",\";\n        // }\n        // cout<<endl;\n        // for(int i =0;i<=1;i++) {\n        //     cout<<i<<\":\"<<one_sum_mirrors[i]<<\",\";\n        // }\n        // cout<<endl;\n        if(two_sum_mirrors[2]%2!=0) {\n            if(two_sum_mirrors[1]==0) {\n                sum_2+= 2;\n            }\n        }\n        return sum_1+sum_2+sum_4;\n    }\n};",
    "submit_ts": "1722699681",
    "subm_id": "552276707"
}