{
    "username": "mohitgupta4357",
    "submission": "class segtree\n{\n    public:\n    vector<int>tree;\n    int n;\n    int p=0;\n    segtree(vector<int>&v)\n    {\n        n=v.size();\n        tree.resize(4*n);\n        build(1,0,n-1,v);\n        for(int i=0;i<31;i++) p=(p|(1<<i));\n    }\n    void build(int node,int st,int en,vector<int>&v)\n    {\n        if(st==en)\n        {\n            tree[node]=v[st];\n            return;\n        }\n        int mid=(st+en)/2;\n        build(2*node,st,mid,v);\n        build(2*node+1,mid+1,en,v);\n        tree[node]=(tree[2*node]&tree[2*node+1]);\n    }\n    int query(int node,int st,int en,int l,int r)\n    {\n        if(st>r || en<l) return p;\n        if(st>=l && en<=r) return tree[node];\n        int mid=(st+en)/2;\n        int a=query(2*node,st,mid,l,r);\n        int b=query(2*node+1,mid+1,en,l,r);\n        return (a&b);\n    }\n};\nclass Solution {\n    int find(vector<int>&v,int p,segtree &tree,int k)\n    {\n        int st=0;\n        int en=p;\n        int n=v.size();\n        int ans=0;\n        while(st<=en)\n        {\n            int mid=(st+en)/2;\n            int ok=tree.query(1,0,n-1,mid,p);\n            // cout<<\"at mid=\"<<mid<<\" ok=\"<<ok<<endl;\n            if((ok&k)==k)\n            {\n                ans=mid;\n                en=mid-1;\n            }\n            else st=mid+1;\n        }\n        // cout<<\"ans=\"<<ans<<\" at p=\"<<p<<endl;\n        if(tree.query(1,0,n-1,ans,p)!=k) return -1;\n        st=ans;\n        en=p;\n        int pko=ans;\n        while(st<=en)\n        {\n            int mid=(st+en)/2;\n            int ok=tree.query(1,0,n-1,mid,p);\n            if(ok==k)\n            {\n                // cout<<\"at i=\"<<st<<\" op=\"<<op<<endl;\n                pko=mid;\n                st=mid+1;\n            }\n            else en=mid-1;\n        }\n        // cout<<pko<<\" \"<<ans<<endl;\n        return pko-ans+1;\n    }\npublic:\n    long long countSubarrays(vector<int>& v, int k) {\n        long long int ans=0;\n        int n=v.size();\n        segtree tree(v);\n        for(int i=0;i<n;i++)\n        {\n            int op=find(v,i,tree,k);\n            if(op!=-1)\n            {\n                // cout<<\"at i=\"<<i<<\" op=\"<<op<<endl;\n                ans+=op;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279666",
    "subm_id": "1311760333"
}