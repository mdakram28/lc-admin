{
    "username": "practical-vvingf4j",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define f first\n#define s second\n#define lc (rt<<1)\n#define rc (rt<<1|1)\n#define pb push_back\n#define cl(a, b) memset(a, b, sizeof(a))\n#define mp(a, b) make_pair((a), (b))\n#define all(x) x.begin(),x.end()\ntypedef long long ll;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pl;\ntypedef pair<pi, int> pii;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pi> vii;\ntypedef vector<pl> vll;\ntypedef vector<pii> viii;\nconst int NO_DEB = 0;\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename... Args>\nvoid logger(string vals, Args &&...values){\n    if (NO_DEB) return;\n    cout << vals << \" = \";\n    string delim = \"\";\n    (..., (cout << delim << values, delim = \", \"));\n    cout << endl;\n}\ntemplate<int MOD> struct mint {\n    static const int mod = MOD;\n    int v;\n    explicit operator int() const { return v; }\n    mint():v(0) {}\n    mint(ll _v):v(int(_v%MOD)) { v += (v<0)*MOD; }\n    mint& operator+=(mint o) {\n        if ((v += o.v) >= MOD) v -= MOD;\n        return *this; }\n    mint& operator-=(mint o) {\n        if ((v -= o.v) < 0) v += MOD;\n        return *this; }\n    mint& operator*=(mint o) {\n        v = int((ll)v*o.v%MOD); return *this; }\n    mint& operator/=(const mint& o) { return (*this) *= inv(o); }\n    friend mint pow(mint a, ll p) { assert(p >= 0);\n        return p==0?1:pow(a*a,p/2)*(p&1?a:1); }\n    friend mint inv(mint a) { assert(a.v != 0); return pow(a,MOD-2); }\n    friend mint operator+(mint a, mint b) { return a += b; }\n    friend mint operator-(mint a, mint b) { return a -= b; }\n    friend mint operator*(mint a, mint b) { return a *= b; }\n    friend mint operator/(mint a, const mint& b) { return a /= b; }\n};\nconst int inf = 0x3F3F3F3F;\nconst ll infl = 0x3F3F3F3F3F3F3F3FLL;\nconst int mod = 1e9 + 7;\nusing mi = mint<mod>;\nvoid print(vector<ll> & a){\n    for(int i=0; i<a.size(); i++) cout << a[i] << \" \\n\"[i+1==a.size()];\n}\n\nconst int MM = 1e5+3;\nclass Solution {\npublic:\n    ll minimumCost(int m, int n, vector<int>& hcut, vector<int>& vcut) {\n        vector<pi> edge;\n        cntR = m; cntC = n;\n        for(int x : hcut) edge.pb({x, 0});\n        for(int x : vcut) edge.pb({x, 1});\n        sort(all(edge));\n        int i = 0;  ll ans = 0;\n        while(cntR > 1 || cntC > 1) {\n            auto [x, t] = edge[i]; i++;\n            if(t == 0) {\n                ans += 1LL * x * cntC; cntR--;\n            } else {\n                ans += 1LL* x * cntR; cntC--;\n            }\n        }\n        return ans;\n    }\n    int  cntR, cntC;\n};",
    "submit_ts": "1720925085",
    "subm_id": "546436754"
}