{
    "username": "xlr-8",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        Map<Integer,Integer> map = new HashMap<>();\n        map.put(0,1);\n        map.put(1,1);\n        \n        int ans = 0;\n        \n        if(k==0 || k==1) ans++;\n        \n        int least = 0;\n        for(int jump=1;least<=k+1;jump*=2){\n            Map<Integer,Integer> nmap = new HashMap<>();\n            \n            List<Integer> ll = new ArrayList<>();\n            \n            int leastHere = Integer.MAX_VALUE;\n            \n            for(int key:map.keySet()){\n                nmap.put(key+jump,nmap.getOrDefault(key+jump,0)+map.get(key));\n                nmap.put(key+jump-1,nmap.getOrDefault(key+jump-1,0)+map.get(key));\n                leastHere = Math.min(leastHere,key+jump-1);\n            }\n            map=nmap;\n            \n            ans+=map.getOrDefault(k,0);\n            least = Math.max(least,leastHere);\n            \n            // System.out.println(jump+\" \"+map+\" \"+least);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1716089457",
    "subm_id": "1261842719"
}