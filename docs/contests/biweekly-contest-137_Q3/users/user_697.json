{
    "username": "Akshay Amin",
    "submission": "#include <vector>\n#include <climits>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maxSum = LLONG_MIN; // Use LLONG_MIN for long long\n    void placeRooks(vector<vector<int>>& board, long long row, vector<bool>& usedCols, long long currentSum, long long rooksPlaced) {\n        long long m = board.size();\n        long long n = board[0].size();\n        \n        if (rooksPlaced == 3) {\n            maxSum = max(maxSum, currentSum);\n            return;\n        }\n        \n        if (row >= m) return;\n        \n        for (long long col = 0; col < n; col++) {\n            if (!usedCols[col]) {\n                usedCols[col] = true;\n                placeRooks(board, row + 1, usedCols, currentSum + board[row][col], rooksPlaced + 1);\n                usedCols[col] = false;\n            }\n        }\n        \n        placeRooks(board, row + 1, usedCols, currentSum, rooksPlaced);\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        // long long m = b.size();\n        // long long n = b[0].size();\n        \n        // vector<bool> temp(n, false);\n        // placeRooks(b, 0, temp, 0, 0);\n        \n        // return maxSum;\n\n\n\n    int m = board.size();\n    int n = board[0].size();\n    \n    vector<vector<pair<long long, int>>> top3(m, vector<pair<long long, int>>(3, {LLONG_MIN, -1}));\n    \n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n            long long value = board[i][j];\n            for (int k = 0; k < 3; k++) {\n                if (value > top3[i][k].first) {\n                    for (int l = 2; l > k; l--) {\n                        top3[i][l] = top3[i][l - 1];\n                    }\n                    top3[i][k] = {value, j};\n                    break;\n                }\n            }\n        }\n    }\n    \n    long long max_sum = LLONG_MIN;\n    \n    for (int r1 = 0; r1 < m; r1++) {\n        for (int r2 = r1 + 1; r2 < m; r2++) {\n            for (int r3 = r2 + 1; r3 < m; r3++) {\n                for (int c1 = 0; c1 < 3; c1++) {\n                    for (int c2 = 0; c2 < 3; c2++) {\n                        for (int c3 = 0; c3 < 3; c3++) {\n                            int col1 = top3[r1][c1].second;\n                            int col2 = top3[r2][c2].second;\n                            int col3 = top3[r3][c3].second;\n                            \n                            if (col1 != col2 && col1 != col3 && col2 != col3) {\n                                long long current_sum = top3[r1][c1].first + top3[r2][c2].first + top3[r3][c3].first;\n                                max_sum = max(max_sum, current_sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    return max_sum;\n    }\n};\n",
    "submit_ts": "1723908325",
    "subm_id": "1359147877"
}