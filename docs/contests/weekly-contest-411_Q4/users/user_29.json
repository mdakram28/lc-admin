{
    "username": "Dragos Ristache",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<double, double> pdd;\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define rep(i, from, to) for (int i = from; i < (to); ++i)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n#define FOR(i, to) for (int i = 0; i < (to); ++i)\ntypedef vector<vector<int> > vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pair<int, int> > vpi;\ntypedef pair<ll,ll> pll;\ntypedef vector<string> vs;\nconst char en = '\\n';\n\nclass PSum {\npublic:\n  vector<ll> sm;\n\n  // Constructor that initializes the vector with size N\n  PSum(int N) : sm(N) {}\n\n  // Constructor that initializes with a given vector and calculates the prefix sums\n  PSum(const vll &v) {\n    sm = v;\n    make();\n  }\n\n  void add(int pos, ll val) {\n    sm[pos] += val;\n  }\n\n  void add(vll &v) {\n    for (size_t i = 0; i < v.size(); ++i) {\n      sm[i] += v[i];\n    }\n  }\n\n  void make() {\n    for (size_t i = 1; i < sm.size(); ++i) {\n      sm[i] += sm[i - 1];\n    }\n  }\n\n  // Function to get the sum of elements in the range [start, end]\n  ll sum(int start, int end) {\n      if (start > end) return 0;\n    start = max(start, 0);\n    end = min(end, static_cast<int>(sm.size()) - 1);\n\n    if (start == 0) {\n      return sm[end];\n    }\n    return sm[end] - sm[start - 1];\n  }\n};\n\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& qr) {\n        PSum s0(sz(s)), s1(sz(s));\n        FOR(i, sz(s)) {\n            if (s[i] == '1') {\n                s1.add(i,1);\n            } else {\n                s0.add(i,1);\n            }\n        }\n        s1.make(); s0.make();\n    \n        vll L(sz(s));\n        FOR(i, sz(s)) {\n            int st = i;\n            int dr = sz(s)-1;\n            int ret = sz(s)-1;\n            while(st <= dr) {\n                int mid = (st+dr)/2;\n                int mx = min(s1.sum(i,mid), s0.sum(i,mid));\n                if (mx > k) {\n                    dr = mid - 1;\n                } else {\n                    st = mid + 1;\n                    ret = mid;\n                }\n            }\n            L[i] = ret;\n        }\n        PSum ls(L);\n        vll rv;\n        FOR(i, sz(qr)) {\n            ll l = qr[i][0];\n            ll r = qr[i][1];\n            ll st =l, dr = r;\n            ll ret=l-1;\n            while (st <= dr) {\n                ll mid = (st+dr)/2;\n                if (L[mid] > r) {\n                    dr = mid - 1;\n                } else {\n                    st = mid + 1;\n                    ret = mid;\n                }\n            }\n            \n            ll aux = ls.sum(l,ret) - (ret - 1) * ret / 2;\n            aux += (l-1) * (l-2)/2;\n            aux += (r-ret) * (r-ret+1)/2;\n            rv.pb(aux);\n        }\n        return rv;\n    }\n};",
    "submit_ts": "1723950253",
    "subm_id": "1359741176"
}