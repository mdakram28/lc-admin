{
    "username": "Wibo",
    "submission": "class Solution {\npublic:\n    long long solveHalf(vector<int> &a) {\n        int n = a.size();\n\n        vector<int> par(n), sez(n), lst(n);\n        long long ans = 0;\n        for (int i=0; i<n; i++) par[i] = i, sez[i] = 1, lst[i] = a[i];\n        auto find = [&](auto &self, int u) -> int {\n            if (u != par[u]) return par[u] = self(self, par[u]);\n            return u;\n        };\n        auto apply = [&](int u, int h) -> void {\n            if (lst[u] != -1) ans += lst[u] - h;\n            lst[u] = h;\n        };\n        auto unite = [&](int u, int v, int h) -> void {\n            u = find(find, u); v = find(find, v);\n            if (u == v) return;\n            if (sez[u] > sez[v]) swap(u, v);\n            apply(u, h); apply(v, h);\n            par[u] = v; sez[v] += sez[u];\n        };\n\n        vector<int> ord(n);\n        for (int i=0; i<n; i++) ord[i] = i;\n        sort(ord.begin(), ord.end(), [&](int i, int j) {\n            return a[i] > a[j];\n        });\n\n        for (int i=0; i<n; i++) {\n            int j = ord[i];\n            if (j-1 >= 0 && a[j-1] >= a[j]) unite(j-1, j, a[j]);\n            if (j+1 < n && a[j+1] >= a[j]) unite(j, j+1, a[j]);\n        }\n\n        for (int i=0; i<n; i++) apply(find(find, i), 0);\n\n        return ans;\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> a1(n), a2(n);\n        for (int i=0; i<n; i++) {\n            a1[i] = max(0, nums[i] - target[i]);\n            a2[i] = max(0, target[i] - nums[i]);\n        }\n        // cout << \"a1: \";\n        // for (int x : a1) cout << x << ' ';\n        // cout << '\\n';\n        // cout << \"a2: \";\n        // for (int x : a2) cout << x << ' ';\n        // cout << '\\n';\n\n        return solveHalf(a1) + solveHalf(a2);\n    }\n};",
    "submit_ts": "1721531158",
    "subm_id": "1327953797"
}