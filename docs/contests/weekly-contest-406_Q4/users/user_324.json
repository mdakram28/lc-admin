{
    "username": "gu-mu-8b",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        cuts = []\n        for i in range(m - 1):\n            heapq.heappush(cuts, (-horizontalCut[i], 'H', i))\n        for j in range(n - 1):\n            heapq.heappush(cuts, (-verticalCut[j], 'V', j))\n        \n        # \u521d\u59cb\u5316\u53d8\u91cf\n        total_cost = 0\n        h_cuts = 0\n        v_cuts = 0\n\n        # \u8d2a\u5fc3\u5207\u5272\n        while cuts:\n            cost, direction, index = heapq.heappop(cuts)\n            cost = -cost  # \u6062\u590d\u6b63\u503c\n            \n            if direction == 'H':\n                # \u5f53\u524d\u662f\u6c34\u5e73\u5207\u5272\u7ebf\n                total_cost += cost * (v_cuts + 1)\n                h_cuts += 1\n            else:\n                # \u5f53\u524d\u662f\u5782\u76f4\u5207\u5272\u7ebf\n                total_cost += cost * (h_cuts + 1)\n                v_cuts += 1\n        \n        return total_cost",
    "submit_ts": "1720925100",
    "subm_id": "546436872"
}