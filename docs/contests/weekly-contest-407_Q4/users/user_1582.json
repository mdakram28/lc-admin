{
    "username": "shen-jian-666",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long[] diff = new long[n];\n        long[] diff1 = new long[n];\n        long[] diff2 = new long[n];\n        diff1[0] = nums[0];\n        diff2[0] = target[0];\n        for (int i = 1; i < n; i++) {\n            diff1[i] = nums[i] - nums[i - 1];\n        }\n        for (int i = 1; i < n; i++) {\n            diff2[i] = target[i] - target[i - 1];\n        }\n        for (int i = 0; i < n; i++) {\n            diff[i] = diff2[i] - diff1[i];\n        }\n        long a = 0;\n        long b = 0;\n        for (int i = 0; i < n; i++) {\n            if (diff[i] > 0) {\n                a = a + diff[i];\n            } else if (diff[i] < 0) {\n                b = b + diff[i];\n            }\n        }\n        return Math.max(a, -1 * b);\n    }\n}",
    "submit_ts": "1721533052",
    "subm_id": "548395816"
}