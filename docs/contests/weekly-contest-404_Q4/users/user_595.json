{
    "username": "akashSudan",
    "submission": "int dfs(vector<int> adj[],int idx,int par,int &res)\n{\n    int a=0,b=0;\n    for(auto i:adj[idx])\n    {\n        if(i!=par)\n        {\n            int t=dfs(adj,i,idx,res);\n            if(t>a)\n            {\n                b=a;\n                a=t;\n            }\n            else\n            if(t>b)\n            {\n                b=t;\n            }\n        }\n    }\n    res=max(res,a+b+1);\n    return a+1;\n}\nint diameter(vector<vector<int>> edges)\n{\n    int n=edges.size()+1;\n    vector<int> adj[n];\n    for(int i=0;i<n-1;i++)\n{\n    int x=edges[i][0];\n        int y=edges[i][1];\n    adj[x].push_back(y);\n    adj[y].push_back(x);\n}\nint ans=0;\nans=max(ans,dfs(adj,0,-1,ans));\n    return ans;\n}\nclass Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n       int d1=diameter(edges1);\n        int d2=diameter(edges2);\n        cout<<d1<<\" \"<<d2<<endl;\n        int ans=max(d1,d2);\n        ans=max(d1/2+1+d2/2+1,ans);\n        return ans-1;\n    }\n};",
    "submit_ts": "1719718928",
    "subm_id": "1304429533"
}