{
    "username": "st019",
    "submission": "struct Tree {\n\ttypedef int T;\n\tstatic constexpr T unit = 0;\n\tT f(T a, T b) { return a+b; } // (any associative fn)\n\tvector<T> s; int n;\n\tTree(int n = 0, T def = unit) : s(2*n, def), n(n) {}\n\tvoid update(int pos, T val) {\n\t\tfor (s[pos += n] = val; pos /= 2;)\n\t\t\ts[pos] = f(s[pos * 2], s[pos * 2 + 1]);\n\t}\n\tT query(int b, int e) { // query [b, e)\n\t\tT ra = unit, rb = unit;\n\t\tfor (b += n, e += n; b < e; b /= 2, e /= 2) {\n\t\t\tif (b % 2) ra = f(ra, s[b++]);\n\t\t\tif (e % 2) rb = f(s[--e], rb);\n\t\t}\n\t\treturn f(ra, rb);\n\t}\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int N = nums.size();\n        Tree t{N};\n        for(int i = 1; i < N-1; ++i) {\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]) {\n                t.update(i, 1);\n            }\n        }\n        vector<int> res;\n        for(auto& query : queries) {\n            auto n1 = query[0];\n            auto n2 = query[1];\n            auto n3 = query[2];\n            if(n1 == 1) {\n                int diff = abs(n3 - n2);\n                if(diff <= 1) {\n                    res.emplace_back(0);\n                } else {\n                    auto first = t.query(n2, n2+1);\n                    auto last = t.query(n3, n3+1);\n                    auto subSeg = t.query(n2, n3+1);\n                    res.emplace_back(subSeg - first - last);\n                }\n            } else {\n                nums[n2] = n3;\n                if(n2 != 0 && n2 != (N-1)) {\n                    if(nums[n2] > nums[n2-1] && nums[n2] > nums[n2+1]) {\n                        t.update(n2, 1);\n                    } else {\n                        t.update(n2, 0);\n                    }\n                }\n                int prev = n2-1;\n                int nxt = n2 + 1;\n                if(prev > 0 && prev < (N-1)) {\n                    if(nums[prev] > nums[prev-1] && nums[prev] > nums[prev+1]) {\n                        t.update(prev, 1);\n                    } else {\n                        t.update(prev, 0);\n                    }\n                }\n                if(nxt > 0 && nxt < (N-1)) {\n                    if(nums[nxt] > nums[nxt-1] && nums[nxt] > nums[nxt+1]) {\n                        t.update(nxt, 1);\n                    } else {\n                        t.update(nxt, 0);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718506548.0
}