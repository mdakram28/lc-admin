{
    "username": "FatalError",
    "submission": "MX = 10**5\np10 = [0] * (MX+1)\nfor i in range(MX+1):\n    p10[i] = pow(10, i, 7)\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            return '9' * n\n        if k == 5:\n            if n < 2:\n                return '5'\n            return '5' + '9'*(n-2) + '5'\n        if k == 2:\n            if n < 2:\n                return '8'\n            return '8' + '9'*(n-2) + '8'\n        if k == 4:\n            if n < 4:\n                return '8' * n\n            return '88' + '9' * (n-4) + '88'\n        if k == 8:\n            if n < 6:\n                return '8' * n\n            return '888' + '9' * (n-6) + '888'\n        if k == 6:\n            if n < 3:\n                return '6' * n\n            if n % 2 == 1:\n                return '8' + '9' * (n//2-1) + '8' + '9' * (n//2-1) + '8'\n            return '8' + '9' * (n//2-2) + '77' + '9' * (n//2-2) + '8'\n        if n < 3:\n            return '7' * n\n        r = 0\n        for _ in range(n):\n            r = (r * 10 + 9) % 7\n        if n % 2 == 1:\n            m = n // 2\n            for d in range(9, -1, -1):\n                if r == 0:\n                    return '9' * (n//2) + str(d) + '9' * (n//2)\n                r = (r - p10[m]) % 7\n        else:\n            m = n // 2\n            for d in range(9, -1, -1):\n                if r == 0:\n                    return '9' * (n//2-1) + str(d) * 2 + '9' * (n//2-1)\n                r = (r - p10[m] - p10[m-1]) % 7\n   ",
    "submit_ts": "1723949978",
    "subm_id": "556396195"
}