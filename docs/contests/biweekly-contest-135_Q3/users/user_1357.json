{
    "username": "dhruvsharma190801",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int,vector<int>> difference_map;\n        vector<int> values_list;\n\n        for (int index = 0; index < nums.size() / 2; ++index) {\n            int first_value = nums[index];\n            int second_value = nums[nums.size() - index - 1];\n            int difference = abs(first_value - second_value);\n\n            int max_value = max({first_value, second_value, k - first_value, k - second_value});\n\n            difference_map[difference].push_back(max_value);\n            values_list.push_back(max_value);\n        }\n\n        int result = nums.size();\n        sort(values_list.begin(), values_list.end());\n\n        for (const auto& [diff, values] : difference_map) {\n            int lower_bound_index = lower_bound(values_list.begin(), values_list.end(), diff) - values_list.begin();\n            lower_bound_index = lower_bound_index * 2 + (nums.size() / 2 - lower_bound_index);\n\n            for (const auto& max_val : values) {\n                if (max_val < diff) {\n                    lower_bound_index -= 2;\n                } else {\n                    lower_bound_index -= 1;\n                }\n            }\n\n            result = min(result, lower_bound_index);\n        }\n\n        return result;\n\n    }\n};",
    "submit_ts": "1721489115",
    "subm_id": "1327443363"
}