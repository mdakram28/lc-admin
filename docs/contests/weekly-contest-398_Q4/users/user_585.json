{
    "username": "Mridul20",
    "submission": "class Solution {\npublic:\n    int ncr(int n,int r){\n        double sum = 1;\n        for(int i = 1; i <= r; i++){\n            sum = sum * (n - r + i) / i;\n        }\n        return (int)sum;\n    }\n    int waysToReachStair(int k) {\n        if(k==0){\n            return 2;\n        }\n        else{\n            k--;\n        }\n        int ans = 0;\n        int q = 1;\n        int i = 0;\n        int min = q-1-(i+1);\n        int max = q - 1;\n        while(max<k){\n            i++;\n            q*=2;\n            min = q-1-(i+1);\n            max = q - 1;\n        }\n        while(min<=k){\n            // cout<<i<<'i';\n            // cout<<i+1<<'n'<<k-max<<'r';\n            ans+= ncr((i+1),(max-k));\n            q*=2;\n            i++;\n            min = q-1-(i+1);\n            max = q - 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716088992",
    "subm_id": "1261829979"
}