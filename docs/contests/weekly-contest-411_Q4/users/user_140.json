{
    "username": "pendem_2003",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.length();\n        vector <int> maxi(n);\n        int i = 0;\n        int j = -1;\n        int zeros = 0,ones= 0;\n        while(i<n){\n            while(j+1<n and (zeros+(s[j+1]=='0')<=k or ones+(s[j+1]=='1')<=k)){\n                if(s[j+1]=='1') ones++;\n                else zeros++;\n                j++;\n            }\n            maxi[i] = j;\n            if(s[i]=='1') ones--;\n            else zeros--;\n            i++;\n        }\n\n        vector <long long> pre(n,0);\n        for(int i = 0;i<n;i++) {\n            pre[i] = maxi[i]-i+1;\n            if(i) pre[i]+= pre[i-1];\n        }\n\n        vector <long long> res;\n        for(auto &v:queries){\n            long long l = v[0],r = v[1];\n            auto it = upper_bound(maxi.begin(),maxi.end(),r);\n            long long ind = max(1LL*l,1LL*(it-maxi.begin()));\n            long long ans = pre[r] - ((l)?pre[l-1]:0);\n            cout<<ans<<endl;\n            if(ind<=r){\n                ans = 0;\n                ans+= ((r-ind+1)*(r-ind+2))/2;\n                ans+= ((ind)?pre[ind-1]:0) - ((l)?pre[l-1]:0);\n            }\n            res.push_back(ans);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723952783",
    "subm_id": "1359804517"
}