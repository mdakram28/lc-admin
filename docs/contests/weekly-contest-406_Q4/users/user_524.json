{
    "username": "shakti_sarswat",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n          int hIndex = 0, vIndex = 0;\n            int hPieces = 1, vPieces = 1;\n            long long  totalCost = 0;\n        \n            sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n            sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        \n            while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n                if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                    totalCost += horizontalCut[hIndex] * vPieces;\n                    hIndex++;\n                    hPieces++;\n                } else {\n                    totalCost += verticalCut[vIndex] * hPieces;\n                    vIndex++;\n                    vPieces++;\n                }\n            }\n\n            while (hIndex < horizontalCut.size()) {\n                totalCost += horizontalCut[hIndex] * vPieces;\n                hIndex++;\n                hPieces++;\n            }\n\n            while (vIndex < verticalCut.size()) {\n                totalCost += verticalCut[vIndex] * hPieces;\n                vIndex++;\n                vPieces++;\n            }\n            return totalCost;\n    }\n};",
    "submit_ts": "1720925621",
    "subm_id": "1320260778"
}