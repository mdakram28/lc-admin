{
    "username": "coderchamp07",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        \n        map<int, int> dp[70][2];\n        function<int(int, int, bool)> recur = [&](int at, int jump, bool wentBackInPrev) -> int {\n            if(at > k + 1000)\n                return 0;\n            if(dp[jump][wentBackInPrev].count(at))\n                return dp[jump][wentBackInPrev][at];\n            int ans = 0;\n            if(at == k)\n                ans++;\n            if(at > 0 && wentBackInPrev == false)\n                ans += recur(at - 1, jump, true);\n            ans += recur(at + pow(2, jump), jump + 1, false);\n            return dp[jump][wentBackInPrev][at] = ans;\n        };\n        return recur(1, 0, false);\n    }\n};",
    "submit_ts": 1716088439.0
}