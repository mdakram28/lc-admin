{
    "username": "plustone",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int min_sum, max_sum, min_diff, max_diff;\n        int minSI = 0, maxSI = 0, minDI = 0, maxDI = 0;\n        min_sum = max_sum = points[0][0] + points[0][1];\n        min_diff = max_diff = points[0][0] - points[0][1];\n        \n        for (int i = 0; i < points.size(); i++) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            if (sum < min_sum) {\n                min_sum = sum;\n                minSI = i;\n            } else if (sum > max_sum) {\n                max_sum = sum;\n                maxSI = i;\n            }\n            \n            if (diff < min_diff) {\n                min_diff = diff;\n                minDI = i;\n            } else if (diff > max_diff) {\n                max_diff = diff;\n                maxDI = i;\n            }\n        }\n        \n        \n        \n        \n        \n        \n        int ans = getDist(points, minSI);\n        //cout << minSI << \" \" << ans << endl;\n        \n        ans = min(ans, getDist(points, maxSI));\n        //cout << maxSI << \" \" << ans << endl;\n        \n        ans = min(ans, getDist(points, minDI));\n        //cout << minDI << \" \" << ans << endl;\n        \n        ans = min(ans, getDist(points, maxDI));\n        //cout << maxDI << \" \" << ans << endl;\n        \n        return ans;\n    }\n    \n    int getDist(vector<vector<int>>& points, int index) {\n        int min_sum = 1e9, max_sum = 0;\n        int min_diff = 1e9, max_diff = -1e9;\n        for (int i = 0; i < points.size(); i++) {\n            if (i == index) continue;\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            \n            //if (i == 0) cout << sum << endl;\n            if (sum < min_sum) {\n                min_sum = sum;\n            } \n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n            \n            if (diff < min_diff) {\n                min_diff = diff;\n            } \n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n        //cout << min_sum << ' ' << max_sum << \" \" << min_diff << ' ' << max_diff << endl;\n        return max(max_sum - min_sum, max_diff - min_diff);\n    }\n};"
}