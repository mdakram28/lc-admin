{
    "username": "changeme",
    "submission": "class Solution {\n    public int minimumSum(int[][] g) {\n        int res = Integer.MAX_VALUE;\n        int R = g.length;\n        int C = g[0].length;\n        for (int r = 0; r < R; r++) {\n            for (int c = 0; c < C; c++) {\n                int a = minimumArea(g, 0, 0, r + 1, c + 1);\n                if (c + 1 < C) {\n                    int min = Math.min(\n                            minimumArea(g, 0, c + 1, r + 1, C) + minimumArea(g, r + 1, 0, R, C),\n                            minimumArea(g, r + 1, 0, R, c + 1) + minimumArea(g, 0, c + 1, R, C));\n                    res = Math.min(res, a + min);\n                }\n                if (c + 1 == C) {\n                    int min = Integer.MAX_VALUE;\n                    for (int cc = 0; cc < C; cc++) {\n                        int b = minimumArea(g, r + 1, 0, R, cc + 1);\n                        int d = minimumArea(g, r + 1, cc + 1, R, C);\n                        min = Math.min(min, b + d);\n                    }\n                    res = Math.min(res, a + min);\n                    \n                    min = Integer.MAX_VALUE;\n                    for (int rr = r; rr < R; rr++) {\n                        int b = minimumArea(g, r + 1, 0, rr + 1, C);\n                        int d = minimumArea(g, rr + 1, 0, R, C);\n                        min = Math.min(min, b + d);\n                    }\n                    res = Math.min(res, a + min);\n                }\n                \n                if (r + 1 == R) {\n                    int min = Integer.MAX_VALUE;\n                    for (int cc = 0; cc < C; cc++) {\n                        int b = minimumArea(g, 0, c + 1, R, cc + 1);\n                        int d = minimumArea(g, 0, cc + 1, R, C);\n                        min = Math.min(min, b + d);\n                    }\n                    res = Math.min(res, a + min);\n                    \n                    min = Integer.MAX_VALUE;\n                    for (int rr = 0; rr < R; rr++) {\n                        int b = minimumArea(g, 0, c + 1, rr + 1, C);\n                        int d = minimumArea(g, rr + 1, c + 1, R, C);\n                        min = Math.min(min, b + d);\n                    }\n                    res = Math.min(res, a + min);\n                }\n            }\n        }\n        \n        return res;\n    }\n    \n    private int minimumArea(int[][] g, int rr, int cc, int R, int C) {\n        var topLeft = new int[] { R, C };\n        var botRight = new int[] { -1, -1 };\n        for (int r = rr; r < R; r++) {\n            for (int c = cc; c < C; c++) {\n                if (g[r][c] == 1) {\n                    topLeft[0] = Math.min(topLeft[0], r);\n                    topLeft[1] = Math.min(topLeft[1], c);\n                    botRight[0] = Math.max(botRight[0], r);\n                    botRight[1] = Math.max(botRight[1], c);\n                }\n            }\n        }\n        if (botRight[0] == -1) {\n            return 0;\n        }\n        return (botRight[0] - topLeft[0] + 1) * (botRight[1] - topLeft[1] + 1);\n    }\n}",
    "submit_ts": 1719114174.0
}