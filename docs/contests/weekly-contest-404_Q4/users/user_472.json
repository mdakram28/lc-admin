{
    "username": "astthecoder",
    "submission": "class Solution {\npublic:\n    pair<int, int> getMaxCenDis(vector<vector<int>>& edges){\n        vector<int> g[edges.size()+1];\n        for(int i=0;i<edges.size();i++){\n            g[edges[i][0]].push_back(edges[i][1]);\n            g[edges[i][1]].push_back(edges[i][0]);\n        }\n        queue<int>q;\n        int dis1[edges.size()+1], dis2[edges.size()+1], dis3[edges.size()+1];\n        int x, y;\n        memset(dis1, -1, sizeof(dis1));\n        memset(dis2, -1, sizeof(dis2));\n        memset(dis3, -1, sizeof(dis3));\n        q.push(0);\n        dis1[0]=0;\n        int mx = 0;\n        x=0;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            for(int i=0;i<g[u].size();i++){\n                int v=g[u][i];\n                if(dis1[v]!=-1) continue;\n                dis1[v]=dis1[u]+1;\n                q.push(v);\n                if(dis1[v] > mx){\n                    x = v;\n                    mx = dis1[v];\n                }\n            }\n        }\n        \n        q.push(x);\n        dis2[x]=0;\n        mx = 0;\n        y=x;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            for(int i=0;i<g[u].size();i++){\n                int v=g[u][i];\n                if(dis2[v]!=-1) continue;\n                dis2[v]=dis2[u]+1;\n                q.push(v);\n                if(dis2[v] > mx){\n                    y = v;\n                    mx = dis2[v];\n                }\n            }\n        }\n        q.push(y);\n        dis3[y]=0;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            for(int i=0;i<g[u].size();i++){\n                int v=g[u][i];\n                if(dis3[v]!=-1) continue;\n                dis3[v]=dis3[u]+1;\n                q.push(v);\n            }\n        }\n        int ans=INT_MAX;\n        for(int i =0; i<=edges.size(); i++){\n            if(dis2[i]+dis3[i]==dis2[y]){\n                ans=min(ans,max(dis2[i], dis3[i]));\n            }\n        }\n        return {ans, dis2[y]};\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        pair<int, int> x = getMaxCenDis(edges1);\n        pair<int, int> y = getMaxCenDis(edges2);\n        int ans=max(x.second, y.second);\n        return max(ans, x.first+y.first+1);\n    }\n};",
    "submit_ts": "1719719050",
    "subm_id": "1304432534"
}