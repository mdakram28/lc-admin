{
    "username": "PAGADALA SAINADTH",
    "submission": "class Solution {\n    long long res = LLONG_MIN;\n    void solve(int i, long long s, int prev, int k, vector<int>& rv, vector<int>& cv, vector<pair<int, pair<int, int>>>& v){\n        if(k == 0){\n            res = max(res, s);\n            return;\n        }\n        if(i < 0) return;\n        if(s + k * prev < res && k != 3){\n            // cout << res << \" \" << s << \" \" << prev << endl;\n            return;\n        }\n        if(rv[v[i].second.first] == 0 && cv[v[i].second.second] == 0){\n            rv[v[i].second.first] = 1;\n            cv[v[i].second.second] = 1;\n            solve(i - 1, s + v[i].first, v[i].first, k - 1, rv, cv, v);\n            rv[v[i].second.first] = 0;\n            cv[v[i].second.second] = 0;\n        }\n        solve(i - 1, s, prev, k, rv, cv, v);\n    }\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int k = 3;\n        vector<pair<int, pair<int, int>>> v;\n        int m = board.size();\n        int n = board[0].size();\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < n; j++){\n                v.push_back({board[i][j], {i, j}});\n            }\n        }\n        sort(v.begin(), v.end());\n        // for(auto i : v){\n        //     cout << \"{\" << i.first << \"{ \" << i.second.first << \", \" << i.second.second << \" }\" << \"} \";\n        // }\n        // cout << endl;\n        /*\n            [[-3,1,1,1],[-3,1,-3,1],[-3,2,1,1]]\n            [[1,2,3],[4,5,6],[7,8,9]]\n            [[1,1,1],[1,1,1],[1,1,1]]\n            [[-6,63,97],[43,-46,-19],[51,-7,52]]\n        */\n        vector<int> rv(m, 0);\n        vector<int> cv(n, 0);\n        solve(v.size() - 1, 0, 0, k, rv, cv, v);\n        return res;\n    }\n};",
    "submit_ts": "1723908857",
    "subm_id": "1359169951"
}