{
    "username": "mohdikram",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int h_index = 0, v_index = 0;\n        long long h_pieces = 1, v_pieces = 1;\n        long long totalCost = 0;\n        \n        while (h_index < horizontalCut.size() && v_index < verticalCut.size()) {\n            if (horizontalCut[h_index] >= verticalCut[v_index]) {\n                totalCost += static_cast<long long>(horizontalCut[h_index]) * v_pieces;\n                h_pieces++;\n                h_index++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[v_index]) * h_pieces;\n                v_pieces++;\n                v_index++;\n            }\n        }\n        \n        while (h_index < horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[h_index]) * v_pieces;\n            h_pieces++;\n            h_index++;\n        }\n        \n        while (v_index < verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[v_index]) * h_pieces;\n            v_pieces++;\n            v_index++;\n        }\n        \n        return totalCost;\n    }\n\n};",
    "submit_ts": "1720925805",
    "subm_id": "1320266751"
}