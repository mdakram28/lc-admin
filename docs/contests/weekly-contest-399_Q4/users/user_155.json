{
    "username": "jszqlew",
    "submission": "typedef long long ll;\nconst int mod = 1e9+7;\n\nconst ll mxn = 1e5+1;\nll N;\narray<ll, 4> st[mxn * 4];\nvoid print(array<ll, 4> p) {\n    for (int i=0; i<4; ++i) cout << p[i] << \" \\n\"[i==3];\n}\narray<ll, 4> query(ll lo, ll hi, ll l = 0, ll r = N, ll id = 1)\n{\n  if (r <= lo || hi <= l) {\n    return {0, 0, 0, 0};\n  }\n  if (lo <= l && r <= hi) {\n    // cout << \"here \" << l << ' ' << r << endl;\n    // print(st[id]);\n    return st[id];\n  }\n  ll lid = id << 1, rid = id << 1 | 1, mid = (l + r) >> 1;\n  array<ll, 4> left = query(lo, hi, l, mid, lid);\n  array<ll, 4> right = query(lo, hi, mid, r, rid);\n  array<ll, 4> ans = {\n    max(left[0] + right[2], left[1] + right[0]),\n    max(left[0] + right[3], left[1] + right[1]),\n    max(left[2] + right[2], left[3] + right[0]),\n    max(left[2] + right[3], left[3] + right[1])\n  };\n    // cout << \"querying\" << endl;\n    // print(left);\n    // print(right);\n    // print(ans);\n  return ans;\n}\n\nvoid update(ll x, ll val, ll l = 0, ll r = N, ll id = 1)\n{\n  if (r <= x || x < l)\n    return;\n  if (l == x && r == x + 1)\n  {\n      // cout << l << ' ' << r << ' ' << x << ' ' << val << ' ' << \"setting\" << endl;\n    st[id] = array<ll, 4>{0, 0, 0, max(0ll, val)};\n    return;\n  }\n  ll lid = id << 1, rid = id << 1 | 1, mid = (l + r) >> 1;\n  update(x, val, l, mid, lid);\n  update(x, val, mid, r, rid);\n  array<ll, 4>& left = st[lid];\n  array<ll, 4>& right = st[rid];\n  array<ll, 4> ans = {\n    max(left[0] + right[2], left[1] + right[0]),\n    max(left[0] + right[3], left[1] + right[1]),\n    max(left[2] + right[2], left[3] + right[0]),\n    max(left[2] + right[3], left[3] + right[1])\n  };\n  //   cout << id << endl;\n  //   cout << \"this\" << endl;\n  // print(left);\n  // print(right);\n  //   print(ans);\n  st[id] = ans;\n}\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        // cout << \"starting\" << endl;\n        N = nums.size();\n        // print( query(0, N));\n                for (int i=0; i<4*N; ++i) st[i][0] = st[i][1] = st[i][2] = st[i][3] = 0;\n\n        for (int i=0; i<nums.size(); ++i) update(i, nums[i]);\n        int tot = 0;\n        for (int i=0; i<queries.size(); ++i) {\n            ll x = queries[i][0], val = queries[i][1];\n            update(x, val);\n            auto temp = query(0, N);\n            tot = (tot + (*max_element(temp.begin(), temp.end()))) % mod;\n        }\n        return tot;\n        \n    }\n};",
    "submit_ts": 1716693357.0
}