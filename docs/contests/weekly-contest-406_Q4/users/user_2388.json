{
    "username": "MrGliff",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut,\n                          vector<int>& verticalCut) {\n        priority_queue<int> hCuts, vCuts;\n\n        for (int hc : horizontalCut) {\n            hCuts.push(hc);\n        }\n        for (int vc : verticalCut) {\n            vCuts.push(vc);\n        }\n\n        long long cost = 0;\n        int horizontal = 1, vertical = 1;\n\n        while (!hCuts.empty() && !vCuts.empty()) {\n            if (hCuts.top() > vCuts.top()) {\n                cost += hCuts.top() * vertical;\n                hCuts.pop();\n                horizontal++;\n            } else {\n                cost += vCuts.top() * horizontal;\n                vCuts.pop();\n                vertical++;\n            }\n        }\n\n        while (!hCuts.empty()) {\n            cost += hCuts.top() * vertical;\n            hCuts.pop();\n            horizontal++;\n        }\n\n        while (!vCuts.empty()) {\n            cost += vCuts.top() * horizontal;\n            vCuts.pop();\n            vertical++;\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720926490",
    "subm_id": "1320287811"
}