{
    "username": "sanidhyakr18",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans(queries.size());\n        \n        // vector<vector<int>> v(n, vector<int>());\n        \n        set<int> s;\n        \n        for(int i = 0; i < n; i++) {\n            // v[i].push_back(i+1);\n            s.insert(i);\n        }\n        \n        for(int i = 0; i < queries.size(); i++) {\n            int x = queries[i][0];\n            int y = queries[i][1];\n            auto start = s.find(x);\n            auto end = s.find(y);\n            if(start != s.end() && end != s.end()) {\n                start++;\n                s.erase(start, end);\n                // cout << *start <<\" \" << *end << endl;\n                // int idx = *start;\n                // cout << idx << \" \";\n                // while(*next(s.begin(), idx + 1) != y) {\n                // cout << *next(s.begin(), idx + 1) << \" \";\n                //     s.erase(idx);\n                // }\n                // cout << endl;\n                // for(auto a : s) {\n                //     cout << a << \" \";\n                // }\n            }\n            // cout << endl;\n            ans[i] = s.size() - 1;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722743805",
    "subm_id": "1343800049"
}