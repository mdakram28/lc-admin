{
    "username": "teoyuqi",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        ops = 0\n        i = 0\n        while i < len(nums):\n            if nums[i] == target[i]:\n                i += 1\n                continue\n            if nums[i] < target[i]:\n                amountToIncrease = target[i] - nums[i]\n                j = i + 1\n                while j < len(nums) and nums[j] < target[j]:\n                    amountToIncrease = min(amountToIncrease, target[j] - nums[j])\n                    j += 1\n                for k in range(i, j):\n                    nums[k] += amountToIncrease\n                ops += amountToIncrease\n                    \n            if nums[i] > target[i]:\n                amountToDecrease = nums[i] - target[i]\n                j = i + 1\n                while j < len(nums) and nums[j] > target[j]:\n                    amountToDecrease = min(amountToDecrease, nums[j] - target[j])\n                    j += 1\n                for k in range(i, j):\n                    nums[k] -= amountToDecrease\n                ops += amountToDecrease\n        return ops\n                ",
    "submit_ts": "1721532377",
    "subm_id": "1327984359"
}