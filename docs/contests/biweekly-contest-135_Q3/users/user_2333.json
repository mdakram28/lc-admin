{
    "username": "Androhuman",
    "submission": "class Solution {\nprivate:\n    bool isPossible(int x, int y, int k, int diff) {\n        if (abs(y-0) >= diff) return true;\n        if (abs(k-y) >= diff) return true;\n        return false;\n    }\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        unordered_map<int,int> freq;\n\n        int sizeOfN = nums.size();\n        int maxFreq = 0;\n        for (int i=0; i<sizeOfN/2; i++) {\n            int currDiff = abs(nums[i]-nums[sizeOfN-i-1]);\n            freq[currDiff]++;\n            if (freq[currDiff] > maxFreq) {\n                maxFreq = freq[currDiff];\n            }\n        } \n\n        priority_queue<pair<int,int>> maxFreqX;\n        for (auto &i: freq) {\n            maxFreqX.push({i.second, i.first});\n        }\n\n        int minCnt = INT_MAX;\n        int itr = 10;\n        while (itr--) {\n            int cnt = 0;\n            for (int i=0; i<sizeOfN/2; i++) {\n                int currDiff = abs(nums[i]-nums[sizeOfN-i-1]);\n                if (currDiff != maxFreqX.top().second) {\n                    if (isPossible(nums[i], nums[sizeOfN-i-1], k, maxFreqX.top().second)) cnt++;\n                    else if (isPossible(nums[sizeOfN-i-1], nums[i], k, maxFreqX.top().second)) cnt++;\n                    else cnt += 2;\n                } \n            }\n            minCnt = min(cnt, minCnt);\n            maxFreqX.pop();\n            if(maxFreqX.empty()) break;\n        }\n\n        return minCnt;\n    }\n};",
    "submit_ts": "1721489459",
    "subm_id": "1327453910"
}