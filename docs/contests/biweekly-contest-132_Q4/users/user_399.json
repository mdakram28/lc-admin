{
    "username": "Tutul_dhar",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        int a[n+5],dp[n+5][k+2][2];\n        memset(dp,-1,sizeof dp);\n        int in = 0;\n        for(int i = 0; i < n; ) {\n            int j = i;\n            while(j < n and nums[j] == nums[i]) {\n                a[j] = i-1;\n                j++;\n            }\n            i = j;\n        }\n        map<int,int> ma;\n        dp[0][0][0] = 0;\n        dp[0][0][1] = 1;\n        for(int i = 1; i < n; i++) {\n            int e = nums[i];\n            if(ma[e]) {\n                for(int j = 0; j <= k; j++) {\n                    if(dp[ma[e]][j][1] != -1) dp[i][j][1] = dp[ma[e]][j][1]+1;\n                }\n            } else if(e == nums[0]) {\n                dp[i][0][1] = dp[0][0][1]+1;\n            }\n            in = a[i];\n            dp[i][0][1] = max(dp[i][0][1],1);\n            if(in >= 0) {\n                for(int j = 1; j <= k; j++) {\n                    if(dp[in][j-1][0] != -1 or dp[in][j-1][1] != -1) dp[i][j][1] = max({dp[i][j][1],dp[in][j-1][1]+1,dp[in][j-1][0]+1});\n                    if(dp[in][j][0] != -1 or dp[in][j][1] != -1) dp[i][j][0]  = max(dp[in][j][0],dp[in][j][1]);\n                }\n            }\n            for(int j = 0; j <= k; j++) {\n                dp[i][j][0] = max({dp[i][j][0],dp[i-1][j][0],dp[i-1][j][1]});\n            }\n            ma[e] = i;\n        }\n        int ans = 1;\n        for(int j = 0; j < n; j++) {\n            for(int i = 0; i <= k; i++) ans = max({ans,dp[j][i][0],dp[j][i][1]});\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717861138.0
}