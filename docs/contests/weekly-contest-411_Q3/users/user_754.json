{
    "username": "bramar2",
    "submission": "#include <bits/stdc++.h>\n#pragma GCC optimize (\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx2,tune=native\")\nusing namespace std;\n#define all(x) x.begin(), x.end()\n\n\nusing ull = unsigned long long;\nusing ll = long long;\n\ninline int gcd(int a,int b) { if (b==0) return a; return gcd(b, a%b); }\ninline long long gcd(long long a,long long b) { if (b==0) return a; return gcd(b, a%b); }\ninline int lcm(int a,int b) { return a/gcd(a,b)*b; } \ninline long long lcm(long long a,long long b) { return a/gcd(a,b)*b; }\ninline long long nth_prime(long long a) { a++;if(a <= 6) return (vector<long long>{2,3,5,7,11,13,17})[a]; long double lg = log((long double) a); return (long long) floor(a * (lg + log(lg))); }\ninline long long mod_exp(long long base, long long exp, long long modd) { unsigned long long ans = 1; base %= modd; while(exp > 0) { if(exp%2==1) ans = (base*ans)%modd; exp /= 2; base = (base*base)%modd; } return ans; }\ninline string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }\ninline string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }\n\n\nbool fIO() {\n    ios::sync_with_stdio(false);\n    ios_base::sync_with_stdio(false);\n    ios::sync_with_stdio(false);\n    cout.tie(nullptr);\n    cin.tie(nullptr);\n    return true;\n}\nbool y4555123 = fIO();\nconst ll MOD = 1e9 + 7;\n\nclass ListNodeA {\n    int val;\n    ListNodeA* next;\n    ListNodeA() {}\n    ListNodeA(int x) : val(x) {}\n    ListNodeA(int x, ListNodeA* pNext) : val(x), next(pNext) {}\n};\nclass TreeNodeA {\n    int val;\n    TreeNodeA* left;\n    TreeNodeA* right;\n    TreeNodeA(int x) : val(x), left(nullptr), right(nullptr) {}\n    TreeNodeA(int x, TreeNodeA* left, TreeNodeA* right) : val(x), left(left), right(right) {}\n};\n// using ListNode = ListNodeA;\n// using TreeNode = TreeNodeA;\n\nclass Solution {\npublic:\n    bool divByK(string& s, int k) {\n        int r = 0;\n        for(char d : s) {\n            r = (10*r + (d - '0')) % k;\n        }\n\n        return r == 0;\n    }\n    string largestPalindrome(int n, int k) {\n        if(k == 1||k==3||k==9) return string(n, '9');\n        if(k == 2) {\n            if(n == 1) return \"8\";\n            return \"8\" + string(n-2, '9') + \"8\";\n        }\n        if(k == 4) {\n            if(n == 1) return \"8\";\n            else if(n == 2) return \"88\";\n            else if(n == 3) return \"888\";\n            return \"88\" + string(n-4, '9') + \"88\";\n        }\n        if(k == 5) {\n            if(n <= 2) return string(n, '5');\n            return \"5\" + string(n-2, '9') + \"5\";\n        }\n        if(k == 6) {\n            if(n == 1) return \"6\";\n            if(n == 2) return \"66\";\n            if(n == 3) return \"888\";\n            if(n == 4) return \"8778\";\n            if(n % 2 == 0) {\n                return \"8\" + string((n-4)/2, '9') + \"77\" + string((n-4)/2, '9') + \"8\";\n            }else {\n                return \"8\" + string((n-3)/2, '9') + \"8\" + string((n-3)/2, '9') + \"8\";\n            }\n        }\n        if(k == 7) {\n            if(n <= 2) return string(n, '7');\n            else if(n == 3) return \"959\";\n            else if(n == 4) return \"9779\";\n            if(n % 6 == 0) return string(n, '9');\n            string res = string(n, '9');\n            char c = '8';\n            while(!divByK(res, 7) && c >= '0') {\n                if(n % 2 == 0) {\n                    res[n/2] = res[(n/2)-1] = c;\n                }else {\n                    res[n/2] = c;\n                }\n\n                c--;\n            }\n            return res;\n        }\n        if(k == 8) {\n            if(n <= 6) return string(n, '8');\n            return \"888\" + string(n-6, '9') + \"888\";\n        }\n        return \"?\";\n    }\n};\n\n\n\n// bool palindrome(string s) {\n//     int L = 0, R = (int) s.size()-1;\n//     while(L<R) {\n//         if(s[L++] != s[R--]) {\n//             return false;\n//         }\n//     }\n//     return true;\n// }\n// int main() {\n//     for(ll k = 1; k <= 20; k++) {\n//         ll up = pow(10, k+1);\n//         ll highest=-1;\n//         for(ll i = up;; i--) {\n//             if(i % 8 == 0 && palindrome(to_string(i))) {\n//                 highest=i;\n//                 break;\n//             }\n//         }\n//         cout << \"highest: \" << highest << endl;\n//     }\n// }",
    "submit_ts": "1723951362",
    "subm_id": "1359769732"
}