{
    "username": "Zanger",
    "submission": "### make sure total number of 1's in grid divisible by 4\n\n''' Notes\n    Flip everything where the equiv in each of the 4\n    quadrants isn't equal\n\n    Ignore middle row if odd rows\n    Ignore middle col if odd cols\n\n    then go back and check them afterwards\n\n'''\n\n\nclass Solution: \n    def minFlips(self, grid: List[List[int]]) -> int:\n\n        totalCount = 0\n\n        for cOffset in range(len(grid[0]) // 2) :\n            for rOffset in range(len(grid) // 2) :\n                ones = grid[rOffset][cOffset] \\\n                        + grid[len(grid) - rOffset - 1][cOffset] \\\n                        + grid[len(grid) - rOffset - 1][len(grid[0]) - cOffset - 1] \\\n                        + grid[rOffset][len(grid[0]) - cOffset - 1]\n                totalCount += min(ones, 4 - ones)\n\n        # print(f'{totalCount = }')\n        # for r in grid :\n            # print(r)\n\n        # middle row\n        changeMidRow = 0\n        midRowOnes = 0\n        flippedR = 0\n        if len(grid) % 2 == 1 :\n            # print('mid row')\n            indx = len(grid) // 2\n            for i in range(len(grid[0]) // 2) :\n                if grid[indx][i] != grid[indx][len(grid[0]) - i - 1] :\n                    flippedR += 1\n                    changeMidRow += 1\n                else :\n                    midRowOnes += grid[indx][i] * 2\n\n\n        # middle column\n        changeMidCol = 0\n        midColOnes = 0\n        flippedC = 0\n        # # print(f'{len(grid[0]) = }')\n        if len(grid[0]) % 2 == 1 :\n            # print('mid col')\n            indx = len(grid[0]) // 2\n            for i in range(len(grid) // 2) :\n                # print(f'{i, indx = }')\n                if grid[i][indx] != grid[len(grid) - i - 1][indx] :\n                    changeMidCol += 1\n                    flippedC += 1\n                else :\n                    midColOnes += grid[i][indx] * 2\n\n        # print(f'{midColOnes = }')\n        # print(f'{midRowOnes = }')    \n        # print()\n        # print(f'{changeMidCol = }')\n        # print(f'{changeMidRow = }')\n\n        totalCount += changeMidCol + changeMidRow\n        # print(f'new {totalCount = }')\n        # # print(f'new {totalCount = }')\n        diff = ((midRowOnes + midColOnes) % 4)\n        totalMidOnes = midRowOnes + midColOnes\n        totalEitherOr = (flippedC + flippedR) * 2\n        \n        \n        if diff == 0 :\n            pass\n        elif diff == 2 :\n            if totalEitherOr > 0 :\n                pass\n            else :\n                totalCount += 2\n        else :\n            totalCount += min(diff, 4 - diff)\n        # if totalMidOnes == 0 :\n        #     pass\n        # elif totalMidOnes == 2 :\n        #     if totalEitherOr == 1 :\n        #         totalCount += 1\n        #     else :\n        #         totalCount += 2\n        \n        # if diff == 2 and (flippedC or flippedR) :\n        #     # print('adsf')\n        #     totalCount += 2\n        # else :\n        #     totalCount += min(diff, 4 - diff)\n        # # print(f'total count after balancing: {totalCount = }')\n\n\n        # middle middle \n        if len(grid[0]) % 2 == 1 and len(grid) % 2 == 1 :\n            # print(f'mid mid')\n            totalCount += grid[len(grid) // 2][len(grid[0]) // 2]\n\n        return totalCount\n        ",
    "submit_ts": "1722699000",
    "subm_id": "1343198432"
}