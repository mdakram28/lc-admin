{
    "username": "harshsingh0673",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        if (n < k) return 0;\n\n        vector<int> arrr(colors.begin(), colors.end());\n        arrr.insert(arrr.end(), colors.begin(), colors.begin() + k - 1);\n\n        int count = 0;\n        int altCount = 0;\n\n        for (int i = 1; i < k; ++i) {\n            if (arrr[i] != arrr[i - 1]) {\n                ++altCount;\n            }\n        }\n        if (altCount == k - 1) {\n            ++count;\n        }\n        for (int i = 1; i < n; ++i) {\n            if (arrr[i - 1] != arrr[i]) {\n                --altCount;\n            }\n            if (arrr[i + k - 1] != arrr[i + k - 2]) {\n                ++altCount;\n            }\n            if (altCount == k - 1) {\n                ++count;\n            }\n        }\n        return count;\n    }\n};\n",
    "submit_ts": "1720278872",
    "subm_id": "1311727867"
}