{
    "username": "ashu_2211",
    "submission": "class Solution {\npublic:\n    int mod =1e9 + 7 ; \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int m = requirements.size(); \n        vector<int> v ( n , -1 ) ;  \n        int maxi = 0 ;\n        for(auto i : requirements ) maxi = max(maxi , i[1]);\n        for(auto i : requirements ) v[i[0]] = i[1];\n        \n        vector<vector<int>> dp ( n + 1 , vector<int> ( maxi + 1  , 0 )) ; \n        dp[0][0] = 1 ; \n        \n        for(int i =1;i<=n;i++){\n            for(int j = 0;j<=maxi;j++){\n                for(int x = 0;x < i ;x++){\n                    if(j < x ) continue;\n                    dp[i][j] = (dp[i][j] + dp[i-1][j -x]) % mod;\n                }\n            }\n            if(v[i-1] != -1){\n                for(int j =0;j<=maxi;j++){\n                    if(j != v[i-1]) dp[i][j] = 0 ; \n                }\n            }\n        }\n        int ans = dp[n][v[n-1]];\n        return ans; \n    }\n};",
    "submit_ts": 1719071311.0
}