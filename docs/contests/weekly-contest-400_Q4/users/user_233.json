{
    "username": "XKTZ",
    "submission": "typedef long long ll;\n\nconstexpr ll MAXN = 1e5 + 5;\n\nll N;\nll nums[MAXN];\nll nxt[MAXN][32];\n\nll firstdiff(ll loc, ll x) {\n    ll mn = N + 1;\n    for (ll i = 0; i < 30; i ++) {\n        if (((x >> i) & 1)) {\n            mn = min(mn, nxt[loc][i]);\n        }\n    }\n    return mn;\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& _nums, int k) {\n        N = _nums.size();\n        for (ll i = 1;i <= N; i ++) {\n            nums[i] = _nums[i-1];\n        }\n\n        fill(nxt[N + 1], nxt[N+1] + 32, N + 1);\n        for (ll i = N; i >= 1; i --) {\n            memcpy(nxt[i], nxt[i + 1], sizeof(nxt[i]));\n            for (ll j = 0; j < 30; j ++) {\n                if (~(nums[i] >> j) & 1) {\n                    nxt[i][j] = i;\n                }\n            }\n        }\n\n        ll ans = 0x3f3f3f3f3f3f3f3f;\n        for (ll i = 1; i <= N; i ++) {\n            ans = min(ans, abs(nums[i] - k));\n            ll now = nums[i], loc = i;\n            for (loc = firstdiff(i, now), now &= nums[loc]; loc <= N; loc = firstdiff(i, now), now &= nums[loc]) {\n                ans = min(ans, abs(k - now));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297328.0
}