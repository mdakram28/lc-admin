{
    "username": "Knarf",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int n = board.length;\n        int m = board[0].length;\n        int[][] pos = new int[n*m][3];\n        int index = 0;\n        for(int i=0;i<n;i++) {\n            for(int j=0;j<m;j++) {\n                pos[index][0] = i;\n                pos[index][1] = j;\n                pos[index][2] = board[i][j];\n                index++;\n            }\n        }\n        Arrays.sort(pos,(o1,o2)->Integer.compare(o2[2],o1[2]));\n        int p = 2*(n+m-2)+1;\n        if(p>=pos.length) p= pos.length-1;\n        p--;\n        while(p>0 && pos[p+1][2] == pos[p][2]) p--;\n        long max = (long)pos[0][2]+2*pos[p+1][2];\n        // System.out.println(String.format(\"%d %d\",p,max));\n        // System.out.println(Arrays.deepToString(pos));\n        if(p == 0) return max;\n        for(int i=0;i<=p;i++) {\n            for(int j=i+1;j<=p;j++) {\n                if(pos[i][1] == pos[j][1] || pos[i][0] == pos[j][0]) continue;\n                max = Math.max(max,(long)pos[i][2]+pos[j][2]+pos[p+1][2]);\n                for(int k=j+1;k<=p;k++) {\n                    if(pos[k][1] != pos[i][1] && pos[k][1] != pos[j][1] && pos[k][0] != pos[i][0] && pos[k][0] != pos[j][0]) {\n                        max = Math.max(max,(long)pos[i][2]+pos[j][2]+pos[k][2]);\n                        // System.out.println(String.format(\"%d %s %s %s\",max,Arrays.toString(pos[i]),Arrays.toString(pos[j]),Arrays.toString(pos[k])));\n                        break;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n}",
    "submit_ts": "1723907191",
    "subm_id": "556324081"
}