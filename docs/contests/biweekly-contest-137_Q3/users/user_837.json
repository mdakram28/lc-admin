{
    "username": "\u4f3d\u5229\u7565",
    "submission": "using LL = long long;\nconstexpr int NN = 505, K = 10;\nint dp[NN][NN][K][K];\nint bits[NN]={0};\ninline int max_v(int i, int j, int h, int w){\n    int k = bits[h], l = bits[w];\n    return max(max(dp[i][j][k][l], dp[i+h-(1<<k)][j][k][l]), max(dp[i][j+w-(1<<l)][k][l], dp[i+h-(1<<k)][j+w-(1<<l)][k][l]));\n}\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        LL ans = -1e18;\n        for(int i=1, p=0; i<NN; ++i){\n            while((1<<(p+1))<i) ++p;\n            bits[i] = p;\n            // printf(\"bits[%d] = %d\\n\", i, p);\n        }\n        for(int i=0; i<n; ++i){\n            for(int j=0; j<m; ++j){\n                dp[i][j][0][0] = board[i][j];\n            }\n        }\n        for(int k=0; k<=bits[n]; ++k){\n            int di = 1<<k;\n            for(int l=0; l<=bits[m]; ++l){\n                int dj = 1<<l;\n                if(k==0 and l==0){\n                    continue;\n                }\n                for(int i=0; i+di<=n; ++i){\n                    for(int j=0; j+dj<=m; ++j){\n                        if(k>0 and l>0){\n                            dp[i][j][k][l] = max_v(i,j,di,dj);\n                        } else if(k==0){\n                            dp[i][j][k][l] = max(dp[i][j][k][l-1], dp[i][j+dj/2][k][l-1]);\n                        } else if(l==0){\n                            dp[i][j][k][l] = max(dp[i][j][k-1][l], dp[i+di/2][j][k-1][l]);\n                        }\n                        // printf(\"dp[%d][%d][%d][%d] = %d\\n\", i, j, k, l, dp[i][j][k][l]);\n                        // dp[i][j][k+1][l+1] = max(max(dp[i][j][k][l], dp[i+(1<<k)][j][k][l]), max(dp[i][j+(1<<l)][k][l], dp[i+(1<<k)][j+(1<<l)][k][l]));\n                    }\n                }\n            }\n        }\n        for(int i=1; i<n-1; ++i){\n            for(int j1=0; j1<m; ++j1){\n                for(int j2=j1+1; j2<m; ++j2){\n                    int v3 = -1e9;\n                    if(j1>0){\n                        int mv = max_v(i+1, 0, n-i-1, j1);\n                        v3 = max(v3, mv);\n                        // printf(\"i=%d, j1=%d, j2=%d, mv1=%d\\n\", i, j1, j2, mv);\n                    }\n                    if(j2-j1>1){\n                        int mv = max_v(i+1, j1+1, n-i-1, j2-j1-1);\n                        v3 = max(v3, mv);\n                        // printf(\"i=%d, j1=%d, j2=%d, mv2=%d\\n\", i, j1, j2, mv);\n                    }\n                    if(j2<m-1){\n                        int mv = max_v(i+1, j2+1, n-i-1, m-j2-1);\n                        v3 = max(v3, mv);\n                        // printf(\"i=%d, j1=%d, j2=%d, mv3=%d\\n\", i, j1, j2, mv);\n                    }\n                    int v1, v2;\n                    v1 = board[i][j1], v2 = max_v(0, j2, i, 1);\n                    ans = max(ans, 0ll+v1+v2+v3);\n                    // printf(\"i=%d, j1=%d, j2=%d, v1=%d, v2=%d, v3=%d, sum=%lld\\n\", i, j1, j2, v1, v2, v3, 0ll+v1+v2+v3);\n                    v1 = board[i][j2], v2 = max_v(0, j1, i, 1);\n                    ans = max(ans, 0ll+v1+v2+v3);\n                    // printf(\"i=%d, j1=%d, j2=%d, v1=%d, v2=%d, v3=%d, sum=%lld\\n\", i, j1, j2, v1, v2, v3, 0ll+v1+v2+v3);\n                }\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1723908531",
    "subm_id": "556331410"
}