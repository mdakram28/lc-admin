{
    "username": "German Andosov",
    "submission": "class Solution {\n    fun largestPalindrome(n: Int, k: Int): String {\n        if (k == 1 || k == 3 || k == 9) {\n            return \"9\".repeat(n)\n        }\n\n        if (k == 5) {\n            return if (n == 1) {\n                \"5\"\n            } else {\n                \"5\" + \"9\".repeat(n - 2) + \"5\"\n            }\n        }\n\n        if (k == 2) {\n            return if (n == 1) {\n                \"8\"\n            } else {\n                \"8\" + \"9\".repeat(n - 2) + \"8\"\n            }\n        }\n\n        if (k == 4) {\n            return if (n <= 4) {\n                \"8\".repeat(n)\n            } else {\n                \"88\" + \"9\".repeat(n - 4) + \"88\"\n            }\n        }\n\n        if (k == 6) {\n            if (n == 1) {\n                return \"6\"\n            } else if (n == 2) {\n                return \"66\"\n            } else {\n                // fall-through\n            }\n        }\n\n        if (k == 8) {\n            return if (n <= 6) {\n                \"8\".repeat(n)\n            } else {\n                \"888\" + \"9\".repeat(n - 6) + \"888\"\n            }\n        }\n\n        // k == 7 || k == 6,      n >= 3\n\n        var cur = if (k == 7) {\n            BigInteger(\"9\".repeat(n))\n        } else {\n            BigInteger(\"8\" + \"9\".repeat(n - 2) + \"8\")\n        }\n\n        var mod = cur.mod(k.toBigInteger()).toInt()\n        val sub = if (n % 2 == 0) {\n            10.toBigInteger().pow(n / 2) + 10.toBigInteger().pow(n / 2 - 1)\n        } else {\n            10.toBigInteger().pow(n / 2)\n        }\n\n        while (mod != 0) {\n            cur -= sub\n            mod = cur.mod(k.toBigInteger()).toInt()\n        }\n        return cur.toString()\n    }\n}",
    "submit_ts": "1723951301",
    "subm_id": "1359768232"
}