{
    "username": "n00bl3t",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> v(nums.size());\n        long long ans = 0;\n        for (int i = 0; i < nums.size(); i++)\n            v[i] = target[i] - nums[i];\n        \n        // for (int i: v) cout << i << \" \";\n        // cout << endl;\n        \n        for (int i = 0; i < nums.size(); i++) {\n            vector<int> cur;\n            int mn = abs(v[i]);\n            ans += mn;\n            while (i + 1 < v.size() && v[i] * 1ll * v[i + 1] > 0)\n                cur.push_back(abs(v[++i]));\n            for (int j: cur)\n                if (j >= mn)\n                    ans += j - mn, mn = j;\n                else mn = j;\n            // cout << i << \" \" << ans << endl;\n            // ans += cur;\n            while (i + 1 < v.size() && v[i + 1] == 0)\n                i++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721530790",
    "subm_id": "1327943935"
}