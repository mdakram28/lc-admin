{
    "username": "KJer",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0, row = grid.size(), col = grid[0].size();\n        int pair[3] = {0};\n        for(int i = 0; i < row - i; i++)\n        {\n            for(int j = 0; j < col - j; j++)\n            {\n                if(i != row - 1 - i && j != col - 1 - j)\n                {\n                    int sum = grid[i][j] + grid[i][col - 1 - j] + grid[row - 1 - i][j] + grid[row - 1 - i][col - 1 - j];\n                    ans += min(sum, 4 - sum);\n                }else{\n                    if(i == row - 1 - i && j == col - 1 - j)\n                    {\n                        if(grid[i][j] == 1) ans++;\n                    }else{\n                        if(i == row - 1 - i)\n                        {\n                            pair[grid[i][j] + grid[i][col - 1 - j]]++;\n                        }else{\n                            pair[grid[i][j] + grid[row - i - 1][j]]++;\n                        }\n                    }\n                }\n            }\n        }\n        ans += pair[2] % 2 != 0 && pair[1] == 0 ? 2 : pair[1];\n        return ans;\n    }\n};",
    "submit_ts": "1722698281",
    "subm_id": "1343175560"
}