{
    "username": "envyaims",
    "submission": "class Solution {\npublic:\n\n    template<typename it, typename bin_op>\n    struct sparse_table {\n\n        using T = typename iterator_traits<it>::value_type;\n        vector<vector<T>> t; bin_op f;\n\n        void assign(it first, it last) {\n            int n = distance(first, last);\n            t.assign(32-__builtin_clz(n), vector<T>(n));\n            t[0].assign(first, last);\n            for (int i = 1; i < t.size(); i++)\n                for (int j = 0; j < n-(1<<i)+1; j++)\n                    t[i][j] = f(t[i-1][j], t[i-1][j+(1<<(i-1))]);\n        }\n\n        sparse_table(bin_op op) : f(op) {}\n        sparse_table(it first, it last, bin_op op) : f(op) {\n            assign(first, last);\n        }\n\n        // returns f(a[l..r]) in O(1) time\n        T operator()(int l, int r) {\n            int h = floor(log2(r-l+1));\n            return f(t[h][l], t[h][r-(1<<h)+1]);\n        }\n    };\n\n    int minimumDifference(vector<int>& a, int k) {\n        int n = a.size();\n        int ans = 1e9 + 5;\n        sparse_table st(a.begin(), a.end(), [&](auto x, auto y){\n           return x & y; \n        });\n        for(int i = 0; i < n; i++){\n            int l = i, r = n;\n            while(l < r - 1){\n                int mid = (l + r) / 2;\n                if(st(i, mid) > k){\n                    l = mid;\n                }\n                else{\n                    r = mid;\n                }\n            }\n            ans = min(ans, abs(k - st(i, l)));\n            if(r != n) ans = min(ans, abs(k - st(i, r)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717296028",
    "subm_id": "1274687343"
}