{
    "username": "one_percent_better",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define iset indexed_set\n#define ll long long\n#define mod 1000000007\n#define ff first\n#define ss second\n#define mk make_pair\n#define pb push_back\n#define rep(i, start, end) for (int i = start; i < end; i++)\n#define ld long double\n#define fast ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\nusing ii = pair<int, int>;\nconst static int mx = 2e5 + 100;\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=(int)nums.size();\n        int pre[25][n + 1];\n    int lg[n + 1];\n    lg[1] = 0;\n    for (int i = 2; i <= n; i++)\n    {\n        lg[i] = lg[i / 2] + 1;\n    }\n    copy(nums.begin(), nums.end(), pre[0]);\n    for (int i = 1; i <= 25; i++)\n    {\n        for (int j = 0; j + (1 << i) <= n; j++)\n        {\n            pre[i][j] = (pre[i - 1][j]& pre[i - 1][j + (1 << (i - 1))]);\n        }\n    }\n        ll minc=1e9+10;\n        rep(i,0,n)\n        {\n            int hi=n-1,lo=i,ans=i,mid;\n            while(lo<=hi)\n            {\n                mid=(hi+lo)/2;\n                int r=mid,l=i;\n                int j = lg[r - l + 1];\n                int val = (pre[j][l]& pre[j][r - (1 << j) + 1]);\n                if(val>=k)\n                {\n                    ans=mid;\n                    lo=mid+1;\n                }\n                else\n                {\n                    hi=mid-1;\n                }\n            }\n                int r=ans,l=i;\n                int j = lg[r - l + 1];\n                int val = (pre[j][l]& pre[j][r - (1 << j) + 1]);\n            minc=min(minc,1LL*abs(k-val));\n            ans++;\n            if(ans<n)\n            {\n            val=0;\n            r=ans;\n             j = lg[r - l + 1];\n            val = (pre[j][l]& pre[j][r - (1 << j) + 1]);\n                 minc=min(minc,1LL*abs(k-val));\n            }\n        }\n        return minc;\n    }\n};",
    "submit_ts": 1717298106.0
}