{
    "username": "guaidaokakaxi",
    "submission": "class Solution {\n private int bs(int[][] prefix, int r_right, int k) {\n        int left = 0;\n        int right = r_right - 1;\n        int mid;\n        int index = 0;\n        int temp_k = k;\n        Set<Integer> s = new HashSet<>();\n        for (int i = 0 ; i < 31; i++) {\n            if ((k & (1 << i)) == 0) {\n                s.add(i);\n            }\n        }\n        while (left < right) {\n            mid = left + right + 1 >>> 1;\n            boolean flag = false;\n            for (int i = 0; i < 31; i++) {\n                int cnt = prefix[r_right][i] - prefix[mid][i];\n                int numbers = r_right - mid;\n                if (s.contains(i) && cnt == numbers) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (flag) {\n                right = mid - 1;\n            } else {\n                left = mid;\n            }\n        }\n        for (int i = 0; i < 31; i++) {\n            int cnt = prefix[r_right][i] - prefix[left][i];\n            int numbers = r_right - left;\n            if (s.contains(i) && cnt == numbers) {\n                return -1;\n            }\n        }\n        return left;\n    }\n\n    public long countSubarrays(int[] nums, int k) {\n        int[] kkk_cnt = new int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n            int current = nums[i] & k;\n            if (current == k) {\n                if (i != 0) {\n                    kkk_cnt[i] = kkk_cnt[i - 1] + 1;\n                } else {\n                    kkk_cnt[i] = 1;\n                }\n            } else {\n                kkk_cnt[i] = 0;\n            }\n        }\n        int[][] prefix = new int[nums.length + 1][31];\n        for (int i = 0; i < nums.length; i++) {\n            int index = 0;\n            int temp = nums[i];\n            for (int j = 0; j < 31; j++) {\n                prefix[i + 1][j] = prefix[i][j];\n            }\n            while (temp != 0) {\n                if ((temp & 0x01) == 1) {\n                    prefix[i + 1][index]++;\n                }\n                temp >>= 1;\n                index++;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < nums.length; i++) {\n            int last_k_iii = bs(prefix, i + 1, k);\n            if (last_k_iii == -1) {\n                continue;\n            }\n            int cnt = i - last_k_iii + 1;\n            if (kkk_cnt[i] < cnt) {\n                continue;\n            }\n            res += kkk_cnt[i] - (i - last_k_iii);\n        }\n        return res;\n    }\n\n}",
    "submit_ts": "1720281189",
    "subm_id": "544574828"
}