{
    "username": "\u5854\u5e0c\u6d1b\u5c9b\u4e3b",
    "submission": "def getOne(skipIdx1, skipIdx2, arr):\n    for idx, val in arr:\n        if idx == skipIdx1 or idx == skipIdx2:\n            continue\n        return val    \n    return None\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        R = len(board)\n        C = len(board[0])\n        colMax = []\n        for c in range(C):\n            colMax.append(max(board[0][c], board[1][c]))\n\n        dp = [-inf] * C\n        # dp[c] is sum of two max using all columns except c\n        for c in range(C):\n            for c0 in range(C):\n                for c1 in range(C):\n                    if c0 == c or c1 == c or c0 == c1:\n                        continue\n                    x = board[0][c0] + board[1][c1]\n                    dp[c] = max(dp[c], x)\n\n        # print(\"colMax=\", colMax, \" dp= \", dp)\n\n        ans = -inf            \n        for r in range(2, R):\n            for c in range(C):\n                curr = board[r][c]\n                otherTwo = dp[c]\n                ans = max(ans, curr + otherTwo)\n            sortedColMax = sorted(enumerate(colMax), key=lambda x: -x[1])\n            for c in range(C):                \n                for c1 in range(C):\n                    if c1 == c:\n                        continue\n                    val1 = board[r][c1]\n                    val0 = getOne(c, c1, sortedColMax)\n                    dp[c] = max(dp[c], val1 + val0)\n            \n            for c in range(C):\n                colMax[c] = max(colMax[c], board[r][c])\n            \n            # print(\"colMax=\", colMax, \" dp= \", dp)\n        return ans",
    "submit_ts": "1723909303",
    "subm_id": "556335530"
}