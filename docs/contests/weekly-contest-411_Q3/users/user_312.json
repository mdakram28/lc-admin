{
    "username": "Salyu",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        string res(n, '9');\n        if (k == 1) {\n            return res;\n        }\n        vector<int> bases(n);\n        bases[0] = 1;\n        for (int i = 1, b = 1; i < n; ++i) {\n            bases[i] = (b = b * 10 % k);\n        }\n        auto memo = vector(n / 2 + 2, vector<int>(k, -1));\n        if (n % 2) {\n            for (int d = 0; d <= 9; ++d) {\n                memo[n / 2][d * bases[n / 2] % k] = d;\n            }\n        }\n        else {\n            memo[n / 2][0] = 0;\n        }\n        for (int i = (n - 1) / 2; i >= 0; --i) {\n            for (int d = (i == 0 ? 1 : 0); d <= 9; ++d) {\n                int r = d * (bases[i] + bases[n - i - 1]) % k;\n                for (int r1 = 0; r1 < k; ++r1) {\n                    if (memo[i + 1][r1] >= 0) {\n                        memo[i][(r + r1) % k] = d;\n                    }\n                }\n            }\n        }\n        for (int i = 0, r = 0; i < (n + 1) / 2; ++i) {\n            assert(memo[i][r] >= 0);\n            res[i] = res[n - i - 1] = '0' + memo[i][r];\n            int r1 = memo[i][r] * (bases[i] + bases[n - i - 1]) % k;\n            r = (r - r1 + k) % k;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723951100",
    "subm_id": "1359763264"
}