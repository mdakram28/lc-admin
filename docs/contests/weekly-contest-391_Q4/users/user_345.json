{
    "username": "varunduhan02",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<int> sum, diff;\n        \n        for (int i=0; i<n; i++) {\n            int s = points[i][0] + points[i][1];\n            int d = points[i][0] - points[i][1];\n            \n            sum.insert(s);\n            diff.insert(d);\n        }\n        \n        auto it1 = sum.end(); it1--;\n        auto it2 = diff.end(); it2--;\n        \n        int ans = max(*it1 - *sum.begin(), *it2 - *diff.begin());\n        \n        for (int i=0; i<n; i++) {\n            int s = points[i][0] + points[i][1];\n            int d = points[i][0] - points[i][1];\n            \n            sum.erase(sum.find(s));\n            diff.erase(diff.find(d));\n            \n            it1 = sum.end(); it1--;\n            it2 = diff.end(); it2--;\n            \n            ans = min(ans, max(*it1 - *sum.begin(), *it2 - *diff.begin()));\n            \n            sum.insert(s);\n            diff.insert(d);\n        }\n        \n        return ans;\n    }\n};"
}