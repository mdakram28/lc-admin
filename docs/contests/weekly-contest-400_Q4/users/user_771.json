{
    "username": "zucrose",
    "submission": "class Solution {\npublic:\n long long seg2[(int)4e5+5];\n void build(int l, int r, int ind, vector<int>& nums) {\n        if (l == r) {\n            seg2[ind] = nums[l];\n            return;\n        }\n        int m = (l + r) / 2;\n        build(l, m, 2 * ind, nums);\n        build(m + 1, r, 2 * ind + 1, nums);\n        seg2[ind] = seg2[2 * ind] & seg2[2 * ind + 1];\n    }\n    int query(int l, int r, int ind, int x, int y) {\n        if (x > r || y < l)\n            return (1 << 30) - 1;\n        if (x <= l && r <= y)\n            return seg2[ind];\n        int m = (l + r) / 2;\n        int z = query(l, m, 2 * ind, x, y),\n            w = query(m + 1, r, 2 * ind + 1, x, y);\n        // cout<<l<<\" \"<<r<<\" \"<<\" \"<<z<<\" \"<<w<<\" \"<<(z&w)<<endl;\n        return z & w;\n    }\n    \n \n    int minimumDifference(vector<int>& nums, int k) {\n        build(0,nums.size()-1,1,nums);\n        int n=nums.size();\n        int l=0,r=0,curr=nums[0],prev=-1,ans=abs(nums[0]-k);\n\n        while(r<(nums.size()-1)||l<r){\n            if(r<(nums.size()-1)&&(curr>=k)){\n                \n                curr=curr&nums[r+1];\n               //cout<<curr<<\" \"<<l<<\" \"<<r+1<<endl;\n                r++;\n                ans=min(ans,abs(curr-k));\n            }\n            else if(l<r){\n                curr=query(0,n-1,1,l+1,r);\n                l++;\n                // cout<<curr<<\" . \"<<l<<\" \"<<r<<endl;\n                ans=min(ans,abs(curr-k));\n            }\n            else if(l==r&&r!=nums.size()-1)\n            {   r++;\n                l++;\n                curr=nums[r];\n                ans=min(ans,abs(curr-k));\n\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717299910",
    "subm_id": "1274827806"
}