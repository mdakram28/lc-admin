{
    "username": "txingml",
    "submission": "typedef long long LL;\nconst int BLOCK = 224;\nconst int mod = 1e9 + 7;\nLL dp[BLOCK][2][2];\n\nvoid update(const vector<int>& nums, int block_index) {\n    int a = block_index * BLOCK;\n    int n = nums.size();\n    int b = min(a + BLOCK, n);\n    if (a+1 == b) {\n        dp[block_index][0][0] = 0;\n        dp[block_index][1][1] = nums[a];\n        dp[block_index][0][1] = -1e18;\n        dp[block_index][1][0] = -1e18;\n        return;\n    }\n    LL x = 0;\n    LL y = nums[a+1];\n    for (int i = a+2; i < b; i++) {\n        LL xx = max(x, y);\n        LL yy = x + nums[i];\n        x = xx;\n        y = yy;\n    }\n    dp[block_index][0][0] = x;\n    dp[block_index][0][1] = y;\n    \n    x = nums[a];\n    y = nums[a];\n    for (int i = a+2; i < b; i++) {\n        LL xx = max(x, y);\n        LL yy = x + nums[i];\n        x = xx;\n        y = yy;\n    }\n    dp[block_index][1][0] = x;\n    dp[block_index][1][1] = y;\n}\n\nLL query(int block) {\n    LL x = max(dp[0][1][0], dp[0][0][0]);\n    LL y = max(dp[0][1][1], dp[0][0][1]);\n    for (int i = 1; i < block; i++) {\n        LL xx = max(max(x, y) + dp[i][0][0], x + dp[i][1][0]);\n        LL yy = max(max(x, y) + dp[i][0][1], x + dp[i][1][1]);\n        x = xx;\n        y = yy;\n    }\n    return max(x, y);\n    \n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        int block = (n + BLOCK - 1) / BLOCK;\n        for (int i = 0; i < block; i++) {\n            update(nums, i);\n        }\n        LL ret = 0;\n        for (const auto& q : queries) {\n            int i = q[0];\n            int val = q[1];\n            nums[i] = val;\n            update(nums, i/BLOCK);\n            LL tmp = query(block);\n            if (tmp < 0) tmp = 0;\n            ret = (ret + query(block)) % mod;\n        }\n        return ret;\n        \n        \n    }\n};",
    "submit_ts": "1716694464",
    "subm_id": "1268116396"
}