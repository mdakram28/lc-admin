{
    "username": "celestial11",
    "submission": "// celestial11\nclass Solution\n{\npublic:\n    const int M = 1000000007;\n    const int totalInversions = 400;\n    int numberOfPermutations(int n, vector<vector<int>> &reqs)\n    {\n\n        unordered_map<int, int> reqMap;\n        for (auto &requirement : reqs)\n        {\n            reqMap[requirement[0] + 1] = requirement[1];\n        }\n\n        // dp states: dp[i][j] = number of permutations upto ith index with j inversions\n        vector<vector<long long>> permuts(n + 1, vector<long long>(totalInversions + 1, 0));\n        permuts[0][0] = 1;\n\n        for (int i = 1; i <= n; i++)\n        {\n            for (int inversions = 0; inversions <= totalInversions; inversions++)\n            {\n                for (int pos = 0; pos < i; ++pos)\n                {\n                    int check = inversions - pos;\n                    if (check >= 0)\n                    {\n                        //dp states\n                        permuts[i][inversions] = (permuts[i][inversions] + permuts[i - 1][check]) % M;\n                        \n                    }\n                }\n            }\n            // for (auto pr: reqMap) {\n            //     cout<<pr.first<<\" \"<<pr.second<<endl;\n            // }\n            if (reqMap.find(i) != reqMap.end())\n            {\n                int req = reqMap[i];\n                int inversions = 0;\n                while (inversions <= totalInversions)\n                {\n\n                    if (inversions != req)\n                    {\n                        permuts[i][inversions] = 0;\n                    }\n                    inversions++;\n                }\n            }\n        }\n        \n        // for (auto v: permuts) {\n        //     for (auto elem: v) {\n        //         cout<<elem<<\" \";\n        //     }\n        //     cout<<endl;\n        // }\n\n        long long res = 0;\n        for (long long count : permuts[n])\n        {\n            res = (res + count) % M;\n        }\n\n        return res;\n    }\n};\n",
    "submit_ts": "1719071227",
    "subm_id": "1296841955"
}