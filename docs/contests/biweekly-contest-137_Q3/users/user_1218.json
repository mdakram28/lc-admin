{
    "username": "dhruvg04",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n#include <functional>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long ans = LLONG_MIN;\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        vector<bool> row(n, false);\n        vector<bool> col(m, false);\n        vector<vector<int>> mat(n);\n\n        for(int i = 0; i < n; i++) {\n            vector<pair<int, int>> temp(m);\n            for(int j = 0; j < m; j++) {\n                temp[j] = {board[i][j], j};\n            }\n            sort(temp.begin(), temp.end(), greater<>());\n            for(int t = 0; t < min(3, m); t++) {\n                mat[i].push_back(temp[t].second);\n            }\n        }\n\n        function<void(int, long long, int, int)> rec = [&](int cnt, long long point, int r, int c) {\n            if (cnt == 0) {\n                ans = max(ans, point);\n                return;\n            }\n\n            for (int i = r + 1; i < n; i++) {\n                for (int j : mat[i]) {\n                    if (!row[i] && !col[j]) {\n                        row[i] = true;\n                        col[j] = true;\n                        rec(cnt - 1, point + board[i][j], i, j);\n                        row[i] = false;\n                        col[j] = false;\n                    }\n                }\n            }\n        };\n\n        rec(3, 0, -1, -1);\n        return ans;\n    }\n};\n",
    "submit_ts": "1723909981",
    "subm_id": "1359212871"
}