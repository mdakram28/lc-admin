{
    "username": "tejes333",
    "submission": "class Solution {\npublic:\n    int mystk(vector<int>& n, int stk) {\n    int s = n.size(); \n    vector<vector<int>> dpp(s, vector<int>(stk + 1, 1)); \n    int a = 1; \n    vector<int> v(stk + 1, -1); \n    vector<unordered_map<int, int>> mpe(stk + 1); \n    int i = 0; \n    while (i < s) { \n        int j = 0; \n        while (j <= stk) { \n            int l = 0; \n            while (l < j) { \n                dpp[i][j] = max(dpp[i][j], 1 + v[l]); \n                l++;\n            } \n            if (mpe[j].find(n[i]) != mpe[j].end()) { \n                dpp[i][j] = max(dpp[i][j], 1 + mpe[j][n[i]]); \n            } \n            a = max(a, dpp[i][j]); \n            j++;\n        } \n        j = 0; \n        while (j <= stk) { \n            v[j] = max(v[j], dpp[i][j]); \n            mpe[j][n[i]] = max(mpe[j][n[i]], dpp[i][j]); \n            j++;\n        } \n        i++;\n    } \n    return a; \n}\n  int maximumLength(vector<int>& vectornum, int aathu) {\n    int pspk=mystk( vectornum,aathu);\n      return pspk;\n}\n\n\n};",
    "submit_ts": 1717861804.0
}