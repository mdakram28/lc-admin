{
    "username": "zhunter",
    "submission": "/**\n1. 3\u4e2a\u4e0d\u7b49\u7684i \u548c 3\u4e2a\u4e0d\u7b49\u7684j\n2. \u5b58\u5728\u4e00\u4e2a\u6700\u5927\u7684\u5173\u7cfb\n3. \u5c06\u6210\u591a\u884c\n4. \u5230\u5f53\u524d\u884c \u5217\u4e3ai,j \u7684\u6700\u5927\u503c\n5. \u4e4b\u524di\uff0c\u5f53\u524dj\uff0c\u4e4b\u524dj, \u5f53\u524di\n6. 10^6\n7. \u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\n\u6570\u7ec4\uff0ci, j -> MAP\n\u9664\u4e86i,j \u7684\u6700\u5927\u503c\uff0c\u961f\u5217\n\n*/\nclass Solution {\n    public long maximumValueSum(int[][] board) {\n        int n = board.length, m = board[0].length;\n        Map<Integer, Long> maxValue = new HashMap<>();\n        int[] max = new int[m];\n        Arrays.fill(max, Integer.MIN_VALUE);\n        \n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < m; j++){\n                if(i==j) continue;\n                int key = i<j? i*100+j: j*100+i;\n                maxValue.put(key, Math.max(maxValue.getOrDefault(key,Long.MIN_VALUE), 0l+board[0][i]+board[1][j]));\n            }\n        }\n        for(int i = 0; i < m; i++){\n            max[i] = Math.max(max[i], board[0][i]);\n            max[i] = Math.max(max[i], board[1][i]);\n        }\n        long ans = Long.MIN_VALUE;\n        for(int i = 2; i < n; i++){\n            PriorityQueue<int[]> queue = new PriorityQueue<>((a, b)-> -a[0]+b[0]);\n            for(int j = 0; j < m; j++){\n                queue.add(new int[]{board[i][j], j});\n            }\n            Queue<int[]> cache = new LinkedList<>();\n            for(int key: maxValue.keySet()){\n                int a = key/100, b = key%100;\n                long val = maxValue.get(key);\n                while(!queue.isEmpty() && (queue.peek()[1]==a || queue.peek()[1]==b)){\n                    cache.add(queue.poll());\n                }\n                ans = Math.max(ans, val+queue.peek()[0]);\n                while(cache.size()>0){\n                    queue.add(cache.poll());\n                }\n            }\n            for(int ii = 0; ii < m; ii++){\n                for(int jj = 0; jj < m; jj++){\n                    if(ii==jj) continue;\n                    int key = ii<jj? ii*100+jj: jj*100+ii;\n                    maxValue.put(key, Math.max(maxValue.getOrDefault(key,Long.MIN_VALUE), 0l+board[i][ii]+max[jj]));\n                }\n            }\n            for(int ii = 0; ii < m; ii++){\n                max[ii] = Math.max(max[ii], board[i][ii]);\n            }\n        }\n        return ans;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "submit_ts": "1723907208",
    "subm_id": "556324172"
}