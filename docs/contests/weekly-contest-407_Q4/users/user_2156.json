{
    "username": "XyT293Ea2b",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long count = 0;\n        int n  = nums.size();\n        for(int i=0; i<n; i++) nums[i] = target[i]-nums[i];\n\n        int c=0;\n\n        for(int i=0; i<n; ) {\n            if(nums[i]==0) {\n                i++; \n                continue;\n            }\n            // c++;\n            // if(c > 10) break;\n            // cout << i << \" \" << nums[i] << \"\\n\";\n\n            // handle positive case\n            if(nums[i]>0) {\n                int mini = nums[i];\n                int k = i;\n                while(k<n && nums[k]>0) {\n                    if(nums[k] == 0) break;\n                    mini = min(mini, nums[k]);\n                    k++;\n                }\n                for(int x=i; x<k; x++) nums[x]-=mini;\n                count += mini; \n            }else if(nums[i] <0) {\n                int maxi = nums[i];\n                int k = i;\n                while(k<n && nums[k]<0) {\n                    if(nums[k] == 0) break;\n                    maxi = max(maxi, nums[k]);\n                    k++;\n                }\n\n                for(int x=i; x<k; x++) nums[x]-=maxi;\n                count += abs(maxi); \n            }\n//                 cout  << endl;\n//             for(auto nu : nums) cout << nu << \" \";\n// cout <<endl;\n\n        }\n\n\n        return count;\n    }\n};",
    "submit_ts": "1721534061",
    "subm_id": "1328022664"
}