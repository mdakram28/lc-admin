{
    "username": "visheshchouksey",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        unordered_map<int , int>prev;\n       \n        set<int>st;\n        st.insert(nums[0]);\n        prev[nums[0]]++;\n unordered_map<int, int>cur;\n        for(int i = 1 ;i<nums.size();i++){\n           \n            st.insert(nums[i]);\n              int curr = nums[i];\n              cur[nums[i]]++;\n              for(auto e : prev){\n                int xo =  e.first&curr;\n                st.insert(xo);\n                cur[xo]++;\n              }\n          \n            prev = cur;\n              cur.clear();\n        }\n        int ans = INT_MAX;\n//        while(!st.empty()){\n//            ans = min(ans , abs(st.top()-k));\n//            st.pop();\n           \n//        }\n         for (auto& str : st) {\n         ans = min(ans , abs(str-k));\n    }\n        return ans ;\n    }\n};",
    "submit_ts": 1717299533.0
}