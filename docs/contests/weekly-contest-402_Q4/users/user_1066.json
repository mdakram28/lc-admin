{
    "username": "btcmoon",
    "submission": "class Solution {\n    private static class Zkw {\n        int n;\n        int[] tree;\n\n        public Zkw(int n) {\n            this.n = n;\n            this.tree = new int[n << 1];\n        }\n\n        public void build(int[] arr) {\n            for (int i = 0; i < n; i++) {\n                tree[i + n] = arr[i];\n            }\n            for (int i = n - 1; i > 0; i--) {\n                tree[i] = tree[i << 1] + tree[i << 1 | 1];\n            }\n        }\n\n        public void update(int idx, int val) {\n            idx += n;\n            tree[idx] = val;\n            while (idx > 1) {\n                tree[idx >> 1] = tree[idx] + tree[idx ^ 1];\n                idx >>= 1;\n            }\n        }\n\n        public int query(int l, int r) {\n            l += n;\n            r += n + 1;\n            int ans = 0;\n            while (l < r) {\n                if ((l & 1) == 1) {\n                    ans += tree[l];\n                    l++;\n                }\n                if ((r & 1) == 1) {\n                    r--;\n                    ans += tree[r];\n                }\n                l >>= 1;\n                r >>= 1;\n            }\n            return ans;\n        }\n    }\n    \n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        List<Integer> ans = new ArrayList<>();\n        Zkw seg = new Zkw(n + 1);\n\n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                seg.update(i, 1);\n            }\n        }\n\n        for (int[] query : queries) {\n            int q = query[0];\n            int l = query[1];\n            int r = query[2];\n            if (q == 1) {\n                if (r - l < 2) {\n                    ans.add(0);\n                    continue;\n                }\n                ans.add(seg.query(l + 1, r - 1));\n            } else {\n                nums[l] = r;\n                for (int i = Math.max(1, l - 1); i <= Math.min(n - 2, l + 1); i++) {\n                    if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                        seg.update(i, 1);\n                    } else {\n                        seg.update(i, 0);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": 1718507936.0
}