{
    "username": "annoyingpatrick",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> cnt(32, 0);\n        int val = INT_MAX, ret = INT_MAX;\n\n        int j = 0;\n        // find val < k\n        for (int i = 0; i < nums.size(); ++i) {\n            //cout << \"i = \" << i << endl;\n            while (j < nums.size() && val >= k) {\n                if (j == nums.size())\n                    break;\n                for (int shift = 0; shift < 31; ++shift) {\n                    if ((nums[j] & (1 << shift)) == 0) {\n                        cnt[shift]--;\n                        if (cnt[shift] == -1) {\n                            val -= (1 << shift);\n                        }\n                    }\n                }\n                //cout << \" ,j = \" << j << \", val = \" << val << endl;\n                ret = min(ret, abs(val - k));\n                j++;\n            }\n            // add i back\n            for (int shift = 0; shift < 31; ++shift) {\n                if ((nums[i] & (1 << shift)) == 0) {\n                    cnt[shift]++;\n                    if (cnt[shift] == 0) {\n                        val += (1 << shift);\n                    }\n                }\n            }\n            ret = min(ret, abs(val - k));\n        }\n        \n        // find val >= k\n        val = INT_MAX;\n        for (int i = 0; i < nums.size(); ++i) {\n            //cout << \"i = \" << i << endl;\n            while (j < nums.size() && val > k) {\n                if (j == nums.size())\n                    break;\n                for (int shift = 0; shift < 31; ++shift) {\n                    if ((nums[j] & (1 << shift)) == 0) {\n                        cnt[shift]--;\n                        if (cnt[shift] == -1) {\n                            val -= (1 << shift);\n                        }\n                    }\n                }\n                //cout << \" ,j = \" << j << \", val = \" << val << endl;\n                ret = min(ret, abs(val - k));\n                j++;\n            }\n            // add i back\n            for (int shift = 0; shift < 31; ++shift) {\n                if ((nums[i] & (1 << shift)) == 0) {\n                    cnt[shift]++;\n                    if (cnt[shift] == 0) {\n                        val += (1 << shift);\n                    }\n                }\n            }\n            ret = min(ret, abs(val - k));\n        }\n        return ret;       \n    }\n};",
    "submit_ts": 1717300460.0
}