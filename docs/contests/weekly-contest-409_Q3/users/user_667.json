{
    "username": "mu-xiu-yu-lin-s",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeMap<Integer,Integer> treeMap = new TreeMap<>();\n        int[] res = new int[queries.length];\n        int num = n-1;\n        for (int i = 0; i < queries.length; i++) {\n            if (treeMap.floorKey(queries[i][0])!=null) {\n                Map.Entry<Integer, Integer> entry = treeMap.floorEntry(queries[i][0]);\n                int t = entry.getValue();\n                if (t>=queries[i][1]) {\n                    res[i] = num;\n                } else {\n                    if (entry.getKey()==queries[i][0]) {\n                        num+=t-entry.getKey()-1;\n                        num-=queries[i][1]-queries[i][0]-1;\n                        treeMap.put(queries[i][0],queries[i][1]);\n                    } else {\n                        num-=queries[i][1]-queries[i][0]-1;\n                        treeMap.put(queries[i][0],queries[i][1]);\n                    }\n                }\n            } else {\n                num-=queries[i][1]-queries[i][0]-1;\n                treeMap.put(queries[i][0],queries[i][1]);\n            }\n            while (treeMap.lowerEntry(queries[i][1]).getKey()>queries[i][0]) {\n                Map.Entry<Integer, Integer> entry = treeMap.lowerEntry(queries[i][1]);\n                num+=entry.getValue()-entry.getKey()-1;\n                treeMap.remove(entry.getKey());\n            }\n            res[i] = num;\n        }\n        return res;\n    }\n\n}",
    "submit_ts": "1722742326",
    "subm_id": "552343933"
}