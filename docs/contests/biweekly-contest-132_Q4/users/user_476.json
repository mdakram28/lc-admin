{
    "username": "onkar_somani",
    "submission": "class Solution {\npublic:\n    vector<int>a;\n    int n;\n    vector<int>nxt;\n    int dp[5001][51][2][2];\n    int f(int ind , int left , int st,int bypass){\n        if(left<0)return 0;\n        if(ind >= n)return 0;\n        // if(ind >= n)return 1; \n        // cout<< ind << \" \";\n        // cout<< left << \" \";\n        // cout<< st << \"\\n\";\n        // int prev = a[ind];\n        if(dp[ind][left][st][bypass]!= -1)return dp[ind][left][st][bypass];\n        int ans = 0;\n        if(bypass){\n            ans = max(ans , f(ind + 1 , left , 1 , 1));\n        }\n        if(nxt[ind] && left >=0)\n        ans = max(ans , 1 + f(nxt[ind] ,left , 1,0));\n        \n        if(left > 0)\n        ans = max(ans , 1 + f(ind + 1 , left - 1 , 1,0));\n        \n        if(st){\n            if(left > 0)\n            ans = max(ans ,1 + f(ind + 1 , left - 1 , 1 , 1));\n        }\n        else{\n            if(left >= 0)\n            ans = max(ans , f(ind + 1 , left  , 0,0));\n        }\n        // for(int i=ind + 1;i<n ;i++){\n        //     if(st){\n        //         if(left >0)\n        //         ans = max( ans , 1 + f(i , left - 1 , 1));\n        //     }\n        //     else{\n        //         if(left >0)\n        //         ans = max( ans , 1 + f(i , left - 1 , 1));\n        //         if(left >=0)\n        //         ans = max(ans , f(i , left , 0) );\n        //     }\n        // }\n        return dp[ind][left][st][bypass]= max(1,ans);\n    }\n\n    int maximumLength(vector<int>& nums, int k) {\n        a = nums;\n        n = a.size();\n        nxt.resize(n , 0);\n        for(int i = 0;i< n ;i++){\n            for(int j=i+1;j<n;j++){\n                if(a[j]== a[i]){\n                    nxt[i] =j;\n                    break;\n                }\n            }\n        }\n        memset(dp,-1,sizeof(dp));\n        return f(0, k , 0,0);\n        \n    }\n};\n\n\n\n",
    "submit_ts": 1717861753.0
}