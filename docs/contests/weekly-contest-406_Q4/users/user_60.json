{
    "username": "anau99",
    "submission": "\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        \n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        int h = horizontalCut.length - 1;\n        int v = verticalCut.length - 1;\n        \n        int horizontalPieces = 1;\n        int verticalPieces = 1; \n        \n        long totalCost = 0; \n        \n        \n        while (h >= 0 && v >= 0) {\n           \n            if (horizontalCut[h] >= verticalCut[v]) {\n                totalCost += (long) horizontalCut[h] * verticalPieces;\n                horizontalPieces++;\n                h--;\n            } else {\n                totalCost += (long) verticalCut[v] * horizontalPieces;\n                verticalPieces++;\n                v--;\n            }\n        }\n        \n      \n        while (h >= 0) {\n            totalCost += (long) horizontalCut[h] * verticalPieces;\n            horizontalPieces++;\n            h--;\n        }\n        \n       \n        while (v >= 0) {\n            totalCost += (long) verticalCut[v] * horizontalPieces;\n            verticalPieces++;\n            v--;\n        }\n        \n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720924868",
    "subm_id": "1320234132"
}