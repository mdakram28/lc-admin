{
    "username": "raincoat911",
    "submission": "class Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        nums.push_back(0); nums.push_back(0); nums.push_back(0);\n        int a = 0, b = 0, cur = 0, l = nums.size();\n        tree.resize(l + 2);\n        for (int i = 0; i < l; i++) {\n            cur = max(b, a + nums[i]);\n            update(i, cur - b);\n            a = b;\n            b = cur;\n        }\n        \n        int res = 0;\n            // for (int i = 0; i < nums.size(); i++) cout<<find(i) << \", \";\n            // cout << endl;\n        for (auto& q : queries) {\n            int i = q[0], m = q[1], n = nums[i];\n            nums[i] = m;\n            // int d = m - n;\n            int p1 = find(i - 2), p2 = find(i - 1), d = 0;\n            vector<int> arr;\n            for (int j = i; j < nums.size(); j++) {\n                int n = max(p1 + nums[j], p2);\n                int dn = n - find(j);\n                if (d == dn) break;\n                arr.push_back(dn - d);\n                // cout << dn - d<<\" \";\n                p1 = p2;\n                p2 = n;\n                d = dn;\n            }\n            // cout << endl;\n            for (int j = i, k = 0; k < arr.size(); k++, j++) update(j, arr[k]);\n            \n            res += find(l - 1);\n            // for (int i = 0; i < nums.size() - 3; i++) cout<<find(i) << \", \";\n            // cout << endl;\n            res %= M;\n        }\n        return res;\n    }\n    \nprivate:\n    vector<long> tree;\n    int M = 1e9 + 7;\n    \n    void update(int i, int d) {\n        for (i = i + 1; i < tree.size(); i += i & -i) {\n            tree[i] += d;\n            tree[i] % M;\n        }\n    }\n    \n    int find(int i) {\n        if (i < 0) return 0;\n        int res = 0;\n        for (i = i + 1; i; i -= i & -i) {\n            res += tree[i];\n            res %= M;\n        }\n        return res;\n    }\n    \n};",
    "submit_ts": "1716695856",
    "subm_id": "1268144472"
}