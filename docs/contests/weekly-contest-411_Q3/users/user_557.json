{
    "username": "EigenVector0",
    "submission": "class Solution {\n\tprivate static int[][] powMod = new int[10][100_000];\n\tstatic {\n\t\tfor (int k = 2; k <= 9; ++k) {\n\t\t\tpowMod[k][0] = 1;\n\t\t\tfor (int i = 1; i < powMod[0].length; ++i) {\n\t\t\t\tpowMod[k][i] = (powMod[k][i-1] * 10) %k;\n\t\t\t}\n\t\t}\n\t}\n\tprivate int k;\n\tprivate int n;\n\t// private static int pow(int x, int p, int mod) {\n\t// \tint ans = 1;\n\t// \twhile (p>0) {\n\t// \t\tif (p%2 ==1) {\n\t// \t\t\tans *= x;\n\t// \t\t\tans %= mod;\n\t// \t\t}\n\t// \t\tx *= x; x %= mod;\n\t// \t\tp /= 2;\n\t// \t}\n\t// \treturn ans;\n\t// }\n\tprivate boolean dp(int i, int mod, char[] ret, int[][] memo) {\n\t\tfinal int i0 = this.n-1-i;\n\t\tif (i<i0) {\n\t\t\treturn mod==0;\n\t\t}\n\t\tif (memo[i][mod] == -1) return false;\n\t\tfor (int d = 9; d >= (i0==0?1:0); --d) {\n\t\t\t// int mod1 = (mod + d*pow(10, i, k)%k)%k;\n\t\t\tint mod1 = (mod + d*powMod[k][i]%k)%k;\n\t\t\tif (i!=i0) {\n\t\t\t\t// mod1 += d*pow(10, i0, k)%k; mod1 %= k;\n\t\t\t\tmod1 += d*powMod[k][i0]%k; mod1 %= k;\n\t\t\t}\n\t\t\tif (dp(i-1, mod1, ret, memo)) {\n\t\t\t\tret[n-1-i] = (char)('0'+d);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tmemo[i][mod] = -1;\n\t\treturn false;\n\t}\n    public String largestPalindrome(int n, int k) {\n        if (k==1) {\n\t\t\treturn \"9\".repeat(n);\n\t\t}\n\t\tthis.n = n;\n\t\tthis.k = k;\n\t\tchar[] buf = new char[n];\n\t\tdp(n-1, 0, buf, new int[n][k]);\n\t\tString ans = String.valueOf(buf,0,(n+1)/2);\n\t\treturn ans + (n%2==0 ? new StringBuilder(ans).reverse().toString() : new StringBuilder(ans.substring(0,ans.length()-1)).reverse().toString());\n    }\n}\n",
    "submit_ts": "1723952385",
    "subm_id": "1359795018"
}