{
    "username": "yaminipriya123",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        \n        for (int i = 0; i < n; i++) {\n            HashMap<Long, Long> map1 = new HashMap<>();\n            \n            if (nums[i] == k) {\n                count++;\n            }\n            \n            map1.put((long) nums[i], map1.getOrDefault((long) nums[i], 0L) + 1);\n            \n            for (Map.Entry<Long, Long> entry : map.entrySet()) {\n                long key = entry.getKey();\n                long value = entry.getValue();\n                \n                long ans = key & nums[i];\n                if (ans == k) {\n                    count += value;\n                }\n                \n                map1.put(ans, map1.getOrDefault(ans, 0L) + value);\n            }\n            \n            map = map1;\n        }\n        \n        return count;\n    }\n}\n",
    "submit_ts": "1720278942",
    "subm_id": "1311730796"
}