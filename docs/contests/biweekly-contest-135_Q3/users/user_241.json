{
    "username": "VIDYA__SAGAR",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> diffCount;\n        for (int i = 0; i < n / 2; ++i) {\n            int diff = abs(nums[i] - nums[n - i - 1]);\n            diffCount[diff]++;\n        }\n        vector<pair<int, int>> diffVec;\n        for(auto &it : diffCount){\n            diffVec.push_back({it.second, it.first});\n        }\n        sort(diffVec.rbegin(), diffVec.rend());\n        int len = diffVec.size();\n        int finalAns = INT_MAX;\n        for(int i = 0; i < min(100, len); i++){\n            int curDiff = diffVec[i].second;\n            int Ans = 0;\n            for(int j = 0; j < n / 2; j++){\n                if(abs(nums[j] - nums[n - j - 1]) != curDiff){\n                    if(nums[j] >= curDiff || nums[n - j - 1] >= curDiff || k - nums[j] >= curDiff || k - nums[n - j - 1] >= curDiff){\n                        Ans += 1;\n                    }else{\n                        Ans += 2;\n                    }\n                }\n            }\n            finalAns = min(Ans, finalAns);\n        }\n        if(finalAns == INT_MAX) return 0;\n        return finalAns;\n    }\n};",
    "submit_ts": "1721487796",
    "subm_id": "1327401407"
}