{
    "username": "shubhind",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<long long>hor,vert;\n        for(int i=0;i<m-1;i++) hor.push_back(horizontalCut[i]);\n        for(int i=0;i<n-1;i++) vert.push_back(verticalCut[i]);\n        sort(hor.begin(),hor.end());\n        sort(vert.begin(),vert.end());\n        long long count=0,h=1,v=1,j=m-2,k=n-2;\n        \n        while(j>=0 && k>=0){\n            if(hor[j] > vert[k]){\n                count += v*hor[j];\n                j--,h++;\n            }   \n            else{\n                count += h*vert[k];\n                k--,v++;\n            }\n        }\n        while(j>=0){\n            count += v*hor[j];\n            j--,h++;\n        }\n        while(k>=0){\n            count += h*vert[k];\n            k--,v++;\n        }\n        return count;\n    }\n};",
    "submit_ts": "1720925552",
    "subm_id": "1320258499"
}