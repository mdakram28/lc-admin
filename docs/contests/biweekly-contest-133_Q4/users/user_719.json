{
    "username": "JhaAdarsh002",
    "submission": "    //\u091c\u092f \u0938\u093f\u092f\u093e \u0930\u093e\u092e\n// Author : **DaRuuk**\n\n/*_______________________*****________________________*/\n \n#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp> \n#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/detail/standard_policies.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n \n/*_______________________MACRO DEFINITIONS ________________________*/\n#define endl \"\\n\"\n// #define int long long  \n \nusing ll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing vi = vector<int>;\nusing pii = pair<int, int>;\nusing vvi = vector<vi>;\nusing vpii = vector<pii>;\n \n//some useful functions and identifiers as macro\n#define ff first\n#define ss second\n#define pb push_back\n#define set_bits __builtin_popcountll\n#define sz(x) ((int) (x).size())\n#define all(x) (x).begin(), (x).end()\n#define YES cout<<\"YES\"<<endl\n#define NO cout<<\"NO\"<<endl\n#define pinf 1e18\n#define ninf -1e18\n#define MOD 1000000007\n#define PI 3.141592653589793238462\n#define loop(s, e) for(int i = s; i < e; i++)\n#define rloop(e, s) for(int i = e; i>= s; i--)\nint delrow[4] = {-1,0,1,0};\nint delcol[4] = {0,1,0,-1};\n \n/*______________________ COMMON FUNCTION DEFINITIONS _________________________*/\n \nint gcd(int x , int y){return y == 0 ? x : gcd(y,x%y) ;}\nint lcm(int a, int b) { return (a / gcd(a, b)) * b; }\n\nint mpow(int base, int exp) { //binary exponentiation (modular power) (change MOD if required)\n  base %= MOD;\n  int result = 1;\n  while (exp > 0) {\n    if (exp & 1) result = ((ll)result * base) % MOD;\n    base = ((ll)base * base) % MOD;\n    exp >>= 1;\n  }\n  return result;\n}\n \nint mdivide (int a, int b) {  //valid when MOD is prime\n  return ((ll) (a%MOD) * mpow(b,MOD-2)) % MOD;\n}\n\n/*_________________________________ DEBUGGER ________________________________*/\n#define printvec(arr) for(int i = 0; i < arr.size(); i++){cout<<arr[i]<<\" \";}cout<<endl;\n#define dbg(x) cout<<\"value of \"<<#x<<\" \"<<x<<endl;\n \n/*         \n                                PAPA HU MAI      \n                                 (\\__/)\n                                  (UwU)\n                             __\uff3f\u30ce \u30fd \u30ce\uff3c\uff3f___ \n                            /\u3000`/ \u2312\uff39\u2312 \uff39\u3000 \\\n                            ( \u3000(\u4e09\u30fd\u4eba\u3000 /\u3000\u3000|\n                            |\u3000\uff89\u2312\uff3c \uffe3\uffe3\u30fd\u3000 \u30ce\n                             \u30fd\uff3f\uff3f\uff3f\uff1e\uff64\uff3f\uff3f\uff0f\n                                \uff5c( \u738b \uff89\u3008 \n                                 /\uff90`\u30fc\u2015\u5f61\\ \n                                / \u2570    \u256f \\\n                             ISS DUNIYA KA PAPA\n*/\n struct custom_hash {\n           static uint64_t splitmix64(uint64_t x) {\n               x += 0x9e3779b97f4a7c15;\n               x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n               x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n               return x ^ (x >> 31);\n           }\n           size_t operator()(uint64_t x) const {\n               static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n               return splitmix64(x + FIXED_RANDOM);\n           }\n       };  \nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n\n        unordered_map<ll, ll, custom_hash> reqMap;\n        for (auto& req : reqs) {\n            reqMap[req[0] + 1] = req[1];\n        }\n\n        vector<vector<ll>> dp(n + 1, vector<ll>(401, 0));\n        dp[0][0] = 1;\n\n        for (int len = 1; len <= n; len++) {\n            for (int inv = 0; inv <= 400; inv++) {\n                for (int pos = 0; pos < len; pos++) {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0) {\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (reqMap.count(len)) {\n                int reqInv = reqMap[len];\n                for (int inv = 0; inv <= 400; inv++) {\n                    if (inv != reqInv) {\n                        dp[len][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        ll res = 0;\n        for (ll count : dp[n]) {\n            res = (res + count) % MOD;\n        }\n\n        return res;\n    }\n};\n",
    "submit_ts": 1719070784.0
}