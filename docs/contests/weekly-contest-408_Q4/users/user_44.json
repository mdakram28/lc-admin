{
    "username": "_Fake4Fun",
    "submission": "class Solution {\npublic:\n    int root[1010];\n    int x[1010], y[1010], r[1010];\n    int getRoot(int x) {\n        return root[x] < 0 ? x : root[x] = getRoot(root[x]);\n    }\n    void connect(int u, int v) {\n        u = getRoot(u), v = getRoot(v);\n        if (u == v) return;\n        if (root[u] > root[v]) swap(u, v);\n        root[u] += root[v];\n        root[v] = u;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        for (int i = 0; i < n; i++) x[i] = circles[i][0], y[i] = circles[i][1], r[i] = circles[i][2];\n        for (int i = 0; i < n + 4; i++) root[i] = -1;\n        for (int i = 0; i < n; i++) {\n            if (x[i] <= r[i]) connect(i, n);\n            if (x[i] + r[i] >= X) connect(i, n + 1);\n            if (y[i] <= r[i]) connect(i, n + 2);\n            if (y[i] + r[i] >= Y) connect(i, n + 3);\n            for (int j = i + 1; j < n; j++) {\n                if (1ll * (r[i] + r[j]) * (r[i] + r[j]) >= 1ll * (x[i] - x[j]) * (x[i] - x[j]) + 1ll * (y[i] - y[j]) * (y[i] - y[j]))\n                    connect(i, j);\n            }\n        }\n        return getRoot(n) != getRoot(n + 1) && getRoot(n) != getRoot(n + 2) && getRoot(n + 1) != getRoot(n + 3) && getRoot(n + 2) != getRoot(n + 3);\n    }\n};",
    "submit_ts": "1722135491",
    "subm_id": "1335703547"
}