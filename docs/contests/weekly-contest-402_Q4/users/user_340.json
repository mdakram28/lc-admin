{
    "username": "lu-chen-chen",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        List<Integer> ans = new ArrayList<>();\n        int n = nums.length;\n        BIT bit = new BIT(n);\n        for (int i = 1; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                bit.add(i, 1);\n            }\n        }\n        for (int[] query : queries) {\n            if (query[0] == 1) {\n                if (query[2] - 1 < query[1] + 1) {\n                    ans.add(0);\n                } else {\n                    ans.add(bit.ask(query[2]) - bit.ask(query[1] + 1));\n                }\n            } else {\n                int index = query[1];\n                for (int i = -1; i <= 1; i++) {\n                    if (check(nums, index + i)) {\n                        bit.add(index + i, -1);\n                    }\n                }\n                nums[index] = query[2];\n                for (int i = -1; i <= 1; i++) {\n                    if (check(nums, index + i)) {\n                        bit.add(index + i, 1);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n\n    private boolean check(int[] nums, int i) {\n        if (i <= 0 || i >= nums.length - 1) {\n            return false;\n        }\n        return nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n    }\n}\n\nclass BIT {\n    int[] c;\n\n    public BIT(int n) {\n        c = new int[n + 1];\n    }\n\n    public int ask(int x) {\n        // \u524dx\u4e2a\u6570\u7684\u548c\n        int ans = 0;\n        while (x > 0) {\n            ans += c[x];\n            x -= x & -x;\n        }\n        return ans;\n    }\n\n    public void add(int x, int y) {\n        // \u4e0b\u6807\u4ece0\u5f00\u59cb\n        x++;\n        while (x < c.length) {\n            c[x] += y;\n            x += x & -x;\n        }\n    }\n}\n",
    "submit_ts": "1718507245",
    "subm_id": "539780143"
}