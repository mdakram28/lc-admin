{
    "username": "jiangzhouxy",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] res = new int[queries.length];\n        int[] diff = new int[n];\n        TreeMap<Integer, Integer> tm = new TreeMap<>();\n        for (int i = 0; i < n - 1; i++) {\n            tm.put(i, 1);\n        }\n        res[0] = n - 1;\n        for (int i = 0; i < res.length; i++) {\n            if (i > 0) {\n                res[i] = res[i - 1];\n            }\n            while (true) {\n                Integer nextKey = tm.ceilingKey(queries[i][0]);\n                // System.out.println(nextKey);\n                if (nextKey != null) {\n                    if (nextKey < queries[i][1] - 1) {\n                        tm.remove(nextKey);\n                        res[i]--;\n                    } else {\n                        break;\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1722741806",
    "subm_id": "1343753964"
}