{
    "username": "notSayeef",
    "submission": "#define ll long long\n#define fr(m) for(int i=0; i<m; i++)\n#define fro(m) for(int i=1; i<m; i++)\n#define frj(m) for(int j=0; j<m; j++)\n#define frr(n) for(int i=n; i>=0; i--)\n#define pb push_back\n#define pf push_front\n#define orr ||\n#define nl '\\n'\n#define nll cout<<'\\n'\n#define mod 1000000007\n#define inf (1LL<<60)\n#define inff (1<<30)-1\n#define yes cout<<\"YES\"<<nl\n#define no cout<<\"NO\"<<nl\n#define ff first\n#define ss second\n#define all(v) v.begin(), v.end()\n#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL)\n#define mxn 5005\n\nint dp[55][mxn];\nint arr[mxn], n;\nll age[mxn*4], pore[mxn*4];\nll from, to;\n\nclass Solution {\npublic:\n    void build(ll segarr[], ll node=1, ll st=from, ll en=to){\n        if(st==en){\n            segarr[node]=0;\n            return;\n        }\n        ll mid = (st+en)/2;\n        build(segarr, 2*node, st, mid);\n        build(segarr, 2*node+1, mid+1, en);\n        segarr[node]=max(segarr[node*2],segarr[node*2+1]);\n        return;\n    }\n\n    int query(ll segarr[], ll l, ll r, ll node=1, ll st=from, ll en=to){\n        if(l>r) return 0;\n        if(st>=l && en<=r) return segarr[node];\n        if(st>r orr en<l) return 0;\n        ll mid=(st+en)/2;\n        int ans=max(query(segarr,l,r,2*node,st,mid), query(segarr,l,r,2*node+1,mid+1,en));\n        return ans;\n    }\n\n    void update(ll segarr[], ll tar, ll val, ll node=1, ll st=from, ll en=to){\n        if(st==en){\n            segarr[node]=max(segarr[node],val);\n            return;\n        }\n        ll mid=(st+en)/2;\n        if(tar<=mid) update(segarr,tar,val,2*node,st,mid);\n        else update(segarr,tar,val,2*node+1,mid+1,en);\n        segarr[node]=max(segarr[2*node], segarr[2*node+1]);\n        return;\n    }\n    int maximumLength(vector<int>& nums, int k) {\n        n=nums.size();\n        vector<ll>v;\n        fr(n) arr[i]=nums[i], v.pb(nums[i]);\n        sort(all(v));\n        v.erase(unique(all(v)),v.end());\n        fr(n){\n            arr[i]=lower_bound(all(v),arr[i])-v.begin()+1;\n        }\n        // fr(n) cout<<arr[i]<<\" \"; nll;\n        from=1, to=n;\n        int ans=0;\n        for(int K1=0; K1<=k; K1++){\n            build(age);\n            build(pore);\n            for(int i=0; i<n; i++){\n                //exactly K1 ta match kore i th index porjonto max\n                //score koto\n                dp[K1][i]=0;\n                //onno\n                if(K1){\n                    dp[K1][i]=max(dp[K1][i],1+max(query(age,1,arr[i]-1),query(age,arr[i]+1,n)));\n                    update(age,arr[i],dp[K1-1][i]);\n                }\n                //ei el nibo\n                dp[K1][i]=max(dp[K1][i],1+query(pore,arr[i],arr[i]));\n                // cout<<i<<\" \"<<dp[K1][i]<<nl;\n                update(pore,arr[i],dp[K1][i]);\n                ans=max(ans,dp[K1][i]);\n            }\n        }\n        return ans;  \n    }\n};\n",
    "submit_ts": 1717859984.0
}