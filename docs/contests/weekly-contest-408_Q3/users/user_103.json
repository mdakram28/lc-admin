{
    "username": "d_ananta_",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        vector<int> pos;\n        int n = s.size();\n        int sq = ceil(sqrt(n+.0)) + 2;\n        int ans = 0;\n        for(int i = 0; i < n; i++) {\n            if(s[i] == '0') pos.push_back(i);\n            for(int j = 0; j <= min(sq, (int)pos.size()); j++) {\n                int l = (j == pos.size() ? -1 : pos[pos.size() - j - 1]);\n                int cnt1r = (j == 0 ? 0 : i - pos[pos.size() - j] + 1) - j;\n                int r = (j == 0 ? i : pos[pos.size() - j] - max(0, (j*j - cnt1r)));\n                // if(l < r) cout << i << \" \" << j << \" -> \" << l << \" \" << r << \"\\n\";\n                if(l < r) ans += r-l;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722137812",
    "subm_id": "1335774427"
}