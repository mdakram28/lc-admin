{
    "username": "Siddhesh_Dongare",
    "submission": "class Solution {\npublic:\n    bool bfs(vector<vector<int>>& adj, int start, int tgt1, int tgt2, int nodes) {\n        queue<int> q;\n        vector<int> vis(nodes, 0);\n        q.push(start);\n        vis[start] = 1;\n\n        while (!q.empty()) {\n            int cur = q.front();\n            q.pop();\n            for (int next : adj[cur]) {\n                if (!vis[next]) {\n                    q.push(next);\n                    vis[next] = 1;\n                }\n            }\n        }\n        return vis[tgt1] || vis[tgt2];\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<pair<pair<int, int>, int>> cir(n);\n        vector<vector<int>> adjList(n + 4);\n\n        for (int i = 0; i < n;i++) {\n            cir[i].first.first = circles[i][0];\n            cir[i].first.second = circles[i][1];\n            cir[i].second = circles[i][2];\n        }\n\n        for (int i = 0; i < n;i++) {\n            if (cir[i].first.first <= cir[i].second) {\n                adjList[n].push_back(i); // left border\n                adjList[i].push_back(n);\n            }\n            if (X - cir[i].first.first <= cir[i].second) {\n                adjList[n + 2].push_back(i); // right border\n                adjList[i].push_back(n + 2);\n            }\n            if (cir[i].first.second <= cir[i].second) {\n                adjList[n + 1].push_back(i); // top border\n                adjList[i].push_back(n + 1);\n            }\n            if (Y - cir[i].first.second <= cir[i].second) {\n                adjList[n + 3].push_back(i); // bottom border\n                adjList[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n;j++) {\n                double dist = sqrt(pow(cir[i].first.first - cir[j].first.first, 2) +\n                                       pow(cir[i].first.second - cir[j].first.second, 2));\n                int rad_sum = cir[i].second + cir[j].second;\n                if (rad_sum >= dist) {\n                    adjList[i].push_back(j);\n                    adjList[j].push_back(i);\n                }\n            }\n        }\n\n        bool isBlocked = false;\n        isBlocked = isBlocked || bfs(adjList, n, n + 1, n + 2, n + 4);\n        isBlocked = isBlocked || bfs(adjList, n+ 3, n + 2, n + 1, n + 4);\n\n        return !isBlocked;\n    }\n};",
    "submit_ts": "1722138010",
    "subm_id": "1335779721"
}