{
    "username": "shivam08oct",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int cnt = 0;\n\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                cnt += 1;\n            }\n        }\n\n        int a = 0, b = 0;\n\n        vector<int> change(3, 0);\n        if (n % 2 == 1) {\n            a = 0, b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                change[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            a = 0, b = n - 1;\n            while (a < b) {\n                int sm = grid[a][m / 2] + grid[b][m / 2];\n                change[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (change[2] % 2 == 1) {\n            if (change[1] > 0) {\n                cnt += change[1];\n            } else {\n                cnt += 2;\n            }\n        } else {\n            cnt += change[1];\n        }\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int x = grid[i][j];\n                int y = grid[n - 1 - i][j];\n                int z = grid[i][m - 1 - j];\n                int w = grid[n - 1 - i][m - 1 - j];\n\n                int sm = x + y + z + w;\n\n                if (sm != 0 && sm != 4) {\n                    cnt += min(sm, 4 - sm);\n                }\n            }\n        }\n\n        return cnt;\n    }\n};",
    "submit_ts": "1722699909",
    "subm_id": "1343225958"
}