{
    "username": "prithwirajmitra15",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int> &arr, int k)\n    {\n        int ans = 0;\n        int L = 0;\n        for (int R = 1; R < arr.size(); R++)\n        {\n            if (arr[R - 1] == arr[R])\n            {\n                if (R - L >= k)\n                    ans += R - L - k + 1;\n                \n                L = R;\n            }\n            else if (R == arr.size() - 1)\n            {\n                if (R - L + 1 >= k)\n                    ans += R - L + 1 - k + 1;\n            }\n        }\n        \n        if (arr.front() != arr.back())\n        {\n            int cnt1 = 1;\n            for (int i = 1; i < k - 1; i++)\n            {\n                if (arr[i - 1] == arr[i])\n                    break;\n                cnt1++;\n            }\n            \n            int cnt2 = 1;\n            for (int i = arr.size() - 2; i >= arr.size() - k + 1; i--)\n            {\n                if (arr[i] == arr[i + 1])\n                    break;\n                cnt2++;\n            }\n            \n            for (int i = 1; i <= min(cnt1, k - 1); i++)\n                ans += (k - i <= cnt2) ? 1 : 0;\n            \n            // cout << cnt1 << \"\\t\" << cnt2 << endl;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720279673",
    "subm_id": "1311760588"
}