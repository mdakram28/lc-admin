{
    "username": "HaoCR123",
    "submission": "class tr{\npublic:\n    vector<int> c;\n    int n;\n    tr(int _n):n(_n), c(_n){}\n    int lowbit(int x) {\n        return x & -x;\n    }\n    void ch(int x, int val) {\n        for(; x < n; x += lowbit(x)) c[x] += val;\n    }\n    int qu(int x) {\n        int res = 0;\n        for(; x > 0; x -= lowbit(x)) res += c[x];\n        return res;\n    }\n};\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& q) {\n        vector<int> ans;\n        \n        int n = nums.size();\n        tr t(n + 1);\n        vector<int> is(n);\n        for(int i = 1; i + 1 < n; i++) if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) is[i] = 1, t.ch(i + 1, 1);\n    \n        for(auto& v: q) {\n            if(v[0] == 1) {\n                int num = t.qu(v[2] + 1) - t.qu(v[1]);\n                if(is[v[2]]) num--;\n                if(is[v[1]] && v[1] != v[2]) num--;\n                ans.push_back(num);\n            }else {\n                int i = v[1];\n                nums[i] = v[2];\n                for(int j = max(1, i - 1); j <= i + 1 && j + 1 < n; j++) {\n                    if(j - 1 >= 0 && j + 1 < n) {\n                        if(nums[j] > nums[j - 1] && nums[j] > nums[j + 1]) {\n                            if(!is[j]) is[j] = 1, t.ch(j + 1, 1);\n                        }\n                        else {\n                            if(is[j]) is[j] = 0, t.ch(j + 1, -1);\n                        }    \n                    }\n                }\n            }\n \n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508215.0
}