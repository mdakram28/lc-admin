{
    "username": "aozeritsky",
    "submission": "class Solution {\npublic:\n    int mod = 1000000007;\n    vector<vector<int>> dp;\n    int n;\n    unordered_map<int, int> h;\n\n   \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int mx = 0;\n        for (const auto& r : requirements) {\n            mx = max(mx, r[1]);\n        }\n        \n        dp = vector<vector<int>>(n + 1, vector<int>(mx + 1, 0));        \n        dp[0][0] = 1;\n\n        h.clear();\n        for (auto& r : requirements) {\n            h[r[0]] = r[1];\n        }\n        \n        for (int j = 1; j <= n; ++j) {\n            for (int k = 0; k <= mx; ++k) {\n                dp[j][k] = 0;\n                for (int i = 0; i < j; ++i) {\n                    if (k - i >= 0) {\n                        dp[j][k] = (dp[j][k] + dp[j - 1][k - i]) % mod;\n                    }\n                }\n            }\n\n            if (h.find(j - 1) != h.end()) {\n                int required_inv = h[j - 1];\n                for (int k = 0; k <= mx; ++k) {\n                    if (k != required_inv) {\n                        dp[j][k] = 0;\n                    }\n                }\n            }\n        }\n\n        int res = 0;\n        for (int i = 0; i <= mx; ++i) {\n            if (h.find(n - 1) != h.end() && i == h[n - 1]) {\n                res = (res + dp[n][i]) % mod;\n            }\n        }        \n\n        return res;        \n    }\n};",
    "submit_ts": 1719068689.0
}