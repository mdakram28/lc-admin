{
    "username": "Jimmyweng006",
    "submission": "class Solution {\npublic:\n    int memo[2001][52][52];\n    int countOfPairs(vector<int>& nums) {\n        memset(memo, -1, sizeof(memo));\n        \n        int n = nums.size();\n        vector<vector<pair<int, int>>> combinations(n);\n        for (int i = 0; i < n; i++) {\n            for (int v = 0; v <= nums[i]; v++) {\n                combinations[i].push_back({v, nums[i] - v});\n            }\n        }\n        \n        const int mod = 1e9 + 7;\n        vector<int> memo(n, -1);\n        return dfs(0, 0, 51, mod, combinations);\n    }\n    \n    int dfs(int i, int preArr1, int preArr2, const int& mod, \n            vector<vector<pair<int, int>>>& combinations) {\n        if (i == combinations.size()) {\n            return 1;\n        }\n\n        if (memo[i][preArr1][preArr2] != -1) {\n            return memo[i][preArr1][preArr2];\n        }\n\n        int ans = 0;\n        for (auto& [arr1Val, arr2Val] : combinations[i]) {\n            if (arr1Val >= preArr1 && arr2Val <= preArr2) {\n                ans = (ans + dfs(i + 1, arr1Val, arr2Val, mod, combinations)) % mod;\n            }\n        }\n\n        return memo[i][preArr1][preArr2] = ans;\n    }\n\n};\n\n/*\narr1, [x1,                x2, x3, x4... xn]\n      [0,      1 ... x1]\narr2, [x1, x1 -1 ...  0]\n\nnums: 2,2,2\n\n\nidx = 0\n  0, 1, 2\n  2, 1, 0\nidx = 1\n  0, 1, 2\n  2, 1, 0\nidx = 2\n  0, 1, 2\n  2, 1, 0\n\nTC: O(M * M * n)\nM = max(nums[i])\n\nidea: for each index, check can put into sequence or not\nmemo key: {idx, arr1Val, arr2Val}\n\nint dfs(int i, preArr1, preArr2, const int& mod, vector<int>& memo) {\n    if (i == n) {\n        return 1;\n    }\n    \n    if (memo[i] != -1) {\n        return memo[i];\n    }\n    \n    int ans = 0;\n    for (auto& [arr1Val, arr2Val] : combinations) {\n        if (arr1Val >= preArr1 && arr2Val > preArr2) {\n            ans = (ans + dfs(i + 1, arr1Val, arr2Val)) % mod;\n        }\n    }\n    \n    return memo[i] = ans;\n}\n\n*/",
    "submit_ts": "1723347080",
    "subm_id": "1351591463"
}