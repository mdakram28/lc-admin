{
    "username": "trevile666",
    "submission": "struct Trie {\n    int cost;\n    Trie *next[26];\n    Trie() {\n        cost = 1e9+7;\n        memset(next, 0, sizeof(next));\n    }\n};\n\nvoid build(Trie *root, string &s, int cost) {\n    for (int i=0; i<s.size(); ++i) {\n        if (root->next[s[i]-'a']) {\n            root = root->next[s[i]-'a'];\n        }\n        else {\n            root->next[s[i]-'a'] = new Trie();\n            root = root->next[s[i]-'a'];\n        }\n    }\n    root->cost = min(root->cost, cost);\n}\n\n\n\n\nclass Solution {\npublic:\n    vector<int> mp;\n    int helper(string &target, Trie *root, int i) {\n        Trie *bk = root;\n        int n = target.size();\n        if (i==n) {\n            return 0;\n        }\n        if (mp[i] != -1) {\n            return mp[i];\n        }\n        int res = 1e9+7;\n        for (int j=i; j<n; ++j) {\n            if (!root->next[target[j]-'a']) {\n                return mp[i]=res;\n            }\n            root = root->next[target[j]-'a'];\n            if (root->cost < 1e9) {\n                res = min(res, root->cost + helper(target, bk, j+1));\n            }\n        }\n        return mp[i]=res;\n        \n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie *root = new Trie();\n        mp = vector<int> (target.size(), -1);\n        for (int i=0; i<words.size(); ++i) {\n            build(root, words[i], costs[i]);\n        }\n        int res = helper(target, root, 0);\n        if (res>1e9) {\n            return -1;\n        }\n        return res;\n    }\n};\n\n",
    "submit_ts": "1720324270",
    "subm_id": "1312395521"
}