{
    "username": "lifam",
    "submission": "class Solution {\n  public long countSubarrays(int[] nums, int k) {\n    int len = nums.length;\n    long count = 0L;\n    if (nums[0] == k) {\n      count++;\n    }\n    Deque<int[]> data = new ArrayDeque<>(), nextData = new ArrayDeque<>();\n    data.addFirst(new int[]{0, nums[0]});\n    for (int i = 1; i < len; i++) {\n      int v = nums[i];\n      nextData.addFirst(new int[]{i, v});\n      while (!data.isEmpty()) {\n        int[] d = data.pollLast();\n        v &= d[1];\n        d[1] = v;\n        nextData.addFirst(d);\n      }\n      while (!nextData.isEmpty()) {\n        int[] d = nextData.pollFirst();\n        if (data.isEmpty()) {\n          data.addLast(d);\n        } else {\n          int[] dl = data.getLast();\n          if (dl[1] == d[1]) {\n            dl[0] = d[0];\n          } else {\n            data.addLast(d);\n          }\n        }\n      }\n      int lastIndex = -1;\n      for (int[] d : data) {\n        if (d[1] == k) {\n          count += d[0] - lastIndex;\n          break;\n        }\n        lastIndex = d[0];\n      }\n    }\n    return count;\n  }\n}",
    "submit_ts": "1720278839",
    "subm_id": "544564638"
}