{
    "username": "faheemulislam07",
    "submission": "class Solution {\npublic:\n    array<int, 4> bfs(int node, vector<int>& vis, vector<vector<int>>& circles,\n                      vector<int> adj[]) {\n        queue<int> q;\n        vis[node] = 1;\n        q.push(node);\n        int mini_x = 1e9, maxi_x = -1e9, mini_y = 1e9, maxi_y = -1e9;\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            mini_x = min(mini_x , circles[u][0] - circles[u][2]);\n            mini_y = min(mini_y , circles[u][1] - circles[u][2]);\n            maxi_x = max(maxi_x , circles[u][0] + circles[u][2]);\n            maxi_y = max(maxi_y , circles[u][1] + circles[u][2]);\n            for (auto v : adj[u]) {\n                if (!vis[v]) {\n                    q.push(v);\n                    vis[v] = 1;\n                }\n            }\n        }\n        return {mini_x, maxi_x , mini_y , maxi_y};\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<int> adj[n];\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                long long d = 1LL *abs(circles[i][0] - circles[j][0]) *\n                            abs(circles[i][0] - circles[j][0]) +\n                            1LL*\n                        abs(circles[i][1] - circles[j][1]) *\n                            abs(circles[i][1] - circles[j][1]);\n                double dd = sqrtl(d);\n                if (dd <= (circles[i][2] + circles[j][2])) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        bool flag = true;\n        vector<int> vis(n);\n        for (int i = 0; i < n; i++) {\n            if (!vis[i]) {\n                array<int, 4> p = bfs(i, vis, circles, adj);\n                int lx = p[0] , rx = p[1] , by = p[2] , uy = p[3];\n                // cout << lx << \" \" << rx << \" \" << by << \" \" << uy << endl;\n                if(rx < 0 || lx > X || by > Y || uy < 0 )continue;\n                if(lx <= 0 && rx >= X)flag = false;\n                if(uy >= Y && by <= 0) flag = false;\n                if(lx <= 0 && by <= 0) flag = false;\n                if(rx >= X && uy >= Y) flag = false;\n            }\n        }\n        return flag;\n    }\n};",
    "submit_ts": "1722138144",
    "subm_id": "1335783297"
}