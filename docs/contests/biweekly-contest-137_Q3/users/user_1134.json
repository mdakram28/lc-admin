{
    "username": "Thanapat Techataweekul",
    "submission": "class Solution(object):\n    def maximumValueSum(self, board):\n        \"\"\"\n        :type board: List[List[int]]\n        :rtype: int\n        \"\"\"\n        rows = len(board)\n        cols = len(board[0])\n        newBoard = []\n        index = []\n        for i in range(rows):\n            tempBoard = board[i]\n            tempindex = [x + i * cols for x in range(cols)]\n            tempBoard, tempindex = zip(*sorted(zip(tempBoard, tempindex), reverse = True))\n            newBoard += tempBoard[: 3]\n            index += tempindex[: 3]\n        for i in range(cols):\n            tempBoard = [board[x][i] for x in range(rows)]\n            tempindex = [x * cols + i for x in range(rows)]\n            tempBoard, tempindex = zip(*sorted(zip(tempBoard, tempindex), reverse = True))\n            count = 0\n            for j in range(rows):\n                if count == 3:\n                    break\n                if not (tempindex[j] in index):\n                    count += 1\n                    index += [tempindex[j]]\n                    newBoard += [tempBoard[j]]\n        newBoard, index = zip(*sorted(zip(newBoard, index)))\n        # print(newBoard)\n        # print(index)\n        # newBoard = newBoard[int(len(newBoard) / 2):]\n        # index = index[int(len(index) / 2): ]\n        maxx = 3 * (-(10 ** 9)) - 1\n        for i in range(len(index) - 1, 1, -1):\n            if maxx > newBoard[i] + newBoard[i - 1] + newBoard[i - 2]:\n                break\n            for j in range(i - 1, 0, -1):\n                if maxx > newBoard[i] + newBoard[j] + newBoard[j - 1]:\n                    break\n                for k in range(j - 1, -1, -1):\n                    rowi = index[i] / cols\n                    rowj = index[j] / cols\n                    rowk = index[k] / cols\n                    coli = index[i] % cols\n                    colj = index[j] % cols\n                    colk = index[k] % cols\n                    # print(maxx, newBoard[i], newBoard[j], newBoard[k], newBoard[i] + newBoard[j] + newBoard[k])\n                    if rowi != rowj and rowi != rowk and rowk != rowj:\n                        if coli != colj and coli != colk and colk != colj:\n                            if maxx < newBoard[i] + newBoard[j] + newBoard[k]:\n                                maxx = newBoard[i] + newBoard[j] + newBoard[k]\n        return maxx\n",
    "submit_ts": "1723910397",
    "subm_id": "1359229322"
}