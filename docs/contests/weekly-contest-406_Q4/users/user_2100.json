{
    "username": "roshan_raj21b",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, char>> pq;\n\n        for(int i=0; i<horizontalCut.size(); i++){\n            pq.push({horizontalCut[i], 'h'});\n        }\n        for(int i=0; i<verticalCut.size(); i++){\n            pq.push({verticalCut[i], 'v'});\n        }\n\n        long long total_cost= 0;\n        int v_pieces= 1;\n        int h_pieces= 1;\n\n        while(!pq.empty()){\n            int cost= pq.top().first;\n            int type= pq.top().second;\n            pq.pop();\n\n            if(type=='h'){\n                total_cost= total_cost+ cost*v_pieces;\n                h_pieces++;\n            }\n            if(type=='v'){\n                total_cost= total_cost+ cost*h_pieces;\n                v_pieces++;\n            }\n        }\n        return total_cost;\n    }\n};",
    "submit_ts": "1720926037",
    "subm_id": "1320274042"
}