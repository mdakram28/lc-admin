{
    "username": "Saman",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n      int q=200;\n      int m=queries.size();\n      int n=s.size();\n      vector <long long >ans(m,0);\n      int a[2]={0,0};\n      a[0]=0;\n      a[1]=0;\n      int dp[n+2];\n      int pd[n+2];\n      int ind=0;\n      for (int i=0; i<n; i++){\n        while(ind<n){\n          if (s[ind]=='0'){\n            a[0]++;\n            if (a[0]>k && a[1]>k){\n              a[0]--;\n              break;\n            }\n          }else {\n            a[1]++;\n            if (a[0]>k && a[1]>k){\n              a[1]--;\n              break;\n            }\n          }\n          ind++;\n        }\n        dp[i]=ind;\n        if (s[i]=='0') a[0]--;\n        else a[1]--;\n      }\n      a[0]=0;\n      a[1]=0;\n      ind=n-1;\n      for (int i=n-1; i>=0; i--){\n        while(ind>=0){\n          if (s[ind]=='0'){\n            a[0]++;\n            if (a[0]>k && a[1]>k){\n              a[0]--;\n              break;\n            }\n          }else {\n            a[1]++;\n            if (a[0]>k && a[1]>k){\n              a[1]--;\n              break;\n            }\n          }\n          ind--;\n        }\n        pd[i]=ind;\n        if (s[i]=='0') a[0]--;\n        else a[1]--;\n      }\n      vector <pair<pair<int,int> , int >> mo[500];\n      vector <pair<pair<int,int>,int> > qq;\n      for (int i=0; i<queries.size(); i++){\n        qq.push_back({{queries[i][0],queries[i][1]},i});\n      }\n      sort(qq.begin(),qq.end());\n      for (int i=0; i<m; i++){\n        mo[(qq[i].first.first/q)].push_back({{qq[i].first.second,qq[i].first.first},qq[i].second});\n      }\n      long long sum;\n      for (int i=0; i<500; i++){\n        if (mo[i].size()>0){\n          sort(mo[i].begin(),mo[i].end());\n          sum=0;\n          for (int j=mo[i][0].first.second; j<=mo[i][0].first.first; j++){\n            sum+=min(dp[j],mo[i][0].first.first+1)-j;\n          }\n          int l=mo[i][0].first.second;\n          int r=mo[i][0].first.first;\n          ans[mo[i][0].second]=sum;\n          for (int k=1; k<mo[i].size(); k++){\n            int ll=mo[i][k].first.second;\n            int rr=mo[i][k].first.first;\n            for (int j=r+1; j<=rr; j++){\n              sum+=j-max(pd[j],ll-1);\n            }\n            if (l<ll){\n              for (int j=l; j<ll; j++){\n                sum-=min(dp[j],r+1)-j;\n              }\n            }else if (l>ll){\n              for (int j=ll; j<l; j++){\n                sum+=min(dp[j],r+1)-j;\n              }\n            }\n            ans[mo[i][k].second]=sum;\n            l=ll;\n            r=rr;\n          }\n        }\n      }\n      return ans;\n    }\n};",
    "submit_ts": "1723952199",
    "subm_id": "1359790462"
}