{
    "username": "MvKaio",
    "submission": "#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate <class T>\n\tusing ord_set = tree<T, null_type, less<T>, rb_tree_tag,\n\ttree_order_statistics_node_update>;\n\nlong long f(int x) {\n    return x * (x + 1) / 2;\n}\n\nclass Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size();\n        vector<vector<int>> occ(2);\n        for (int i = 0; i < n; i++)\n            occ[s[i] - '0'].push_back(i);\n        \n        int ans = 0;\n        \n        for (int l = 0, r = 0; l < occ[1].size(); l = r) {\n            while (r < occ[1].size() && (occ[1][r] - (r - l)) == occ[1][l]) r++;\n            ans += (long long)(r - l) * (r - l + 1) / 2;\n        }\n        \n        for (int pi = 0; pi < occ[0].size(); pi++) {\n            for (int pj = pi; pj < occ[0].size(); pj++) {\n                int i = occ[0][pi];\n                int j = occ[0][pj];\n                int prev = (pi == 0 ? -1 : occ[0][pi - 1]);\n                int nxt = (pj + 1 < occ[0].size() ? occ[0][pj + 1] : n);\n                int ql = i - prev - 1;\n                int qr = nxt - j - 1;\n                \n                int q0 = pj - pi + 1;\n                int q1 = (j - i + 1) - q0;\n                if (q0*q0 >= n + n) break;\n                \n                int need = max(0, q0 * q0 - q1);\n                \n                long long l0 = max(0, need - qr);\n                long long l1 = min(ql, need);\n                if (l0 <= l1) {\n                    ans += (qr + 1) * (l1 - l0 + 1) - (f(need - l0) - f(need - l1 - 1));\n                }\n                ans += (ql - l1) * (qr + 1);\n               \n                //cout << i << \" \" << j << \" \" << q0 << \" \" << q1 << \" \" << ql << \" \" << qr << \" \" << need << \" \" << l0 << \" \" << l1 << \" \" << (qr + 1) * (l1 - l0 + 1) - (f(l1) - f(l0 - 1)) << \" \" << (ql - l1) * (qr + 1) << endl;;\n                //for (int k = 0; k <= ql; k++) {\n                //    int p = max(0, need - k);\n                //    ans += max(0, qr - p + 1);\n                //}\n            }\n        }\n        \n        \n        return ans;\n    }\n};",
    "submit_ts": "1722138243",
    "subm_id": "1335785832"
}