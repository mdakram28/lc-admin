{
    "username": "Sanath_Kulla",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int kk) {\n        using ll = long long;\n        ll ans = 0;\n        ll n = nums.size();\n    vector<vector<int>> dp(n+1,vector<int>(21 , 0));\n    vector<int> lg(n+1);\n    int k=20;\n    lg[1] = 0;\n    for (int i = 2; i <= n; i++)\n        lg[i] = lg[i/2] + 1;\n    for(int i=0;i<n;i++)dp[i][0]=nums[i];\n    for(int j=1;j<=k;j++){\n        for(int i=0;i+(1<<j)<=n;i++){\n            dp[i][j]=(dp[i][j-1]&dp[i+(1<<(j-1))][j-1]);\n        }\n    }\n        \n        \n  auto get = [&](int l,int r){\n    int k=r-l+1;\n    k=lg[k];\n    return (dp[l][k]&dp[r-(1<<k)+1][k]);\n  };\n\n  \n        for(int i = 0; i < n;i++){\n             ll lo = i , hi = n-1;\n             if(nums[i] < kk)continue;\n             ll r = n;\n             while(lo <= hi){\n                 ll mid = (lo + hi)/2;\n                 if(get(i , mid) < kk){\n                     r = mid;\n                     hi = mid-1;\n                 }else lo = mid+1;\n             }\n             ll l = i-1;\n            lo = i , hi = n-1;\n             while(lo <= hi){\n                 ll mid = (lo + hi)/2;\n                 if(get(i , mid) > kk){\n                     l = mid;\n                     lo = mid+1;\n                 }else hi = mid-1;\n             }\n            \n             l++,r--;\n             if(l >= i and r >= i and r >= l)ans += (r-l+1);\n            \n        }\n        cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1720279738",
    "subm_id": "1311763162"
}