{
    "username": "huan-ka",
    "submission": "class Solution {\npublic:\n    int res = 0x3f3f3f3f;\n    int n,m;\n    int cal(int x1,int y1,int x2,int y2,vector<vector<int>>& grid)\n    {\n        int minx = 1001,maxx = -1;\n        int miny = 1001,maxy = -1;\n        for(int i = x1; i <= x2; i++)\n        {\n            for(int j = y1; j <= y2; j ++)\n            {\n                if(grid[i][j])\n                {\n                    minx = min(minx,i);\n                    miny = min(miny,j);\n                    maxx = max(maxx,i);\n                    maxy = max(maxy,j);\n                }\n            }\n        }\n        int res = (maxx - minx + 1) * (maxy - miny + 1);\n        if(res < 0)return -1;\n        else return res;\n    }\n    void dfs(int now,int c,int hx,int hy,int tx,int ty,vector<vector<int>>& grid)\n    {\n        if(c == 2) \n        {\n            int tp = cal(hx,hy,tx,ty,grid);\n            if(tp < 0)return;\n            res = min(now + tp,res);\n            return;\n        }\n        // \u6a2a\u5411\n        for(int i = hx; i < tx; i ++)\n        {\n            // up\n            int tp = cal(hx,hy,i,ty,grid);\n            if(tp < 0)continue;\n            else dfs(now + tp, c+1,i + 1,hy,tx,ty,grid);\n            // down\n            tp = cal(i + 1,hy,tx,ty,grid);\n            if(tp < 0)continue;\n            else dfs(now + tp, c + 1, hx,hy,i,ty,grid);\n        }\n        // \u7eb5\u5411\n        for(int i = hy; i < ty; i ++)\n        {\n            //l\n            int tp = cal(hx,hy,tx,i,grid);\n            if(tp < 0)continue;\n            else dfs(now + tp, c + 1, hx, i + 1, tx, ty,grid);\n            tp = cal(hx,i + 1,tx,ty,grid);\n            if(tp < 0) continue;\n            else dfs(now + tp, c + 1, hx,hy,tx,i,grid);\n        }\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        n = grid.size(),m = grid[0].size();\n        dfs(0,0,0,0,n - 1,m - 1,grid);\n        return res;\n    }\n};",
    "submit_ts": "1719113376",
    "subm_id": "541397150"
}