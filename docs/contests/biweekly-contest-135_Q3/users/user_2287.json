{
    "username": "bingyan2",
    "submission": "import numpy as np\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)//2\n        diff_counts = [0 for i in range(k + 1)]\n        new_max_counts = [0 for i in range(k + 1)]\n        for i in range(n):\n            a,b = nums[i],nums[2 * n - 1 - i]\n            diff_counts[abs(a-b)] += 1\n            max_pos = max(k-b,a)\n            min_pos = min(-b, a-k)\n            new_max = max(max_pos, -min_pos)\n            print(a,b,new_max)\n            if new_max < k:\n                new_max_counts[new_max+1] += 1\n        save = n - np.array(new_max_counts).cumsum()\n        # df = pd.DataFrame(index=range(-2*k,2*k+1))\n        # df['diff_counts'] = diff_counts\n        # df['save'] = save\n        # print(df)\n        return 2 * n - np.max(save + diff_counts)\n",
    "submit_ts": "1721490302",
    "subm_id": "1327478746"
}