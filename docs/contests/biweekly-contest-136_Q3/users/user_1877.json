{
    "username": "ayesha19765",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        int numRows = matrix.size(), numCols = matrix[0].size();\n        int flipsRequired = 0;\n\n        if (numRows % 2 == 1 && numCols % 2 == 1) {\n            if (matrix[numRows / 2][numCols / 2] == 1) {\n                flipsRequired += 1;\n            }\n        }\n\n        vector<int> count(3, 0);\n        if (numRows % 2 == 1) {\n            int left = 0, right = numCols - 1;\n            while (left < right) {\n                int sum = matrix[numRows / 2][left] + matrix[numRows / 2][right];\n                count[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (numCols % 2 == 1) {\n            int top = 0, bottom = numRows - 1;\n            while (top < bottom) {\n                int sum = matrix[top][numCols / 2] + matrix[bottom][numCols / 2];\n                count[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        if (count[2] % 2 == 1) {\n            if (count[1] > 0) {\n                flipsRequired += count[1];\n            } else {\n                flipsRequired += 2;\n            }\n        } else {\n            flipsRequired += count[1];\n        }\n\n        for (int i = 0; i < numRows / 2; ++i) {\n            for (int j = 0; j < numCols / 2; ++j) {\n                int topLeft = matrix[i][j];\n                int bottomLeft = matrix[numRows - 1 - i][j];\n                int topRight = matrix[i][numCols - 1 - j];\n                int bottomRight = matrix[numRows - 1 - i][numCols - 1 - j];\n\n                int total = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (total != 0 && total != 4) {\n                    flipsRequired += min(total, 4 - total);\n                }\n            }\n        }\n\n        return flipsRequired;\n    }\n};\n",
    "submit_ts": "1722699731",
    "subm_id": "1343220602"
}