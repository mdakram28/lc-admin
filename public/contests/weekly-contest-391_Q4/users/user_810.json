{
    "username": "AutumnMist",
    "submission": "public class Solution\n{\n    public int MinimumDistance(int[][] points)\n    {\n        int n = points.Length;\n        int[][] xy1 = new int[n][];\n        int[][] xy2 = new int[n][];\n        for(int i = 0; i < n; i++)\n        {\n            xy1[i] = new int[] { i, points[i][0] - points[i][1] };\n            xy2[i] = new int[] { i, points[i][0] + points[i][1] };\n        }\n        Array.Sort(xy1, (A, B) => (A[1] - B[1]));\n        Array.Sort(xy2, (A, B) => (A[1] - B[1]));\n\n        int ans = Math.Max(xy1[n - 1][1] - xy1[0][1], xy2[n - 1][1] - xy2[0][1]);\n\n        int idx, L, R; idx = L = R = -1;\n        int res = 0;\n        //xy1 0\n        idx = xy1[0][0];\n        L = 0; R = n - 1;\n        if (xy2[0][0] == idx) L++;\n        if (xy2[n - 1][0] == idx) R--;\n        res = Math.Max(xy1[n - 1][1] - xy1[1][1], xy2[R][1] - xy2[L][1]);\n        ans = Math.Min(ans, res);\n        //xy1 n - 1\n        idx = xy1[n - 1][0];\n        L = 0; R = n - 1;\n        if (xy2[0][0] == idx) L++;\n        if (xy2[n - 1][0] == idx) R--;\n        res = Math.Max(xy1[n - 2][1] - xy1[0][1], xy2[R][1] - xy2[L][1]);\n        ans = Math.Min(ans, res);\n        //xy2 0\n        idx = xy2[0][0];\n        L = 0; R = n - 1;\n        if (xy1[0][0] == idx) L++;\n        if (xy1[n - 1][0] == idx) R--;\n        res = Math.Max(xy2[n - 1][1] - xy2[1][1], xy1[R][1] - xy1[L][1]);\n        ans = Math.Min(ans, res);\n        //xy2 n - 1\n        idx = xy2[n - 1][0];\n        L = 0; R = n - 1;\n        if (xy1[0][0] == idx) L++;\n        if (xy1[n - 1][0] == idx) R--;\n        res = Math.Max(xy2[n - 2][1] - xy2[0][1], xy1[R][1] - xy1[L][1]);\n        ans = Math.Min(ans, res);\n        return ans;\n    }\n}"
}