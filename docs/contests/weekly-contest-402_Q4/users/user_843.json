{
    "username": "s1967",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>pbds;\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        pbds s;\n        int n=nums.size();\n        for(int i=1;i<n-1;i++){\n             if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]){\n                 s.insert(i);\n             }\n        }\n        int q=queries.size();\n        vector<int>ans;\n        for(int i=0;i<q;i++){\n            int type=queries[i][0];\n            if(type==1){\n                int l=queries[i][1];\n                int r=queries[i][2];\n                int ans1=s.order_of_key(l);\n                int ans2=s.order_of_key(r+1);\n                if(s.find(l)!=s.end())ans2--;\n                if(s.find(r)!=s.end())ans2--;\n                ans.push_back(max(ans2-ans1,0));\n            }\n            else{\n                int index,val;\n                index=queries[i][1];\n                val=queries[i][2];\n                nums[index]=val;\n                if(index>0&&index<(n-1)){\n                    if(nums[index]>nums[index-1]&&nums[index]>nums[index+1]){\n                        if(s.find(index-1)!=s.end())s.erase(s.find(index-1));\n                        if(s.find(index+1)!=s.end())s.erase(s.find(index+1));\n                        s.insert(index);\n                    }\n                    else{\n                        if(s.find(index)!=s.end())s.erase(s.find(index));\n                        if(index>1){\n                            if(nums[index-1]>nums[index]&&nums[index-1]>nums[index-2]){\n                                s.insert(index-1);\n                            }\n                            else{\n                                if(s.find(index-1)!=s.end())s.erase(s.find(index-1));\n                            }\n                        }\n                        if((index+2)<n){\n                            if(nums[index+1]>nums[index+2]&&nums[index+1]>nums[index]){\n                                s.insert(index+1);\n                            }\n                             else{\n                                if(s.find(index+1)!=s.end())s.erase(s.find(index+1));\n                            }\n                        }\n                    }\n                }\n                else{\n                    if(s.find(index)!=s.end())s.erase(s.find(index));\n                    if(index>1){\n                        if(nums[index-1]>nums[index]&&nums[index-1]>nums[index-2]){\n                            s.insert(index-1);\n                        }\n                        else{\n                            if(s.find(index-1)!=s.end())s.erase(s.find(index-1));\n                        }\n                    }\n                    if((index+2)<n){\n                        if(nums[index+1]>nums[index+2]&&nums[index+1]>nums[index]){\n                            s.insert(index+1);\n                        }\n                         else{\n                            if(s.find(index+1)!=s.end())s.erase(s.find(index+1));\n                        }\n                    }\n                }\n            }\n            cout<<s.size()<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507989.0
}