{
    "username": "vijaypurohit",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        // return floydWarshall(n, queries);\n        \n        vector<int> dist(n,0);\n        for(int i=1;i<n;i++){\n            dist[i] = dist[i-1] + 1;\n        }\n        \n        set<int> nodes;\n        for (int i = 0; i < n; ++i) {\n            nodes.insert(i);\n        }\n\n\n        \n        int nq = queries.size();\n        vector<int> ans(nq);\n        for(int i=0; i<nq; i++){\n            const auto q = queries[i];\n            int u = q[0], v = q[1];\n            auto lb = nodes.lower_bound(u+1);\n            auto ub = nodes.lower_bound(v);\n            nodes.erase(lb, ub);\n            ans[i] = nodes.size() - 1;\n        }\n        return ans;\n    }\n    \n    vector<int> floydWarshall(int n, vector<vector<int>>& queries) {\n        vector<vector<int>>dist(n,vector<int>(n,1e8));\n        dist[0][0] = 0;\n        for(int i=1;i<n;i++){\n            dist[i][i]=0;\n            dist[i-1][i] = 1;\n        }\n        for(int k=0;k<n;k++){\n            for(int j=0;j<n;j++){\n                dist[0][j]=min(dist[0][j],(dist[0][k]+dist[k][j]));\n            }\n        }\n        auto FW = [&](const int u, const int v){\n            for(int j=0;j<n;j++){\n                    dist[0][j]=min(dist[0][j],(dist[0][u]+dist[u][j]));\n            }\n            for(int k=v;k<n;k++){\n                for(int j=0;j<n;j++){\n                    dist[0][j]=min(dist[0][j],(dist[0][k]+dist[k][j]));\n                }\n            }\n            return dist[0][n-1];\n        };\n        \n        int nq = queries.size();\n        vector<int> ans(nq);\n        for(int i=0; i<nq; i++){\n            const auto q = queries[i];\n            int u = q[0], v = q[1];\n            dist[u][v]  = 1;\n            ans[i] = FW(u, v);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743682",
    "subm_id": "1343797317"
}