{
    "username": "btcmoon",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int n = nums.length;\n        int ans = Integer.MAX_VALUE;\n        Map<Integer, Integer> mp = new HashMap<>();\n        \n        for (int i = n - 1; i >= 0; i--) {\n            int x = nums[i];\n            Map<Integer, Integer> newMp = new HashMap<>();\n            for (Map.Entry<Integer, Integer> entry : mp.entrySet()) {\n                newMp.put(entry.getKey() & x, entry.getValue());\n            }\n            mp = newMp;\n            mp.put(x, i);\n            for (int val : mp.keySet()) {\n                ans = Math.min(ans, Math.abs(k - val));\n            }\n        }\n        \n        return ans;\n    }\n}\n",
    "submit_ts": 1717298119.0
}