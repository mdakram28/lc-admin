{
    "username": "kshv01",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n#include <cmath>\n\nclass Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        std::map<int, std::vector<int>> diffMap;\n        std::vector<int> sortedX;\n        int n = nums.size();\n        \n        for (int i = 0; i < n / 2; ++i) {\n            int num1 = nums[i];\n            int num2 = nums[n - i - 1];\n            int difference = std::abs(num1 - num2);\n            int maxValue = std::max({num1, num2, k - num1, k - num2});\n            \n            diffMap[difference].push_back(maxValue);\n            sortedX.push_back(maxValue);\n        }\n        \n        int minChangesRequired = n;\n        std::sort(sortedX.begin(), sortedX.end());\n        \n        for (const auto& [difference, values] : diffMap) {\n            int index = std::lower_bound(sortedX.begin(), sortedX.end(), difference) - sortedX.begin();\n            int totalChanges = index * 2 + (n / 2 - index);\n            \n            for (int value : values) {\n                if (value < difference) {\n                    totalChanges -= 2;\n                } else {\n                    totalChanges -= 1;\n                }\n            }\n            \n            minChangesRequired = std::min(minChangesRequired, totalChanges);\n        }\n        \n        return minChangesRequired;\n    }\n};\n",
    "submit_ts": "1721489006",
    "subm_id": "1327439894"
}