{
    "username": "_lemonjuice_",
    "submission": "class Solution {\npublic:\n\n    int MaxDist(vector<pair<int, int> >& A, int N)\n{\n    // Vectors to store maximum and\n    // minimum of all the four forms\n    vector<int> V(N), V1(N);\n \n    for (int i = 0; i < N; i++) {\n        V[i] = A[i].first + A[i].second;\n        V1[i] = A[i].first - A[i].second;\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    int maximum\n        = max(V.back() - V.front(), V1.back() - V1.front());\n \n    return maximum;\n}\n\n    int minimumDistance(vector<vector<int>>& points) {\n        vector <pair<int,int>> v1,v2;\n        int n=points.size();\n        for(int i=0;i<n;i++){\n            v1.push_back({points[i][0]+points[i][1],i});\n            v2.push_back({points[i][0]-points[i][1],i});\n        }\n        sort(v1.begin(),v1.end());\n        sort(v2.begin(),v2.end());\n        pair <int,int> op1={v1.back().second,v1.front().second};\n        if(v2.back().first-v2.front().first>v1.back().first-v1.front().first){\n            op1={v2.back().second,v2.front().second};\n        }\n        vector <pair<int,int>> x1,x2;\n        for(int i=0;i<n;i++){\n            if(i==op1.first){\n                continue;\n            }\n            x1.push_back({points[i][0],points[i][1]});\n        }\n        for(int i=0;i<n;i++){\n            if(i==op1.second){\n                continue;\n            }\n            x2.push_back({points[i][0],points[i][1]});\n        }\n        return min(MaxDist(x1,n-1),MaxDist(x2,n-1));\n    }\n};"
}