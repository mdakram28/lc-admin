{
    "username": "KVNS07",
    "submission": "class Solution {\npublic:\n    // int dp[]\n    #define ll long long\n    unordered_map<int,unordered_map<int,unordered_map<int,int>>> dp;\n    int fun(ll i,int k,int fl,int jump){\n        int ans=0;\n        if(i==k) {\n            // cout<<fl<<\" \"<<jump<<endl;\n            ans++;\n        }\n        if(dp[i][fl].find(jump)!=dp[i][fl].end()) return dp[i][fl][jump];\n        if(fl==0) ans+=fun(i-1,k,1,jump);\n        if((i+(1<<jump))-1<=k){\n            ans+=fun(i+(1<<jump),k,0,jump+1);\n        }\n        // if(i==k){\n        //     return dp[i][fl][jump]=1+ans;\n        // }\n        return dp[i][fl][jump]=ans;\n    }\n    int waysToReachStair(int k) {\n        // if(k==0) return 2;\n        // if(k==1) return 4;\n        return fun(1,k,0,0);\n    }\n};",
    "submit_ts": "1716088832",
    "subm_id": "1261825270"
}