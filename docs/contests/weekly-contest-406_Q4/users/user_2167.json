{
    "username": "sukanya_chopra",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> pq_h;\n        priority_queue<int> pq_v;\n\n        long long hor_pieces = 1;\n        long long ver_pieces = 1;\n        long long cost = 0;\n        for(int i : horizontalCut) pq_h.push(i);\n        for(int i : verticalCut) pq_v.push(i);\n\n        while(hor_pieces!=m || ver_pieces!=n){\n            if(pq_v.empty() || (!pq_h.empty() && pq_h.top()>pq_v.top())){\n                cost+=(pq_h.top()*ver_pieces);\n                hor_pieces++;\n                pq_h.pop();\n            }\n            else{\n                cost+=(pq_v.top()*hor_pieces);\n                ver_pieces++;\n                pq_v.pop();\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926672",
    "subm_id": "1320293057"
}