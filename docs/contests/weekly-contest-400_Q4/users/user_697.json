{
    "username": "AshishLimitless",
    "submission": "#define ll int\n#define pb push_back\n#define F first\n#define S second\n#define I insert\n#define vll vector<ll>\n#define vdd vector<double>\n#define vss vector<string>\n#define vpl vector<pair<ll,ll>>\n#define maxe(v) *max_element((v).begin(),(v).end());\n#define mine(v) *min_element((v).begin(),(v).end());\n#define loo(i,n) for(int i=0;i<n;i++)\t\n#define sor(v) sort(v.begin(),v.end());\n#define pyes cout<<\"YES\"<<endl;\n#define pno cout<<\"NO\"<<endl;\n#define mll map<ll,ll>\n#define mcl map<char,ll>\n#define mod 1000000007\n#define ft front()\n#define bk back()\n#define pf push_front\n#define bg(x) begin(x)\n#define all(x) bg(x), end(x)\n#define rall(x) x.rbegin(), x.rend()\n#define lb lower_bound\n#define ub upper_bound\n#define each(a,x) for(auto a:x)\t\n#define nl cout<<\"\\n\";\n#define pri(xx) cout<<xx<<endl;\n#define sll set<ll>\n#define sch set<char>\n#define pq priority_queue<int, vector<int>, greater<int> >\n#define pql priority_queue<ll>\n#define INF 1e9\n#define manh(a,b,c,d) abs(a-c)+abs(b-d)\n#define euc(a,b,c,d) sqrt((a-c)*(a-c)+(b-d)*(b-d))\n#define foo(i,a,b) for(ll i=a;i<b;i++)\n#define pril(i,a,b,v) foo(i,a,b){cout<<v[i]<<\" \";}\n#define pqc priority_queue<char>\n#define to_upper(s)  transform(s.begin(), s.end(), s.begin(), ::toupper);\n#define lowercase(s)  transform(s.begin(), s.end(), s.begin(), ::tolower);\nclass segtree{\n  vector<ll>seg;\npublic:\n  segtree(ll n){\n    seg.resize(4*n+1);\n  }\n  void segbuild(ll ind,ll low,ll high,vll &v){\n    if(low==high){\n      seg[ind]=v[low];\n      return;\n    }\n    ll mid=low+(high-low)/2;\n    segbuild(2*ind+1,low,mid,v);\n    segbuild(2*ind+2,mid+1,high,v);\n    seg[ind]=(seg[2*ind+1]&seg[2*ind+2]);\n\n  }\n  ll Rquery(ll ind,ll low,ll high,ll l,ll r){\n    if(l>high || low>r) return (1LL<<30)-1;  //NO OVERLAPPING CASE\n    if(l<=low && high<=r) return seg[ind];\n    ll mid=low+(high-low)/2;\n    ll left=Rquery(2*ind+1,low,mid,l,r);\n    ll right=Rquery(2*ind+2,mid+1,high,l,r);\n    return (left&right);\n  }\n  void Pupdate(ll ind,ll low,ll high,ll i,ll val){\n    if(low==high){\n      seg[ind]=val;\n      return;\n    }\n    ll mid=low+(high-low)/2;\n    if(i<=mid) Pupdate(2*ind+1,low,mid,i,val);\n    else Pupdate(2*ind+2,mid+1,high,i,val);\n    seg[ind]=(seg[2*ind+1]&seg[2*ind+2]);\n  }\n\n};\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        segtree seg(nums.size());\n        seg.segbuild(0,0,nums.size()-1,nums);\n        ll ans=INT_MAX;\n        loo(i,nums.size()){\n            ll low=i-1;\n            ll high=nums.size()-1;\n            while(low+1<high){\n                ll mid=(low+high)/2;\n                if(seg.Rquery(0,0,nums.size()-1,i,mid)>=k){\n                    low=mid;\n                }\n                else high=mid;\n            }\n            if(low!=i-1) ans=min(ans,abs(seg.Rquery(0,0,nums.size()-1,i,low)-k));\n            ans=min(ans,abs(seg.Rquery(0,0,nums.size()-1,i,high)-k));\n                \n            \n        }\n        return ans;\n        \n        \n        \n        \n    }\n};",
    "submit_ts": 1717299663.0
}