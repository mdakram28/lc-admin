{
    "username": "user6606yY",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<int>> mx(m, vector<int>(3, -1));\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n                if(mx[i][0] == -1 || board[i][mx[i][0]] < board[i][j]) {\n                    swap(mx[i][1], mx[i][2]);\n                    swap(mx[i][0], mx[i][1]);\n                    mx[i][0] = j;\n                } else if(mx[i][1] == -1 || board[i][mx[i][1]] < board[i][j]) {\n                    swap(mx[i][1], mx[i][2]);\n                    mx[i][1] = j;\n                } else if(mx[i][2] == -1 || board[i][mx[i][2]] < board[i][j]) {\n                    mx[i][2] = j;\n                }\n            }\n        }\n        for(auto& v: mx) {for(int i: v) cout << i << \" \"; cout << endl;}\n        long long ans = INT_MIN*3ll;\n        for(int i = 0; i < m; i++) {\n            for(int j = i + 1; j < m; j++) {\n                for(int k = j + 1; k < m; k++) {\n                    for(int i1 = 0; i1 < 3; i1++) {\n                        for(int j1 = 0; j1 < 3; j1++) {\n                            for(int k1 = 0; k1 < 3; k1++) {\n                                if(mx[i][i1] != mx[j][j1] && mx[j][j1] != mx[k][k1] && mx[k][k1] != mx[i][i1]) {\n                                    ans = max(ans, (long long)board[i][mx[i][i1]] + board[j][mx[j][j1]] + board[k][mx[k][k1]]);\n                                }\n                            }\n                        }\n                    }\n                    // cout << i << \" \" << j << \" \"<<k<<\" \" << ans << endl;\n                    // if(mx[i][0] != mx[j][1] && mx[j][1] != mx[k][2] && mx[k][2] != mx[i][0])\n                    //     ans = max(ans, (long long)board[i][mx[i][0]] + board[j][mx[j][1]] + board[k][mx[k][2]]);\n                    // cout << i << \" \" << j << \" \"<<k<<\" \" << ans << endl;\n                    // if(mx[i][0] != mx[j][2] && mx[j][2] != mx[k][1] && mx[k][1] != mx[i][0])\n                    //     ans = max(ans, (long long)board[i][mx[i][0]] + board[j][mx[j][2]] + board[k][mx[k][1]]);\n                    // cout << i << \" \" << j << \" \"<<k<<\" \" << ans << endl;\n                    // if(mx[i][1] != mx[j][0] && mx[j][0] != mx[k][2] && mx[k][2] != mx[i][1])\n                    //     ans = max(ans, (long long)board[i][mx[i][1]] + board[j][mx[j][0]] + board[k][mx[k][2]]);\n                    // cout << i << \" \" << j << \" \"<<k<<\" \" << ans << endl;\n                    // if(mx[i][1] != mx[j][2] && mx[j][2] != mx[k][0] && mx[k][0] != mx[i][1])\n                    //     ans = max(ans, (long long)board[i][mx[i][1]] + board[j][mx[j][2]] + board[k][mx[k][0]]);\n                    // cout << i << \" \" << j << \" \"<<k<<\" \" << ans << endl;\n                    // if(mx[i][2] != mx[j][1] && mx[j][1] != mx[k][0] && mx[k][0] != mx[i][2])\n                    //     ans = max(ans, (long long)board[i][mx[i][2]] + board[j][mx[j][1]] + board[k][mx[k][0]]);\n                    // cout << i << \" \" << j << \" \"<<k<<\" \" << ans << endl;\n                    // if(mx[i][2] != mx[j][0] && mx[j][0] != mx[k][1] && mx[k][1] != mx[i][2])\n                    //     ans = max(ans, (long long)board[i][mx[i][2]] + board[j][mx[j][0]] + board[k][mx[k][1]]);\n                    // cout << i << \" \" << j << \" \"<<k<<\" \" << ans << endl;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723910115",
    "subm_id": "1359217979"
}