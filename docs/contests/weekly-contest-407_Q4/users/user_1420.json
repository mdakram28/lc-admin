{
    "username": "rentyydrip",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        diff = [nums[i] - target[i] for i in range(n)]\n        diff.insert(0, 0)\n        diff.insert(n + 1, 0)\n        # print(diff)\n        \n        def sign(number):\n            if number > 0:\n                return 1\n            elif number < 0:\n                return -1\n            else:\n                return 0\n    \n        stack = []\n        \n        # -1 -2 -3 -3 -2 -2 -1\n        # -1 -2 -2 -1 -1 -2 -1\n        \n        res = 0\n        for i in range(1, n + 2):\n            \n            if sign(diff[i]) != sign(diff[i - 1]):\n                # print(f\" {stack}, {diff[i]}, {diff[i - 1]}\")\n                if len(stack) > 0:\n                    prev = 0\n                    while len(stack) > 0:\n                        if stack[-1] > prev:\n                            res += abs(stack[-1] - prev)\n                        # if stack[-1] < prev:\n                            # res += abs(stack[-1] - prev)\n                        prev = stack.pop()\n            \n            if diff[i] != 0:\n                stack.append(abs(diff[i]))\n                \n        \n        # print(\"---\")\n        return res",
    "submit_ts": "1721532248",
    "subm_id": "1327981313"
}