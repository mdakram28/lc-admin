{
    "username": "Zhipeng Song",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        if(n <= 2)\n    {\n        int ans = pow(10, n) - 1;\n        while(1)\n        {\n            string s = to_string(ans);\n            string t = s;\n            reverse(t.begin(), t.end());\n            if(s == t && ans % k == 0) return s;\n            ans--;\n        }\n    }\n    string ans(n, '9');\n    if(k == 5)\n    {\n        ans[0] = ans.back() = '5';\n        return ans;\n    }\n    if(k % 2 == 0)\n    {\n        ans[0] = ans.back() = '8';\n        if(k % 4 == 0) ans[1] = ans[n - 2] = '8';\n        if(k % 8 == 0) ans[2] = ans[n - 3] = '8';\n    }\n    int cur = 0, b = 1;\n    for(int i = n - 1; i >= 0; i--)\n    {\n        cur = (cur + b * (ans[i] - '0')) % k;\n        b = (b * 10) % k;\n    }\n    \n    int base = 1;\n    for(int i = 0; i < (n - 1) / 2; i++) base = (base * 10) % k;\n    int multi = n & 1 ? 1 : 11 % k;\n    \n    while(cur % k != 0)\n    {\n        cur = (cur + k - (base * multi) % k) % k;\n        ans[n / 2]--;\n        if(n % 2 == 0) ans[n / 2 - 1]--;\n    }\n    return ans;\n    }\n};",
    "submit_ts": "1723949738",
    "subm_id": "1359727604"
}