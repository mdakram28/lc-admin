{
    "username": "66bro-CUNY",
    "submission": "const int N = 1e5 + 10;\n\n\nint get(vector<int>& p, int l, int r) {\n    return l == 0 ? p[r] : p[r] - p[l - 1];\n}\n\nint get1(vector<long long>& p, int l, int r) {\n    return l == 0 ? p[r] : p[r] - p[l - 1];\n}\n\n\nstruct Q {\n    int l, r, i;\n    bool operator<(const Q& other){\n        return r < other.r;\n    }\n};\n\nconst int SIZE = 200000 + 100;\nstruct Fenwick {\n  long long tree[SIZE];\n  void init(int n) {\n    for(int i = 0; i <= n + 1; i++) tree[i] = 0;\n  }\n\n  void update(int i, long long val) {\n    i++;\n    while(i < SIZE){\n      tree[i] += val;\n      i += (i & -i);\n    }\n  }\n\n  long long pre(int i) {\n    long long sum = 0;\n    while(i>0){\n      sum += tree[i];\n      i -= ( i & -i);\n    }\n    return sum;\n  }\n  long long query(int i, int j) {\n      return pre(j + 1) - pre(i);\n  }\n} tr1, tr2, tr3;\n\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        vector<long long> ans(q.size());\n        int n = s.size();\n        vector<int> p1(n), p2(n);\n        for(int i = 0; i < s.size(); i++) {\n            if(s[i] == '0') p1[i] = 1;\n            else p2[i] = 1;\n            if(i) {\n                p1[i] += p1[i - 1];\n                p2[i] += p2[i - 1];\n            }\n        }\n        \n        vector<int> extend(n, -1);\n        for(int i = 0; i < n; i++) {\n            int l = 0, r = i;\n            int p = -1;\n            while(l <= r) {\n                int mid = l + (r - l) / 2;\n                int zero = get(p1, mid, i);\n                int one = get(p2, mid, i);\n                if(zero <= k || one <= k) {\n                    p = mid;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            extend[i] = p;\n        }\n        \n        vector<long long> p3(n);\n        for(int i = 0; i < n; i++) {\n            p3[i] = i - extend[i] + 1;\n            if(i) p3[i] += p3[i - 1];\n        }\n        \n        \n        vector<Q> b;\n        for(int i = 0; i < q.size(); i++) {\n            int l = q[i][0], r = q[i][1];\n            b.push_back({l, r, i});\n        }\n        \n        sort(b.begin(), b.end());\n        int j = 0;\n        tr1.init(n + 1);\n        tr2.init(n + 1);\n        tr3.init(n + 1);\n        \n        //for(int i : extend) cout << i << \" \";\n        //cout << endl;\n        \n        for(int i = 0; i < b.size(); i++) {\n            int r = b[i].r;\n            while(j <= r) { \n                tr1.update(extend[j], (j - extend[j] + 1));\n                tr2.update(extend[j], 1);\n                tr3.update(extend[j], j + 1);\n                j++;\n            }\n            int l = b[i].l, index = b[i].i;\n            long long s = 0;\n            long long nonpass = tr1.query(l, r);\n            s += nonpass;\n            \n            long long pass = 0;\n            if(l > 0) {\n                pass = tr3.query(0, l - 1);\n                pass -= (((l + 1ll) * l) / 2);\n                long long passcount = (r - l + 1) - tr2.query(l, r);\n                pass -= ((passcount + 0ll) * l);\n                \n                s += pass;\n            }\n            \n            ans[index] = s;\n            \n        }\n        \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1723951963",
    "subm_id": "1359784447"
}