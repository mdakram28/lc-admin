{
    "username": "didwhddks",
    "submission": "struct Trie {\n    int n, cnt;\n    vector<int> cost;\n    vector<vector<int>> tr;\n\n    Trie(int n = 5E5 + 5) {\n        init(n);\n    }\n\n    void init(int n) {\n        this->n = n;\n        cnt = 0;\n        tr.resize(n);\n        cost.assign(n, 0);\n    }\n\n    void insert(string &word, int cst) {\n        int u = 0;\n        for (char &c : word) {\n            int v = c - 'a';\n            if (tr[u].size() == 0) {\n                tr[u] = vector<int>(26);\n            }\n            if (!tr[u][v]) {\n                tr[u][v] = ++cnt;\n            }\n            u = tr[u][v];\n        }\n        cost[u] = cost[u] ? min(cost[u], cst) : cst;\n    }\n\n    int find(string &word) {\n        const int n = word.size();\n        const int inf = 7E8;\n        vector<int> dp(n, -1);\n        auto dfs = [&](auto &&self, int idx) -> int {\n            if (idx == n) {\n                return 0;\n            }\n            if (~dp[idx]) {\n                return dp[idx];\n            }\n            int ans = inf;\n            int u = 0;\n            for (int i = idx; i < n; ++i) {\n                int v = word[i] - 'a';\n                if (tr[u].size() == 0 || !tr[u][v]) {\n                    break;\n                }\n                u = tr[u][v];\n                if (cost[u]) {\n                    ans = min(ans, cost[u] + self(self, i + 1));\n                }\n            }\n            return dp[idx] = ans;\n        };\n        int ans = dfs(dfs, 0);\n        return ans == inf ? -1 : ans;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = 0;\n        for (auto &s : words) {\n            n += s.size();\n        }\n        \n        Trie tr(n + 5);\n        for (int i = 0; i < int(words.size()); ++i) {\n            tr.insert(words[i], costs[i]);\n        }\n        \n        int ans = tr.find(target);\n        return ans;\n    }\n};",
    "submit_ts": "1720321295",
    "subm_id": "1312318955"
}