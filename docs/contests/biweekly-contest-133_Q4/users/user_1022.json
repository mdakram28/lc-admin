{
    "username": "stunner007",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        static const int MOD = 1'000'000'007;\n        static const int ans = 400;\n        unordered_map<int, int> mp;\n        for (const auto& it : requirements) {\n            mp[it[0] + 1] = it[1];\n        }\n\n        vector<vector<long long>> arr(n + 1, vector<long long>(ans + 1, 0));\n        arr[0][0] = 1;\n\n        for (int length = 1; length <= n; length++) {\n            for (int inv = 0; inv <= ans; inv++) {\n                for (int i = 0; i < length; i++) {\n                    int prevInv = inv - i;\n                    int x = 1;\n                    if (prevInv >= 0 && x == 1) {\n                        arr[length][inv] = (arr[length][inv] + arr[length - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.count(length)) {\n                int targetInv = mp[length];\n                for (int inv = 0; inv <= ans; inv++) {\n                    int y = 1;\n                    if (inv != targetInv && y == 1) {\n                        arr[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long result = 0;\n        for (int i = 0; i <= ans; i++) {\n            result = (result + arr[n][i]) % MOD;\n        }\n\n        return static_cast<int>(result);\n    }\n};\n",
    "submit_ts": 1719071513.0
}