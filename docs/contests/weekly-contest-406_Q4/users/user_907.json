{
    "username": "zlwang",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        res = 0\n        hor = 1\n        ver = 1\n        i,j = 0, 0\n        while i < len(horizontalCut) or j < len(verticalCut):\n            if i < len(horizontalCut):\n                if j < len(verticalCut):\n                    if verticalCut[j] < horizontalCut[i]:\n                        res += (horizontalCut[i] * ver)\n                        hor += 1\n                        i += 1\n                    else:\n                        res += (verticalCut[j] * hor)\n                        ver += 1\n                        j += 1\n                else:\n                    res += (horizontalCut[i] * ver)\n                    hor += 1\n                    i += 1\n            else:\n                if j < len(verticalCut):\n                    res += (verticalCut[j] * hor)\n                    ver += 1\n                    j += 1\n        return res",
    "submit_ts": "1720925628",
    "subm_id": "1320261020"
}