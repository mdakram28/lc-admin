{
    "username": "pulkit2401",
    "submission": "class Solution {\n    \npublic:\n      vector<map<int, int>> temp, fun;\n    int maximumLength(vector<int>& nums, int k) {\n      int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n        int res = 1;\n        \n        // int d\n        vector<int> v(k + 1, -1);\n\n        temp.assign(k + 1, map<int, int>()); \n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= k; j++) {\n                for (int l = 0; l < j; l++) {\n                    dp[i][j] = max(dp[i][j], 1 + v[l]);\n                }\n                if (temp[j].find(nums[i]) != temp[j].end()) {\n                    dp[i][j] = max(dp[i][j], 1 + temp[j][nums[i]]);\n                }\n                res = max(res, dp[i][j]);\n            }\n            for (int j = 0; j <= k; j++) {\n                v[j] = max(v[j], dp[i][j]);\n                temp[j][nums[i]] = max(temp[j][nums[i]], dp[i][j]);\n            }\n        }\n        return res;\n    }\n    \n};",
    "submit_ts": 1717862359.0
}