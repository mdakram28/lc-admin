{
    "username": "JBAditya",
    "submission": "class Solution {\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        return solve(X, Y, circles);\n    }\n    \n    private boolean solve(int X, int Y, int[][] c) {\n        int nc = c.length;\n        List<List<Integer>> g = new ArrayList<>(nc + 4);\n        \n        for (int i = 0; i < nc + 4; i++) {\n            g.add(new ArrayList<>());\n        }\n        \n        for (int i = 0; i < nc; i++) {\n            if (c[i][0] <= c[i][2]) {\n                g.get(nc).add(i);\n                g.get(i).add(nc);\n            }\n            if (X - c[i][0] <= c[i][2]) {\n                g.get(nc + 2).add(i);\n                g.get(i).add(nc + 2);\n            }\n            if (c[i][1] <= c[i][2]) {\n                g.get(nc + 1).add(i);\n                g.get(i).add(nc + 1);\n            }\n            if (Y - c[i][1] <= c[i][2]) {\n                g.get(nc + 3).add(i);\n                g.get(i).add(nc + 3);\n            }\n            for (int j = i + 1; j < nc; j++) {\n                double dist = Math.sqrt(Math.pow(c[i][0] - c[j][0], 2) + Math.pow(c[i][1] - c[j][1], 2));\n                int radSum = c[i][2] + c[j][2];\n                if (radSum >= dist) {\n                    g.get(i).add(j);\n                    g.get(j).add(i);\n                }\n            }\n        }\n        \n        int isBlocked = 0;\n        isBlocked = Math.max(isBlocked, bfs(g, nc, nc + 1, nc + 2, nc + 4));\n        isBlocked = Math.max(isBlocked, bfs(g, nc + 3, nc + 2, nc + 1, nc + 4));\n        \n        return isBlocked == 0;\n    }\n    \n    private int bfs(List<List<Integer>> g, int s, int t1, int t2, int n) {\n        Queue<Integer> q = new LinkedList<>();\n        boolean[] vis = new boolean[n + 4];\n        \n        q.add(s);\n        vis[s] = true;\n        \n        while (!q.isEmpty()) {\n            int u = q.poll();\n            for (int v : g.get(u)) {\n                if (!vis[v]) {\n                    q.add(v);\n                    vis[v] = true;\n                }\n            }\n        }\n        \n        return (vis[t1] || vis[t2]) ? 1 : 0;\n    }\n\n}",
    "submit_ts": "1722137988",
    "subm_id": "1335779108"
}