{
    "username": "bob8372",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles) -> bool:\n        from math import sqrt\n        groups = {1:[],2:[]}\n        ng = 3\n        #group 1 means touching bottom/right\n        #group 2 means touching top/left\n\n        for x,y,r in circles:\n            newgroup = ng\n            ng += 1\n            if x + r >= X or y - r <= 0:\n                newgroup = 1\n            if x - r <= 0 or y + r >= Y:\n                if newgroup == 1:\n                    return False\n                newgroup = 2\n            if newgroup in groups:\n                groups[newgroup].append([x,y,r])\n            else:\n                groups[newgroup] = [[x,y,r]]\n            for key in list(groups):\n                if key == newgroup or groups[key] == []:\n                    continue\n                for xi,yi,ri in groups[key]:\n                    if sqrt((x-xi)**2 + (y-yi)**2) <= r + ri:\n                        #merge groups\n                        if newgroup <= 2 and key <= 2:\n                            return False\n                        if newgroup < key:\n                            groups[newgroup]+=groups[key]\n                            groups[key] = []\n                            break\n                        else:\n                            groups[key]+=groups[newgroup]\n                            groups[newgroup] = []\n                            newgroup = key\n                            break\n        return True",
    "submit_ts": "1722137958",
    "subm_id": "1335778277"
}