{
    "username": "A Kiong",
    "submission": "class Solution(object):\n    def maximumValueSum(self, board):\n        \"\"\"\n        :type board: List[List[int]]\n        :rtype: int\n        \"\"\"\n        row = set()\n        col = set()\n        ans = float(-4 * 10 ** 9)\n        curr = []\n        countRow = {}\n        countCol = {}\n        temp = []\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                temp.append((board[i][j], i, j))\n        temp.sort(key=lambda i: -i[0])\n        for tup in temp:\n            if len(curr) == 20:\n                break\n            row = tup[1]\n            col = tup[2]\n            if countRow.get(row, 0) >= 3 or countCol.get(col,0) >=3:\n                continue\n            countRow[row] = countRow.get(row, 0) + 1\n            countCol[col] = countCol.get(col, 0) + 1\n            curr.append(tup)\n                    \n        upper = min(20, len(curr))\n        for i in range(upper):\n            for j in range(upper):\n                for k in range(upper):\n                    one = curr[i]\n                    two = curr[j]\n                    three = curr[k]\n                    col = one[1] != two[1] and two[1] != three[1] and one[1] != three[1]\n                    row = one[2] != two[2] and one[2] != three[2] and two[2] != three[2]\n                    if col and row:\n                        summ = one[0] + two[0] + three[0]\n                        ans = max(ans, summ)     \n        return ans",
    "submit_ts": "1723909118",
    "subm_id": "1359180302"
}