{
    "username": "Ometek",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        MAX_INV = 401\n        MOD = 10 ** 9 + 7\n        reqs = dict()\n        for req in requirements:\n            reqs[req[0] + 1] = req[1]\n            \n        if (1 in reqs and reqs[1] != 0):\n            return 0\n            \n            \n        # dp[length][inv_cnt]\n        dp = [[0 for _ in range(MAX_INV)] for _ in range(n + 1)]\n        \n        dp[1][0] = 1\n        \n        for ln in range(2, n + 1):\n            if (ln in reqs):\n                # konkretna liczba inwersji\n                inv = reqs[ln]\n                for i in range(ln):\n                    if (inv - i >= 0):\n                        dp[ln][inv] += dp[ln - 1][inv - i]\n            else:\n                # dowolna liczba inwersji\n                for inv in range(MAX_INV):\n                    for i in range(ln):\n                        if (inv - i >= 0):\n                            dp[ln][inv] += dp[ln - 1][inv - i]\n                            \n        return dp[n][reqs[n]] % MOD\n                \n        \n        ",
    "submit_ts": "1719068521",
    "subm_id": "1296768227"
}