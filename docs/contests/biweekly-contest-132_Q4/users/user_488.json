{
    "username": "Harshil_2602",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) \n    {\n        int n=nums.size() ; \n        vector < map<int,int> > vec(k+1) ;\n        vector <int> v(k+1,-1) ; \n        vector <vector<int>> dp(n,vector<int>(k+1,1)) ; \n        int ans = 1 ; \n        for(int i = 0 ; i < n ; i++)\n        { \n            for(int j = 0 ; j <= k ; j++)\n            { \n                for(int l = 0 ; l < j ; l++) dp[i][j] = max(dp[i][j] , 1 + v[l]) ; \n                if(vec[j].find(nums[i]) != vec[j].end()) dp[i][j] = max(dp[i][j] , 1 + vec[j][nums[i]]) ; \n                ans = max(ans , dp[i][j]) ; \n            } \n            for(int j = 0 ; j <= k ; j++)\n            { \n                vec[j][nums[i]] = max(vec[j][nums[i]] , dp[i][j]) ; \n                v[j] = max(v[j] , dp[i][j]) ; \n            } \n        } \n        return ans; \n    }\n};",
    "submit_ts": 1717861481.0
}