{
    "username": "Deepanshu_30",
    "submission": "from typing import List\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        return self.calculate_flips(grid)\n    \n    def calculate_flips(self, grid: List[List[int]]) -> int:\n        thor, natasha = len(grid), len(grid[0])\n        tony = 0\n        \n        if thor % 2 == 1 and natasha % 2 == 1:\n            if grid[thor // 2][natasha // 2] == 1:\n                tony += 1\n        \n        shift = [0, 0, 0]  # Shift to hold counts for sum of 0, 1, and 2\n        if thor % 2 == 1:\n            tony += self.row_flips(grid, thor, natasha, shift)\n        \n        if natasha % 2 == 1:\n            tony += self.col_flips(grid, thor, natasha, shift)\n        \n        tony += self.additional_flips(shift)\n        \n        tony += self.corner_flips(grid, thor, natasha)\n        \n        return tony\n\n    def row_flips(self, grid: List[List[int]], thor: int, natasha: int, shift: List[int]) -> int:\n        steve, bruce = 0, natasha - 1\n        row_tony = 0\n        \n        while steve < bruce:\n            sum_ = grid[thor // 2][steve] + grid[thor // 2][bruce]\n            shift[sum_] += 1\n            steve += 1\n            bruce -= 1\n        \n        return row_tony\n\n    def col_flips(self, grid: List[List[int]], thor: int, natasha: int, shift: List[int]) -> int:\n        wanda, clint = 0, thor - 1\n        col_tony = 0\n        \n        while wanda < clint:\n            sum_ = grid[wanda][natasha // 2] + grid[clint][natasha // 2]\n            shift[sum_] += 1\n            wanda += 1\n            clint -= 1\n        \n        return col_tony\n\n    def additional_flips(self, shift: List[int]) -> int:\n        tony = 0\n        \n        if shift[2] % 2 == 1:\n            if shift[1] > 0:\n                tony += shift[1]\n            else:\n                tony += 2\n        else:\n            tony += shift[1]\n        \n        return tony\n\n    def corner_flips(self, grid: List[List[int]], thor: int, natasha: int) -> int:\n        tony = 0\n        \n        for steve in range(thor // 2):\n            for bruce in range(natasha // 2):\n                a = grid[steve][bruce]\n                b = grid[thor - 1 - steve][bruce]\n                c = grid[steve][natasha - 1 - bruce]\n                d = grid[thor - 1 - steve][natasha - 1 - bruce]\n\n                sum_ = a + b + c + d\n\n                if sum_ != 0 and sum_ != 4:\n                    tony += min(sum_, 4 - sum_)\n        \n        return tony\n",
    "submit_ts": "1722699368",
    "subm_id": "1343209512"
}