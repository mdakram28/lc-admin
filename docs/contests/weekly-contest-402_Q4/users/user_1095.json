{
    "username": "nishant_bansal_2003",
    "submission": "// Standard Fenwick tree Code\nclass FTree\n{\n    vector<int> arr;\n    vector<int> BITree;\n    int n;\n\npublic:\n    FTree(int sz)\n    {\n        n = sz;\n        BITree.resize(n + 1, 0);\n        arr.resize(n + 1, 0); // 1 based indexing\n        // f(i, 0, n)\n        // {\n        //     update(i, nums[i]);\n        // }\n    }\n\n    void update(int i, int val)\n    {\n\n        int add = val - arr[i];\n        arr[i] = val;\n        i++;\n        // O(LogN)\n        while (i <= n)\n        {\n            BITree[i] += add;\n            i += (i & (-i));\n        }\n    }\n    int getSum(int i)\n    {\n        // O(LogN)\n        int res = 0;\n        while (i)\n        {\n            res += BITree[i];\n            i = (i - (i & (-i)));\n        }\n        return res;\n    }\n    int sumRange(int l, int r)\n    {\n        if (l > r)\n            return 0;\n        return getSum(r + 1) - getSum(l);\n    }\n};\n\nclass Solution\n{\npublic:\n    vector<int> countOfPeaks(vector<int> &nums, vector<vector<int>> &queries)\n    {\n        int n = nums.size();\n        FTree ft(n);\n        for (int i = 1; i < n - 1; i++)\n        {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n                ft.update(i, 1);\n        }\n        vector<int> res;\n        for (auto x : queries)\n        {\n            int t = x[0];\n            if (t == 2)\n            {\n                int ind = x[1], val = x[2];\n                if (ind > 0 && ind < n - 1 && nums[ind] > nums[ind - 1] && nums[ind] > nums[ind + 1])\n                    ft.update(ind, 0);\n                if (ind - 2 >= 0 && ind < n && nums[ind - 1] > nums[ind - 2] && nums[ind - 1] > nums[ind])\n                    ft.update(ind - 1, 0);\n                if (ind >= 0 && ind + 2 < n && nums[ind + 1] > nums[ind] && nums[ind + 1] > nums[ind + 2])\n                    ft.update(ind + 1, 0);\n\n                nums[ind] = val;\n                if (ind > 0 && ind < n - 1 && nums[ind] > nums[ind - 1] && nums[ind] > nums[ind + 1])\n                    ft.update(ind, 1);\n                if (ind - 2 >= 0 && ind < n && nums[ind - 1] > nums[ind - 2] && nums[ind - 1] > nums[ind])\n                    ft.update(ind - 1, 1);\n                if (ind >= 0 && ind + 2 < n && nums[ind + 1] > nums[ind] && nums[ind + 1] > nums[ind + 2])\n                    ft.update(ind + 1, 1);\n            }\n            else\n            {\n                res.push_back(ft.sumRange(x[1] + 1, x[2] - 1));\n            }\n        }\n        return res;\n    }\n};\n// [5,4,8,6]\n// [[1,2,2],[1,1,2],[2,1,6]]\n// [0,0]",
    "submit_ts": 1718508026.0
}