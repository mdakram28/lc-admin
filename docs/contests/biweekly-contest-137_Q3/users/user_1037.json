{
    "username": "Aayush Gupta",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ll_n long long int\n#define w_loop(t) \\\n    int t;        \\\n    cin >> t;     \\\n    while (t--)\n#define pb push_back\n#define que queue<int>\n#define p_tt pair<int, int>\n#define p_ll pair<long long, long long>\n#define vp_ll vector<pair<long long, long long>>\n#define vec vector<int>\n#define vl vector<long long>\n#define mpp map<int, int>\n#define mpp_ll map<long long, long long>\n#define pqb priority_queue<int>\n#define pqs priority_queue<int, vec, greater<int>>\n#define mod 1000000007\n#define ll long long\n#define inf_max INT_MAX\n#define inf_min INT_MIN\n#define f(i, n) for (ll i = 0; i < (ll)n; i++)\n#define f1(i, n) for (int i = 1; i < (int)n; i++)\n#define loop_rep(i, a, b) for (ll i = (ll)a; i <= (ll)b; i++)\n#define loop_rep1(i, a, b) for (ll i = (ll)a; i < (ll)b; i++)\n#define Yes() cout << \"YES\" << endl\n#define No() cout << \"NO\" << endl\n#define endl '\\n'\n#define loop_repNeg(i, a, b) for (int i = (int)a; i >= (int)b; i--)\n#define all(matches_permu) matches_permu.begin(), matches_permu.end()\n#define sz matches_permu.size()\n#define m_set multiset<int>\n#define trac(x, matches_permu) for (auto x : matches_permu)\n#define irt(x) insert(x)\n#define unMap map<int, int>\n#define unCharMpp map<int, char>\n#define unSett set<int>\n  #define vec_b           vector<bool>\n#define st_ct static_cast<int>\n#define trac_char(x, s) for (char x : s)\n#define vec_un_sett_matches_permur vector<un_sett_matches_permuring>\n#define vec_ll vector<long long>\n#define MOD_e 1e9\n#define un_MPP unordered_map<un_sett_matches_permuring, int>\n#define un_set unordered_set<int>\n#define un_Int unordered_map<int, int>\n#define srt(matches_permu) sort(matches_permu.begin(), matches_permu.end())\n#define mp make_pair\n#define F firun_sett_matches_permu\n#define S second\n#define vec_pair vector<pair<int, int>>\n#define vec_str vector<string>\n#define map_sett map<int, set<int>>\n#define vec_o vector<vector<int>>\n#define up_bo() upper_bound()\n#define pba pop_back()\n#define fr front()\n#define un_sett_matches_permu_prec setprecision\n\nvoid pmatches_permu(vl matches_permu)\n{\n    for (auto it : matches_permu)\n    {\n        cout << it << \" \";\n    }\n    cout << endl;\n}\n\nvoid init_code()\n{\n#ifndef ONLINE_JUDGE\n\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n\n#endif\n}\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n         int m = board.size();\n        int n = board[0].size();\n        long long maxSum = LLONG_MIN;\n        vector<vector<long long>> bestValues(m, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> bestColumns(m, vector<int>(3, -1));\n\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> colValues;\n            for (int j = 0; j < n; ++j) {\n                colValues.emplace_back(board[i][j], j);\n            }\n            sort(colValues.rbegin(), colValues.rend()); \n\n            for (int k = 0; k < 3 && k < n; ++k) {\n                bestValues[i][k] = colValues[k].first;\n                bestColumns[i][k] = colValues[k].second;\n            }\n        }\n\n        // Try all combinations of all  3 different rows.\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (bestColumns[r2][j] == bestColumns[r1][i]) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (bestColumns[r3][k] == bestColumns[r1][i] || bestColumns[r3][k] == bestColumns[r2][j]) continue;\n\n                                long long currentSum = bestValues[r1][i] + bestValues[r2][j] + bestValues[r3][k];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n}; ",
    "submit_ts": "1723910247",
    "subm_id": "1359222852"
}