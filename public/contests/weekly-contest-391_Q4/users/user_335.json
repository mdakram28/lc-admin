{
    "username": "2499370956",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        int[] sum = new int[n];\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][1] - points[i][0];\n        }\n        int out = Integer.MAX_VALUE;\n        int sMax = Arrays.stream(sum).max().getAsInt();\n        for (int i = 0; i < n; i++) {\n            if (sum[i] == sMax) {\n                out = Math.min(out, maxDistanceSkip(sum, diff, i));\n                break;\n            }\n        }\n        int sMin = Arrays.stream(sum).min().getAsInt();\n        for (int i = 0; i < n; i++) {\n            if (sum[i] == sMin) {\n                out = Math.min(out, maxDistanceSkip(sum, diff, i));\n                break;\n            }\n        }\n        int dMax = Arrays.stream(diff).max().getAsInt();\n        for (int i = 0; i < n; i++) {\n            if (diff[i] == dMax) {\n                out = Math.min(out, maxDistanceSkip(sum, diff, i));\n                break;\n            }\n        }\n        int dMin = Arrays.stream(diff).min().getAsInt();\n        for (int i = 0; i < n; i++) {\n            if (diff[i] == dMin) {\n                out = Math.min(out, maxDistanceSkip(sum, diff, i));\n                break;\n            }\n        }\n        return out;\n    }\n\n    private int maxDistanceSkip(int[] sum, int[] diff, int skip) {\n        int sMax = skip != 0 ? sum[0] : sum[1];\n        int sMin = skip != 0 ? sum[0] : sum[1];\n        int dMax = skip != 0 ? diff[0] : diff[1];\n        int dMin = skip != 0 ? diff[0] : diff[1];\n        int out = 0;\n        for (int i = 1; i < sum.length; i++) {\n            if (i == skip) {\n                continue;\n            }\n            out = Math.max(out, Math.abs(sum[i] - sMax));\n            out = Math.max(out, Math.abs(sum[i] - sMin));\n            out = Math.max(out, Math.abs(diff[i] - dMax));\n            out = Math.max(out, Math.abs(diff[i] - dMin));\n            sMax = Math.max(sMax, sum[i]);\n            sMin = Math.min(sMin, sum[i]);\n            dMax = Math.max(dMax, diff[i]);\n            dMin = Math.min(dMin, diff[i]);\n        }\n        return out;\n    }\n}"
}