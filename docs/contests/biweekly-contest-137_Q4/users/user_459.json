{
    "username": "zymgdream",
    "submission": "\n\n\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        @cache\n        def cal(x1, y1, x2, y2):\n            if x2 < x1 or y2 < y1:\n                return -inf\n            return max(board[x2][y2], cal(x1, y1, x2 - 1, y2 - 1),cal(x1, y1, x2, y2 - 1),cal(x1, y1, x2 - 1, y2))\n\n        a = [(c, idx, jidx) for idx, row in enumerate(board) for jidx, c in enumerate(row)]\n        a.sort(key=lambda x: -x[0])\n\n        ans = -inf\n        na = len(a)\n        for i in range(na):\n            for j in range(i+1, na):\n                x1,y1,z1 = a[i]\n                x2,y2,z2 = a[j]\n                if y1 == y2 or z1 == z2:\n                    continue\n                if x1 + x2 + x2 <= ans:\n                    break\n                if y1 > y2:\n                    y1, y2 = y2, y1\n                if z1 > z2:\n                    z1, z2 = z2, z1\n                t = x1 + x2 + max(cal(0,0,y1-1,z1-1), cal(0, z1+1, y1-1,z2-1), cal(0,z2+1,y1-1, n-1), cal(y1+1,0,y2-1,z1-1), cal(y1+1, z1+1, y2-1,z2-1), cal(y1+1,z2+1,y2-1, n-1),cal(y2+1,0,m-1,z1-1), cal(y2+1, z1+1, m-1,z2-1), cal(y2+1,z2+1,m-1, n-1))\n                if t > ans:\n                    ans = t\n        return ans\n",
    "submit_ts": "1723909684",
    "subm_id": "556337482"
}