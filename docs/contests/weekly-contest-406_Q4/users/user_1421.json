{
    "username": "raunaksrivastava6762",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin() , horizontalCut.end());\n        sort(verticalCut.begin() , verticalCut.end());\n        long long i=horizontalCut.size()-1 , j=verticalCut.size()-1 , hor=1 , ver=1 , ans=0;\n        while(i>=0 && j>=0){\n            long long a=horizontalCut[i]*ver , b=verticalCut[j]*hor;\n            if(horizontalCut[i]>=verticalCut[j]){\n                ans+=a;\n                i--;\n                hor++;\n            }\n            else{\n                ans+=b;\n                j--;\n                ver++;\n            }\n        }\n        while(i>=0){\n            int a=horizontalCut[i]*ver;\n            ans+=a;\n            i--;\n            hor++;\n        }\n        while(j>=0){\n            int b=b=verticalCut[j]*hor;\n            ans+=b;\n            j--;\n            ver++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925945",
    "subm_id": "1320271179"
}