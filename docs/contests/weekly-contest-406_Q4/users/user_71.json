{
    "username": "PUSSYNIQQA",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int h = 0, v = 0;\n        long long hP = 1, vP = 1;\n        long long cst = 0;\n        \n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                cst += static_cast<long long>(horizontalCut[h]) * vP;\n                hP++;\n                h++;\n            } else {\n                cst += static_cast<long long>(verticalCut[v]) * hP;\n                vP++;\n                v++;\n            }\n        }\n        \n        while (h < horizontalCut.size()) {\n            cst += static_cast<long long>(horizontalCut[h]) * vP;\n            hP++;\n            h++;\n        }\n        \n        while (v < verticalCut.size()) {\n            cst += static_cast<long long>(verticalCut[v]) * hP;\n            vP++;\n            v++;\n        }\n        \n        return cst;\n    }\n};\n",
    "submit_ts": "1720924615",
    "subm_id": "1320223806"
}