{
    "username": "Satj",
    "submission": "class Solution {\npublic:\n    int n;\n    vector <int> tree;\n    \n    int query(int l, int r) {\n        l += n;\n        r += n + 1;\n        int ret = 0;\n        while (l < r) {\n            if (l % 2) {\n                ret += tree[l];\n                l++;\n            }\n            if (r % 2) {\n                r--;\n                ret += tree[r];\n            }\n            l /= 2; r /= 2;\n        }\n        return ret;\n    }\n    void update(int i, int val) {\n        i += n;\n        tree[i] = val;\n        for (i /= 2; i > 0; i /= 2)\n            tree[i] = tree[i * 2] + tree[i * 2 + 1];\n    }\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        n = a.size();\n        tree.resize(n * 2, 0);\n        vector <int> ret;\n        for (int i = 0; i < n; i++) {\n            if (i == 0 || i == n - 1) continue ;\n            if (a[i - 1] < a[i] && a[i] > a[i + 1])\n                tree[i + n] = 1;\n        }\n        for (int i = n - 1; i > 0; i--)\n            tree[i] = tree[i * 2] + tree[i * 2 + 1];\n        // for (auto x : tree) cout << x << \" \" << endl;\n        for (auto &z : q) {\n            int op = z[0];\n            if (op == 1) {\n                int l = z[1], r = z[2];\n                if (r - l < 2) \n                    ret.push_back(0);\n                else \n                    ret.push_back(query(l + 1, r - 1));\n            }\n            else {\n                int id = z[1], val = z[2];\n                a[id] = val;\n                for (int j = id - 1; j <= id + 1; j++) {\n                    if (j <= 0 || j >= n - 1) continue ;\n                    \n                    if (a[j - 1] < a[j] && a[j] > a[j + 1])\n                        update(j, 1);\n                    else \n                        update(j, 0);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1718506782",
    "subm_id": "1289630815"
}