{
    "username": "_Meet_Patel_",
    "submission": "class Solution {\nprivate: \n    const int MX = 405; \n    const int MOD = 1e9 + 7; \n    \n    int add(int x,int y) {\n        return ((x % MOD) + (y % MOD)) % MOD;\n    }\n    \npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int,int> req; \n        for(auto &cur : requirements) {\n            cur[0]++; \n            req[cur[0]] = cur[1]; \n        }\n        \n        vector<vector<long long>> dp(n + 1, vector<long long>(MX));\n        dp[0][0] = 1; \n        for(int sz = 1 ; sz <= n ; sz++) {\n            for(int cnt = 0 ; cnt < MX ; cnt++) {\n                for(int i = 0 ; i < sz ; i++) {\n                    if(cnt >= i) {\n                        dp[sz][cnt] = add(dp[sz][cnt], dp[sz - 1][cnt - i]); \n                    }\n                }\n            }\n            if(req.count(sz)) {\n                int need = req[sz];\n                for(int cnt = 0; cnt < MX ; cnt++) {\n                    if(cnt != need) {\n                        dp[sz][cnt] = 0;\n                    }\n                }\n            }\n        }\n        \n        long long res = 0;\n        for (long long c : dp[n]) {\n            res = add(res, c); \n        }\n        \n        return res; \n    }\n};",
    "submit_ts": "1719070887",
    "subm_id": "1296834138"
}