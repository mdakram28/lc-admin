{
    "username": "Amit130",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& array, int target) {\n        int size = array.size();\n        long long totalCount = 0;\n        unordered_map<long long, long long> previousResults;\n\n        for (int i = 0; i < size; i++) {\n            unordered_map<long long, long long> currentResults;\n            totalCount += processCurrentElement(array[i], target, previousResults, currentResults);\n            previousResults = currentResults;\n        }\n        return totalCount;\n    }\n\nprivate:\n    long long processCurrentElement(int currentElement, int targetValue,\n                                    unordered_map<long long, long long>& previousResults,\n                                    unordered_map<long long, long long>& currentResults) {\n        long long subarrayCount = 0;\n\n        if (currentElement == targetValue) {\n            subarrayCount += 1;\n        }\n        currentResults[currentElement] = 1;\n\n        for (auto& [previousValue, frequency] : previousResults) {\n            long long andResult = previousValue & currentElement;\n            if (andResult == targetValue) {\n                subarrayCount += frequency;\n            }\n            currentResults[andResult] += frequency;\n        }\n        return subarrayCount;\n    }\n};\n",
    "submit_ts": "1720279931",
    "subm_id": "1311770693"
}