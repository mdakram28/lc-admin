{
    "username": "TheZwischenzug",
    "submission": "class Node{\n    \n    Node(){\n        cost = Integer.MAX_VALUE;\n        children = new Node[26];\n    }\n    Node[] children;\n    boolean isLeaf;\n    int cost;\n    \n}\nclass Solution {\n    int[] s;\n    int[] dp;\n    Node root;\n    private static final int inf = 1000_000_000;\n    private void insert(String word, int cost){\n        Node node = root;\n        for (int i = 0; i < word.length(); i++){\n            int c = word.charAt(i)-'a';\n            if (node.children[c] == null) node.children[c] = new Node();\n            node = node.children[c];\n        }\n        node.isLeaf = true;\n        node.cost = Math.min(node.cost, cost);\n    }\n    private int getCost(int idx){\n        if (idx == s.length) return 0;\n        if (dp[idx] != -1) return dp[idx];\n        \n        Node node = root;\n        int cost = inf;\n        for (int j = idx; j < s.length; j++){\n            if (node.children[s[j]] == null) break;\n            node = node.children[s[j]];\n            if (node == null) break;\n            if (node.isLeaf){\n                int recCost = getCost(j+1);\n                if (recCost < inf) cost = Math.min(cost, node.cost+recCost);\n            }\n        }\n        dp[idx] = cost;\n        return cost;\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        s = new int[target.length()];\n        for (int i = 0; i < target.length(); i++) s[i] = target.charAt(i)-'a';\n        dp = new int[target.length()];\n        Arrays.fill(dp, -1);\n        root = new Node();\n        for (int i = 0; i < words.length; i++){\n            insert(words[i], costs[i]);\n        }\n        int cost =  getCost(0);\n        if (cost == inf) return -1;\n        else return cost;\n    }\n}",
    "submit_ts": "1720321056",
    "subm_id": "1312312244"
}