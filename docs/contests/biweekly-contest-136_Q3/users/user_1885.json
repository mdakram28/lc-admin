{
    "username": "Um4irS44d",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& binaryGridMatrix) {\n        int numberOfRows = binaryGridMatrix.size();\n        int numberOfColumns = binaryGridMatrix[0].size();\n        int totalFlipsRequired = 0;\n       \n        if (numberOfRows % 2 == 1 && numberOfColumns % 2 == 1) {\n            if (binaryGridMatrix[numberOfRows / 2][numberOfColumns / 2] == 1) {\n                totalFlipsRequired += 1;\n            }\n        }\n\n        vector<int> flipsCount(3, 0);\n        if (numberOfRows % 2 == 1) {\n            int leftColumnIndex = 0;\n            int rightColumnIndex = numberOfColumns - 1;\n            while (leftColumnIndex < rightColumnIndex) {\n                int sumAtCenterRow = binaryGridMatrix[numberOfRows / 2][leftColumnIndex] + binaryGridMatrix[numberOfRows / 2][rightColumnIndex];\n                flipsCount[sumAtCenterRow] += 1;\n                leftColumnIndex += 1;\n                rightColumnIndex -= 1;\n            }\n        }\n\n        if (numberOfColumns % 2 == 1) {\n            int topRowIndex = 0;\n            int bottomRowIndex = numberOfRows - 1;\n            while (topRowIndex < bottomRowIndex) {\n                int sumAtCenterColumn = binaryGridMatrix[topRowIndex][numberOfColumns / 2] + binaryGridMatrix[bottomRowIndex][numberOfColumns / 2];\n                flipsCount[sumAtCenterColumn] += 1;\n                topRowIndex += 1;\n                bottomRowIndex -= 1;\n            }\n        }\n\n        if (flipsCount[2] % 2 == 1) {\n            if (flipsCount[1] > 0) {\n                totalFlipsRequired += flipsCount[1];\n            } else {\n                totalFlipsRequired += 2;\n            }\n        } else {\n            totalFlipsRequired += flipsCount[1];\n        }\n\n        for (int rowIndex = 0; rowIndex < numberOfRows / 2; ++rowIndex) {\n            for (int columnIndex = 0; columnIndex < numberOfColumns / 2; ++columnIndex) {\n                int topLeftValue = binaryGridMatrix[rowIndex][columnIndex];\n                int bottomLeftValue = binaryGridMatrix[numberOfRows - 1 - rowIndex][columnIndex];\n                int topRightValue = binaryGridMatrix[rowIndex][numberOfColumns - 1 - columnIndex];\n                int bottomRightValue = binaryGridMatrix[numberOfRows - 1 - rowIndex][numberOfColumns - 1 - columnIndex];\n\n                int sumOfQuadrantValues = topLeftValue + bottomLeftValue + topRightValue + bottomRightValue;\n\n                if (sumOfQuadrantValues != 0 && sumOfQuadrantValues != 4) {\n                    totalFlipsRequired += min(sumOfQuadrantValues, 4 - sumOfQuadrantValues);\n                }\n            }\n        }\n\n        return totalFlipsRequired;\n    }\n};\n",
    "submit_ts": "1722700037",
    "subm_id": "1343229762"
}