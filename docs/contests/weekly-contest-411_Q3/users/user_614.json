{
    "username": "impiry",
    "submission": "public class Solution {\n    public string LargestPalindrome(int n, int k)\n    {\n        if (k == 1 || k == 3 || k == 9)\n        {\n            return new string(Enumerable.Repeat('9', n).ToArray());\n        }\n\n        if (k == 2)\n        {\n            if (n == 1)\n            {\n                return \"8\";\n            }\n\n            return \"8\" + new string(Enumerable.Repeat('9', n - 2).ToArray()) + \"8\";\n        }\n\n        if (k == 4)\n        {\n            if (n <= 4)\n            {\n                return new string(Enumerable.Repeat('8', n).ToArray());\n            }\n\n            return \"88\" + new string(Enumerable.Repeat('9', n - 4).ToArray()) + \"88\";\n        }\n\n        if (k == 5)\n        {\n            if (n == 1) return \"5\";\n\n            return \"5\" + new string(Enumerable.Repeat('9', n - 2).ToArray()) + \"5\";\n        }\n\n        if (k == 6)\n        {\n            if (n == 1) return \"6\";\n            if (n == 2) return \"66\";\n            if (n == 3) return \"888\";\n            if (n % 2 == 0)\n            {\n                var nines = new string(Enumerable.Repeat('9', (n - 4) / 2).ToArray());\n\n                return \"8\" + nines + \"77\" + nines + \"8\";\n            }\n            else\n            {\n                var nines = new string(Enumerable.Repeat('9', (n - 3) / 2).ToArray());\n\n                return \"8\" + nines + \"8\" + nines + \"8\";\n            }\n        }\n\n        if (k == 7)\n        {\n            if (n == 1) return \"7\";\n            if (n == 2) return \"77\";\n\n            var leftover = n % 12;\n\n            switch (leftover)\n            {\n                case 0:\n                    return new string(Enumerable.Repeat('9', n).ToArray());\n                case 1:\n                    var nines = new string(Enumerable.Repeat('9', (n - 1) / 2).ToArray());\n                    return nines + \"7\" + nines;\n                case 2:\n                    nines = new string(Enumerable.Repeat('9', (n - 2) / 2).ToArray());\n                    return nines + \"77\" + nines;\n                case 3:\n                    nines = new string(Enumerable.Repeat('9', (n - 1) / 2).ToArray());\n                    return nines + \"5\" + nines;\n                case 4:\n                    nines = new string(Enumerable.Repeat('9', (n - 2) / 2).ToArray());\n                    return nines + \"77\" + nines;\n                case 5:\n                    nines = new string(Enumerable.Repeat('9', (n - 1) / 2).ToArray());\n                    return nines + \"7\" + nines;\n                case 6:\n                    return new string(Enumerable.Repeat('9', n).ToArray());\n                case 7:\n                    nines = new string(Enumerable.Repeat('9', (n - 1) / 2).ToArray());\n                    return nines + \"4\" + nines;\n                case 8:\n                    nines = new string(Enumerable.Repeat('9', (n - 2) / 2).ToArray());\n                    return nines + \"44\" + nines;\n                case 9:\n                    nines = new string(Enumerable.Repeat('9', (n - 1) / 2).ToArray());\n                    return nines + \"6\" + nines;\n                case 10:\n                    nines = new string(Enumerable.Repeat('9', (n - 2) / 2).ToArray());\n                    return nines + \"44\" + nines;\n                case 11:\n                    nines = new string(Enumerable.Repeat('9', (n - 1) / 2).ToArray());\n                    return nines + \"4\" + nines;\n            }\n        }\n\n        if (k == 8)\n        {\n            if (n <= 6)\n            {\n                return new string(Enumerable.Repeat('8', n).ToArray());\n            }\n\n            var nines = new string(Enumerable.Repeat('9', n - 6).ToArray());\n\n            return \"888\" + nines + \"888\";\n        }\n\n        return \"\";\n    }\n}",
    "submit_ts": "1723953482",
    "subm_id": "1359822460"
}