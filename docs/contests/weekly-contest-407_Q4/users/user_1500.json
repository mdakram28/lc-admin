{
    "username": "dongjiangeng",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diffs = [num - v for (num, v) in zip(nums, target)]\n        n = len(diffs)\n        \n        def ops_same_sign(l: int, r: int) -> int:\n            if l == r:\n                return 0\n            \n            for i in range(l, r):\n                diffs[i] = abs(diffs[i])\n        \n            ans = 0\n            \n            while True:\n                for ll in range(l, r):\n                    if diffs[ll] != 0:\n                        break\n                else:\n                    return ans\n                \n                for rr in range(ll, r):\n                    if diffs[rr] == 0:\n                        break\n                else:\n                    rr = r\n                    \n                ops = min(diffs[ll:rr])\n                ans += ops\n                \n                for i in range(ll, rr):\n                    diffs[i] -= ops\n            \n            return ans\n                \n                \n        \n        current_sign = 0\n        l = 0\n        ans = 0\n        for (i, diff) in enumerate(diffs):\n            if diff > 0:\n                diff_sign = 1\n            elif diff < 0:\n                diff_sign = -1\n            else:\n                diff_sign = 0\n                \n            if current_sign == diff_sign:\n                continue\n            if current_sign == 0:\n                l = i\n                current_sign = diff_sign \n            else:\n                ans += ops_same_sign(l, i)\n                l = i\n                current_sign = diff_sign\n            \n        if current_sign != 0:\n            ans += ops_same_sign(l, n)\n        \n        return ans\n            \n                    \n                    \n        ",
    "submit_ts": "1721533250",
    "subm_id": "1328004764"
}