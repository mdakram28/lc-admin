{
    "username": "wyj20154348",
    "submission": "class Solution {\npublic:\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        const int MAXP = 30;\n\n        // last[i][p]\uff1a\u5728\u4f4d\u7f6e i \u7684\u5de6\u8fb9\uff08\u542b\u4f4d\u7f6e i\uff09\uff0c\u4e8c\u8fdb\u5236\u7b2c p \u4f4d\u662f 0 \u7684\u6700\u8fd1\u4f4d\u7f6e\u5728\u54ea\n        int last[n][MAXP];\n        for (int p = 0; p < MAXP; p++) {\n            if (nums[0] >> p & 1) last[0][p] = -1;\n            else last[0][p] = 0;\n        }\n        for (int i = 1; i < n; i++) for (int p = 0; p < MAXP; p++) {\n            if (nums[i] >> p & 1) last[i][p] = last[i - 1][p];\n            else last[i][p] = i;\n        }\n\n        long long res = 0;\n        // \u679a\u4e3e\u5b50\u6570\u7ec4\u53f3\u7aef\u70b9\n        for (int i = 0; i < n; i++) {\n            // \u5bf9\u4e8e\u4e8c\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d\uff0c\u62ff\u51fa\u4e0a\u4e00\u4e2a 0 \u5728\u4ec0\u4e48\u4f4d\u7f6e\n            vector<int> pos;\n            for (int p = 0; p < MAXP; p++) if (last[i][p] >= 0&&(nums[i]&(1<<p))) pos.push_back(last[i][p]);\n            sort(pos.begin(), pos.end(), greater<int>());\n            // \u679a\u4e3e logX \u79cd AND \u503c\n            int now = nums[i];\n            int Min=1e9+7,Max=0;\n            int cur=0;\n            int flag=0;\n            if (now==k){\n                if (pos.size()>0){\n                    res+=(i-pos[0]);\n                } else{\n                    res+=(i+1);\n                }\n                continue;\n            }\n\n            for (int j=0;j<pos.size();j++){\n                now&=nums[pos[j]];\n                if (now==k){\n                    if (j+1<pos.size()){\n                        res+=pos[j]-pos[j+1];\n                    } else{\n                        res+=pos[j]+1;\n                    }\n                }\n            }\n        } \n        return res;\n        \n    }\n};",
    "submit_ts": "1720278717",
    "subm_id": "544563982"
}