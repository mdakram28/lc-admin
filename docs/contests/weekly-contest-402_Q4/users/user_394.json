{
    "username": "relaxed-yalowzt2",
    "submission": "\ntype segmentTree struct {\n\tn     int\n\tvals  []int\n\tpeeks []int\n}\n\n// \u521d\u59cb\u5316\nfunc initSegmentTree(n int) segmentTree {\n\treturn segmentTree{\n\t\tn:     n,\n\t\tvals:  make([]int, n),\n\t\tpeeks: make([]int, n*4),\n\t}\n}\n\n// \u5355\u70b9\u66f4\u65b0\nfunc (t *segmentTree) update(o int, l, r int, idx int, val int) {\n\tif l == r {\n\t\tt.vals[idx] = val\n\t\tif idx > 0 && idx < t.n-1 {\n\t\t\tif t.vals[idx] > t.vals[idx-1] && t.vals[idx] > t.vals[idx+1] {\n\t\t\t\tt.peeks[o] = 1\n\t\t\t} else {\n\t\t\t\tt.peeks[o] = 0\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n\tmid := l + (r-l)>>1\n\tif idx <= mid {\n\t\tt.update(o*2, l, mid, idx, val)\n\t} else {\n\t\tt.update(o*2+1, mid+1, r, idx, val)\n\t}\n\tt.peeks[o] = t.peeks[o*2] + t.peeks[o*2+1]\n}\n\n// \u533a\u95f4\u67e5\u8be2\nfunc (t *segmentTree) query(o int, l, r int, L, R int) int {\n\tif L <= l && r <= R {\n\t\treturn t.peeks[o]\n\t}\n\tmid := l + (r-l)>>1\n\tpeeks := 0\n\tif L <= mid {\n\t\tpeeks += t.query(o*2, l, mid, L, R)\n\t}\n\tif R > mid {\n\t\tpeeks += t.query(o*2+1, mid+1, r, L, R)\n\t}\n\treturn peeks\n}\n\nfunc countOfPeaks(nums []int, queries [][]int) []int {\n\n\tn := len(nums)\n\tt := initSegmentTree(n)\n\tcopy(t.vals, nums)\n\tfor i, x := range nums {\n\t\tt.update(1, 0, n-1, i, x)\n\t}\n\t// for i := range nums {\n\t// \tfmt.Print(t.query(1, 0, n-1, i, i), \" \")\n\t// }\n\t// fmt.Println()\n\n\tans := []int{}\n\tfor _, query := range queries {\n\t\ttyp := query[0]\n\t\tif typ == 1 {\n\t\t\tl, r := query[1], query[2]\n\t\t\tif r-l+1 >= 3 {\n\t\t\t\tans = append(ans, t.query(1, 0, n-1, l+1, r-1))\n\t\t\t} else {\n\t\t\t\tans = append(ans, 0)\n\t\t\t}\n\t\t} else {\n\t\t\tidx, val := query[1], query[2]\n\t\t\tnums[idx] = val\n\t\t\tt.update(1, 0, n-1, idx, val)\n\t\t\tif idx > 0 {\n\t\t\t\tt.update(1, 0, n-1, idx-1, nums[idx-1])\n\t\t\t}\n\t\t\tif idx < n-1 {\n\t\t\t\tt.update(1, 0, n-1, idx+1, nums[idx+1])\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ans\n\n}\n",
    "submit_ts": 1718507408.0
}