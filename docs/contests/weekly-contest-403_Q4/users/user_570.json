{
    "username": "nishant_bansal_2003",
    "submission": "class Solution\n{\n    int getRes(int strtRow, int endRow, int strtCol, int endCol, vector<vector<int>> &grid)\n    {\n        int loRow = 1001, hiRow = -1, loCol = 1001, hiCol = -1;\n        bool isPoss = false;\n        for (int i = strtCol; i <= endCol; i++)\n        {\n            for (int j = strtRow; j <= endRow; j++)\n            {\n                if (grid[j][i])\n                {\n                    isPoss = true;\n                    loRow = min(loRow, j);\n                    hiRow = max(hiRow, j);\n                    loCol = min(loCol, i);\n                    hiCol = max(hiCol, i);\n                }\n            }\n        }\n        if (isPoss)\n            return max(0, (hiRow - loRow + 1) * (hiCol - loCol + 1));\n        return 0;\n    }\n    int getRes2(int strtRow, int endRow, int strtCol, int endCol, vector<vector<int>> &grid)\n    {\n        int res = 5000;\n        for (int i = strtCol; i <= endCol; i++)\n        {\n            res = min(res, getRes(strtRow, endRow, strtCol, i, grid) + getRes(strtRow, endRow, i + 1, endCol, grid));\n        }\n        for (int j = strtRow; j <= endRow; j++)\n        {\n            res = min(res, getRes(strtRow, j, strtCol, endCol, grid) + getRes(j + 1, endRow, strtCol, endCol, grid));\n        }\n        return res;\n    }\n\npublic:\n    int minimumSum(vector<vector<int>> &grid)\n    {\n        int n = grid.size(), m = grid[0].size();\n        int res = 5000;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < m; j++)\n            {\n                if (j == m - 1)\n                {\n                    res = min(res, getRes(0, i, 0, j, grid) + getRes2(i + 1, n - 1, 0, m - 1, grid));\n                }\n                if (i == n - 1)\n                {\n                    res = min(res, getRes(0, i, 0, j, grid) + getRes2(0, n - 1, j + 1, m - 1, grid));\n                }\n                if (i < n && j < m)\n                    res = min(res, getRes(0, i, 0, j, grid) + min(getRes(i + 1, n - 1, 0, m - 1, grid) + getRes(0, i, j + 1, m - 1, grid), getRes(i + 1, n - 1, 0, j, grid) + getRes(0, n - 1, j + 1, m - 1, grid)));\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719114560.0
}