{
    "username": "neko643",
    "submission": "class Solution {\npublic:\n\n    set<pair<int, int> > adj(int i, int j, int n, int m) {\n        set<pair<int, int> > s;\n        s.insert({i, j});\n        s.insert({i, m - 1 - j});\n        s.insert({n - 1 - i, j});\n        s.insert({n - 1 - i, m - 1 - j});\n        return s;\n    }\n\n    int minFlips(vector<vector<int>>& grid) {\n        vector<vector<int> > cnt(5);\n        int n = grid.size(), m = grid[0].size();\n        for(int i = 0; i < (n + 1) / 2; i++) {\n            for(int j = 0; j < (m + 1) / 2; j++) {\n                set<pair<int, int> > adjs = adj(i, j, n, m);\n                int count = 0;\n                for(auto el : adjs) {\n                    count += grid[el.first][el.second];\n                }\n                // cout << i << \" \" << j << \" \" << count << \"\\n\";\n                cnt[adjs.size()].push_back(count);\n            }\n        }\n        int ans = 0;\n        for(int x : cnt[4]) {\n            ans += min(x, 4 - x);\n        }\n        // cout << ans << \"\\n\";\n\n        if(cnt[1].size() == 1) {\n            ans += cnt[1][0];\n        }\n\n        // cout << ans << \"\\n\";\n        int val2 = 0, val1 = 0;\n        for(int x : cnt[2]) {\n            if(x == 1) {\n                val1++;\n            }\n            if(x == 2) {\n                val2++;\n            }\n            ans += min(x, 2 - x);\n        }\n\n        if((val2 & 1) && (val1 == 0)) {\n            ans += 2;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722698791",
    "subm_id": "1343191914"
}