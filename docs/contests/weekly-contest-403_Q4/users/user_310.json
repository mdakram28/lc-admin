{
    "username": "Chandrachur",
    "submission": "class Solution {\nprivate:\n    int dp[33][33][33][33][4];\n    \n    int rec(int t, int b, int l, int r, int cnt, vector<vector<int>>& grid) {\n        // cout << t << \" \" << b << \" \" << l << \" \" << r << \" \" << cnt << endl;\n        if(cnt == 1) {\n            int tt = 1e9, bb = -1e9, ll = 1e9, rr = -1e9;\n            bool zeroFound = false;\n            for(int i = t; i <= b; i++) {\n                for(int j = l; j <= r; j++) {\n                    if(grid[i][j] == 0) continue;\n                    \n                    zeroFound = true;\n                    tt = min(tt, j);\n                    bb = max(bb, j);\n                    ll = min(ll, i);\n                    rr = max(rr, i);\n                }\n            }\n            \n            if(!zeroFound) return 0;\n            int res = (rr - ll + 1) * (bb - tt + 1);\n            // cout << t << \" \" << b << \" \" << l << \" \" << r << \" \" << cnt << \" res: \" << res << endl;\n            return res;\n        }\n        if(dp[t][b][l][r][cnt] != -1) return dp[t][b][l][r][cnt];\n        \n        int res = 1e9;\n        for(int i = t + 1; i <= b; i++) {\n            res = min(res, rec(t, i - 1, l, r, 1, grid) + rec(i, b, l, r, cnt - 1, grid));\n            res = min(res, rec(t, i - 1, l, r, cnt - 1, grid) + rec(i, b, l, r, 1, grid));\n        }\n        for(int j = l + 1; j <= r; j++) {\n            res = min(res, rec(t, b, l, j - 1, 1, grid) + rec(t, b, j, r, cnt - 1, grid));\n            res = min(res, rec(t, b, l, j - 1, cnt - 1, grid) + rec(t, b, j, r, 1, grid));\n        }\n        // cout << t << \" \" << b << \" \" << l << \" \" << r << \" \" << cnt << \" res: \" << res << endl;\n        return dp[t][b][l][r][cnt] = res;\n    }\n    \npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        memset(&dp, -1, sizeof(dp));\n        return rec(0, n - 1, 0, m - 1, 3, grid);\n    }\n};",
    "submit_ts": 1719113987.0
}