{
    "username": "chaochaochao1",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        List<Integer> helper = new ArrayList<>();\n        for (int i = 0; i < target.length; i++) {\n            helper.add(target[i] - nums[i]);\n        }\n\n        long res = 0;\n        int cur = -2;\n        List<Integer> curArr = new ArrayList<>();\n        for (int i = 0; i < helper.size(); i++) {\n            if (cur == -2) {\n                cur = helper.get(i) == 0 ? 0 : (helper.get(i) > 0 ? 1 : -1);\n            }\n            Integer num = helper.get(i);\n            if (cur == 1) {\n                if (num > 0) {\n                    curArr.add(num);\n                } else if (num == 0) {\n                    res += p(curArr);\n                    cur = 0;\n                    curArr = new ArrayList<>();\n                } else if (num < 0) {\n                    res += p(curArr);\n                    cur = -1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num * -1);\n                }\n            } else if (cur == 0) {\n                if (num == 0) {\n                    continue;\n                } else if (num > 0) {\n                    res += p(curArr);\n                    cur = 1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num);\n                } else if (num < 0) {\n                    res += p(curArr);\n                    cur = -1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num * -1);\n                }\n            } else if (cur == -1) {\n                if (num > 0) {\n                    res += p(curArr);\n                    cur = 1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num);\n                } else if (num == 0) {\n                    res += p(curArr);\n                    cur = 0;\n                    curArr = new ArrayList<>();\n                } else if (num < 0) {\n                    curArr.add(num * -1);\n                }\n            }\n        }\n        res += p(curArr);\n        return res;\n\n    }\n\n    private long p(List<Integer> helper) {\n        if (helper.isEmpty()) {\n            return 0;\n        }\n        int min = Integer.MAX_VALUE;\n        for (Integer i : helper) {\n            min = Math.min(min, i);\n        }\n\n        long res = 0;\n        res += min;\n        for (int i = 0; i < helper.size(); i++) {\n            helper.set(i, helper.get(i) - min);\n        }\n\n        int cur = -2;\n        List<Integer> curArr = new ArrayList<>();\n        for (int i = 0; i < helper.size(); i++) {\n            if (cur == -2) {\n                cur = helper.get(i) == 0 ? 0 : (helper.get(i) > 0 ? 1 : -1);\n            }\n            Integer num = helper.get(i);\n            if (cur == 1) {\n                if (num > 0) {\n                    curArr.add(num);\n                } else if (num == 0) {\n                    res += p(curArr);\n                    cur = 0;\n                    curArr = new ArrayList<>();\n                } else if (num < 0) {\n                    res += p(curArr);\n                    cur = -1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num * -1);\n                }\n            } else if (cur == 0) {\n                if (num == 0) {\n                    continue;\n                } else if (num > 0) {\n                    res += p(curArr);\n                    cur = 1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num);\n                } else if (num < 0) {\n                    res += p(curArr);\n                    cur = -1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num * -1);\n                }\n            } else if (cur == -1) {\n                if (num > 0) {\n                    res += p(curArr);\n                    cur = 1;\n                    curArr = new ArrayList<>();\n                    curArr.add(num);\n                } else if (num == 0) {\n                    res += p(curArr);\n                    cur = 0;\n                    curArr = new ArrayList<>();\n                } else if (num < 0) {\n                    curArr.add(num * -1);\n                }\n            }\n        }\n        res += p(curArr);\n        return res;\n    }\n}",
    "submit_ts": "1721533146",
    "subm_id": "548396293"
}