{
    "username": "mcy4ever",
    "submission": "class Solution {\n    private int cmn(int m, int n) {\n        long ans = 1L;\n        for (int i = m; i > m - n; i--) {\n            ans = ans * (long)i / (long)(m - i + 1);\n        }\n        return (int)ans;\n    }\n    public int waysToReachStair(int k) {\n        if (k == 0) {\n            return 2;\n        } else if (k == 1) {\n            return 4;\n        }\n        long current = 1L;\n        long step = 1L;\n        int jump = 0;\n        while (current < (long)k) {\n            current += step;\n            step *= 2L;\n            jump++;\n        }\n        long diff = current - (long)k;\n        if (diff > (long)jump + 1L) {\n            return 0;\n        }\n        int ans = cmn(jump + 1, (int)diff);\n        current += step;\n        jump++;\n        diff = current - (long)k;\n        if (diff > (long)jump + 1L) {\n            return ans;\n        }\n        return ans + cmn(jump + 1, (int)diff);\n    }\n}",
    "submit_ts": 1716087543.0
}