{
    "username": "Samarth_r_p",
    "submission": "class Solution {\npublic:\n    class minST\n    {\n    private:\n        int k;\n        vector<vector<int>> ds;\n    public:\n        minST(vector<int> &arr)\n        {\n            int n = arr.size();\n            this->k = log2(n);\n            ds.resize(k + 1, vector<int>(n, 0));\n            ds[0] = arr;\n            for(int i = 1; i <= k; i++)\n                for(int j = 0; j + (1 << i) <= n; j++)\n                    ds[i][j] = ds[i - 1][j] & ds[i - 1][j + (1 << (i - 1))];\n        }\n\n        int query(int l, int r)\n        {\n            int lg = log2(r - l + 1);\n            return ds[lg][l] & ds[lg][(r - (1 << lg)) + 1];\n        }\n    };\n    long long countSubarrays(vector<int>& nums, int k) {\n        minST st(nums);\n        int n = nums.size();\n        long long ans = 0;\n        for(int i = 0; i < n; i++) {\n            int startInd = -1;\n            int endInd = -1;\n\n            int s = 0;\n            int e = i;\n            while(s <= e) {\n                int mid = (s + e) / 2;\n                if(st.query(mid, i) >= k) \n                    startInd = mid, e = mid - 1;\n                else \n                    s = mid + 1;\n            }\n\n            s = 0;\n            e = i;\n            while(s <= e) {\n                int mid = (s + e) / 2;\n                if(st.query(mid, i) <= k) \n                    endInd = mid, s = mid + 1;\n                else \n                    e = mid - 1;\n            }\n            \n            if(endInd != -1 && startInd != -1)\n                ans += (endInd - startInd) + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281586",
    "subm_id": "1311831106"
}