{
    "username": "silenttkillerr",
    "submission": "map<vector<int>,int>mp;\nint dfs(int curr,int k,int j,int last)\n{\n    if(curr==k)\n    {\n       // return 1;\n    }\n    if(curr>k+1)\n    {\n        return 0;\n    }\n    if(mp.find({curr,j,last})!=mp.end())\n    {\n        return mp[{curr,j,last}];\n    }\n    int ans=0;\n    if(last==0 && curr!=0)\n    {\n        ans+=dfs(curr-1,k,j,1);\n    }\n    int v=(1LL<<j);\n    if(v>k+2)\n    {\n        \n    }\n    else if(v+curr>k+2)\n    {\n        \n    }\n    else{\n        ans+=dfs(v+curr,k,j+1,0);\n    }\n    if(curr==k)\n    {\n        ans++;\n    }\n    //mp[curr]=ans;\n    return mp[{curr,j,last}]=ans;    \n}\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        mp.clear();\n        return dfs(1,k,0,0);\n    }\n};",
    "submit_ts": 1716088056.0
}