{
    "username": "prashantpal7",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        int result = 0;\n        \n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                vector<int> elements = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                };\n                \n                int ones = accumulate(elements.begin(), elements.end(), 0);\n                \n                result += min(ones, 4 - ones);\n            }\n        }\n        \n        int middlePossible = 0;\n        int middleCount = 0;\n        \n        if (n % 2 != 0) {\n            int row = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[row][j] != grid[row][m - j - 1]) {\n                    result += 1;\n                    middlePossible += 1;\n                } else {\n                    if (grid[row][j] == 1) {\n                        middleCount += 1;\n                    }\n                }\n            }\n        }\n        \n        if (m % 2 != 0) {\n            int col = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][col] != grid[n - i - 1][col]) {\n                    result += 1;\n                    middlePossible += 1;\n                } else {\n                    if (grid[i][col] == 1) {\n                        middleCount += 1;\n                    }\n                }\n            }\n        }\n        \n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            result += 1;\n        }\n        \n        if (middlePossible == 0 && middleCount % 2 != 0) {\n            result += 2;\n        }\n        \n        return result;\n    }\n};\n",
    "submit_ts": "1722700271",
    "subm_id": "1343236814"
}